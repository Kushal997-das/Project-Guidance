{
	"id": 0,
	"name": "Truffle Decoding and Encoding",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "@truffle/codec",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "# Truffle Codec\n\nThis module provides low-level decoding and encoding functionality for\nSolidity and the Solidity ABI.  Many parts of this module are intended\nprimarily for internal use by Truffle and so remain largely undocumented,\nbut some of its types are also output by @truffle/decoder, which provides\na higher-level interface to much of this module's functionality.\n\n## If you're here from Truffle Decoder or Truffle Encoder\n\nIf you're coming here from [[@truffle/decoder]] or [[@truffle/encoder]],\nyou probably just want to know about the parts that are relevant to you.\nThese are:\n\n* The \"data\" category (specifically [[Format]])\n* The \"output\" and \"enumerations\" categories ([[CalldataDecoding]], [[LogDecoding]], et al., see below)\n* The \"errors\" category (specifically [[UnknownUserDefinedTypeError]])\n\nNote that the data category is largely scarce in\ndocumentation, although that's because it's largely self-explanatory.\n\nIf you're not just here from Truffle Decoder or Encoder, but are actually\ninterested in the lower-level workings, read on.\n\n## How this module differs from Truffle Decoder and Encoder\n\nUnlike Truffle Decoder and Encoder, this library makes no network connections\nand avoids dependencies that do.  Instead, its decoding functionality\nis generator-based; calling one of the decoding functions returns a\ngenerator.  This generator's "
					},
					{
						"kind": "code",
						"text": "`next()`"
					},
					{
						"kind": "text",
						"text": " function may return a finished\nresult, or it may return a request for more information.  It is up to\nthe caller to fulfill these requests -- say, by making a network\nconnection of its own.  This is how @truffle/decoder and @truffle/encoder\nwork; @truffle/codec makes requests, while Decoder and Encoder fulfill them by\nlooking up the necessary information on the blockchain.\n\nThis library also provides additional functionality beyond what's used by\nTruffle Decoder and Encoder.  In particular, this library also exists to\nsupport Truffle Debugger, and so it provides decoding functionality not just\nfor transactions, logs, and state variables, but also for Solidity variables\nduring transaction execution, including circularity detection for memroy\nstructures.  It includes functionality for decoding Solidity's internal\nfunction pointers, which the debugger uses, but which Truffle Decoder\ncurrently does not (although this is planned for the future).\n\nThere is also functionality for decoding return values and revert messages\nthat goes beyond what's currently available in @truffle/decoder; this may get\na better interface in the future.\n\n## How to use\n\nYou should probably use [[@truffle/decoder]] or [[@truffle/encoder]]\ninstead, if your use case doesn't preclude it.  This module has little\ndocumentation, where it has any at all, and it's likely that parts of its\ninterface may change (particularly regarding allocation).  That said, if you\ntruly need the functionality here, Truffle Decoder and Truffle Encoder can\nperhaps serve as something of a reference implementation (and perhaps\nTruffle Debugger as well, though that code is much harder to read or copy)."
					}
				]
			},
			"children": [
				{
					"id": 1147,
					"name": "AbiData",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "For allocation, encoding, and decoding of locations related to the ABI\n(calldata in Solidity, events, etc.)"
							}
						]
					},
					"children": [
						{
							"id": 1148,
							"name": "Allocate",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1184,
									"name": "Utils",
									"variant": "declaration",
									"kind": 4,
									"flags": {},
									"children": [
										{
											"id": 1188,
											"name": "ContextAndAllocationInfo",
											"variant": "declaration",
											"kind": 256,
											"flags": {},
											"children": [
												{
													"id": 1192,
													"name": "allocationInfo",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/abi-data/allocate/utils.ts",
															"line": 18,
															"character": 2,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/utils.ts#L18"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1237,
															"name": "ContractAllocationInfo",
															"package": "@truffle/codec"
														}
													}
												},
												{
													"id": 1189,
													"name": "contexts",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/abi-data/allocate/utils.ts",
															"line": 15,
															"character": 2,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/utils.ts#L15"
														}
													],
													"type": {
														"type": "reference",
														"target": 1889,
														"name": "Contexts",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1191,
													"name": "contractsAndContexts",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/abi-data/allocate/utils.ts",
															"line": 17,
															"character": 2,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/utils.ts#L17"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1245,
															"name": "ContractAndContexts",
															"package": "@truffle/codec"
														}
													}
												},
												{
													"id": 1190,
													"name": "deployedContexts",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/abi-data/allocate/utils.ts",
															"line": 16,
															"character": 2,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/utils.ts#L16"
														}
													],
													"type": {
														"type": "reference",
														"target": 1889,
														"name": "Contexts",
														"package": "@truffle/codec"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1192,
														1189,
														1191,
														1190
													]
												}
											],
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/utils.ts",
													"line": 14,
													"character": 17,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/utils.ts#L14"
												}
											]
										},
										{
											"id": 1185,
											"name": "collectAllocationInfo",
											"variant": "declaration",
											"kind": 64,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/utils.ts",
													"line": 21,
													"character": 16,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/utils.ts#L21"
												}
											],
											"signatures": [
												{
													"id": 1186,
													"name": "collectAllocationInfo",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/abi-data/allocate/utils.ts",
															"line": 21,
															"character": 0,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/utils.ts#L21"
														}
													],
													"parameters": [
														{
															"id": 1187,
															"name": "compilations",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 1817,
																	"name": "Compilation",
																	"package": "@truffle/codec"
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 1188,
														"name": "ContextAndAllocationInfo",
														"package": "@truffle/codec"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Interfaces",
											"children": [
												1188
											]
										},
										{
											"title": "Functions",
											"children": [
												1185
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/utils.ts",
											"line": 1,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/utils.ts#L1"
										}
									]
								},
								{
									"id": 1193,
									"name": "AbiAllocations",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/types.ts",
											"line": 42,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L42"
										}
									],
									"indexSignature": {
										"id": 1194,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "codec/lib/abi-data/allocate/types.ts",
												"line": 43,
												"character": 2,
												"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L43"
											}
										],
										"parameters": [
											{
												"id": 1195,
												"name": "id",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "lib/abi-data/allocate/types.ts",
														"qualifiedName": "AbiAllocation"
													},
													"name": "AbiAllocation",
													"package": "@truffle/codec"
												},
												{
													"type": "literal",
													"value": null
												}
											]
										}
									}
								},
								{
									"id": 1196,
									"name": "AbiSizeInfo",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1198,
											"name": "dynamic",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 33,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L33"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1197,
											"name": "size",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 32,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L32"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1198,
												1197
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/types.ts",
											"line": 31,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L31"
										}
									]
								},
								{
									"id": 1228,
									"name": "BlankReturndataAllocation",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1232,
											"name": "allocationMode",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 197,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L197"
												}
											],
											"type": {
												"type": "reference",
												"target": 895,
												"name": "DecodingMode",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1231,
											"name": "arguments",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 196,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L196"
												}
											],
											"type": {
												"type": "tuple"
											}
										},
										{
											"id": 1229,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 194,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L194"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "selfdestruct"
													},
													{
														"type": "literal",
														"value": "failure"
													}
												]
											}
										},
										{
											"id": 1230,
											"name": "selector",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 195,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L195"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1232,
												1231,
												1229,
												1230
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/types.ts",
											"line": 193,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L193"
										}
									]
								},
								{
									"id": 1199,
									"name": "CalldataAllocation",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1200,
											"name": "abi",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 97,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L97"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "FunctionEntry"
														},
														"name": "FunctionEntry",
														"package": "@truffle/abi-utils"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "ConstructorEntry"
														},
														"name": "ConstructorEntry",
														"package": "@truffle/abi-utils"
													}
												]
											}
										},
										{
											"id": 1203,
											"name": "allocationMode",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 100,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L100"
												}
											],
											"type": {
												"type": "reference",
												"target": 895,
												"name": "DecodingMode",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1202,
											"name": "arguments",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 99,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L99"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "lib/abi-data/allocate/types.ts",
														"qualifiedName": "CalldataArgumentAllocation"
													},
													"name": "CalldataArgumentAllocation",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 1201,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 98,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L98"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1200,
												1203,
												1202,
												1201
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/types.ts",
											"line": 96,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L96"
										}
									]
								},
								{
									"id": 1218,
									"name": "ConstructorReturndataAllocation",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1223,
											"name": "allocationMode",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 190,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L190"
												}
											],
											"type": {
												"type": "reference",
												"target": 895,
												"name": "DecodingMode",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1222,
											"name": "delegatecallGuard",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 189,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L189"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1221,
											"name": "immutables",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 188,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L188"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "lib/abi-data/allocate/types.ts",
														"qualifiedName": "ReturnImmutableAllocation"
													},
													"name": "ReturnImmutableAllocation",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 1219,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 186,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L186"
												}
											],
											"type": {
												"type": "literal",
												"value": "bytecode"
											}
										},
										{
											"id": 1220,
											"name": "selector",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 187,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L187"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1223,
												1222,
												1221,
												1219,
												1220
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/types.ts",
											"line": 185,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L185"
										}
									]
								},
								{
									"id": 1237,
									"name": "ContractAllocationInfo",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1238,
											"name": "abi",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 14,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L14"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../abi-utils/lib/types.ts",
													"qualifiedName": "Abi"
												},
												"name": "Abi",
												"package": "@truffle/abi-utils"
											}
										},
										{
											"id": 1244,
											"name": "compilationId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 20,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L20"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1243,
											"name": "compiler",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 19,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L19"
												}
											],
											"type": {
												"type": "reference",
												"target": 1764,
												"name": "CompilerVersion",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1241,
											"name": "constructorContext",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 17,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L17"
												}
											],
											"type": {
												"type": "reference",
												"target": 1892,
												"name": "Context",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1239,
											"name": "contractNode",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 15,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L15"
												}
											],
											"type": {
												"type": "reference",
												"target": 1688,
												"name": "AstNode",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1240,
											"name": "deployedContext",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 16,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L16"
												}
											],
											"type": {
												"type": "reference",
												"target": 1892,
												"name": "Context",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1242,
											"name": "immutableReferences",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 18,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L18"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../contract-schema/spec/index.d.ts",
													"qualifiedName": "ImmutableReferences"
												},
												"name": "ImmutableReferences",
												"package": "@truffle/contract-schema"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1238,
												1244,
												1243,
												1241,
												1239,
												1240,
												1242
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/types.ts",
											"line": 13,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L13"
										}
									]
								},
								{
									"id": 1245,
									"name": "ContractAndContexts",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1246,
											"name": "compilationId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 24,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L24"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1250,
											"name": "constructorContext",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 28,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L28"
												}
											],
											"type": {
												"type": "reference",
												"target": 1892,
												"name": "Context",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1247,
											"name": "contract",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 25,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L25"
												}
											],
											"type": {
												"type": "reference",
												"target": 1832,
												"name": "Contract",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1249,
											"name": "deployedContext",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 27,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L27"
												}
											],
											"type": {
												"type": "reference",
												"target": 1892,
												"name": "Context",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1248,
											"name": "node",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 26,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L26"
												}
											],
											"type": {
												"type": "reference",
												"target": 1688,
												"name": "AstNode",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1246,
												1250,
												1247,
												1249,
												1248
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/types.ts",
											"line": 23,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L23"
										}
									]
								},
								{
									"id": 1251,
									"name": "EventAllocation",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1252,
											"name": "abi",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 136,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L136"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../abi-utils/lib/types.ts",
													"qualifiedName": "EventEntry"
												},
												"name": "EventEntry",
												"package": "@truffle/abi-utils"
											}
										},
										{
											"id": 1258,
											"name": "allocationMode",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 142,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L142"
												}
											],
											"type": {
												"type": "reference",
												"target": 895,
												"name": "DecodingMode",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1256,
											"name": "anonymous",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 140,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L140"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 1257,
											"name": "arguments",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 141,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L141"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "lib/abi-data/allocate/types.ts",
														"qualifiedName": "EventArgumentAllocation"
													},
													"name": "EventArgumentAllocation",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 1253,
											"name": "contextHash",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 137,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L137"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1254,
											"name": "definedIn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 138,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L138"
												}
											],
											"type": {
												"type": "reference",
												"target": 236,
												"name": "ContractType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1255,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 139,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L139"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1252,
												1258,
												1256,
												1257,
												1253,
												1254,
												1255
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/types.ts",
											"line": 135,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L135"
										}
									]
								},
								{
									"id": 1234,
									"name": "FunctionCalldataAndReturndataAllocation",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1235,
											"name": "input",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 88,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L88"
												}
											],
											"type": {
												"type": "reference",
												"target": 1199,
												"name": "CalldataAllocation",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1236,
											"name": "output",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 89,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L89"
												}
											],
											"type": {
												"type": "reference",
												"target": 1205,
												"name": "ReturnValueReturndataAllocation",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1235,
												1236
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/types.ts",
											"line": 87,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L87"
										}
									]
								},
								{
									"id": 1224,
									"name": "MessageReturndataAllocation",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1227,
											"name": "allocationMode",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 203,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L203"
												}
											],
											"type": {
												"type": "reference",
												"target": 895,
												"name": "DecodingMode",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1225,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 201,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L201"
												}
											],
											"type": {
												"type": "literal",
												"value": "returnmessage"
											}
										},
										{
											"id": 1226,
											"name": "selector",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 202,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L202"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1227,
												1225,
												1226
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/types.ts",
											"line": 200,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L200"
										}
									]
								},
								{
									"id": 1205,
									"name": "ReturnValueReturndataAllocation",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1209,
											"name": "allocationMode",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 170,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L170"
												}
											],
											"type": {
												"type": "reference",
												"target": 895,
												"name": "DecodingMode",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1208,
											"name": "arguments",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 169,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L169"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "lib/abi-data/allocate/types.ts",
														"qualifiedName": "ReturndataArgumentAllocation"
													},
													"name": "ReturndataArgumentAllocation",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 1206,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 167,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L167"
												}
											],
											"type": {
												"type": "literal",
												"value": "return"
											}
										},
										{
											"id": 1207,
											"name": "selector",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 168,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L168"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1209,
												1208,
												1206,
												1207
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/types.ts",
											"line": 166,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L166"
										}
									]
								},
								{
									"id": 1259,
									"name": "ReturndataAllocations",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/types.ts",
											"line": 152,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L152"
										}
									],
									"indexSignature": {
										"id": 1260,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "codec/lib/abi-data/allocate/types.ts",
												"line": 153,
												"character": 2,
												"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L153"
											}
										],
										"parameters": [
											{
												"id": 1261,
												"name": "contextHash",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reflection",
											"declaration": {
												"id": 1262,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "codec/lib/abi-data/allocate/types.ts",
														"line": 153,
														"character": 25,
														"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L153"
													}
												],
												"indexSignature": {
													"id": 1263,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/abi-data/allocate/types.ts",
															"line": 155,
															"character": 4,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L155"
														}
													],
													"parameters": [
														{
															"id": 1264,
															"name": "selector",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1210,
															"name": "RevertReturndataAllocation",
															"package": "@truffle/codec"
														}
													}
												}
											}
										}
									}
								},
								{
									"id": 1210,
									"name": "RevertReturndataAllocation",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1213,
											"name": "abi",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 176,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L176"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../abi-utils/lib/types.ts",
													"qualifiedName": "ErrorEntry"
												},
												"name": "ErrorEntry",
												"package": "@truffle/abi-utils"
											}
										},
										{
											"id": 1217,
											"name": "allocationMode",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 182,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L182"
												}
											],
											"type": {
												"type": "reference",
												"target": 895,
												"name": "DecodingMode",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1216,
											"name": "arguments",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 181,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L181"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "lib/abi-data/allocate/types.ts",
														"qualifiedName": "ReturndataArgumentAllocation"
													},
													"name": "ReturndataArgumentAllocation",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 1215,
											"name": "definedIn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 178,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L178"
												}
											],
											"type": {
												"type": "reference",
												"target": 236,
												"name": "ContractType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1214,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 177,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L177"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1211,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 174,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L174"
												}
											],
											"type": {
												"type": "literal",
												"value": "revert"
											}
										},
										{
											"id": 1212,
											"name": "selector",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/types.ts",
													"line": 175,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L175"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1213,
												1217,
												1216,
												1215,
												1214,
												1211,
												1212
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/types.ts",
											"line": 173,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L173"
										}
									]
								},
								{
									"id": 1233,
									"name": "CalldataAndReturndataAllocation",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/types.ts",
											"line": 92,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L92"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 1234,
												"name": "FunctionCalldataAndReturndataAllocation",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "lib/abi-data/allocate/types.ts",
													"qualifiedName": "ConstructorCalldataAndReturndataAllocation"
												},
												"name": "ConstructorCalldataAndReturndataAllocation",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 1204,
									"name": "ReturndataAllocation",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/types.ts",
											"line": 159,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/types.ts#L159"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 1205,
												"name": "ReturnValueReturndataAllocation",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 1210,
												"name": "RevertReturndataAllocation",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 1218,
												"name": "ConstructorReturndataAllocation",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 1224,
												"name": "MessageReturndataAllocation",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 1228,
												"name": "BlankReturndataAllocation",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 1265,
									"name": "FallbackOutputAllocation",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/index.ts",
											"line": 80,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L80"
										}
									],
									"type": {
										"type": "reference",
										"target": 1224,
										"name": "MessageReturndataAllocation",
										"package": "@truffle/codec"
									},
									"defaultValue": "..."
								},
								{
									"id": 1152,
									"name": "abiSizeInfo",
									"variant": "declaration",
									"kind": 64,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/index.ts",
											"line": 342,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L342"
										}
									],
									"signatures": [
										{
											"id": 1153,
											"name": "abiSizeInfo",
											"variant": "signature",
											"kind": 4096,
											"flags": {
												"isProtected": true
											},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/index.ts",
													"line": 342,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L342"
												}
											],
											"parameters": [
												{
													"id": 1154,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1155,
													"name": "allocations",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 1193,
														"name": "AbiAllocations",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 1196,
												"name": "AbiSizeInfo",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 1149,
									"name": "getAbiAllocations",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/index.ts",
											"line": 86,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L86"
										}
									],
									"signatures": [
										{
											"id": 1150,
											"name": "getAbiAllocations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/index.ts",
													"line": 86,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L86"
												}
											],
											"parameters": [
												{
													"id": 1151,
													"name": "userDefinedTypes",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 284,
														"name": "TypesById",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 1193,
												"name": "AbiAllocations",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 1156,
									"name": "getCalldataAllocations",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/index.ts",
											"line": 1075,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L1075"
										}
									],
									"signatures": [
										{
											"id": 1157,
											"name": "getCalldataAllocations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/index.ts",
													"line": 1075,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L1075"
												}
											],
											"parameters": [
												{
													"id": 1158,
													"name": "contracts",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1237,
															"name": "ContractAllocationInfo",
															"package": "@truffle/codec"
														}
													}
												},
												{
													"id": 1159,
													"name": "referenceDeclarations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1160,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/abi-data/allocate/index.ts",
																	"line": 1077,
																	"character": 25,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L1077"
																}
															],
															"indexSignature": {
																"id": 1161,
																"name": "__index",
																"variant": "signature",
																"kind": 8192,
																"flags": {},
																"sources": [
																	{
																		"fileName": "codec/lib/abi-data/allocate/index.ts",
																		"line": 1077,
																		"character": 27,
																		"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L1077"
																	}
																],
																"parameters": [
																	{
																		"id": 1162,
																		"name": "compilationId",
																		"variant": "param",
																		"kind": 32768,
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 1743,
																	"name": "Ast.AstNodes",
																	"package": "@truffle/codec",
																	"qualifiedName": "AstNodes"
																}
															}
														}
													}
												},
												{
													"id": 1163,
													"name": "userDefinedTypes",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 284,
														"name": "TypesById",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1164,
													"name": "abiAllocations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1193,
														"name": "AbiAllocations",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "lib/abi-data/allocate/types.ts",
													"qualifiedName": "CalldataAllocations"
												},
												"name": "CalldataAllocations",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 1174,
									"name": "getEventAllocations",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/index.ts",
											"line": 1419,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L1419"
										}
									],
									"signatures": [
										{
											"id": 1175,
											"name": "getEventAllocations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/index.ts",
													"line": 1419,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L1419"
												}
											],
											"parameters": [
												{
													"id": 1176,
													"name": "contracts",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1237,
															"name": "ContractAllocationInfo",
															"package": "@truffle/codec"
														}
													}
												},
												{
													"id": 1177,
													"name": "referenceDeclarations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1178,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/abi-data/allocate/index.ts",
																	"line": 1421,
																	"character": 25,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L1421"
																}
															],
															"indexSignature": {
																"id": 1179,
																"name": "__index",
																"variant": "signature",
																"kind": 8192,
																"flags": {},
																"sources": [
																	{
																		"fileName": "codec/lib/abi-data/allocate/index.ts",
																		"line": 1421,
																		"character": 27,
																		"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L1421"
																	}
																],
																"parameters": [
																	{
																		"id": 1180,
																		"name": "compilationId",
																		"variant": "param",
																		"kind": 32768,
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 1743,
																	"name": "Ast.AstNodes",
																	"package": "@truffle/codec",
																	"qualifiedName": "AstNodes"
																}
															}
														}
													}
												},
												{
													"id": 1181,
													"name": "userDefinedTypes",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 284,
														"name": "TypesById",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1182,
													"name": "abiAllocations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1193,
														"name": "AbiAllocations",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1183,
													"name": "allowConstructorEvents",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "false"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "lib/abi-data/allocate/types.ts",
													"qualifiedName": "EventAllocations"
												},
												"name": "EventAllocations",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 1165,
									"name": "getReturndataAllocations",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/allocate/index.ts",
											"line": 1179,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L1179"
										}
									],
									"signatures": [
										{
											"id": 1166,
											"name": "getReturndataAllocations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/allocate/index.ts",
													"line": 1179,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L1179"
												}
											],
											"parameters": [
												{
													"id": 1167,
													"name": "contracts",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1237,
															"name": "ContractAllocationInfo",
															"package": "@truffle/codec"
														}
													}
												},
												{
													"id": 1168,
													"name": "referenceDeclarations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1169,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/abi-data/allocate/index.ts",
																	"line": 1181,
																	"character": 25,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L1181"
																}
															],
															"indexSignature": {
																"id": 1170,
																"name": "__index",
																"variant": "signature",
																"kind": 8192,
																"flags": {},
																"sources": [
																	{
																		"fileName": "codec/lib/abi-data/allocate/index.ts",
																		"line": 1181,
																		"character": 27,
																		"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L1181"
																	}
																],
																"parameters": [
																	{
																		"id": 1171,
																		"name": "compilationId",
																		"variant": "param",
																		"kind": 32768,
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 1743,
																	"name": "Ast.AstNodes",
																	"package": "@truffle/codec",
																	"qualifiedName": "AstNodes"
																}
															}
														}
													}
												},
												{
													"id": 1172,
													"name": "userDefinedTypes",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 284,
														"name": "TypesById",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1173,
													"name": "abiAllocations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1193,
														"name": "AbiAllocations",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 1259,
												"name": "ReturndataAllocations",
												"package": "@truffle/codec"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Namespaces",
									"children": [
										1184
									]
								},
								{
									"title": "Interfaces",
									"children": [
										1193,
										1196,
										1228,
										1199,
										1218,
										1237,
										1245,
										1251,
										1234,
										1224,
										1205,
										1259,
										1210
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										1233,
										1204
									]
								},
								{
									"title": "Variables",
									"children": [
										1265
									]
								},
								{
									"title": "Functions",
									"children": [
										1152,
										1149,
										1156,
										1174,
										1165
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/abi-data/allocate/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/allocate/index.ts#L1"
								}
							]
						},
						{
							"id": 1280,
							"name": "Decode",
							"variant": "declaration",
							"kind": 4,
							"flags": {
								"isProtected": true
							},
							"children": [
								{
									"id": 1281,
									"name": "decodeAbi",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/decode/index.ts",
											"line": 24,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/decode/index.ts#L24"
										}
									],
									"signatures": [
										{
											"id": 1282,
											"name": "decodeAbi",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/decode/index.ts",
													"line": 24,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/decode/index.ts#L24"
												}
											],
											"parameters": [
												{
													"id": 1283,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1284,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1977,
														"name": "AbiDataPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1285,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1286,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "lib/types.ts",
															"qualifiedName": "DecoderOptions"
														},
														"name": "DecoderOptions",
														"package": "@truffle/codec"
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 294,
														"name": "Format.Values.Result",
														"package": "@truffle/codec",
														"qualifiedName": "Result"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 1287,
									"name": "decodeAbiReferenceByAddress",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/decode/index.ts",
											"line": 58,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/decode/index.ts#L58"
										}
									],
									"signatures": [
										{
											"id": 1288,
											"name": "decodeAbiReferenceByAddress",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/decode/index.ts",
													"line": 58,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/decode/index.ts#L58"
												}
											],
											"parameters": [
												{
													"id": 1289,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": 217,
																"name": "TupleType",
																"package": "@truffle/codec"
															},
															{
																"type": "reference",
																"target": 283,
																"name": "ReferenceType",
																"package": "@truffle/codec"
															}
														]
													}
												},
												{
													"id": 1290,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": 1975,
																"name": "StackFormPointer",
																"package": "@truffle/codec"
															},
															{
																"type": "reference",
																"target": 1977,
																"name": "AbiDataPointer",
																"package": "@truffle/codec"
															}
														]
													}
												},
												{
													"id": 1291,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1292,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "lib/types.ts",
															"qualifiedName": "DecoderOptions"
														},
														"name": "DecoderOptions",
														"package": "@truffle/codec"
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 294,
														"name": "Format.Values.Result",
														"package": "@truffle/codec",
														"qualifiedName": "Result"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 1293,
									"name": "decodeAbiReferenceStatic",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/decode/index.ts",
											"line": 313,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/decode/index.ts#L313"
										}
									],
									"signatures": [
										{
											"id": 1294,
											"name": "decodeAbiReferenceStatic",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/decode/index.ts",
													"line": 313,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/decode/index.ts#L313"
												}
											],
											"parameters": [
												{
													"id": 1295,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": 217,
																"name": "TupleType",
																"package": "@truffle/codec"
															},
															{
																"type": "reference",
																"target": 283,
																"name": "ReferenceType",
																"package": "@truffle/codec"
															}
														]
													}
												},
												{
													"id": 1296,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1977,
														"name": "AbiDataPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1297,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1298,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "lib/types.ts",
															"qualifiedName": "DecoderOptions"
														},
														"name": "DecoderOptions",
														"package": "@truffle/codec"
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 294,
														"name": "Format.Values.Result",
														"package": "@truffle/codec",
														"qualifiedName": "Result"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1281,
										1287,
										1293
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/abi-data/decode/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/decode/index.ts#L1"
								}
							]
						},
						{
							"id": 1266,
							"name": "Encode",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1267,
									"name": "encodeAbi",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/encode/index.ts",
											"line": 23,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/encode/index.ts#L23"
										}
									],
									"signatures": [
										{
											"id": 1268,
											"name": "encodeAbi",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [],
												"blockTags": [
													{
														"tag": "@Category",
														"content": [
															{
																"kind": "text",
																"text": "Encoding (low-level)"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/encode/index.ts",
													"line": 23,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/encode/index.ts#L23"
												}
											],
											"parameters": [
												{
													"id": 1269,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 294,
														"name": "Result",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1270,
													"name": "allocations",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 1193,
														"name": "AbiAllocations",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									]
								},
								{
									"id": 1271,
									"name": "encodeTupleAbi",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/encode/index.ts",
											"line": 131,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/encode/index.ts#L131"
										}
									],
									"signatures": [
										{
											"id": 1272,
											"name": "encodeTupleAbi",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [],
												"blockTags": [
													{
														"tag": "@Category",
														"content": [
															{
																"kind": "text",
																"text": "Encoding (low-level)"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/encode/index.ts",
													"line": 131,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/encode/index.ts#L131"
												}
											],
											"parameters": [
												{
													"id": 1273,
													"name": "tuple",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 294,
															"name": "Result",
															"package": "@truffle/codec"
														}
													}
												},
												{
													"id": 1274,
													"name": "allocations",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 1193,
														"name": "AbiAllocations",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									]
								},
								{
									"id": 1275,
									"name": "encodeTupleAbiWithSelector",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/encode/index.ts",
											"line": 189,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/encode/index.ts#L189"
										}
									],
									"signatures": [
										{
											"id": 1276,
											"name": "encodeTupleAbiWithSelector",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [],
												"blockTags": [
													{
														"tag": "@Category",
														"content": [
															{
																"kind": "text",
																"text": "Encoding (low-level)"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/encode/index.ts",
													"line": 189,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/encode/index.ts#L189"
												}
											],
											"parameters": [
												{
													"id": 1277,
													"name": "tuple",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 294,
															"name": "Result",
															"package": "@truffle/codec"
														}
													}
												},
												{
													"id": 1278,
													"name": "selector",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													}
												},
												{
													"id": 1279,
													"name": "allocations",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 1193,
														"name": "AbiAllocations",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1267,
										1271,
										1275
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/abi-data/encode/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/encode/index.ts#L1"
								}
							]
						},
						{
							"id": 1299,
							"name": "Import",
							"variant": "declaration",
							"kind": 4,
							"flags": {
								"isProtected": true
							},
							"children": [
								{
									"id": 1300,
									"name": "abiParameterToType",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/import/index.ts",
											"line": 14,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/import/index.ts#L14"
										}
									],
									"signatures": [
										{
											"id": 1301,
											"name": "abiParameterToType",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/import/index.ts",
													"line": 14,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/import/index.ts#L14"
												}
											],
											"parameters": [
												{
													"id": 1302,
													"name": "abi",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "Parameter"
														},
														"name": "Parameter",
														"package": "@truffle/abi-utils"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 104,
												"name": "Format.Types.Type",
												"package": "@truffle/codec",
												"qualifiedName": "Type"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1300
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/abi-data/import/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/import/index.ts#L1"
								}
							]
						},
						{
							"id": 1303,
							"name": "Utils",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1340,
									"name": "DEFAULT_CONSTRUCTOR_ABI",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/utils.ts",
											"line": 16,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/utils.ts#L16"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../abi-utils/lib/types.ts",
											"qualifiedName": "ConstructorEntry"
										},
										"name": "Abi.ConstructorEntry",
										"package": "@truffle/abi-utils",
										"qualifiedName": "ConstructorEntry"
									},
									"defaultValue": "..."
								},
								{
									"id": 1325,
									"name": "abiEntryHasStorageParameters",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/utils.ts",
											"line": 151,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/utils.ts#L151"
										}
									],
									"signatures": [
										{
											"id": 1326,
											"name": "abiEntryHasStorageParameters",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/utils.ts",
													"line": 151,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/utils.ts#L151"
												}
											],
											"parameters": [
												{
													"id": 1327,
													"name": "abiEntry",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "Entry"
														},
														"name": "Entry",
														"package": "@truffle/abi-utils"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 1322,
									"name": "abiEntryIsObviouslyIllTyped",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/utils.ts",
											"line": 108,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/utils.ts#L108"
										}
									],
									"signatures": [
										{
											"id": 1323,
											"name": "abiEntryIsObviouslyIllTyped",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/utils.ts",
													"line": 108,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/utils.ts#L108"
												}
											],
											"parameters": [
												{
													"id": 1324,
													"name": "abiEntry",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "Entry"
														},
														"name": "Entry",
														"package": "@truffle/abi-utils"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 1307,
									"name": "abiHasPayableFallback",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/utils.ts",
											"line": 40,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/utils.ts#L40"
										}
									],
									"signatures": [
										{
											"id": 1308,
											"name": "abiHasPayableFallback",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/utils.ts",
													"line": 40,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/utils.ts#L40"
												}
											],
											"parameters": [
												{
													"id": 1309,
													"name": "abi",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "Abi"
														},
														"name": "Abi",
														"package": "@truffle/abi-utils"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									]
								},
								{
									"id": 1337,
									"name": "abiSelector",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "abi-utils/dist/lib/signature.d.ts",
											"line": 6,
											"character": 24
										}
									],
									"signatures": [
										{
											"id": 1338,
											"name": "abiSelector",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "abi-utils/dist/lib/signature.d.ts",
													"line": 6,
													"character": 0
												}
											],
											"parameters": [
												{
													"id": 1339,
													"name": "abiEntry",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../abi-utils/lib/types.ts",
																	"qualifiedName": "FunctionEntry"
																},
																"name": "FunctionEntry",
																"package": "@truffle/abi-utils"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../abi-utils/lib/types.ts",
																	"qualifiedName": "EventEntry"
																},
																"name": "EventEntry",
																"package": "@truffle/abi-utils"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../abi-utils/lib/types.ts",
																	"qualifiedName": "ErrorEntry"
																},
																"name": "ErrorEntry",
																"package": "@truffle/abi-utils"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 1328,
									"name": "abiSignature",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "abi-utils/dist/lib/signature.d.ts",
											"line": 3,
											"character": 24
										}
									],
									"signatures": [
										{
											"id": 1329,
											"name": "abiSignature",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "abi-utils/dist/lib/signature.d.ts",
													"line": 3,
													"character": 0
												}
											],
											"parameters": [
												{
													"id": 1330,
													"name": "abiEntry",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../abi-utils/lib/types.ts",
																	"qualifiedName": "FunctionEntry"
																},
																"name": "FunctionEntry",
																"package": "@truffle/abi-utils"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../abi-utils/lib/types.ts",
																	"qualifiedName": "EventEntry"
																},
																"name": "EventEntry",
																"package": "@truffle/abi-utils"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../abi-utils/lib/types.ts",
																	"qualifiedName": "ErrorEntry"
																},
																"name": "ErrorEntry",
																"package": "@truffle/abi-utils"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 1334,
									"name": "abiTupleSignature",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "abi-utils/dist/lib/signature.d.ts",
											"line": 4,
											"character": 24
										}
									],
									"signatures": [
										{
											"id": 1335,
											"name": "abiTupleSignature",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "abi-utils/dist/lib/signature.d.ts",
													"line": 4,
													"character": 0
												}
											],
											"parameters": [
												{
													"id": 1336,
													"name": "parameters",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../abi-utils/lib/types.ts",
																"qualifiedName": "Parameter"
															},
															"name": "Parameter",
															"package": "@truffle/abi-utils"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 1331,
									"name": "abiTypeSignature",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "abi-utils/dist/lib/signature.d.ts",
											"line": 5,
											"character": 24
										}
									],
									"signatures": [
										{
											"id": 1332,
											"name": "abiTypeSignature",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "abi-utils/dist/lib/signature.d.ts",
													"line": 5,
													"character": 0
												}
											],
											"parameters": [
												{
													"id": 1333,
													"name": "parameter",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "Parameter"
														},
														"name": "Parameter",
														"package": "@truffle/abi-utils"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 1310,
									"name": "abisMatch",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/utils.ts",
											"line": 54,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/utils.ts#L54"
										}
									],
									"signatures": [
										{
											"id": 1311,
											"name": "abisMatch",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/utils.ts",
													"line": 54,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/utils.ts#L54"
												}
											],
											"parameters": [
												{
													"id": 1312,
													"name": "entry1",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "Entry"
														},
														"name": "Entry",
														"package": "@truffle/abi-utils"
													}
												},
												{
													"id": 1313,
													"name": "entry2",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "Entry"
														},
														"name": "Entry",
														"package": "@truffle/abi-utils"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 1304,
									"name": "computeSelectors",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/utils.ts",
											"line": 23,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/utils.ts#L23"
										}
									],
									"signatures": [
										{
											"id": 1305,
											"name": "computeSelectors",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/utils.ts",
													"line": 23,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/utils.ts#L23"
												}
											],
											"parameters": [
												{
													"id": 1306,
													"name": "abi",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "Abi"
														},
														"name": "Abi",
														"package": "@truffle/abi-utils"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 1341,
														"name": "FunctionAbiBySelectors",
														"package": "@truffle/codec"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									]
								},
								{
									"id": 1314,
									"name": "definitionMatchesAbi",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/utils.ts",
											"line": 86,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/utils.ts#L86"
										}
									],
									"signatures": [
										{
											"id": 1315,
											"name": "definitionMatchesAbi",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/utils.ts",
													"line": 86,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/utils.ts#L86"
												}
											],
											"parameters": [
												{
													"id": 1316,
													"name": "abiEntry",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "Entry"
														},
														"name": "Entry",
														"package": "@truffle/abi-utils"
													}
												},
												{
													"id": 1317,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1318,
													"name": "referenceDeclarations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1743,
														"name": "AstNodes",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 1319,
									"name": "topicsCount",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/abi-data/utils.ts",
											"line": 101,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/utils.ts#L101"
										}
									],
									"signatures": [
										{
											"id": 1320,
											"name": "topicsCount",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/abi-data/utils.ts",
													"line": 101,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/utils.ts#L101"
												}
											],
											"parameters": [
												{
													"id": 1321,
													"name": "abiEntry",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "EventEntry"
														},
														"name": "EventEntry",
														"package": "@truffle/abi-utils"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Variables",
									"children": [
										1340
									]
								},
								{
									"title": "Functions",
									"children": [
										1325,
										1322,
										1307,
										1337,
										1328,
										1334,
										1331,
										1310,
										1304,
										1314,
										1319
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/abi-data/utils.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/utils.ts#L1"
								}
							]
						},
						{
							"id": 1341,
							"name": "FunctionAbiBySelectors",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/abi-data/types.ts",
									"line": 3,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/types.ts#L3"
								}
							],
							"indexSignature": {
								"id": 1342,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"sources": [
									{
										"fileName": "codec/lib/abi-data/types.ts",
										"line": 4,
										"character": 2,
										"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/types.ts#L4"
									}
								],
								"parameters": [
									{
										"id": 1343,
										"name": "selector",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "../abi-utils/lib/types.ts",
										"qualifiedName": "FunctionEntry"
									},
									"name": "FunctionEntry",
									"package": "@truffle/abi-utils"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1148,
								1280,
								1266,
								1299,
								1303
							]
						},
						{
							"title": "Interfaces",
							"children": [
								1341
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/abi-data/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abi-data/index.ts#L1"
						}
					]
				},
				{
					"id": 1560,
					"name": "Ast",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 1672,
							"name": "Import",
							"variant": "declaration",
							"kind": 4,
							"flags": {
								"isProtected": true
							},
							"children": [
								{
									"id": 1679,
									"name": "definitionToStoredType",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/import/index.ts",
											"line": 387,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/import/index.ts#L387"
										}
									],
									"signatures": [
										{
											"id": 1680,
											"name": "definitionToStoredType",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast/import/index.ts",
													"line": 387,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/import/index.ts#L387"
												}
											],
											"parameters": [
												{
													"id": 1681,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1682,
													"name": "compilationId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1683,
													"name": "compiler",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1764,
														"name": "CompilerVersion",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1684,
													"name": "referenceDeclarations",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 1743,
														"name": "AstNodes",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 193,
												"name": "Format.Types.UserDefinedType",
												"package": "@truffle/codec",
												"qualifiedName": "UserDefinedType"
											}
										}
									]
								},
								{
									"id": 1673,
									"name": "definitionToType",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/import/index.ts",
											"line": 27,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/import/index.ts#L27"
										}
									],
									"signatures": [
										{
											"id": 1674,
											"name": "definitionToType",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast/import/index.ts",
													"line": 27,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/import/index.ts#L27"
												}
											],
											"parameters": [
												{
													"id": 1675,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1676,
													"name": "compilationId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 1677,
													"name": "compiler",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1764,
														"name": "CompilerVersion",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1678,
													"name": "forceLocation",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 2335,
														"name": "Location",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 104,
												"name": "Format.Types.Type",
												"package": "@truffle/codec",
												"qualifiedName": "Type"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1679,
										1673
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/ast/import/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/import/index.ts#L1"
								}
							]
						},
						{
							"id": 1561,
							"name": "Utils",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1635,
									"name": "baseDefinition",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 300,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L300"
										}
									],
									"signatures": [
										{
											"id": 1636,
											"name": "baseDefinition",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 300,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L300"
												}
											],
											"parameters": [
												{
													"id": 1637,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 1688,
												"name": "AstNode",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 1616,
									"name": "contractKind",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 213,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L213"
										}
									],
									"signatures": [
										{
											"id": 1617,
											"name": "contractKind",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "only for contract types, obviously! will yield nonsense otherwise!"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 213,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L213"
												}
											],
											"parameters": [
												{
													"id": 1618,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 2338,
												"name": "Common.ContractKind",
												"package": "@truffle/codec",
												"qualifiedName": "ContractKind"
											}
										}
									]
								},
								{
									"id": 1586,
									"name": "decimalPlaces",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 129,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L129"
										}
									],
									"signatures": [
										{
											"id": 1587,
											"name": "decimalPlaces",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "for fixed-point types, obviously"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 129,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L129"
												}
											],
											"parameters": [
												{
													"id": 1588,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 1661,
									"name": "definitionToAbi",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 544,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L544"
										}
									],
									"signatures": [
										{
											"id": 1662,
											"name": "definitionToAbi",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the main function. just does some dispatch.\nreturns undefined on bad input"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 544,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L544"
												}
											],
											"parameters": [
												{
													"id": 1663,
													"name": "node",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1664,
													"name": "referenceDeclarations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1743,
														"name": "AstNodes",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "Entry"
														},
														"name": "Abi.Entry",
														"package": "@truffle/abi-utils",
														"qualifiedName": "Entry"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									]
								},
								{
									"id": 1652,
									"name": "functionClass",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 491,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L491"
										}
									],
									"signatures": [
										{
											"id": 1653,
											"name": "functionClass",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 491,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L491"
												}
											],
											"parameters": [
												{
													"id": 1654,
													"name": "node",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									]
								},
								{
									"id": 1649,
									"name": "functionKind",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 469,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L469"
										}
									],
									"signatures": [
										{
											"id": 1650,
											"name": "functionKind",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "compatibility function, since pre-0.5.0 functions don't have node.kind\nreturns undefined if you don't put in a function node"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 469,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L469"
												}
											],
											"parameters": [
												{
													"id": 1651,
													"name": "node",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									]
								},
								{
									"id": 1665,
									"name": "getterParameters",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 831,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L831"
										}
									],
									"signatures": [
										{
											"id": 1666,
											"name": "getterParameters",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 831,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L831"
												}
											],
											"parameters": [
												{
													"id": 1667,
													"name": "node",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1668,
													"name": "referenceDeclarations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1743,
														"name": "AstNodes",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1669,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1670,
															"name": "inputs",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/ast/utils.ts",
																	"line": 834,
																	"character": 5,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L834"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 1688,
																	"name": "AstNode",
																	"package": "@truffle/codec"
																}
															}
														},
														{
															"id": 1671,
															"name": "outputs",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/ast/utils.ts",
																	"line": 834,
																	"character": 24,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L834"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 1688,
																	"name": "AstNode",
																	"package": "@truffle/codec"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1670,
																1671
															]
														}
													],
													"sources": [
														{
															"fileName": "codec/lib/ast/utils.ts",
															"line": 834,
															"character": 3,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L834"
														}
													]
												}
											}
										}
									]
								},
								{
									"id": 1589,
									"name": "isArray",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 136,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L136"
										}
									],
									"signatures": [
										{
											"id": 1590,
											"name": "isArray",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 136,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L136"
												}
											],
											"parameters": [
												{
													"id": 1591,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 1658,
									"name": "isContractPayable",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 531,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L531"
										}
									],
									"signatures": [
										{
											"id": 1659,
											"name": "isContractPayable",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "takes a contract definition and asks, does it have a payable fallback\nfunction?"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 531,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L531"
												}
											],
											"parameters": [
												{
													"id": 1660,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 1592,
									"name": "isDynamicArray",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 141,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L141"
										}
									],
									"signatures": [
										{
											"id": 1593,
											"name": "isDynamicArray",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 141,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L141"
												}
											],
											"parameters": [
												{
													"id": 1594,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 1607,
									"name": "isEnum",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 186,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L186"
										}
									],
									"signatures": [
										{
											"id": 1608,
											"name": "isEnum",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 186,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L186"
												}
											],
											"parameters": [
												{
													"id": 1609,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 1604,
									"name": "isMapping",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 181,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L181"
										}
									],
									"signatures": [
										{
											"id": 1605,
											"name": "isMapping",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 181,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L181"
												}
											],
											"parameters": [
												{
													"id": 1606,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 1610,
									"name": "isReference",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 191,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L191"
										}
									],
									"signatures": [
										{
											"id": 1611,
											"name": "isReference",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 191,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L191"
												}
											],
											"parameters": [
												{
													"id": 1612,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 1622,
									"name": "isSimpleConstant",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 245,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L245"
										}
									],
									"signatures": [
										{
											"id": 1623,
											"name": "isSimpleConstant",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 245,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L245"
												}
											],
											"parameters": [
												{
													"id": 1624,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 1601,
									"name": "isStruct",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 176,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L176"
										}
									],
									"signatures": [
										{
											"id": 1602,
											"name": "isStruct",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 176,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L176"
												}
											],
											"parameters": [
												{
													"id": 1603,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 1638,
									"name": "keyDefinition",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 331,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L331"
										}
									],
									"signatures": [
										{
											"id": 1639,
											"name": "keyDefinition",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "for use for mappings and arrays only!\nfor arrays, fakes up a uint definition"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 331,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L331"
												}
											],
											"parameters": [
												{
													"id": 1640,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1641,
													"name": "scopes",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 1746,
														"name": "Scopes",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 1688,
												"name": "AstNode",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 1655,
									"name": "mutability",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 502,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L502"
										}
									],
									"signatures": [
										{
											"id": 1656,
											"name": "mutability",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "similar compatibility function for mutability for pre-0.4.16 versions\nreturns undefined if you don't give it a FunctionDefinition or\nVariableDeclaration"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 502,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L502"
												}
											],
											"parameters": [
												{
													"id": 1657,
													"name": "node",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 2337,
														"name": "Common.Mutability",
														"package": "@truffle/codec",
														"qualifiedName": "Mutability"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									]
								},
								{
									"id": 1646,
									"name": "parameters",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 452,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L452"
										}
									],
									"signatures": [
										{
											"id": 1647,
											"name": "parameters",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "returns input parameters, then output parameters\nNOTE: ONLY FOR VARIABLE DECLARATIONS OF FUNCTION TYPE\nNOT FOR FUNCTION DEFINITIONS"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 452,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L452"
												}
											],
											"parameters": [
												{
													"id": 1648,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1688,
															"name": "AstNode",
															"package": "@truffle/codec"
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1688,
															"name": "AstNode",
															"package": "@truffle/codec"
														}
													}
												]
											}
										}
									]
								},
								{
									"id": 1632,
									"name": "rationalValue",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 292,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L292"
										}
									],
									"signatures": [
										{
											"id": 1633,
											"name": "rationalValue",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "extract the actual numerical value from a node of type rational.\ncurrently assumes result will be integer (currently returns BN)"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 292,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L292"
												}
											],
											"parameters": [
												{
													"id": 1634,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
													"qualifiedName": "BN"
												},
												"name": "BN",
												"package": "@types/bn.js"
											}
										}
									]
								},
								{
									"id": 1613,
									"name": "referenceType",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 203,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L203"
										}
									],
									"signatures": [
										{
											"id": 1614,
											"name": "referenceType",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "note: only use this on things already verified to be references"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 203,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L203"
												}
											],
											"parameters": [
												{
													"id": 1615,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 2335,
												"name": "Common.Location",
												"package": "@truffle/codec",
												"qualifiedName": "Location"
											}
										}
									]
								},
								{
									"id": 1629,
									"name": "regularizeTypeIdentifier",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 279,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L279"
										}
									],
									"signatures": [
										{
											"id": 1630,
											"name": "regularizeTypeIdentifier",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "adds \"_ptr\" on to the end of type identifiers that might need it; note that\nthis operates on identifiers, not definitions"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 279,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L279"
												}
											],
											"parameters": [
												{
													"id": 1631,
													"name": "identifier",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 1583,
									"name": "specifiedSize",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 95,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L95"
										}
									],
									"signatures": [
										{
											"id": 1584,
											"name": "specifiedSize",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "e.g. uint48 -> 6"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": [
															{
																"kind": "text",
																"text": "size in bytes for explicit type size, or "
															},
															{
																"kind": "code",
																"text": "`null`"
															},
															{
																"kind": "text",
																"text": " if not stated"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 95,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L95"
												}
											],
											"parameters": [
												{
													"id": 1585,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 1625,
									"name": "spliceLocation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 255,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L255"
										}
									],
									"signatures": [
										{
											"id": 1626,
											"name": "spliceLocation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "definition: a storage reference definition\nlocation: the location you want it to refer to instead"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 255,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L255"
												}
											],
											"parameters": [
												{
													"id": 1627,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1628,
													"name": "location",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2335,
														"name": "Location",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 1688,
												"name": "AstNode",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 1619,
									"name": "stackSize",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 223,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L223"
										}
									],
									"signatures": [
										{
											"id": 1620,
											"name": "stackSize",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "stack size, in words, of a given type\nnote: this function assumes that UDVTs only ever take up\na single word, which is currently true"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 223,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L223"
												}
											],
											"parameters": [
												{
													"id": 1621,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 1595,
									"name": "staticLength",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 158,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L158"
										}
									],
									"signatures": [
										{
											"id": 1596,
											"name": "staticLength",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "length of a statically sized array -- please only use for arrays\nalready verified to be static!"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 158,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L158"
												}
											],
											"parameters": [
												{
													"id": 1597,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 1598,
									"name": "staticLengthAsString",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 169,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L169"
										}
									],
									"signatures": [
										{
											"id": 1599,
											"name": "staticLengthAsString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "see staticLength for explanation"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 169,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L169"
												}
											],
											"parameters": [
												{
													"id": 1600,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 1571,
									"name": "typeClass",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 43,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L43"
										}
									],
									"signatures": [
										{
											"id": 1572,
											"name": "typeClass",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "returns basic type class for a variable definition node\ne.g.:\n "
													},
													{
														"kind": "code",
														"text": "`t_uint256`"
													},
													{
														"kind": "text",
														"text": " becomes "
													},
													{
														"kind": "code",
														"text": "`uint`"
													},
													{
														"kind": "text",
														"text": "\n "
													},
													{
														"kind": "code",
														"text": "`t_struct$_Thing_$20_memory_ptr`"
													},
													{
														"kind": "text",
														"text": " becomes "
													},
													{
														"kind": "code",
														"text": "`struct`"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 43,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L43"
												}
											],
											"parameters": [
												{
													"id": 1573,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 1574,
									"name": "typeClassLongForm",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 57,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L57"
										}
									],
									"signatures": [
										{
											"id": 1575,
											"name": "typeClassLongForm",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "similar to typeClass, but includes any numeric qualifiers\ne.g.:\n"
													},
													{
														"kind": "code",
														"text": "`t_uint256`"
													},
													{
														"kind": "text",
														"text": " becomes "
													},
													{
														"kind": "code",
														"text": "`uint256`"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 57,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L57"
												}
											],
											"parameters": [
												{
													"id": 1576,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 1577,
									"name": "typeId",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 67,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L67"
										}
									],
									"signatures": [
										{
											"id": 1578,
											"name": "typeId",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "for user-defined types -- structs, enums, contracts\noften you can get these from referencedDeclaration, but not\nalways"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 67,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L67"
												}
											],
											"parameters": [
												{
													"id": 1579,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								},
								{
									"id": 1562,
									"name": "typeIdentifier",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 12,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L12"
										}
									],
									"signatures": [
										{
											"id": 1563,
											"name": "typeIdentifier",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 12,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L12"
												}
											],
											"parameters": [
												{
													"id": 1564,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 1565,
									"name": "typeString",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 17,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L17"
										}
									],
									"signatures": [
										{
											"id": 1566,
											"name": "typeString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 17,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L17"
												}
											],
											"parameters": [
												{
													"id": 1567,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 1568,
									"name": "typeStringWithoutLocation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 25,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L25"
										}
									],
									"signatures": [
										{
											"id": 1569,
											"name": "typeStringWithoutLocation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Returns the type string, but with location (if any) stripped off the end"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 25,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L25"
												}
											],
											"parameters": [
												{
													"id": 1570,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 1642,
									"name": "valueDefinition",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 398,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L398"
										}
									],
									"signatures": [
										{
											"id": 1643,
											"name": "valueDefinition",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "for use for mappings only!"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 398,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L398"
												}
											],
											"parameters": [
												{
													"id": 1644,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1645,
													"name": "scopes",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 1746,
														"name": "Scopes",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 1688,
												"name": "AstNode",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 1580,
									"name": "visibility",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/utils.ts",
											"line": 82,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L82"
										}
									],
									"signatures": [
										{
											"id": 1581,
											"name": "visibility",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "For function types; returns internal or external\n(not for use on other types! will cause an error!)\nshould only return \"internal\" or \"external\""
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/ast/utils.ts",
													"line": 82,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L82"
												}
											],
											"parameters": [
												{
													"id": 1582,
													"name": "definition",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 2336,
												"name": "Common.Visibility",
												"package": "@truffle/codec",
												"qualifiedName": "Visibility"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1635,
										1616,
										1586,
										1661,
										1652,
										1649,
										1665,
										1589,
										1658,
										1592,
										1607,
										1604,
										1610,
										1622,
										1601,
										1638,
										1655,
										1646,
										1632,
										1613,
										1629,
										1583,
										1625,
										1619,
										1595,
										1598,
										1571,
										1574,
										1577,
										1562,
										1565,
										1568,
										1642,
										1580
									],
									"categories": [
										{
											"title": "Definition Reading",
											"children": [
												1635,
												1616,
												1586,
												1649,
												1589,
												1658,
												1592,
												1607,
												1604,
												1610,
												1622,
												1601,
												1638,
												1655,
												1646,
												1632,
												1613,
												1629,
												1583,
												1625,
												1619,
												1595,
												1598,
												1571,
												1574,
												1577,
												1562,
												1565,
												1568,
												1642,
												1580
											]
										},
										{
											"title": "Other",
											"children": [
												1661,
												1652,
												1665
											]
										}
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/ast/utils.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/utils.ts#L1"
								}
							]
						},
						{
							"id": 1688,
							"name": "AstNode",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1736,
									"name": "anonymous",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 57,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L57"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1703,
									"name": "ast_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 22,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L22"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1731,
									"name": "baseType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 52,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L52"
										}
									],
									"type": {
										"type": "reference",
										"target": 1688,
										"name": "AstNode",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1742,
									"name": "block",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 63,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L63"
										}
									],
									"type": {
										"type": "reference",
										"target": 1688,
										"name": "AstNode",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1693,
									"name": "canonicalName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 13,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L13"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1741,
									"name": "code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 62,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L62"
										}
									],
									"type": {
										"type": "reference",
										"target": 1688,
										"name": "AstNode",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1689,
									"name": "constant",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 9,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L9"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1737,
									"name": "contractKind",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 58,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L58"
										}
									],
									"type": {
										"type": "reference",
										"target": 2338,
										"name": "ContractKind",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1710,
									"name": "expression",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 29,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L29"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1711,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1712,
													"name": "referencedDeclaration",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "codec/lib/ast/types.ts",
															"line": 30,
															"character": 4,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L30"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1712
													]
												}
											],
											"sources": [
												{
													"fileName": "codec/lib/ast/types.ts",
													"line": 29,
													"character": 15,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L29"
												}
											]
										}
									}
								},
								{
									"id": 1717,
									"name": "hexValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 38,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L38"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1691,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 11,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L11"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1735,
									"name": "indexed",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 56,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L56"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1695,
									"name": "internalFunctionIDs",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 15,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L15"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1696,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast/types.ts",
													"line": 15,
													"character": 24,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L15"
												}
											],
											"indexSignature": {
												"id": 1697,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"sources": [
													{
														"fileName": "codec/lib/ast/types.ts",
														"line": 16,
														"character": 4,
														"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L16"
													}
												],
												"parameters": [
													{
														"id": 1698,
														"name": "nodeId",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									}
								},
								{
									"id": 1738,
									"name": "isConstructor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 59,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L59"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1732,
									"name": "keyType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 53,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L53"
										}
									],
									"type": {
										"type": "reference",
										"target": 1688,
										"name": "AstNode",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1716,
									"name": "kind",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 37,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L37"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1694,
									"name": "linearizedBaseContracts",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 14,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L14"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 1699,
									"name": "members",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 18,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L18"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1688,
											"name": "AstNode",
											"package": "@truffle/codec"
										}
									}
								},
								{
									"id": 1690,
									"name": "mutability",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 10,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L10"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "mutable"
											},
											{
												"type": "literal",
												"value": "immutable"
											},
											{
												"type": "literal",
												"value": "constant"
											}
										]
									}
								},
								{
									"id": 1692,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 12,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L12"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1702,
									"name": "nodeType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 21,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L21"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1701,
									"name": "nodes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 20,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L20"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1688,
											"name": "AstNode",
											"package": "@truffle/codec"
										}
									}
								},
								{
									"id": 1725,
									"name": "parameterTypes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 46,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L46"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1726,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1727,
													"name": "parameters",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/ast/types.ts",
															"line": 47,
															"character": 4,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L47"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1688,
															"name": "AstNode",
															"package": "@truffle/codec"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1727
													]
												}
											],
											"sources": [
												{
													"fileName": "codec/lib/ast/types.ts",
													"line": 46,
													"character": 19,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L46"
												}
											]
										}
									}
								},
								{
									"id": 1719,
									"name": "parameters",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 40,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L40"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1720,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1721,
													"name": "parameters",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/ast/types.ts",
															"line": 41,
															"character": 4,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L41"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1688,
															"name": "AstNode",
															"package": "@truffle/codec"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1721
													]
												}
											],
											"sources": [
												{
													"fileName": "codec/lib/ast/types.ts",
													"line": 40,
													"character": 15,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L40"
												}
											]
										}
									}
								},
								{
									"id": 1734,
									"name": "payable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 55,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L55"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1718,
									"name": "referencedDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 39,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L39"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1728,
									"name": "returnParameterTypes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 49,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L49"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1729,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1730,
													"name": "parameters",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/ast/types.ts",
															"line": 50,
															"character": 4,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L50"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1688,
															"name": "AstNode",
															"package": "@truffle/codec"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1730
													]
												}
											],
											"sources": [
												{
													"fileName": "codec/lib/ast/types.ts",
													"line": 49,
													"character": 25,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L49"
												}
											]
										}
									}
								},
								{
									"id": 1722,
									"name": "returnParameters",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 43,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L43"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1723,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1724,
													"name": "parameters",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/ast/types.ts",
															"line": 44,
															"character": 4,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L44"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1688,
															"name": "AstNode",
															"package": "@truffle/codec"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1724
													]
												}
											],
											"sources": [
												{
													"fileName": "codec/lib/ast/types.ts",
													"line": 43,
													"character": 21,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L43"
												}
											]
										}
									}
								},
								{
									"id": 1704,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 23,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L23"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1705,
									"name": "src",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 24,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L24"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1715,
									"name": "stateMutability",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 36,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L36"
										}
									],
									"type": {
										"type": "reference",
										"target": 2337,
										"name": "Mutability",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1706,
									"name": "stateVariable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 25,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L25"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1707,
									"name": "storageLocation",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 26,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L26"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1708,
									"name": "typeDescriptions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 27,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L27"
										}
									],
									"type": {
										"type": "reference",
										"target": 1685,
										"name": "TypeDescriptions",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1709,
									"name": "typeName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 28,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L28"
										}
									],
									"type": {
										"type": "reference",
										"target": 1688,
										"name": "AstNode",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1700,
									"name": "underlyingType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L19"
										}
									],
									"type": {
										"type": "reference",
										"target": 1688,
										"name": "AstNode",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1739,
									"name": "usedErrors",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 60,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L60"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 1740,
									"name": "usedEvents",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 61,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L61"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 1713,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 32,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L32"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 1733,
									"name": "valueType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 54,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L54"
										}
									],
									"type": {
										"type": "reference",
										"target": 1688,
										"name": "AstNode",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1714,
									"name": "visibility",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 33,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L33"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1736,
										1703,
										1731,
										1742,
										1693,
										1741,
										1689,
										1737,
										1710,
										1717,
										1691,
										1735,
										1695,
										1738,
										1732,
										1716,
										1694,
										1699,
										1690,
										1692,
										1702,
										1701,
										1725,
										1719,
										1734,
										1718,
										1728,
										1722,
										1704,
										1705,
										1715,
										1706,
										1707,
										1708,
										1709,
										1700,
										1739,
										1740,
										1713,
										1733,
										1714
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/ast/types.ts",
									"line": 8,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L8"
								}
							]
						},
						{
							"id": 1743,
							"name": "AstNodes",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/ast/types.ts",
									"line": 69,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L69"
								}
							],
							"indexSignature": {
								"id": 1744,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"sources": [
									{
										"fileName": "codec/lib/ast/types.ts",
										"line": 70,
										"character": 2,
										"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L70"
									}
								],
								"parameters": [
									{
										"id": 1745,
										"name": "nodeId",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "reference",
									"target": 1688,
									"name": "AstNode",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 1746,
							"name": "Scopes",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/ast/types.ts",
									"line": 74,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L74"
								}
							],
							"indexSignature": {
								"id": 1747,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"sources": [
									{
										"fileName": "codec/lib/ast/types.ts",
										"line": 75,
										"character": 2,
										"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L75"
									}
								],
								"parameters": [
									{
										"id": 1748,
										"name": "nodeId",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reflection",
									"declaration": {
										"id": 1749,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 1758,
												"name": "definition",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"sources": [
													{
														"fileName": "codec/lib/ast/types.ts",
														"line": 84,
														"character": 4,
														"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L84"
													}
												],
												"type": {
													"type": "reference",
													"target": 1688,
													"name": "AstNode",
													"package": "@truffle/codec"
												}
											},
											{
												"id": 1750,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "codec/lib/ast/types.ts",
														"line": 76,
														"character": 4,
														"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L76"
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 1752,
												"name": "parentId",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "codec/lib/ast/types.ts",
														"line": 78,
														"character": 4,
														"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L78"
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "literal",
															"value": null
														}
													]
												}
											},
											{
												"id": 1753,
												"name": "pointer",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "codec/lib/ast/types.ts",
														"line": 79,
														"character": 4,
														"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L79"
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 1751,
												"name": "sourceId",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "codec/lib/ast/types.ts",
														"line": 77,
														"character": 4,
														"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L77"
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 1754,
												"name": "variables",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"sources": [
													{
														"fileName": "codec/lib/ast/types.ts",
														"line": 80,
														"character": 4,
														"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L80"
													}
												],
												"type": {
													"type": "array",
													"elementType": {
														"type": "reflection",
														"declaration": {
															"id": 1755,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 1757,
																	"name": "id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "codec/lib/ast/types.ts",
																			"line": 82,
																			"character": 6,
																			"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L82"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 1756,
																	"name": "name",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "codec/lib/ast/types.ts",
																			"line": 81,
																			"character": 6,
																			"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L81"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		1757,
																		1756
																	]
																}
															],
															"sources": [
																{
																	"fileName": "codec/lib/ast/types.ts",
																	"line": 80,
																	"character": 16,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L80"
																}
															]
														}
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													1758,
													1750,
													1752,
													1753,
													1751,
													1754
												]
											}
										],
										"sources": [
											{
												"fileName": "codec/lib/ast/types.ts",
												"line": 75,
												"character": 20,
												"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L75"
											}
										]
									}
								}
							}
						},
						{
							"id": 1685,
							"name": "TypeDescriptions",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1686,
									"name": "typeIdentifier",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 4,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L4"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1687,
									"name": "typeString",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/ast/types.ts",
											"line": 5,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L5"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1686,
										1687
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/ast/types.ts",
									"line": 3,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/types.ts#L3"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1672,
								1561
							]
						},
						{
							"title": "Interfaces",
							"children": [
								1688,
								1743,
								1746,
								1685
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/ast/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast/index.ts#L1"
						}
					]
				},
				{
					"id": 1549,
					"name": "AstConstant",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "For reading/decoding constants expressed as AST nodes"
							}
						]
					},
					"children": [
						{
							"id": 1554,
							"name": "Decode",
							"variant": "declaration",
							"kind": 4,
							"flags": {
								"isProtected": true
							},
							"children": [
								{
									"id": 1555,
									"name": "decodeConstant",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast-constant/decode/index.ts",
											"line": 19,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast-constant/decode/index.ts#L19"
										}
									],
									"signatures": [
										{
											"id": 1556,
											"name": "decodeConstant",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast-constant/decode/index.ts",
													"line": 19,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast-constant/decode/index.ts#L19"
												}
											],
											"parameters": [
												{
													"id": 1557,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1558,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2017,
														"name": "ConstantDefinitionPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1559,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 294,
														"name": "Format.Values.Result",
														"package": "@truffle/codec",
														"qualifiedName": "Result"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1555
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/ast-constant/decode/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast-constant/decode/index.ts#L1"
								}
							]
						},
						{
							"id": 1550,
							"name": "Read",
							"variant": "declaration",
							"kind": 4,
							"flags": {
								"isProtected": true
							},
							"children": [
								{
									"id": 1551,
									"name": "readDefinition",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/ast-constant/read/index.ts",
											"line": 17,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast-constant/read/index.ts#L17"
										}
									],
									"signatures": [
										{
											"id": 1552,
											"name": "readDefinition",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/ast-constant/read/index.ts",
													"line": 17,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast-constant/read/index.ts#L17"
												}
											],
											"parameters": [
												{
													"id": 1553,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2017,
														"name": "ConstantDefinitionPointer",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1551
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/ast-constant/read/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast-constant/read/index.ts#L1"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1554,
								1550
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/ast-constant/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/ast-constant/index.ts#L1"
						}
					]
				},
				{
					"id": 1090,
					"name": "Basic",
					"variant": "declaration",
					"kind": 4,
					"flags": {
						"isProtected": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "For decoding of primitives and constants"
							}
						]
					},
					"children": [
						{
							"id": 1118,
							"name": "Allocate",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1119,
									"name": "byteLength",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/basic/allocate/index.ts",
											"line": 9,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/basic/allocate/index.ts#L9"
										}
									],
									"signatures": [
										{
											"id": 1120,
											"name": "byteLength",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/basic/allocate/index.ts",
													"line": 9,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/basic/allocate/index.ts#L9"
												}
											],
											"parameters": [
												{
													"id": 1121,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1122,
													"name": "userDefinedTypes",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 284,
														"name": "TypesById",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1119
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/basic/allocate/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/basic/allocate/index.ts#L1"
								}
							]
						},
						{
							"id": 1091,
							"name": "Decode",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1107,
									"name": "checkPaddingLeft",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/basic/decode/index.ts",
											"line": 922,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/basic/decode/index.ts#L922"
										}
									],
									"signatures": [
										{
											"id": 1108,
											"name": "checkPaddingLeft",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/basic/decode/index.ts",
													"line": 922,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/basic/decode/index.ts#L922"
												}
											],
											"parameters": [
												{
													"id": 1109,
													"name": "bytes",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													}
												},
												{
													"id": 1110,
													"name": "length",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 1092,
									"name": "decodeBasic",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/basic/decode/index.ts",
											"line": 20,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/basic/decode/index.ts#L20"
										}
									],
									"signatures": [
										{
											"id": 1093,
											"name": "decodeBasic",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/basic/decode/index.ts",
													"line": 20,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/basic/decode/index.ts#L20"
												}
											],
											"parameters": [
												{
													"id": 1094,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1095,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1974,
														"name": "DataPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1096,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1097,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "lib/types.ts",
															"qualifiedName": "DecoderOptions"
														},
														"name": "DecoderOptions",
														"package": "@truffle/codec"
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 294,
														"name": "Format.Values.Result",
														"package": "@truffle/codec",
														"qualifiedName": "Result"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 1098,
									"name": "decodeContract",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/basic/decode/index.ts",
											"line": 554,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/basic/decode/index.ts#L554"
										}
									],
									"signatures": [
										{
											"id": 1099,
											"name": "decodeContract",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/basic/decode/index.ts",
													"line": 554,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/basic/decode/index.ts#L554"
												}
											],
											"parameters": [
												{
													"id": 1100,
													"name": "addressBytes",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													}
												},
												{
													"id": 1101,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 538,
														"name": "Format.Values.ContractValueInfo",
														"package": "@truffle/codec",
														"qualifiedName": "ContractValueInfo"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 1102,
									"name": "decodeExternalFunction",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/basic/decode/index.ts",
											"line": 601,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/basic/decode/index.ts#L601"
										}
									],
									"signatures": [
										{
											"id": 1103,
											"name": "decodeExternalFunction",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/basic/decode/index.ts",
													"line": 601,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/basic/decode/index.ts#L601"
												}
											],
											"parameters": [
												{
													"id": 1104,
													"name": "addressBytes",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													}
												},
												{
													"id": 1105,
													"name": "selectorBytes",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													}
												},
												{
													"id": 1106,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 383,
														"name": "Format.Values.FunctionExternalValueInfo",
														"package": "@truffle/codec",
														"qualifiedName": "FunctionExternalValueInfo"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1107,
										1092,
										1098,
										1102
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/basic/decode/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/basic/decode/index.ts#L1"
								}
							]
						},
						{
							"id": 1114,
							"name": "Encode",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1115,
									"name": "encodeBasic",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/basic/encode/index.ts",
											"line": 15,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/basic/encode/index.ts#L15"
										}
									],
									"signatures": [
										{
											"id": 1116,
											"name": "encodeBasic",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Handles encoding of basic types; yes the input type is broader than\nit should be but it's hard to fix this without causing other problems,\nsorry!"
													}
												],
												"blockTags": [
													{
														"tag": "@Category",
														"content": [
															{
																"kind": "text",
																"text": "Encoding (low-level)"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/basic/encode/index.ts",
													"line": 15,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/basic/encode/index.ts#L15"
												}
											],
											"parameters": [
												{
													"id": 1117,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 295,
														"name": "Value",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1115
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/basic/encode/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/basic/encode/index.ts#L1"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1118,
								1091,
								1114
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/basic/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/basic/index.ts#L1"
						}
					]
				},
				{
					"id": 1123,
					"name": "Bytes",
					"variant": "declaration",
					"kind": 4,
					"flags": {
						"isProtected": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Contains functions for dealing with raw bytestrings"
							}
						]
					},
					"children": [
						{
							"id": 1133,
							"name": "Decode",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1134,
									"name": "decodeBytes",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/bytes/decode/index.ts",
											"line": 13,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/bytes/decode/index.ts#L13"
										}
									],
									"signatures": [
										{
											"id": 1135,
											"name": "decodeBytes",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/bytes/decode/index.ts",
													"line": 13,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/bytes/decode/index.ts#L13"
												}
											],
											"parameters": [
												{
													"id": 1136,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": 122,
																"name": "BytesTypeDynamic",
																"package": "@truffle/codec"
															},
															{
																"type": "reference",
																"target": 136,
																"name": "StringType",
																"package": "@truffle/codec"
															}
														]
													}
												},
												{
													"id": 1137,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1974,
														"name": "DataPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1138,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1139,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "lib/types.ts",
															"qualifiedName": "DecoderOptions"
														},
														"name": "DecoderOptions",
														"package": "@truffle/codec"
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 294,
														"name": "Format.Values.Result",
														"package": "@truffle/codec",
														"qualifiedName": "Result"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 1140,
									"name": "decodeString",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/bytes/decode/index.ts",
											"line": 58,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/bytes/decode/index.ts#L58"
										}
									],
									"signatures": [
										{
											"id": 1141,
											"name": "decodeString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/bytes/decode/index.ts",
													"line": 58,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/bytes/decode/index.ts#L58"
												}
											],
											"parameters": [
												{
													"id": 1142,
													"name": "bytes",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 491,
												"name": "Format.Values.StringValueInfo",
												"package": "@truffle/codec",
												"qualifiedName": "StringValueInfo"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1134,
										1140
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/bytes/decode/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/bytes/decode/index.ts#L1"
								}
							]
						},
						{
							"id": 1143,
							"name": "Encode",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1144,
									"name": "encodeBytes",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/bytes/encode/index.ts",
											"line": 13,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/bytes/encode/index.ts#L13"
										}
									],
									"signatures": [
										{
											"id": 1145,
											"name": "encodeBytes",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Encodes without padding, length, etc!"
													}
												],
												"blockTags": [
													{
														"tag": "@Category",
														"content": [
															{
																"kind": "text",
																"text": "Encoding (low-level)"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/bytes/encode/index.ts",
													"line": 13,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/bytes/encode/index.ts#L13"
												}
											],
											"parameters": [
												{
													"id": 1146,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": 466,
																"name": "BytesDynamicValue",
																"package": "@truffle/codec"
															},
															{
																"type": "reference",
																"target": 485,
																"name": "StringValue",
																"package": "@truffle/codec"
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1144
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/bytes/encode/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/bytes/encode/index.ts#L1"
								}
							]
						},
						{
							"id": 1124,
							"name": "Read",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1129,
									"name": "readBytes",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/bytes/read/index.ts",
											"line": 28,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/bytes/read/index.ts#L28"
										}
									],
									"signatures": [
										{
											"id": 1130,
											"name": "readBytes",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/bytes/read/index.ts",
													"line": 28,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/bytes/read/index.ts#L28"
												}
											],
											"parameters": [
												{
													"id": 1131,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1978,
														"name": "BytesPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1132,
													"name": "state",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2050,
														"name": "EvmState",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 1125,
									"name": "readCode",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/bytes/read/index.ts",
											"line": 6,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/bytes/read/index.ts#L6"
										}
									],
									"signatures": [
										{
											"id": 1126,
											"name": "readCode",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/bytes/read/index.ts",
													"line": 6,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/bytes/read/index.ts#L6"
												}
											],
											"parameters": [
												{
													"id": 1127,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2007,
														"name": "CodePointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1128,
													"name": "state",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2050,
														"name": "EvmState",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1129,
										1125
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/bytes/read/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/bytes/read/index.ts#L1"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1133,
								1143,
								1124
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/bytes/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/bytes/index.ts#L1"
						}
					]
				},
				{
					"id": 1770,
					"name": "Compilations",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 1771,
							"name": "Utils",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1796,
									"name": "collectUserDefinedTypesAndTaggedOutputs",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/compilations/utils.ts",
											"line": 514,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L514"
										}
									],
									"signatures": [
										{
											"id": 1797,
											"name": "collectUserDefinedTypesAndTaggedOutputs",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "collects user defined types & tagged outputs for a given set of compilations,\nreturning both the definition nodes and (for the types) the type objects\n\n\"Tagged outputs\" means user-defined things that are output by a contract\n(not input to a contract), and which are distinguished by (potentially\nambiguous) selectors.  So, events and custom errors are tagged outputs.\nFunction arguments are not tagged outputs (they're not outputs).\nReturn values are not tagged outputs (they don't have a selector).\nBuilt-in errors (Error(string) and Panic(uint))... OK I guess those could\nbe considered tagged outputs, but we're only looking at user-defined ones\nhere."
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/compilations/utils.ts",
													"line": 514,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L514"
												}
											],
											"parameters": [
												{
													"id": 1798,
													"name": "compilations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1817,
															"name": "Compilation",
															"package": "@truffle/codec"
														}
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1799,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1800,
															"name": "definitions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/compilations/utils.ts",
																	"line": 517,
																	"character": 2,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L517"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1801,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "codec/lib/compilations/utils.ts",
																			"line": 517,
																			"character": 15,
																			"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L517"
																		}
																	],
																	"indexSignature": {
																		"id": 1802,
																		"name": "__index",
																		"variant": "signature",
																		"kind": 8192,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "codec/lib/compilations/utils.ts",
																				"line": 517,
																				"character": 17,
																				"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L517"
																			}
																		],
																		"parameters": [
																			{
																				"id": 1803,
																				"name": "compilationId",
																				"variant": "param",
																				"kind": 32768,
																				"flags": {},
																				"type": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 1743,
																			"name": "AstNodes",
																			"package": "@truffle/codec"
																		}
																	}
																}
															}
														},
														{
															"id": 1805,
															"name": "types",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/compilations/utils.ts",
																	"line": 519,
																	"character": 2,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L519"
																}
															],
															"type": {
																"type": "reference",
																"target": 284,
																"name": "Format.Types.TypesById",
																"package": "@truffle/codec",
																"qualifiedName": "TypesById"
															}
														},
														{
															"id": 1804,
															"name": "typesByCompilation",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/compilations/utils.ts",
																	"line": 518,
																	"character": 2,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L518"
																}
															],
															"type": {
																"type": "reference",
																"target": 287,
																"name": "Format.Types.TypesByCompilationAndId",
																"package": "@truffle/codec",
																"qualifiedName": "TypesByCompilationAndId"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1800,
																1805,
																1804
															]
														}
													],
													"sources": [
														{
															"fileName": "codec/lib/compilations/utils.ts",
															"line": 516,
															"character": 3,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L516"
														}
													]
												}
											}
										}
									]
								},
								{
									"id": 1806,
									"name": "findCompilationAndContract",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/compilations/utils.ts",
											"line": 600,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L600"
										}
									],
									"signatures": [
										{
											"id": 1807,
											"name": "findCompilationAndContract",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Given a list of compilations, and an artifact appearing in one\nof those compilations, finds the compilation and the corresponding\ncontract object\n(these may be undefined if they can't be found)"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/compilations/utils.ts",
													"line": 600,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L600"
												}
											],
											"parameters": [
												{
													"id": 1808,
													"name": "compilations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1817,
															"name": "Compilation",
															"package": "@truffle/codec"
														}
													}
												},
												{
													"id": 1809,
													"name": "artifact",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../contract-schema/spec/index.d.ts",
															"qualifiedName": "ContractObject"
														},
														"name": "ContractObject",
														"package": "@truffle/contract-schema"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "lib/compilations/utils.ts",
													"qualifiedName": "CompilationAndContract"
												},
												"name": "CompilationAndContract",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 1814,
									"name": "findRepeatCompilationIds",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/compilations/utils.ts",
											"line": 696,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L696"
										}
									],
									"signatures": [
										{
											"id": 1815,
											"name": "findRepeatCompilationIds",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/compilations/utils.ts",
													"line": 696,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L696"
												}
											],
											"parameters": [
												{
													"id": 1816,
													"name": "compilations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1817,
															"name": "Compilation",
															"package": "@truffle/codec"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
													"qualifiedName": "Set"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Set",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 1789,
									"name": "getContractNode",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/compilations/utils.ts",
											"line": 298,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L298"
										}
									],
									"signatures": [
										{
											"id": 1790,
											"name": "getContractNode",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/compilations/utils.ts",
													"line": 298,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L298"
												}
											],
											"parameters": [
												{
													"id": 1791,
													"name": "contract",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1832,
														"name": "Contract",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1792,
													"name": "compilation",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1817,
														"name": "Compilation",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 1688,
												"name": "AstNode",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 1810,
									"name": "infoToCompilations",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/compilations/utils.ts",
											"line": 680,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L680"
										}
									],
									"signatures": [
										{
											"id": 1811,
											"name": "infoToCompilations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/compilations/utils.ts",
													"line": 680,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L680"
												}
											],
											"parameters": [
												{
													"id": 1812,
													"name": "projectInfo",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1855,
														"name": "ProjectInfo",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1813,
													"name": "nonceString",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1817,
													"name": "Compilation",
													"package": "@truffle/codec"
												}
											}
										}
									]
								},
								{
									"id": 1780,
									"name": "shimArtifacts",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/compilations/utils.ts",
											"line": 58,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L58"
										}
									],
									"signatures": [
										{
											"id": 1781,
											"name": "shimArtifacts",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "wrapper around shimContracts that just returns\nthe result in a one-element array (keeping the old name\nshimArtifacts for compatibility)"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/compilations/utils.ts",
													"line": 58,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L58"
												}
											],
											"parameters": [
												{
													"id": 1782,
													"name": "artifacts",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../contract-schema/spec/index.d.ts",
																		"qualifiedName": "ContractObject"
																	},
																	"name": "ContractObject",
																	"package": "@truffle/contract-schema"
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../compile-common/dist/src/types.d.ts",
																		"qualifiedName": "CompiledContract"
																	},
																	"name": "CompiledContract",
																	"package": "@truffle/compile-common"
																}
															]
														}
													}
												},
												{
													"id": 1783,
													"name": "files",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 1784,
													"name": "shimmedCompilationId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"shimmedcompilation\""
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1817,
													"name": "Compilation",
													"package": "@truffle/codec"
												}
											}
										}
									]
								},
								{
									"id": 1776,
									"name": "shimCompilation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/compilations/utils.ts",
											"line": 38,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L38"
										}
									],
									"signatures": [
										{
											"id": 1777,
											"name": "shimCompilation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/compilations/utils.ts",
													"line": 38,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L38"
												}
											],
											"parameters": [
												{
													"id": 1778,
													"name": "inputCompilation",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../compile-common/dist/src/types.d.ts",
															"qualifiedName": "Compilation"
														},
														"name": "Compilation",
														"package": "@truffle/compile-common"
													}
												},
												{
													"id": 1779,
													"name": "shimmedCompilationId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"shimmedcompilation\""
												}
											],
											"type": {
												"type": "reference",
												"target": 1817,
												"name": "Compilation",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 1772,
									"name": "shimCompilations",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/compilations/utils.ts",
											"line": 26,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L26"
										}
									],
									"signatures": [
										{
											"id": 1773,
											"name": "shimCompilations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/compilations/utils.ts",
													"line": 26,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L26"
												}
											],
											"parameters": [
												{
													"id": 1774,
													"name": "inputCompilations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../compile-common/dist/src/types.d.ts",
																"qualifiedName": "Compilation"
															},
															"name": "Compilation",
															"package": "@truffle/compile-common"
														}
													}
												},
												{
													"id": 1775,
													"name": "shimmedCompilationIdPrefix",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													},
													"defaultValue": "\"shimmedcompilation\""
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1817,
													"name": "Compilation",
													"package": "@truffle/codec"
												}
											}
										}
									]
								},
								{
									"id": 1785,
									"name": "shimContracts",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/compilations/utils.ts",
											"line": 87,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L87"
										}
									],
									"signatures": [
										{
											"id": 1786,
											"name": "shimContracts",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "shims a bunch of contracts (\"artifacts\", though not necessarily)\nto a compilation.  usually used via one of the above functions.\nNote: if you pass in options.sources, options.files will be ignored.\nNote: if you pass in options.sources, sources will not have\ncompiler set unless you also pass in options.compiler; in this case\nyou should set that up separately, as in shimCompilation()."
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/compilations/utils.ts",
													"line": 87,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L87"
												}
											],
											"parameters": [
												{
													"id": 1787,
													"name": "artifacts",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../contract-schema/spec/index.d.ts",
																		"qualifiedName": "ContractObject"
																	},
																	"name": "ContractObject",
																	"package": "@truffle/contract-schema"
																},
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../compile-common/dist/src/types.d.ts",
																		"qualifiedName": "CompiledContract"
																	},
																	"name": "CompiledContract",
																	"package": "@truffle/compile-common"
																}
															]
														}
													}
												},
												{
													"id": 1788,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "lib/compilations/utils.ts",
															"qualifiedName": "CompilationOptions"
														},
														"name": "CompilationOptions",
														"package": "@truffle/codec"
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"target": 1817,
												"name": "Compilation",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 1793,
									"name": "simpleShimSourceMap",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/compilations/utils.ts",
											"line": 485,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L485"
										}
									],
									"signatures": [
										{
											"id": 1794,
											"name": "simpleShimSourceMap",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "convert Vyper source maps to solidity ones\n(note we won't bother handling the case where the compressed\nversion doesn't exist; that will have to wait for a later version)"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/compilations/utils.ts",
													"line": 485,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L485"
												}
											],
											"parameters": [
												{
													"id": 1795,
													"name": "sourceMap",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"target": 1845,
																"name": "VyperSourceMap",
																"package": "@truffle/codec"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1796,
										1806,
										1814,
										1789,
										1810,
										1780,
										1776,
										1772,
										1785,
										1793
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/compilations/utils.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/utils.ts#L1"
								}
							]
						},
						{
							"id": 1817,
							"name": "Compilation",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An individual compilation."
									}
								]
							},
							"children": [
								{
									"id": 1822,
									"name": "compiler",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The compiler used in the compilation.  For internal compatibility\npurposes, this may technically be left out if the compiler is instead\nspecified on each source and contract, but please don't actually do that."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 45,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L45"
										}
									],
									"type": {
										"type": "reference",
										"target": 1764,
										"name": "CompilerVersion",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1821,
									"name": "contracts",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of contracts involved in the compilation."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 39,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L39"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1832,
											"name": "Contract",
											"package": "@truffle/codec"
										}
									}
								},
								{
									"id": 1818,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The compilation's ID."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 22,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L22"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1823,
									"name": "settings",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The settings used in the compilation.  Works similarly to the compiler field.\nMay be omitted."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 50,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L50"
										}
									],
									"type": {
										"type": "reference",
										"target": 1768,
										"name": "Settings",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1820,
									"name": "sources",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of sources involved in the compilation.  These must be ordered according\nto their compilation indices.  (If there is for some reason a gap in the\ncompilation indices, a corresponding gap must be left in the sources array.)"
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 35,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L35"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1824,
											"name": "Source",
											"package": "@truffle/codec"
										}
									}
								},
								{
									"id": 1819,
									"name": "unreliableSourceOrder",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This field is a compatibility hack only intended for internal use.  It indicates\nthat the order on the sources should be disregarded and disables functionality\nthat relies on such an order.  (E.g., the debugger will throw an exception if\nthis is set.)"
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 29,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L29"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1822,
										1821,
										1818,
										1823,
										1820,
										1819
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/compilations/types.ts",
									"line": 18,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L18"
								}
							]
						},
						{
							"id": 1832,
							"name": "Contract",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Represents a contract in a compilation."
									}
								]
							},
							"children": [
								{
									"id": 1838,
									"name": "abi",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract's ABI."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 125,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L125"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../contract-schema/spec/index.d.ts",
											"qualifiedName": "Abi"
										},
										"name": "Abi",
										"package": "@truffle/contract-schema"
									}
								},
								{
									"id": 1834,
									"name": "bytecode",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract's constructor bytecode; may be given either as a string\nin the old artifacts format, or as a bytecode object in the new\ncompilation format."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 107,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L107"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../compile-common/dist/src/types.d.ts",
													"qualifiedName": "Bytecode"
												},
												"name": "Bytecode",
												"package": "@truffle/compile-common"
											}
										]
									}
								},
								{
									"id": 1840,
									"name": "compiler",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This field is a compatibility hack only intended for internal use.\n(It allows the compiler to be set on a source if none is set on the\ncompilation as a whole; please don't do that.)"
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 136,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L136"
										}
									],
									"type": {
										"type": "reference",
										"target": 1764,
										"name": "CompilerVersion",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1833,
									"name": "contractName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract's name."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 101,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L101"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1835,
									"name": "deployedBytecode",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract's deployed bytecode; may be given either as a string\nin the old artifacts format, or as a bytecode object in the new\ncompilation format."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 113,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L113"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../compile-common/dist/src/types.d.ts",
													"qualifiedName": "Bytecode"
												},
												"name": "Bytecode",
												"package": "@truffle/compile-common"
											}
										]
									}
								},
								{
									"id": 1844,
									"name": "deployedGeneratedSources",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract's deployed generated sources object as output by Solidity 0.7.2 or later.\nNote that this will be a sparse array."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 156,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L156"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1824,
											"name": "Source",
											"package": "@truffle/codec"
										}
									}
								},
								{
									"id": 1837,
									"name": "deployedSourceMap",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract's deployed source map."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 121,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L121"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 1845,
												"name": "VyperSourceMap",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 1843,
									"name": "generatedSources",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract's generated sources object as output by Solidity 0.7.2 or later.\nNote that this will be a sparse array."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 151,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L151"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1824,
											"name": "Source",
											"package": "@truffle/codec"
										}
									}
								},
								{
									"id": 1839,
									"name": "immutableReferences",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract's immutable references object as output by Solidity 0.6.5\nor later."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 130,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L130"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../contract-schema/spec/index.d.ts",
											"qualifiedName": "ImmutableReferences"
										},
										"name": "ImmutableReferences",
										"package": "@truffle/contract-schema"
									}
								},
								{
									"id": 1842,
									"name": "primarySourceId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the contract's primary source."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 146,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L146"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1841,
									"name": "settings",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This field is a compatibility hack only intended for internal use.\n(It allows the settings to be set on a source if none is set on the\ncompilation as a whole; please don't do that.)"
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 142,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L142"
										}
									],
									"type": {
										"type": "reference",
										"target": 1768,
										"name": "Settings",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1836,
									"name": "sourceMap",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract's constructor source map."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 117,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L117"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 1845,
												"name": "VyperSourceMap",
												"package": "@truffle/codec"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1838,
										1834,
										1840,
										1833,
										1835,
										1844,
										1837,
										1843,
										1839,
										1842,
										1841,
										1836
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/compilations/types.ts",
									"line": 97,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L97"
								}
							]
						},
						{
							"id": 1860,
							"name": "ProjectInfoArtifacts",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Project info given as artifacts."
									}
								]
							},
							"children": [
								{
									"id": 1861,
									"name": "artifacts",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A list of contract artifacts for contracts in the project.\nContract constructor objects may be substituted for artifacts, so if\nyou're not sure which you're dealing with, it's OK."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 219,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L219"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../contract-schema/spec/index.d.ts",
												"qualifiedName": "ContractObject"
											},
											"name": "ContractObject",
											"package": "@truffle/contract-schema"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1861
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/compilations/types.ts",
									"line": 213,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L213"
								}
							]
						},
						{
							"id": 1858,
							"name": "ProjectInfoCommon",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Project info given as compile-common-style compilations."
									}
								]
							},
							"children": [
								{
									"id": 1859,
									"name": "commonCompilations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An list of @truffle/compile-common style compilations; this method of\nspecifying a project is mostly intended for internal Truffle use for now,\nbut you can see the documentation of the that type if you want to\nuse it."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 207,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L207"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../compile-common/dist/src/types.d.ts",
												"qualifiedName": "Compilation"
											},
											"name": "Compilation",
											"package": "@truffle/compile-common"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1859
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/compilations/types.ts",
									"line": 200,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L200"
								}
							]
						},
						{
							"id": 1856,
							"name": "ProjectInfoCompilations",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Project info given as codec-style compilations."
									}
								]
							},
							"children": [
								{
									"id": 1857,
									"name": "compilations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An list of codec-style compilations; this method of specifying a project\nis mostly intended for internal Truffle use for now, but you can see the\ndocumentation of the Compilation type if you want to use it."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 194,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L194"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1817,
											"name": "Compilation",
											"package": "@truffle/codec"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1857
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/compilations/types.ts",
									"line": 188,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L188"
								}
							]
						},
						{
							"id": 1824,
							"name": "Source",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Represents a source in a compilation."
									}
								]
							},
							"children": [
								{
									"id": 1829,
									"name": "ast",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The source's abstract syntax tree."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 79,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L79"
										}
									],
									"type": {
										"type": "reference",
										"target": 1688,
										"name": "AstNode",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1830,
									"name": "compiler",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This field is a compatibility hack only intended for internal use.\n(It allows the compiler to be set on a source if none is set on the\ncompilation as a whole; please don't do that.)"
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 85,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L85"
										}
									],
									"type": {
										"type": "reference",
										"target": 1764,
										"name": "CompilerVersion",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1825,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The source's ID.  For internal compatibility purposes, this may technically\nbe left out, but please include it."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 61,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L61"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1828,
									"name": "language",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The language for the source file.  For compatibility purposes, this may technicaly\nbe left out, but please include it."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 75,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L75"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1831,
									"name": "settings",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This field is a compatibility hack only intended for internal use.\n(It allows the settings to be set on a source if none is set on the\ncompilation as a whole; please don't do that.)"
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 91,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L91"
										}
									],
									"type": {
										"type": "reference",
										"target": 1768,
										"name": "Settings",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1827,
									"name": "source",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The source text."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 70,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L70"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1826,
									"name": "sourcePath",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The source's file path.  If internal is true, will not be a real file path but\nrather just an arbitrary name."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 66,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L66"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1829,
										1830,
										1825,
										1828,
										1831,
										1827,
										1826
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/compilations/types.ts",
									"line": 56,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L56"
								}
							]
						},
						{
							"id": 1845,
							"name": "VyperSourceMap",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1846,
									"name": "pc_jump_map",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 162,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L162"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1847,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/compilations/types.ts",
													"line": 162,
													"character": 15,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L162"
												}
											],
											"indexSignature": {
												"id": 1848,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"sources": [
													{
														"fileName": "codec/lib/compilations/types.ts",
														"line": 163,
														"character": 4,
														"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L163"
													}
												],
												"parameters": [
													{
														"id": 1849,
														"name": "pc",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "-"
														},
														{
															"type": "literal",
															"value": "i"
														},
														{
															"type": "literal",
															"value": "o"
														}
													]
												}
											}
										}
									}
								},
								{
									"id": 1850,
									"name": "pc_pos_map",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 165,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L165"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1851,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/compilations/types.ts",
													"line": 165,
													"character": 14,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L165"
												}
											],
											"indexSignature": {
												"id": 1852,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"sources": [
													{
														"fileName": "codec/lib/compilations/types.ts",
														"line": 166,
														"character": 4,
														"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L166"
													}
												],
												"parameters": [
													{
														"id": 1853,
														"name": "pc",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"type": {
													"type": "tuple",
													"elements": [
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "number"
														}
													]
												}
											}
										}
									}
								},
								{
									"id": 1854,
									"name": "pc_pos_map_compressed",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/compilations/types.ts",
											"line": 168,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L168"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1846,
										1850,
										1854
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/compilations/types.ts",
									"line": 159,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L159"
								}
							]
						},
						{
							"id": 1855,
							"name": "ProjectInfo",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This type represents information about a Truffle project that can be used to\nconstruct and initialize a encoder or decoder for that project.  This\ninformation may be passed in various ways; this is done Javascript style,\nwhere you pass an object and the field you use indicates which way you're\nusing.\n\nThe old option to use "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " is no longer supported."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/compilations/types.ts",
									"line": 180,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/types.ts#L180"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 1856,
										"name": "ProjectInfoCompilations",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 1858,
										"name": "ProjectInfoCommon",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 1860,
										"name": "ProjectInfoArtifacts",
										"package": "@truffle/codec"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1771
							]
						},
						{
							"title": "Interfaces",
							"children": [
								1817,
								1832,
								1860,
								1858,
								1856,
								1824,
								1845
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								1855
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/compilations/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compilations/index.ts#L1"
						}
					]
				},
				{
					"id": 1759,
					"name": "Compiler",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 1760,
							"name": "Utils",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1761,
									"name": "solidityFamily",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/compiler/utils.ts",
											"line": 7,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compiler/utils.ts#L7"
										}
									],
									"signatures": [
										{
											"id": 1762,
											"name": "solidityFamily",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/compiler/utils.ts",
													"line": 7,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compiler/utils.ts#L7"
												}
											],
											"parameters": [
												{
													"id": 1763,
													"name": "compiler",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1764,
														"name": "CompilerVersion",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 1767,
												"name": "SolidityFamily",
												"package": "@truffle/codec"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1761
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/compiler/utils.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compiler/utils.ts#L1"
								}
							]
						},
						{
							"id": 1764,
							"name": "CompilerVersion",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1765,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/compiler/types.ts",
											"line": 2,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compiler/types.ts#L2"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1766,
									"name": "version",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/compiler/types.ts",
											"line": 3,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compiler/types.ts#L3"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1765,
										1766
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/compiler/types.ts",
									"line": 1,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compiler/types.ts#L1"
								}
							]
						},
						{
							"id": 1768,
							"name": "Settings",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1769,
									"name": "viaIR",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/compiler/types.ts",
											"line": 24,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compiler/types.ts#L24"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1769
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/compiler/types.ts",
									"line": 20,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compiler/types.ts#L20"
								}
							]
						},
						{
							"id": 1767,
							"name": "SolidityFamily",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/compiler/types.ts",
									"line": 11,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compiler/types.ts#L11"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "unknown"
									},
									{
										"type": "literal",
										"value": "pre-0.5.0"
									},
									{
										"type": "literal",
										"value": "0.5.x"
									},
									{
										"type": "literal",
										"value": "0.8.x"
									},
									{
										"type": "literal",
										"value": "0.8.7+"
									},
									{
										"type": "literal",
										"value": "0.8.9+"
									},
									{
										"type": "literal",
										"value": "0.8.18+"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1760
							]
						},
						{
							"title": "Interfaces",
							"children": [
								1764,
								1768
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								1767
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/compiler/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/compiler/index.ts#L1"
						}
					]
				},
				{
					"id": 1862,
					"name": "Contexts",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 1863,
							"name": "Import",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1864,
									"name": "contextToType",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/contexts/import/index.ts",
											"line": 4,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/import/index.ts#L4"
										}
									],
									"signatures": [
										{
											"id": 1865,
											"name": "contextToType",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/contexts/import/index.ts",
													"line": 4,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/import/index.ts#L4"
												}
											],
											"parameters": [
												{
													"id": 1866,
													"name": "context",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1892,
														"name": "Context",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 236,
												"name": "Format.Types.ContractType",
												"package": "@truffle/codec",
												"qualifiedName": "ContractType"
											}
										}
									]
								},
								{
									"id": 1867,
									"name": "makeTypeId",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/contexts/import/index.ts",
											"line": 29,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/import/index.ts#L29"
										}
									],
									"signatures": [
										{
											"id": 1868,
											"name": "makeTypeId",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/contexts/import/index.ts",
													"line": 29,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/import/index.ts#L29"
												}
											],
											"parameters": [
												{
													"id": 1869,
													"name": "astId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 1870,
													"name": "compilationId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1864,
										1867
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/contexts/import/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/import/index.ts#L1"
								}
							]
						},
						{
							"id": 1871,
							"name": "Utils",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1872,
									"name": "findContext",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/contexts/utils.ts",
											"line": 17,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/utils.ts#L17"
										}
									],
									"signatures": [
										{
											"id": 1873,
											"name": "findContext",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/contexts/utils.ts",
													"line": 17,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/utils.ts#L17"
												}
											],
											"parameters": [
												{
													"id": 1874,
													"name": "contexts",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1889,
														"name": "Contexts",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1875,
													"name": "binary",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 1892,
														"name": "Context",
														"package": "@truffle/codec"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										}
									]
								},
								{
									"id": 1883,
									"name": "makeContext",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/contexts/utils.ts",
											"line": 340,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/utils.ts#L340"
										}
									],
									"signatures": [
										{
											"id": 1884,
											"name": "makeContext",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/contexts/utils.ts",
													"line": 340,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/utils.ts#L340"
												}
											],
											"parameters": [
												{
													"id": 1885,
													"name": "contract",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1832,
														"name": "Contract",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1886,
													"name": "node",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1688,
														"name": "AstNode",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1887,
													"name": "compilation",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1817,
														"name": "Compilation",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1888,
													"name": "isConstructor",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													},
													"defaultValue": "false"
												}
											],
											"type": {
												"type": "reference",
												"target": 1892,
												"name": "Context",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 1876,
									"name": "matchContext",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/contexts/utils.ts",
											"line": 44,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/utils.ts#L44"
										}
									],
									"signatures": [
										{
											"id": 1877,
											"name": "matchContext",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/contexts/utils.ts",
													"line": 44,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/utils.ts#L44"
												}
											],
											"parameters": [
												{
													"id": 1878,
													"name": "context",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1892,
														"name": "Context",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1879,
													"name": "givenBinary",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 1880,
									"name": "normalizeContexts",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/contexts/utils.ts",
											"line": 77,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/utils.ts#L77"
										}
									],
									"signatures": [
										{
											"id": 1881,
											"name": "normalizeContexts",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/contexts/utils.ts",
													"line": 77,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/utils.ts#L77"
												}
											],
											"parameters": [
												{
													"id": 1882,
													"name": "contexts",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1889,
														"name": "Contexts",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 1889,
												"name": "Contexts",
												"package": "@truffle/codec"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1872,
										1883,
										1876,
										1880
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/contexts/utils.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/utils.ts#L1"
								}
							]
						},
						{
							"id": 1892,
							"name": "Context",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1901,
									"name": "abi",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 24,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L24"
										}
									],
									"type": {
										"type": "reference",
										"target": 1341,
										"name": "FunctionAbiBySelectors",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1894,
									"name": "binary",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 15,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L15"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1908,
									"name": "compilationId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 32,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L32"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1907,
									"name": "compiler",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 31,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L31"
										}
									],
									"type": {
										"type": "reference",
										"target": 1764,
										"name": "CompilerVersion",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1893,
									"name": "context",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 14,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L14"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1898,
									"name": "contractId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 21,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L21"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1900,
									"name": "contractKind",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 23,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L23"
										}
									],
									"type": {
										"type": "reference",
										"target": 2338,
										"name": "ContractKind",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1897,
									"name": "contractName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 20,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L20"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1903,
									"name": "fallbackAbi",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 26,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L26"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 1904,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1905,
													"name": "fallback",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/contexts/types.ts",
															"line": 28,
															"character": 4,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L28"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "FallbackEntry"
														},
														"name": "FallbackEntry",
														"package": "@truffle/abi-utils"
													}
												},
												{
													"id": 1906,
													"name": "receive",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/contexts/types.ts",
															"line": 29,
															"character": 4,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L29"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "ReceiveEntry"
														},
														"name": "ReceiveEntry",
														"package": "@truffle/abi-utils"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1905,
														1906
													]
												}
											],
											"sources": [
												{
													"fileName": "codec/lib/contexts/types.ts",
													"line": 26,
													"character": 16,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L26"
												}
											]
										}
									}
								},
								{
									"id": 1896,
									"name": "immutableReferences",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L19"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../contract-schema/spec/index.d.ts",
											"qualifiedName": "ImmutableReferences"
										},
										"name": "ImmutableReferences",
										"package": "@truffle/contract-schema"
									}
								},
								{
									"id": 1895,
									"name": "isConstructor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 18,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L18"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1899,
									"name": "linearizedBaseContracts",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 22,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L22"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 1902,
									"name": "payable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 25,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L25"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1901,
										1894,
										1908,
										1907,
										1893,
										1898,
										1900,
										1897,
										1903,
										1896,
										1895,
										1899,
										1902
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/contexts/types.ts",
									"line": 13,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L13"
								}
							]
						},
						{
							"id": 1889,
							"name": "Contexts",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/contexts/types.ts",
									"line": 9,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L9"
								}
							],
							"indexSignature": {
								"id": 1890,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"sources": [
									{
										"fileName": "codec/lib/contexts/types.ts",
										"line": 10,
										"character": 2,
										"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L10"
									}
								],
								"parameters": [
									{
										"id": 1891,
										"name": "context",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"target": 1892,
									"name": "Context",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 1909,
							"name": "ContractAndContexts",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1910,
									"name": "compilationId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 36,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L36"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1914,
									"name": "constructorContext",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 40,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L40"
										}
									],
									"type": {
										"type": "reference",
										"target": 1892,
										"name": "Context",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1911,
									"name": "contract",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 37,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L37"
										}
									],
									"type": {
										"type": "reference",
										"target": 1832,
										"name": "Contract",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1913,
									"name": "deployedContext",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 39,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L39"
										}
									],
									"type": {
										"type": "reference",
										"target": 1892,
										"name": "Context",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1912,
									"name": "node",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 38,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L38"
										}
									],
									"type": {
										"type": "reference",
										"target": 1688,
										"name": "AstNode",
										"package": "@truffle/codec"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1910,
										1914,
										1911,
										1913,
										1912
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/contexts/types.ts",
									"line": 35,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L35"
								}
							]
						},
						{
							"id": 1915,
							"name": "DebuggerContext",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1924,
									"name": "abi",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 56,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L56"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../abi-utils/lib/types.ts",
											"qualifiedName": "Abi"
										},
										"name": "Abi",
										"package": "@truffle/abi-utils"
									}
								},
								{
									"id": 1917,
									"name": "binary",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 47,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L47"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1929,
									"name": "compilationId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 61,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L61"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1928,
									"name": "compiler",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 60,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L60"
										}
									],
									"type": {
										"type": "reference",
										"target": 1764,
										"name": "CompilerVersion",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1916,
									"name": "context",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 46,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L46"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1921,
									"name": "contractId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 53,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L53"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1923,
									"name": "contractKind",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 55,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L55"
										}
									],
									"type": {
										"type": "reference",
										"target": 2338,
										"name": "ContractKind",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1920,
									"name": "contractName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 52,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L52"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1919,
									"name": "immutableReferences",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 51,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L51"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../contract-schema/spec/index.d.ts",
											"qualifiedName": "ImmutableReferences"
										},
										"name": "ImmutableReferences",
										"package": "@truffle/contract-schema"
									}
								},
								{
									"id": 1918,
									"name": "isConstructor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 50,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L50"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1922,
									"name": "linearizedBaseContracts",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 54,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L54"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								},
								{
									"id": 1930,
									"name": "payable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 62,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L62"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1927,
									"name": "primaryLanguage",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 59,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L59"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 1926,
									"name": "primarySource",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 58,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L58"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1925,
									"name": "sourceMap",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/contexts/types.ts",
											"line": 57,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L57"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1924,
										1917,
										1929,
										1928,
										1916,
										1921,
										1923,
										1920,
										1919,
										1918,
										1922,
										1930,
										1927,
										1926,
										1925
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/contexts/types.ts",
									"line": 45,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/types.ts#L45"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1863,
								1871
							]
						},
						{
							"title": "Interfaces",
							"children": [
								1892,
								1889,
								1909,
								1915
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/contexts/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/contexts/index.ts#L1"
						}
					]
				},
				{
					"id": 1931,
					"name": "Conversion",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 1970,
							"name": "cleanBool",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/conversion.ts",
									"line": 233,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L233"
								}
							],
							"signatures": [
								{
									"id": 1971,
									"name": "cleanBool",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/conversion.ts",
											"line": 233,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L233"
										}
									],
									"parameters": [
										{
											"id": 1972,
											"name": "result",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 298,
												"name": "ElementaryResult",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 298,
										"name": "Values.ElementaryResult",
										"package": "@truffle/codec",
										"qualifiedName": "ElementaryResult"
									}
								}
							]
						},
						{
							"id": 1967,
							"name": "countDecimalPlaces",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/conversion.ts",
									"line": 225,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L225"
								}
							],
							"signatures": [
								{
									"id": 1968,
									"name": "countDecimalPlaces",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/conversion.ts",
											"line": 225,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L225"
										}
									],
									"parameters": [
										{
											"id": 1969,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/big.js/index.d.ts",
													"qualifiedName": "Big"
												},
												"name": "Big",
												"package": "@types/big.js"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 1935,
							"name": "isBig",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/conversion.ts",
									"line": 40,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L40"
								}
							],
							"signatures": [
								{
									"id": 1936,
									"name": "isBig",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/conversion.ts",
											"line": 40,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L40"
										}
									],
									"parameters": [
										{
											"id": 1937,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "predicate",
										"name": "input",
										"asserts": false,
										"targetType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/@types/big.js/index.d.ts",
												"qualifiedName": "Big"
											},
											"name": "Big",
											"package": "@types/big.js"
										}
									}
								}
							]
						},
						{
							"id": 1963,
							"name": "shiftBigDown",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/conversion.ts",
									"line": 219,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L219"
								}
							],
							"signatures": [
								{
									"id": 1964,
									"name": "shiftBigDown",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/conversion.ts",
											"line": 219,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L219"
										}
									],
									"parameters": [
										{
											"id": 1965,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/big.js/index.d.ts",
													"qualifiedName": "Big"
												},
												"name": "Big",
												"package": "@types/big.js"
											}
										},
										{
											"id": 1966,
											"name": "decimalPlaces",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/big.js/index.d.ts",
											"qualifiedName": "Big"
										},
										"name": "Big",
										"package": "@types/big.js"
									}
								}
							]
						},
						{
							"id": 1959,
							"name": "shiftBigUp",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/conversion.ts",
									"line": 212,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L212"
								}
							],
							"signatures": [
								{
									"id": 1960,
									"name": "shiftBigUp",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/conversion.ts",
											"line": 212,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L212"
										}
									],
									"parameters": [
										{
											"id": 1961,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/big.js/index.d.ts",
													"qualifiedName": "Big"
												},
												"name": "Big",
												"package": "@types/big.js"
											}
										},
										{
											"id": 1962,
											"name": "decimalPlaces",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/big.js/index.d.ts",
											"qualifiedName": "Big"
										},
										"name": "Big",
										"package": "@types/big.js"
									}
								}
							]
						},
						{
							"id": 1956,
							"name": "stringToBytes",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/conversion.ts",
									"line": 200,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L200"
								}
							],
							"signatures": [
								{
									"id": 1957,
									"name": "stringToBytes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/conversion.ts",
											"line": 200,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L200"
										}
									],
									"parameters": [
										{
											"id": 1958,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1932,
							"name": "toBN",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/conversion.ts",
									"line": 14,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L14"
								}
							],
							"signatures": [
								{
									"id": 1933,
									"name": "toBN",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/conversion.ts",
											"line": 14,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L14"
										}
									],
									"parameters": [
										{
											"id": 1934,
											"name": "bytes",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "undefined | string | number | BN | Uint8Array | Big"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "bigint"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
															"qualifiedName": "BN"
														},
														"name": "BN",
														"package": "@types/bn.js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/@types/big.js/index.d.ts",
															"qualifiedName": "Big"
														},
														"name": "Big",
														"package": "@types/big.js"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
											"qualifiedName": "BN"
										},
										"name": "BN",
										"package": "@types/bn.js"
									}
								}
							]
						},
						{
							"id": 1944,
							"name": "toBig",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/conversion.ts",
									"line": 82,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L82"
								}
							],
							"signatures": [
								{
									"id": 1945,
									"name": "toBig",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/conversion.ts",
											"line": 82,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L82"
										}
									],
									"parameters": [
										{
											"id": 1946,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "bigint"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
															"qualifiedName": "BN"
														},
														"name": "BN",
														"package": "@types/bn.js"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/big.js/index.d.ts",
											"qualifiedName": "Big"
										},
										"name": "Big",
										"package": "@types/big.js"
									}
								}
							]
						},
						{
							"id": 1941,
							"name": "toBigInt",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/conversion.ts",
									"line": 74,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L74"
								}
							],
							"signatures": [
								{
									"id": 1942,
									"name": "toBigInt",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/conversion.ts",
											"line": 74,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L74"
										}
									],
									"parameters": [
										{
											"id": 1943,
											"name": "value",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
													"qualifiedName": "BN"
												},
												"name": "BN",
												"package": "@types/bn.js"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es2020.bigint.d.ts",
											"qualifiedName": "BigInt"
										},
										"name": "BigInt",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1952,
							"name": "toBytes",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/conversion.ts",
									"line": 139,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L139"
								}
							],
							"signatures": [
								{
									"id": 1953,
									"name": "toBytes",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/conversion.ts",
											"line": 139,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L139"
										}
									],
									"parameters": [
										{
											"id": 1954,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "bigint"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
															"qualifiedName": "BN"
														},
														"name": "BN",
														"package": "@types/bn.js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/@types/big.js/index.d.ts",
															"qualifiedName": "Big"
														},
														"name": "Big",
														"package": "@types/big.js"
													}
												]
											}
										},
										{
											"id": 1955,
											"name": "length",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 1947,
							"name": "toHexString",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/conversion.ts",
									"line": 94,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L94"
								}
							],
							"signatures": [
								{
									"id": 1948,
									"name": "toHexString",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/conversion.ts",
											"line": 94,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L94"
										}
									],
									"parameters": [
										{
											"id": 1949,
											"name": "bytes",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Uint8Array | BN | bigint"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "bigint"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
															"qualifiedName": "BN"
														},
														"name": "BN",
														"package": "@types/bn.js"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/@types/big.js/index.d.ts",
															"qualifiedName": "Big"
														},
														"name": "Big",
														"package": "@types/big.js"
													}
												]
											}
										},
										{
											"id": 1950,
											"name": "padLength",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "number - minimum desired byte length (left-pad with zeroes)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"defaultValue": "0"
										},
										{
											"id": 1951,
											"name": "padRight",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "boolean - causes padding to occur on right instead of left"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											},
											"defaultValue": "false"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						},
						{
							"id": 1938,
							"name": "toSignedBN",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/conversion.ts",
									"line": 63,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L63"
								}
							],
							"signatures": [
								{
									"id": 1939,
									"name": "toSignedBN",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": []
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/conversion.ts",
											"line": 63,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L63"
										}
									],
									"parameters": [
										{
											"id": 1940,
											"name": "bytes",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Uint8Array"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
											"qualifiedName": "BN"
										},
										"name": "BN",
										"package": "@types/bn.js"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Functions",
							"children": [
								1970,
								1967,
								1935,
								1963,
								1959,
								1956,
								1932,
								1944,
								1941,
								1952,
								1947,
								1938
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/conversion.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/conversion.ts#L1"
						}
					]
				},
				{
					"id": 2025,
					"name": "Evm",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 2043,
							"name": "Import",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 2044,
									"name": "functionTableEntryToType",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/evm/import/index.ts",
											"line": 6,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/import/index.ts#L6"
										}
									],
									"signatures": [
										{
											"id": 2045,
											"name": "functionTableEntryToType",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/evm/import/index.ts",
													"line": 6,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/import/index.ts#L6"
												}
											],
											"parameters": [
												{
													"id": 2046,
													"name": "functionEntry",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2087,
														"name": "InternalFunction",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 237,
												"name": "Format.Types.ContractTypeNative",
												"package": "@truffle/codec",
												"qualifiedName": "ContractTypeNative"
											}
										}
									]
								},
								{
									"id": 2047,
									"name": "makeInternalFunctionId",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/evm/import/index.ts",
											"line": 23,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/import/index.ts#L23"
										}
									],
									"signatures": [
										{
											"id": 2048,
											"name": "makeInternalFunctionId",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/evm/import/index.ts",
													"line": 23,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/import/index.ts#L23"
												}
											],
											"parameters": [
												{
													"id": 2049,
													"name": "functionEntry",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2087,
														"name": "InternalFunction",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										2044,
										2047
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/evm/import/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/import/index.ts#L1"
								}
							]
						},
						{
							"id": 2026,
							"name": "Utils",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 2038,
									"name": "ADDRESS_SIZE",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/utils.ts",
											"line": 10,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/utils.ts#L10"
										}
									],
									"type": {
										"type": "literal",
										"value": 20
									},
									"defaultValue": "20"
								},
								{
									"id": 2041,
									"name": "MAX_WORD",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/utils.ts",
											"line": 13,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/utils.ts#L13"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
											"qualifiedName": "BN"
										},
										"name": "BN",
										"package": "@types/bn.js"
									},
									"defaultValue": "..."
								},
								{
									"id": 2040,
									"name": "PC_SIZE",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/utils.ts",
											"line": 12,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/utils.ts#L12"
										}
									],
									"type": {
										"type": "literal",
										"value": 4
									},
									"defaultValue": "4"
								},
								{
									"id": 2039,
									"name": "SELECTOR_SIZE",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/utils.ts",
											"line": 11,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/utils.ts#L11"
										}
									],
									"type": {
										"type": "literal",
										"value": 4
									},
									"defaultValue": "ShortSelectorSize"
								},
								{
									"id": 2037,
									"name": "WORD_SIZE",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/utils.ts",
											"line": 9,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/utils.ts#L9"
										}
									],
									"type": {
										"type": "literal",
										"value": 32
									},
									"defaultValue": "0x20"
								},
								{
									"id": 2042,
									"name": "ZERO_ADDRESS",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/utils.ts",
											"line": 14,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/utils.ts#L14"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "..."
								},
								{
									"id": 2030,
									"name": "equalData",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/evm/utils.ts",
											"line": 38,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/utils.ts#L38"
										}
									],
									"signatures": [
										{
											"id": 2031,
											"name": "equalData",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/evm/utils.ts",
													"line": 38,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/utils.ts#L38"
												}
											],
											"parameters": [
												{
													"id": 2032,
													"name": "bytes1",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													}
												},
												{
													"id": 2033,
													"name": "bytes2",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 2027,
									"name": "keccak256",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/evm/utils.ts",
											"line": 22,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/utils.ts#L22"
										}
									],
									"signatures": [
										{
											"id": 2028,
											"name": "keccak256",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/evm/utils.ts",
													"line": 22,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/utils.ts#L22"
												}
											],
											"parameters": [
												{
													"id": 2029,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
													"qualifiedName": "BN"
												},
												"name": "BN",
												"package": "@types/bn.js"
											}
										}
									]
								},
								{
									"id": 2034,
									"name": "toAddress",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/evm/utils.ts",
											"line": 56,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/utils.ts#L56"
										}
									],
									"signatures": [
										{
											"id": 2035,
											"name": "toAddress",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/evm/utils.ts",
													"line": 56,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/utils.ts#L56"
												}
											],
											"parameters": [
												{
													"id": 2036,
													"name": "bytes",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Variables",
									"children": [
										2038,
										2041,
										2040,
										2039,
										2037,
										2042
									]
								},
								{
									"title": "Functions",
									"children": [
										2030,
										2027,
										2034
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/evm/utils.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/utils.ts#L1"
								}
							]
						},
						{
							"id": 2076,
							"name": "AllocationInfo",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2079,
									"name": "abi",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 52,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L52"
										}
									],
									"type": {
										"type": "reference",
										"target": 1193,
										"name": "AbiAllocations",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2080,
									"name": "calldata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 53,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L53"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "lib/abi-data/allocate/types.ts",
											"qualifiedName": "CalldataAllocations"
										},
										"name": "CalldataAllocations",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2082,
									"name": "event",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 55,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L55"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "lib/abi-data/allocate/types.ts",
											"qualifiedName": "EventAllocations"
										},
										"name": "EventAllocations",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2078,
									"name": "memory",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 51,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L51"
										}
									],
									"type": {
										"type": "reference",
										"target": 1377,
										"name": "MemoryAllocations",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2081,
									"name": "returndata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 54,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L54"
										}
									],
									"type": {
										"type": "reference",
										"target": 1259,
										"name": "ReturndataAllocations",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2083,
									"name": "state",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 56,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L56"
										}
									],
									"type": {
										"type": "reference",
										"target": 1485,
										"name": "StateAllocations",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2077,
									"name": "storage",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 50,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L50"
										}
									],
									"type": {
										"type": "reference",
										"target": 1476,
										"name": "StorageAllocations",
										"package": "@truffle/codec"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2079,
										2080,
										2082,
										2078,
										2081,
										2083,
										2077
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/evm/types.ts",
									"line": 49,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L49"
								}
							]
						},
						{
							"id": 2066,
							"name": "EvmInfo",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2070,
									"name": "allocations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 40,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L40"
										}
									],
									"type": {
										"type": "reference",
										"target": 2076,
										"name": "AllocationInfo",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2071,
									"name": "contexts",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 41,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L41"
										}
									],
									"type": {
										"type": "reference",
										"target": 1889,
										"name": "Contexts",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2072,
									"name": "currentContext",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 42,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L42"
										}
									],
									"type": {
										"type": "reference",
										"target": 1892,
										"name": "Context",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2073,
									"name": "internalFunctionsTable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 43,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L43"
										}
									],
									"type": {
										"type": "reference",
										"target": 2084,
										"name": "InternalFunctions",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2074,
									"name": "internalFunctionsTableKind",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 44,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L44"
										}
									],
									"type": {
										"type": "reference",
										"target": 2075,
										"name": "InternalFunctionsTableKind",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2068,
									"name": "mappingKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 38,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L38"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1544,
											"name": "Slot",
											"package": "@truffle/codec"
										}
									}
								},
								{
									"id": 2067,
									"name": "state",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 37,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L37"
										}
									],
									"type": {
										"type": "reference",
										"target": 2050,
										"name": "EvmState",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2069,
									"name": "userDefinedTypes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 39,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L39"
										}
									],
									"type": {
										"type": "reference",
										"target": 284,
										"name": "TypesById",
										"package": "@truffle/codec"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2070,
										2071,
										2072,
										2073,
										2074,
										2068,
										2067,
										2069
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/evm/types.ts",
									"line": 36,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L36"
								}
							]
						},
						{
							"id": 2050,
							"name": "EvmState",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2054,
									"name": "calldata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 22,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L22"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								},
								{
									"id": 2055,
									"name": "code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 23,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L23"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								},
								{
									"id": 2060,
									"name": "eventdata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 27,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L27"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								},
								{
									"id": 2061,
									"name": "eventtopics",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 28,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L28"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Uint8Array"
											},
											"name": "Uint8Array",
											"package": "typescript"
										}
									}
								},
								{
									"id": 2053,
									"name": "memory",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 21,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L21"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								},
								{
									"id": 2062,
									"name": "returndata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 29,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L29"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								},
								{
									"id": 2056,
									"name": "specials",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 24,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L24"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2057,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/evm/types.ts",
													"line": 24,
													"character": 13,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L24"
												}
											],
											"indexSignature": {
												"id": 2058,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"sources": [
													{
														"fileName": "codec/lib/evm/types.ts",
														"line": 25,
														"character": 4,
														"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L25"
													}
												],
												"parameters": [
													{
														"id": 2059,
														"name": "builtin",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Uint8Array"
													},
													"name": "Uint8Array",
													"package": "typescript"
												}
											}
										}
									}
								},
								{
									"id": 2052,
									"name": "stack",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 20,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L20"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Uint8Array"
											},
											"name": "Uint8Array",
											"package": "typescript"
										}
									}
								},
								{
									"id": 2051,
									"name": "storage",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L19"
										}
									],
									"type": {
										"type": "reference",
										"target": 2063,
										"name": "WordMapping",
										"package": "@truffle/codec"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2054,
										2055,
										2060,
										2061,
										2053,
										2062,
										2056,
										2052,
										2051
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/evm/types.ts",
									"line": 18,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L18"
								}
							]
						},
						{
							"id": 2087,
							"name": "InternalFunction",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2089,
									"name": "compilationId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 65,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L65"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2098,
									"name": "contractId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 74,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L74"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2099,
									"name": "contractKind",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 75,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L75"
										}
									],
									"type": {
										"type": "reference",
										"target": 2338,
										"name": "ContractKind",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2097,
									"name": "contractName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 73,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L73"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2096,
									"name": "contractNode",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 72,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L72"
										}
									],
									"type": {
										"type": "reference",
										"target": 1688,
										"name": "AstNode",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2100,
									"name": "contractPayable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 76,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L76"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2095,
									"name": "contractPointer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 71,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L71"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2093,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 69,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L69"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2101,
									"name": "isDesignatedInvalid",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 77,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L77"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2094,
									"name": "mutability",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 70,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L70"
										}
									],
									"type": {
										"type": "reference",
										"target": 2337,
										"name": "Mutability",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2092,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 68,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L68"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2091,
									"name": "node",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 67,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L67"
										}
									],
									"type": {
										"type": "reference",
										"target": 1688,
										"name": "AstNode",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2090,
									"name": "pointer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 66,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L66"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2088,
									"name": "sourceIndex",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/evm/types.ts",
											"line": 64,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L64"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2089,
										2098,
										2099,
										2097,
										2096,
										2100,
										2095,
										2093,
										2101,
										2094,
										2092,
										2091,
										2090,
										2088
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/evm/types.ts",
									"line": 63,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L63"
								}
							]
						},
						{
							"id": 2084,
							"name": "InternalFunctions",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/evm/types.ts",
									"line": 59,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L59"
								}
							],
							"indexSignature": {
								"id": 2085,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"sources": [
									{
										"fileName": "codec/lib/evm/types.ts",
										"line": 60,
										"character": 2,
										"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L60"
									}
								],
								"parameters": [
									{
										"id": 2086,
										"name": "pcOrIndex",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "reference",
									"target": 2087,
									"name": "InternalFunction",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 2063,
							"name": "WordMapping",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/evm/types.ts",
									"line": 32,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L32"
								}
							],
							"indexSignature": {
								"id": 2064,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"sources": [
									{
										"fileName": "codec/lib/evm/types.ts",
										"line": 33,
										"character": 2,
										"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L33"
									}
								],
								"parameters": [
									{
										"id": 2065,
										"name": "slotAddress",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Uint8Array"
									},
									"name": "Uint8Array",
									"package": "typescript"
								}
							}
						},
						{
							"id": 2075,
							"name": "InternalFunctionsTableKind",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/evm/types.ts",
									"line": 47,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/types.ts#L47"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "pcpair"
									},
									{
										"type": "literal",
										"value": "index"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								2043,
								2026
							]
						},
						{
							"title": "Interfaces",
							"children": [
								2076,
								2066,
								2050,
								2087,
								2084,
								2063
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								2075
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/evm/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/evm/index.ts#L1"
						}
					]
				},
				{
					"id": 2102,
					"name": "Export",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 2126,
							"name": "ResultInspector",
							"variant": "reference",
							"kind": 8388608,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/export.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L26"
								}
							],
							"target": 831
						},
						{
							"id": 2127,
							"name": "ResultInspectorOptions",
							"variant": "reference",
							"kind": 8388608,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/export.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L27"
								}
							],
							"target": 828
						},
						{
							"id": 2130,
							"name": "nativizeAccessList",
							"variant": "reference",
							"kind": 8388608,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/export.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L30"
								}
							],
							"target": 814
						},
						{
							"id": 2131,
							"name": "stringValueInfoToStringLossy",
							"variant": "reference",
							"kind": 8388608,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/export.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L31"
								}
							],
							"target": 817
						},
						{
							"id": 2128,
							"name": "unsafeNativize",
							"variant": "reference",
							"kind": 8388608,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/export.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L28"
								}
							],
							"target": 811
						},
						{
							"id": 2129,
							"name": "unsafeNativizeVariables",
							"variant": "reference",
							"kind": 8388608,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/export.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L29"
								}
							],
							"target": 802
						},
						{
							"id": 2135,
							"name": "CalldataDecodingInspector",
							"variant": "declaration",
							"kind": 128,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Similar to [[ResultInspector]], but for a [[CalldataDecoding]].\nSee [[ResultInspector]] for more information."
									}
								]
							},
							"children": [
								{
									"id": 2136,
									"name": "constructor",
									"variant": "declaration",
									"kind": 512,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 296,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L296"
										}
									],
									"signatures": [
										{
											"id": 2137,
											"name": "new CalldataDecodingInspector",
											"variant": "signature",
											"kind": 16384,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/export.ts",
													"line": 296,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L296"
												}
											],
											"parameters": [
												{
													"id": 2138,
													"name": "decoding",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 896,
														"name": "CalldataDecoding",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 2139,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 828,
														"name": "ResultInspectorOptions",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 2135,
												"name": "CalldataDecodingInspector",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 2140,
									"name": "decoding",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 293,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L293"
										}
									],
									"type": {
										"type": "reference",
										"target": 896,
										"name": "CalldataDecoding",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2141,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 294,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L294"
										}
									],
									"type": {
										"type": "reference",
										"target": 828,
										"name": "ResultInspectorOptions",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2146,
									"name": "[custom]",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 307,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L307"
										}
									],
									"signatures": [
										{
											"id": 2147,
											"name": "[custom]",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/export.ts",
													"line": 307,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L307"
												}
											],
											"parameters": [
												{
													"id": 2148,
													"name": "depth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2149,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 820,
														"name": "InspectOptions",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2142,
									"name": "inspect",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 304,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L304"
										}
									],
									"signatures": [
										{
											"id": 2143,
											"name": "inspect",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [],
												"blockTags": [
													{
														"tag": "@dev",
														"content": [
															{
																"kind": "text",
																"text": "non-standard alternative interface name used by browser-util-inspect\n     package"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/export.ts",
													"line": 304,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L304"
												}
											],
											"parameters": [
												{
													"id": 2144,
													"name": "depth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2145,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 820,
														"name": "InspectOptions",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"children": [
										2136
									]
								},
								{
									"title": "Properties",
									"children": [
										2140,
										2141
									]
								},
								{
									"title": "Methods",
									"children": [
										2146,
										2142
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/export.ts",
									"line": 292,
									"character": 13,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L292"
								}
							]
						},
						{
							"id": 2150,
							"name": "LogDecodingInspector",
							"variant": "declaration",
							"kind": 128,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Similar to [[ResultInspector]], but for a [[LogDecoding]].\nSee [[ResultInspector]] for more information."
									}
								]
							},
							"children": [
								{
									"id": 2151,
									"name": "constructor",
									"variant": "declaration",
									"kind": 512,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 463,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L463"
										}
									],
									"signatures": [
										{
											"id": 2152,
											"name": "new LogDecodingInspector",
											"variant": "signature",
											"kind": 16384,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/export.ts",
													"line": 463,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L463"
												}
											],
											"parameters": [
												{
													"id": 2153,
													"name": "decoding",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 897,
														"name": "LogDecoding",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 2154,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 828,
														"name": "ResultInspectorOptions",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 2150,
												"name": "LogDecodingInspector",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 2155,
									"name": "decoding",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 461,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L461"
										}
									],
									"type": {
										"type": "reference",
										"target": 897,
										"name": "LogDecoding",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2156,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 462,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L462"
										}
									],
									"type": {
										"type": "reference",
										"target": 828,
										"name": "ResultInspectorOptions",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2161,
									"name": "[custom]",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 474,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L474"
										}
									],
									"signatures": [
										{
											"id": 2162,
											"name": "[custom]",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/export.ts",
													"line": 474,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L474"
												}
											],
											"parameters": [
												{
													"id": 2163,
													"name": "depth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2164,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 820,
														"name": "InspectOptions",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2157,
									"name": "inspect",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 471,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L471"
										}
									],
									"signatures": [
										{
											"id": 2158,
											"name": "inspect",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [],
												"blockTags": [
													{
														"tag": "@dev",
														"content": [
															{
																"kind": "text",
																"text": "non-standard alternative interface name used by browser-util-inspect\n     package"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/export.ts",
													"line": 471,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L471"
												}
											],
											"parameters": [
												{
													"id": 2159,
													"name": "depth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2160,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 820,
														"name": "InspectOptions",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"children": [
										2151
									]
								},
								{
									"title": "Properties",
									"children": [
										2155,
										2156
									]
								},
								{
									"title": "Methods",
									"children": [
										2161,
										2157
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/export.ts",
									"line": 460,
									"character": 13,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L460"
								}
							]
						},
						{
							"id": 2165,
							"name": "ReturndataDecodingInspector",
							"variant": "declaration",
							"kind": 128,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Similar to [[ResultInspector]], but for a [[ReturndataDecoding]].\nSee [[ResultInspector]] for more information."
									}
								]
							},
							"children": [
								{
									"id": 2166,
									"name": "constructor",
									"variant": "declaration",
									"kind": 512,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 512,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L512"
										}
									],
									"signatures": [
										{
											"id": 2167,
											"name": "new ReturndataDecodingInspector",
											"variant": "signature",
											"kind": 16384,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/export.ts",
													"line": 512,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L512"
												}
											],
											"parameters": [
												{
													"id": 2168,
													"name": "decoding",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 898,
														"name": "ReturndataDecoding",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 2169,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 828,
														"name": "ResultInspectorOptions",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 2165,
												"name": "ReturndataDecodingInspector",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 2170,
									"name": "decoding",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 510,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L510"
										}
									],
									"type": {
										"type": "reference",
										"target": 898,
										"name": "ReturndataDecoding",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2171,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 511,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L511"
										}
									],
									"type": {
										"type": "reference",
										"target": 828,
										"name": "ResultInspectorOptions",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2176,
									"name": "[custom]",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 523,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L523"
										}
									],
									"signatures": [
										{
											"id": 2177,
											"name": "[custom]",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/export.ts",
													"line": 523,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L523"
												}
											],
											"parameters": [
												{
													"id": 2178,
													"name": "depth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2179,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 820,
														"name": "InspectOptions",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2172,
									"name": "inspect",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 520,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L520"
										}
									],
									"signatures": [
										{
											"id": 2173,
											"name": "inspect",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [],
												"blockTags": [
													{
														"tag": "@dev",
														"content": [
															{
																"kind": "text",
																"text": "non-standard alternative interface name used by browser-util-inspect\n     package"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/export.ts",
													"line": 520,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L520"
												}
											],
											"parameters": [
												{
													"id": 2174,
													"name": "depth",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2175,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 820,
														"name": "InspectOptions",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"children": [
										2166
									]
								},
								{
									"title": "Properties",
									"children": [
										2170,
										2171
									]
								},
								{
									"title": "Methods",
									"children": [
										2176,
										2172
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/export.ts",
									"line": 509,
									"character": 13,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L509"
								}
							]
						},
						{
							"id": 2132,
							"name": "NativizeOptions",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Options for the nativize function."
									}
								]
							},
							"children": [
								{
									"id": 2134,
									"name": "format",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The format for the nativized result.  Currently the only supported\nformat is \"ethers\", which nativizes things in a way compatible with how\nEthers decodes values.  This format is quite limited, but more may be\nadded in the future.  There is also the separate function\n[[Format.Utils.Inspect.unsafeNativize|unsafeNativize]], although that is,\nas noted, unsafe."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 62,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L62"
										}
									],
									"type": {
										"type": "literal",
										"value": "ethers"
									}
								},
								{
									"id": 2133,
									"name": "numberFormatter",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This is a function that is used to describe how to format\ninteger values.  It should take as input the number as a BigInt.\nBy default, it's the identity function (i.e., it formats the numbers\nas BigInts), but by setting it you could instead format numbers as\na BN, BigNumber, string, etc."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 53,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L53"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "lib/export.ts",
											"qualifiedName": "NumberFormatter"
										},
										"name": "NumberFormatter",
										"package": "@truffle/codec"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2134,
										2133
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/export.ts",
									"line": 45,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L45"
								}
							]
						},
						{
							"id": 2115,
							"name": "containsDeliberateReadError",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/export.ts",
									"line": 422,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L422"
								}
							],
							"signatures": [
								{
									"id": 2116,
									"name": "containsDeliberateReadError",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 422,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L422"
										}
									],
									"parameters": [
										{
											"id": 2117,
											"name": "result",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 294,
												"name": "Result",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						},
						{
							"id": 2103,
							"name": "nativize",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/export.ts",
									"line": 94,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L94"
								}
							],
							"signatures": [
								{
									"id": 2104,
									"name": "nativize",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This function is similar to\n[[Format.Utils.Inspect.unsafeNativize|unsafeNativize]], but is intended to\nbe safe, and also allows for different output formats.  The only currently\nsupported format is \"ethers\", which is intended to match the way that\nTruffle Contract currently returns values (based on the Ethers decoder).  As\nsuch, it only handles ABI types, and in addition does not handle the types\nfixed, ufixed, or function.  Note that in these cases it returns "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": "\nrather than throwing, as we want this function to be used in contexts where\nit had better not throw.  It also does not handle circularities, for similar\nreasons.\n\nTo handle numeric types, this function takes an optional numberFormatter\noption that tells it how to handle numbers; this function should take a\nBigInt as input.  By default, this function will be the identity, and so\nnumbers will be represented as BigInts.\n\nNote that this function begins by calling abify, so out-of-range enums (that\naren't so out-of-range as to be padding errors) will not return "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": ".\nOut-of-range booleans similarly will return true rather than "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": ".\nHowever, other range errors may return "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": "; this may technically be a\nslight incompatibility with existing behavior, but should not be relevant\nexcept in quite unusual cases.\n\nIn order to match the behavior for tuples, tuples will be transformed into\narrays, but named entries will additionally be keyed by name.  Moreover,\nindexed variables of reference type will be nativized to an undecoded hex\nstring."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 94,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L94"
										}
									],
									"parameters": [
										{
											"id": 2105,
											"name": "result",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 294,
												"name": "Result",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2106,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2132,
												"name": "NativizeOptions",
												"package": "@truffle/codec"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 2111,
							"name": "nativizeEventArgs",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/export.ts",
									"line": 254,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L254"
								}
							],
							"signatures": [
								{
									"id": 2112,
									"name": "nativizeEventArgs",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This function is similar to [[compatibleNativize]], but takes\na [[LogDecoding]], and puts the results in an object.  Note\nthat this does not return the entire event info, but just the\n"
											},
											{
												"kind": "code",
												"text": "`args`"
											},
											{
												"kind": "text",
												"text": " for the event."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 254,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L254"
										}
									],
									"parameters": [
										{
											"id": 2113,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 897,
												"name": "LogDecoding",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2114,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2132,
												"name": "NativizeOptions",
												"package": "@truffle/codec"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 2107,
							"name": "nativizeReturn",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/export.ts",
									"line": 211,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L211"
								}
							],
							"signatures": [
								{
									"id": 2108,
									"name": "nativizeReturn",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This function is similar to [[nativize]], but takes\na [[ReturndataDecoding]].  If there's only one returned value, it\nwill be run through compatibleNativize but otherwise unaltered;\notherwise the results will be put in an object.\n\nNote that if the ReturndataDecoding is not a [[ReturnDecoding]],\nthis will just return "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/export.ts",
											"line": 211,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L211"
										}
									],
									"parameters": [
										{
											"id": 2109,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 898,
												"name": "ReturndataDecoding",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2110,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2132,
												"name": "NativizeOptions",
												"package": "@truffle/codec"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "References",
							"children": [
								2126,
								2127,
								2130,
								2131,
								2128,
								2129
							]
						},
						{
							"title": "Classes",
							"children": [
								2135,
								2150,
								2165
							]
						},
						{
							"title": "Interfaces",
							"children": [
								2132
							]
						},
						{
							"title": "Functions",
							"children": [
								2115,
								2103,
								2111,
								2107
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/export.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/export.ts#L1"
						}
					]
				},
				{
					"id": 79,
					"name": "Format",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "# Codec Output Format\n\n## Module information\n\nThis module primarily defines TypeScript types for the output format\nused in results provided by packages\n"
							},
							{
								"kind": "code",
								"text": "`@truffle/decoder@>=4.0.0`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`@truffle/codec@>=0.1.0`"
							},
							{
								"kind": "text",
								"text": ".\n\nSee below for complete listing or continue reading\n[Format information](#format-information) to learn about this format.\n\n### How to import\n\nImport either as part of Codec or by itself:\n\n"
							},
							{
								"kind": "code",
								"text": "```typescript\n// when importing entire Codec, use Codec.Format.*:\nimport * as Codec from \"@truffle/codec\";\n\n// or import Format directly:\nimport { Format } from \"@truffle/codec\";\n```"
							},
							{
								"kind": "text",
								"text": "\n\n![Example struct decoding](media://example-struct-decoding.png)\n\n## Format information\n\nThis format is intended for use in smart contract and dapp development\ntools and libraries, and for use in display contexts, such as when\nbuilding on-screen components to show transaction and smart contract\nstate information.\n\nThis format seeks to provide an exhaustive schema for JavaScript\nobjects to encode **lossless**, **machine-readable** representations of\nall possible Solidity and ABI data types and all possible values of those\ntypes.\n\nThis format targets types and values understood by the\n[Solidity programming language](https://docs.soliditylang.org/) and\nthe [Contract ABI specification](https://docs.soliditylang.org/en/v0.8.19/abi-spec.html),\nwithin the context of the [Ethereum Virtual Machine](https://ethereum.github.io/yellowpaper/paper.pdf)\n(EVM) and in raw data for transactions and logs according to the\n[Ethereum JSON RPC](https://github.com/ethereum/wiki/wiki/JSON-RPC).\n\nObjects in this format may be deeply nested and/or contain circular\ndependencies. As such, **do not** serialize objects in this format or\notherwise attempt to display them in full without considering potential\nrisk. **Objects in this format are for the machine to read, not humans!**\nThis module provides utilities for inspecting objects in this format,\nincluding the **safe** [[Format.Utils.Inspect.ResultInspector]] wrapper\n(for [util.inspect](https://nodejs.org/api/util.html#util_util_inspect_object_options)),\nand the **unsafe** [[Format.Utils.Inspect.unsafeNativize]] function. For more\ninformation, please see the documentation for those utilities.\n\n### Specification\n\nIndividual decoded values are represented by objects of the type\n[[Format.Values.Result]], which contain the following fields:\n  1. "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": ": This is a [[Format.Types.Type|"
							},
							{
								"kind": "code",
								"text": "`Type`"
							},
							{
								"kind": "text",
								"text": "]] object describing the value's\n    type.  Each "
							},
							{
								"kind": "code",
								"text": "`Type`"
							},
							{
								"kind": "text",
								"text": " has a "
							},
							{
								"kind": "code",
								"text": "`typeClass`"
							},
							{
								"kind": "text",
								"text": " field describing the overall broad type,\n    such as "
							},
							{
								"kind": "code",
								"text": "`\"uint\"`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`\"bytes\"`"
							},
							{
								"kind": "text",
								"text": ", together with additional information that gives\n    the specific type.  For full detail, see [[Format.Types]].\n\n  2. "
							},
							{
								"kind": "code",
								"text": "`kind`"
							},
							{
								"kind": "text",
								"text": ": This is either "
							},
							{
								"kind": "code",
								"text": "`\"value\"`"
							},
							{
								"kind": "text",
								"text": ", in which case the "
							},
							{
								"kind": "code",
								"text": "`Result`"
							},
							{
								"kind": "text",
								"text": " is a\n    [[Format.Values.Value|"
							},
							{
								"kind": "code",
								"text": "`Value`"
							},
							{
								"kind": "text",
								"text": "]], or "
							},
							{
								"kind": "code",
								"text": "`\"error\"`"
							},
							{
								"kind": "text",
								"text": ", in which case the "
							},
							{
								"kind": "code",
								"text": "`Result`"
							},
							{
								"kind": "text",
								"text": " is an\n    [[Format.Errors.ErrorResult|"
							},
							{
								"kind": "code",
								"text": "`ErrorResult`"
							},
							{
								"kind": "text",
								"text": "]].  In the former case, there will be\n    a "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " field containin the decoded value.  In the latter case, there will be\n    an "
							},
							{
								"kind": "code",
								"text": "`error`"
							},
							{
								"kind": "text",
								"text": " field indicating what went wrong.  *Warning*: When decoding a\n    complex type, such as an array, mapping, or array, getting a kind of "
							},
							{
								"kind": "code",
								"text": "`\"value\"`"
							},
							{
								"kind": "text",
								"text": "\n    does not necessarily mean the individual elements were decoded successfully.\n    Even if the "
							},
							{
								"kind": "code",
								"text": "`Result`"
							},
							{
								"kind": "text",
								"text": " for the array (mapping, struct) as a whole has kind\n    "
							},
							{
								"kind": "code",
								"text": "`\"value\"`"
							},
							{
								"kind": "text",
								"text": ", the elements might still have kind "
							},
							{
								"kind": "code",
								"text": "`\"error\"`"
							},
							{
								"kind": "text",
								"text": ".\n\n  3. "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": ": As mentioned, this is included when "
							},
							{
								"kind": "code",
								"text": "`kind`"
							},
							{
								"kind": "text",
								"text": " is equal to "
							},
							{
								"kind": "code",
								"text": "`\"value\"`"
							},
							{
								"kind": "text",
								"text": ".\n    It contains information about the actual decoded value.  See\n    [[Format.Values|"
							},
							{
								"kind": "code",
								"text": "`Format.Values`"
							},
							{
								"kind": "text",
								"text": "]] for more information.\n\n  4. "
							},
							{
								"kind": "code",
								"text": "`error`"
							},
							{
								"kind": "text",
								"text": ": The alternative to "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": ".  Generally includes information about\n    the raw data that led to the error.  See [[Format.Errors|"
							},
							{
								"kind": "code",
								"text": "`Format.Errors`"
							},
							{
								"kind": "text",
								"text": "]] for\n    more information.\n\n  5. "
							},
							{
								"kind": "code",
								"text": "`interpretations`"
							},
							{
								"kind": "text",
								"text": ": This field will also be present when "
							},
							{
								"kind": "code",
								"text": "`kind`"
							},
							{
								"kind": "text",
								"text": " is equal\n    to "
							},
							{
								"kind": "code",
								"text": "`\"value\"`"
							},
							{
								"kind": "text",
								"text": "; it is an object that may contain additional information\n    about the decoded value beyond what is found in "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": ".  (All fields in\n    "
							},
							{
								"kind": "code",
								"text": "`interpretations`"
							},
							{
								"kind": "text",
								"text": " are always optional and will be included only when\n    applicable.)  You may wonder, what is the difference between "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": "\n    and "
							},
							{
								"kind": "code",
								"text": "`interpretations`"
							},
							{
								"kind": "text",
								"text": "?  The answer is that the distinction is largely\n    historical; "
							},
							{
								"kind": "code",
								"text": "`interpretations`"
							},
							{
								"kind": "text",
								"text": " was not originally part of the format, and\n    it was added so that there would be a place to put new additional\n    information we wanted to include without having to expand "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": ".  See\n    [[Format.Values|"
							},
							{
								"kind": "code",
								"text": "`Format.Values`"
							},
							{
								"kind": "text",
								"text": "]] for more information.\n\n  6. "
							},
							{
								"kind": "code",
								"text": "`reference`"
							},
							{
								"kind": "text",
								"text": ": This field is a debugger-only feature and does not\n     apply to results returned by  @truffle/decoder, so it won't be documented here.\n\n### Values vs. errors\n\nIt's worth taking a moment here to answer the question: What counts as a value,\nand what counts as an error?\n\nIn general, the answer is that anything that can be generated via Solidity\nalone (i.e. no assembly), with correctly-encoded inputs, and without making use\nof compiler bugs, is a value, not an error.  That means that, for instance, the\nfollowing things are values, not errors:\n  - A variable of contract type whose address does not actually hold a\n    contract of that type;\n  - An external function pointer that does not correspond to a valid\n    function;\n  - A string containing invalid UTF-8;\n  - ..., etc.\n\nBy contrast, the following *are* errors:\n  - A "
							},
							{
								"kind": "code",
								"text": "`bool`"
							},
							{
								"kind": "text",
								"text": " which is neither "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": " (0) nor "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " (1);\n  - An "
							},
							{
								"kind": "code",
								"text": "`enum`"
							},
							{
								"kind": "text",
								"text": " which is out of range;\n  - ..., etc.\n\n(You may be wondering about the enum case here, because if you go sufficiently\nfar back, to Solidity 0.4.4 or earlier, it *was* possible to generate\nout-of-range enums without resorting to assembly or compiler bugs.  However,\nenums are only supported in full mode (see\n[Notes on decoding modes](../#decoding-modes)),\nwhich only supports 0.4.12 and later, so\nwe consider out-of-range enums an error.  There are also additional technical\nreasons why supporting out-of-range enums as a value would be difficult.)\n\nThere are three special cases here that are likely worthy of note.\n\nFirstly, internal function pointers currently can't be meaningfully\ndecoded via @truffle/decoder.  However, they decode to a bare-bones value,\nnot an error, as it is (in a sense) our own fault that we can't decode\nthese, so it doesn't make sense to report an error, which would mean that\nsomething is wrong with the encoded data itself.  This value that it\ndecodes to will give the program counter values it corresponds to, but\nwill not include the function name or defining class, as @truffle/decoder\nis not presently capable of that.  For now, full decoding of internal\nfunction pointers remains a debugger-only feature.  (But limited support for\nthis via @truffle/decoder is planned for the future.)\n\n(When using the debugger, an invalid internal function pointer will decode to an\nerror.  However, when using @truffle/decoder, we have no way of discerning whether\nthe pointer is valid or not, so internal function pointers will always decode to\na value, if an uninformative one.)\n\nSecondly, when decoding events, it is impossible to decode indexed parameters\nof reference type.  Thus, these decode to an error\n("
							},
							{
								"kind": "code",
								"text": "`IndexedReferenceTypeError`"
							},
							{
								"kind": "text",
								"text": ", which see) rather than to a value.\n\nThirdly, the decoder is currently limited when it comes to decoding state\nvariables that are declared constant, and not all such variables are yet\nsupported in decoding; attempting to decode one of these that is not currently\nsupported will yield an error.\n\nSimilarly, there are various things that decode to errors for technical reasons.\nObjects with encoded length fields larger than what fits in a JavaScript safe\ninteger, or pointed to by pointers with values larger than what fits in a\nJavaScript safe integer, will decode to errors, even if they may technically be\nlegal.  Such cases are impractical to handle and should never come up in real\nuse so we decode them to errors.  Errors may also be returned in case of an\nerror in attempting to read the data to be decoded.\n\nFinally, except when decoding events, we do not return an error if the pointers\nin an ABI-encoded array or tuple are arranged in a nonstandard way, or if\nstrings or bytestrings are incorrectly padded, because it is not worth the\ntrouble to detect these conditions.\n\n\n## Notes on this documentation\n\nMost of this doesn't have explanatory documentation\nbecause it's largely self-explanatory, but particularly\nnon-obvious parts have been documented for clarity.\n\nA note on optional fields: A number of types or values\nhave optional fields.  These contain helpful\nbut non-essential information, or information which\nfor technical reasons we can't guarantee we can determine."
							}
						]
					},
					"children": [
						{
							"id": 556,
							"name": "Errors",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Contains the types for error and "
									},
									{
										"kind": "code",
										"text": "`ErrorResult`"
									},
									{
										"kind": "text",
										"text": " objects."
									}
								]
							},
							"children": [
								{
									"id": 607,
									"name": "AddressErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for an address"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 610,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 301,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L301"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 612,
														"name": "AddressPaddingError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 609,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 300,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L300"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 608,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 299,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L299"
												}
											],
											"type": {
												"type": "reference",
												"target": 127,
												"name": "AddressType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												610,
												609,
												608
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 298,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L298"
										}
									]
								},
								{
									"id": 612,
									"name": "AddressPaddingError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A padding error for an address (note padding is not always checked)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 614,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 321,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L321"
												}
											],
											"type": {
												"type": "literal",
												"value": "AddressPaddingError"
											}
										},
										{
											"id": 615,
											"name": "paddingType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 322,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L322"
												}
											],
											"type": {
												"type": "reference",
												"target": 2340,
												"name": "PaddingType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 613,
											"name": "raw",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "hex string; no checksum"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 320,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L320"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												614,
												615,
												613
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 316,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L316"
										}
									]
								},
								{
									"id": 674,
									"name": "ArrayErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for an array"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 677,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 541,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L541"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 745,
														"name": "DynamicDataImplementationError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 676,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 540,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L540"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 675,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 539,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L539"
												}
											],
											"type": {
												"type": "reference",
												"target": 150,
												"name": "ArrayType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												677,
												676,
												675
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 538,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L538"
										}
									]
								},
								{
									"id": 581,
									"name": "BoolErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for a boolean"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 584,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 209,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L209"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 585,
														"name": "BoolError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 583,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 208,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L208"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 582,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 207,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L207"
												}
											],
											"type": {
												"type": "reference",
												"target": 113,
												"name": "BoolType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												584,
												583,
												582
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 206,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L206"
										}
									]
								},
								{
									"id": 586,
									"name": "BoolOutOfRangeError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The bool is neither 0 nor 1"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 588,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 226,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L226"
												}
											],
											"type": {
												"type": "literal",
												"value": "BoolOutOfRangeError"
											}
										},
										{
											"id": 587,
											"name": "rawAsBN",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 225,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L225"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
													"qualifiedName": "BN"
												},
												"name": "BN",
												"package": "@types/bn.js"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												588,
												587
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 224,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L224"
										}
									]
								},
								{
									"id": 589,
									"name": "BoolPaddingError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A padding error for a boolean"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 591,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 239,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L239"
												}
											],
											"type": {
												"type": "literal",
												"value": "BoolPaddingError"
											}
										},
										{
											"id": 592,
											"name": "paddingType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 240,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L240"
												}
											],
											"type": {
												"type": "reference",
												"target": 2340,
												"name": "PaddingType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 590,
											"name": "raw",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "hex string"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 238,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L238"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												591,
												592,
												590
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 234,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L234"
										}
									]
								},
								{
									"id": 602,
									"name": "BytesDynamicErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for a dynamic-length bytestring"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 605,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 283,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L283"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 745,
														"name": "DynamicDataImplementationError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 604,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 282,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L282"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 603,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 281,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L281"
												}
											],
											"type": {
												"type": "reference",
												"target": 122,
												"name": "BytesTypeDynamic",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												605,
												604,
												603
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 280,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L280"
										}
									]
								},
								{
									"id": 598,
									"name": "BytesPaddingError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A padding error for a static-length bytestring (note padding is not always checked)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 600,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 271,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L271"
												}
											],
											"type": {
												"type": "literal",
												"value": "BytesPaddingError"
											}
										},
										{
											"id": 601,
											"name": "paddingType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 272,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L272"
												}
											],
											"type": {
												"type": "reference",
												"target": 2340,
												"name": "PaddingType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 599,
											"name": "raw",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "hex string"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 270,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L270"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												600,
												601,
												599
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 266,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L266"
										}
									]
								},
								{
									"id": 593,
									"name": "BytesStaticErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for a static-length bytestring"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 596,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 251,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L251"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 598,
														"name": "BytesPaddingError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 595,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 250,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L250"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 594,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 249,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L249"
												}
											],
											"type": {
												"type": "reference",
												"target": 117,
												"name": "BytesTypeStatic",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												596,
												595,
												594
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 248,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L248"
										}
									]
								},
								{
									"id": 775,
									"name": "CodeNotSuppliedError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A read error in code, but one triggered deliberately to indicate that\nbytecode is unknown, rather than due to an unexpected error condition.  This\nerror is triggered by passing null in response to a storage request."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Generic errors"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 777,
											"name": "address",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 947,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L947"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 776,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 946,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L946"
												}
											],
											"type": {
												"type": "literal",
												"value": "CodeNotSuppliedError"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												777,
												776
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 945,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L945"
										}
									]
								},
								{
									"id": 665,
									"name": "ContractErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for a contract"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 668,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 505,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L505"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 670,
														"name": "ContractPaddingError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 667,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 504,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L504"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 666,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 503,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L503"
												}
											],
											"type": {
												"type": "reference",
												"target": 236,
												"name": "ContractType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												668,
												667,
												666
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 502,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L502"
										}
									]
								},
								{
									"id": 670,
									"name": "ContractPaddingError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A padding error for contract (note padding is not always checked)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 672,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 525,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L525"
												}
											],
											"type": {
												"type": "literal",
												"value": "ContractPaddingError"
											}
										},
										{
											"id": 673,
											"name": "paddingType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 526,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L526"
												}
											],
											"type": {
												"type": "reference",
												"target": 2340,
												"name": "PaddingType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 671,
											"name": "raw",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "hex string"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 524,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L524"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												672,
												673,
												671
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 520,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L520"
										}
									]
								},
								{
									"id": 730,
									"name": "DeployedFunctionInConstructorError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Indicates that this is a deployed-style pointer,\ndespite the fact that you're in a constructor"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 732,
											"name": "context",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 757,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L757"
												}
											],
											"type": {
												"type": "reference",
												"target": 236,
												"name": "ContractType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 731,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 756,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L756"
												}
											],
											"type": {
												"type": "literal",
												"value": "DeployedFunctionInConstructorError"
											}
										},
										{
											"id": 733,
											"name": "rawInformation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 758,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L758"
												}
											],
											"type": {
												"type": "reference",
												"target": 549,
												"name": "FunctionInternalRawInfoPcPair",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												732,
												731,
												733
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 755,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L755"
										}
									]
								},
								{
									"id": 639,
									"name": "EnumErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for an enum"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 642,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 418,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L418"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 643,
														"name": "EnumError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 641,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 417,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L417"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 640,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 416,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L416"
												}
											],
											"type": {
												"type": "reference",
												"target": 221,
												"name": "EnumType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												642,
												641,
												640
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 415,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L415"
										}
									]
								},
								{
									"id": 653,
									"name": "EnumNotFoundDecodingError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The enum type definition could not be located"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 654,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 463,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L463"
												}
											],
											"type": {
												"type": "literal",
												"value": "EnumNotFoundDecodingError"
											}
										},
										{
											"id": 656,
											"name": "rawAsBN",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 465,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L465"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
													"qualifiedName": "BN"
												},
												"name": "BN",
												"package": "@types/bn.js"
											}
										},
										{
											"id": 655,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 464,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L464"
												}
											],
											"type": {
												"type": "reference",
												"target": 221,
												"name": "EnumType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												654,
												656,
												655
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 462,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L462"
										}
									]
								},
								{
									"id": 644,
									"name": "EnumOutOfRangeError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The enum is out of range"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 645,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 437,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L437"
												}
											],
											"type": {
												"type": "literal",
												"value": "EnumOutOfRangeError"
											}
										},
										{
											"id": 647,
											"name": "rawAsBN",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 439,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L439"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
													"qualifiedName": "BN"
												},
												"name": "BN",
												"package": "@types/bn.js"
											}
										},
										{
											"id": 646,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 438,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L438"
												}
											],
											"type": {
												"type": "reference",
												"target": 221,
												"name": "EnumType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												645,
												647,
												646
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 436,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L436"
										}
									]
								},
								{
									"id": 648,
									"name": "EnumPaddingError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A padding error for an enum"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 651,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 453,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L453"
												}
											],
											"type": {
												"type": "literal",
												"value": "EnumPaddingError"
											}
										},
										{
											"id": 652,
											"name": "paddingType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 454,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L454"
												}
											],
											"type": {
												"type": "reference",
												"target": 2340,
												"name": "PaddingType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 649,
											"name": "raw",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "hex string"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 451,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L451"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 650,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 452,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L452"
												}
											],
											"type": {
												"type": "reference",
												"target": 221,
												"name": "EnumType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												651,
												652,
												649,
												650
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 447,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L447"
										}
									]
								},
								{
									"id": 621,
									"name": "FixedErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for a signed fixed-point number"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 624,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 351,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L351"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 630,
														"name": "FixedPaddingError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 623,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 350,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L350"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 622,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 349,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L349"
												}
											],
											"type": {
												"type": "reference",
												"target": 140,
												"name": "FixedType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												624,
												623,
												622
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 348,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L348"
										}
									]
								},
								{
									"id": 630,
									"name": "FixedPaddingError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A padding error for a signed fixed-point number (note padding is not always checked)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 632,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 381,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L381"
												}
											],
											"type": {
												"type": "literal",
												"value": "FixedPaddingError"
											}
										},
										{
											"id": 633,
											"name": "paddingType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 382,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L382"
												}
											],
											"type": {
												"type": "reference",
												"target": 2340,
												"name": "PaddingType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 631,
											"name": "raw",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "hex string"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 380,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L380"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												632,
												633,
												631
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 376,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L376"
										}
									]
								},
								{
									"id": 704,
									"name": "FunctionExternalErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for an external function"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 707,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 654,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L654"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 708,
														"name": "FunctionExternalError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 706,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 653,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L653"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 705,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 652,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L652"
												}
											],
											"type": {
												"type": "reference",
												"target": 179,
												"name": "FunctionExternalType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												707,
												706,
												705
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 651,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L651"
										}
									]
								},
								{
									"id": 709,
									"name": "FunctionExternalNonStackPaddingError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This error kind represents a padding error for an external function pointer located anywhere other than the stack."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 711,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 676,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L676"
												}
											],
											"type": {
												"type": "literal",
												"value": "FunctionExternalNonStackPaddingError"
											}
										},
										{
											"id": 712,
											"name": "paddingType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 677,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L677"
												}
											],
											"type": {
												"type": "reference",
												"target": 2340,
												"name": "PaddingType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 710,
											"name": "raw",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "hex string"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 675,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L675"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												711,
												712,
												710
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 671,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L671"
										}
									]
								},
								{
									"id": 713,
									"name": "FunctionExternalStackPaddingError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This error kind represents a padding error for external function pointer located on the stack."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 716,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 694,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L694"
												}
											],
											"type": {
												"type": "literal",
												"value": "FunctionExternalStackPaddingError"
											}
										},
										{
											"id": 714,
											"name": "rawAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "hex string (no checksum; also a full word long)"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 689,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L689"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 715,
											"name": "rawSelector",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "hex string (but a full word long)"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 693,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L693"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												716,
												714,
												715
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 685,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L685"
										}
									]
								},
								{
									"id": 717,
									"name": "FunctionInternalErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for an internal function"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 720,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 709,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L709"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 721,
														"name": "FunctionInternalError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 719,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 708,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L708"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 718,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 707,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L707"
												}
											],
											"type": {
												"type": "reference",
												"target": 173,
												"name": "FunctionInternalType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												720,
												719,
												718
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 706,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L706"
										}
									]
								},
								{
									"id": 722,
									"name": "FunctionInternalPaddingError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A padding error for an internal function"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 724,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 733,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L733"
												}
											],
											"type": {
												"type": "literal",
												"value": "FunctionInternalPaddingError"
											}
										},
										{
											"id": 725,
											"name": "paddingType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 734,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L734"
												}
											],
											"type": {
												"type": "reference",
												"target": 2340,
												"name": "PaddingType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 723,
											"name": "raw",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "hex string"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 732,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L732"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												724,
												725,
												723
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 728,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L728"
										}
									]
								},
								{
									"id": 747,
									"name": "IndexedReferenceTypeError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used when decoding an indexed parameter of reference (or tuple) type.  These\ncan't meaningfully be decoded, so instead they decode to an error, sorry."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Generic errors"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 748,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 845,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L845"
												}
											],
											"type": {
												"type": "literal",
												"value": "IndexedReferenceTypeError"
											}
										},
										{
											"id": 750,
											"name": "raw",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "hex string"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 850,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L850"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 749,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 846,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L846"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 217,
														"name": "TupleType",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 283,
														"name": "ReferenceType",
														"package": "@truffle/codec"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												748,
												750,
												749
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 844,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L844"
										}
									]
								},
								{
									"id": 572,
									"name": "IntErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for a signed integer"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 575,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 177,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L177"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 577,
														"name": "IntPaddingError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 574,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 176,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L176"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 573,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 175,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L175"
												}
											],
											"type": {
												"type": "reference",
												"target": 109,
												"name": "IntType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												575,
												574,
												573
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 174,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L174"
										}
									]
								},
								{
									"id": 577,
									"name": "IntPaddingError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A padding error for a signed integer (note padding is not always checked)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 579,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 197,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L197"
												}
											],
											"type": {
												"type": "literal",
												"value": "IntPaddingError"
											}
										},
										{
											"id": 580,
											"name": "paddingType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 198,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L198"
												}
											],
											"type": {
												"type": "reference",
												"target": 2340,
												"name": "PaddingType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 578,
											"name": "raw",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "hex string"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 196,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L196"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												579,
												580,
												578
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 192,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L192"
										}
									]
								},
								{
									"id": 790,
									"name": "InternalFunctionInABIError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This should never come up, but just to be sure..."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Internal-use errors"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 791,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 1002,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L1002"
												}
											],
											"type": {
												"type": "literal",
												"value": "InternalFunctionInABIError"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												791
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 1001,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L1001"
										}
									]
								},
								{
									"id": 694,
									"name": "MagicErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for a magic variable"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special container types (debugger-only)"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 697,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 613,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L613"
												}
											],
											"type": {
												"type": "reference",
												"target": 743,
												"name": "GenericError",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 696,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 612,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L612"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 695,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 611,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L611"
												}
											],
											"type": {
												"type": "reference",
												"target": 266,
												"name": "MagicType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												697,
												696,
												695
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 610,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L610"
										}
									]
								},
								{
									"id": 734,
									"name": "MalformedInternalFunctionError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used when the deployed PC is zero but the constructor PC\nis nonzero"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 736,
											"name": "context",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 769,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L769"
												}
											],
											"type": {
												"type": "reference",
												"target": 236,
												"name": "ContractType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 735,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 768,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L768"
												}
											],
											"type": {
												"type": "literal",
												"value": "MalformedInternalFunctionError"
											}
										},
										{
											"id": 737,
											"name": "rawInformation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 770,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L770"
												}
											],
											"type": {
												"type": "reference",
												"target": 549,
												"name": "FunctionInternalRawInfoPcPair",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												736,
												735,
												737
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 767,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L767"
										}
									]
								},
								{
									"id": 679,
									"name": "MappingErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for a mapping"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 682,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 559,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L559"
												}
											],
											"type": {
												"type": "reference",
												"target": 743,
												"name": "GenericError",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 681,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 558,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L558"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 680,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 557,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L557"
												}
											],
											"type": {
												"type": "reference",
												"target": 167,
												"name": "MappingType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												682,
												681,
												680
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 556,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L556"
										}
									]
								},
								{
									"id": 726,
									"name": "NoSuchInternalFunctionError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Indicates that the function pointer being decoded fails to point to a valid\nfunction, and also is not one of the default values"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 728,
											"name": "context",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 745,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L745"
												}
											],
											"type": {
												"type": "reference",
												"target": 236,
												"name": "ContractType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 727,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 744,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L744"
												}
											],
											"type": {
												"type": "literal",
												"value": "NoSuchInternalFunctionError"
											}
										},
										{
											"id": 729,
											"name": "rawInformation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 746,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L746"
												}
											],
											"type": {
												"type": "reference",
												"target": 548,
												"name": "FunctionInternalRawInfo",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												728,
												727,
												729
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 743,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L743"
										}
									]
								},
								{
									"id": 738,
									"name": "OptionsErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An options error.  This should never happen,\nas options are never decoded, but it's included for\ncompleteness."
											}
										]
									},
									"children": [
										{
											"id": 741,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 785,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L785"
												}
											],
											"type": {
												"type": "reference",
												"target": 743,
												"name": "GenericError",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 740,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 784,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L784"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 739,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 783,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L783"
												}
											],
											"type": {
												"type": "reference",
												"target": 281,
												"name": "OptionsType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												741,
												740,
												739
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 782,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L782"
										}
									]
								},
								{
									"id": 782,
									"name": "OverlargePointersNotImplementedError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Error for dynamic type being represented by pointer bigger than a JS number"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Generic errors"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 783,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 967,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L967"
												}
											],
											"type": {
												"type": "literal",
												"value": "OverlargePointersNotImplementedError"
											}
										},
										{
											"id": 784,
											"name": "pointerAsBN",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 968,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L968"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
													"qualifiedName": "BN"
												},
												"name": "BN",
												"package": "@types/bn.js"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												783,
												784
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 966,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L966"
										}
									]
								},
								{
									"id": 786,
									"name": "OverlongArrayOrStringStrictModeError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Error for the stricter length check in strict mode"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Internal-use errors"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 789,
											"name": "dataLength",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 993,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L993"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 787,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 991,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L991"
												}
											],
											"type": {
												"type": "literal",
												"value": "OverlongArrayOrStringStrictModeError"
											}
										},
										{
											"id": 788,
											"name": "lengthAsBN",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 992,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L992"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
													"qualifiedName": "BN"
												},
												"name": "BN",
												"package": "@types/bn.js"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												789,
												787,
												788
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 990,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L990"
										}
									]
								},
								{
									"id": 778,
									"name": "OverlongArraysAndStringsNotImplementedError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Error for array/string/bytestring having length bigger than a JS number"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Generic errors"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 781,
											"name": "dataLength",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 958,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L958"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 779,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 956,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L956"
												}
											],
											"type": {
												"type": "literal",
												"value": "OverlongArraysAndStringsNotImplementedError"
											}
										},
										{
											"id": 780,
											"name": "lengthAsBN",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 957,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L957"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
													"qualifiedName": "BN"
												},
												"name": "BN",
												"package": "@types/bn.js"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												781,
												779,
												780
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 955,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L955"
										}
									]
								},
								{
									"id": 792,
									"name": "ReEncodingMismatchError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This isn't really an error that one can get as part of a "
											},
											{
												"kind": "code",
												"text": "`Result`"
											},
											{
												"kind": "text",
												"text": ", but we\nneed something for when re-encoding doesn't match and we're decoding a\ntransaction (since there we have to error instead of just skipping)."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Internal-use errors"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 794,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 1014,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L1014"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										},
										{
											"id": 793,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 1013,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L1013"
												}
											],
											"type": {
												"type": "literal",
												"value": "ReEncodingMismatchError"
											}
										},
										{
											"id": 795,
											"name": "reEncodedData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 1015,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L1015"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												794,
												793,
												795
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 1012,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L1012"
										}
									]
								},
								{
									"id": 762,
									"name": "ReadErrorBytes",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Read error in a byte-based location (memory, calldata, etc)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Generic errors"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 763,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 900,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L900"
												}
											],
											"type": {
												"type": "literal",
												"value": "ReadErrorBytes"
											}
										},
										{
											"id": 766,
											"name": "length",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 903,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L903"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 764,
											"name": "location",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 901,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L901"
												}
											],
											"type": {
												"type": "reference",
												"target": 761,
												"name": "BytesLocation",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 765,
											"name": "start",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 902,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L902"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												763,
												766,
												764,
												765
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 899,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L899"
										}
									]
								},
								{
									"id": 757,
									"name": "ReadErrorStack",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Read error on the stack"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Generic errors"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 759,
											"name": "from",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 880,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L880"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 758,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 879,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L879"
												}
											],
											"type": {
												"type": "literal",
												"value": "ReadErrorStack"
											}
										},
										{
											"id": 760,
											"name": "to",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 881,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L881"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												759,
												758,
												760
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 878,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L878"
										}
									]
								},
								{
									"id": 767,
									"name": "ReadErrorStorage",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Read error in storage"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Generic errors"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 768,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 912,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L912"
												}
											],
											"type": {
												"type": "literal",
												"value": "ReadErrorStorage"
											}
										},
										{
											"id": 769,
											"name": "range",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 913,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L913"
												}
											],
											"type": {
												"type": "reference",
												"target": 1537,
												"name": "Range",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												768,
												769
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 911,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L911"
										}
									]
								},
								{
									"id": 770,
									"name": "StorageNotSuppliedError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A read error in storage, but one triggered deliberately to indicate\nthat that particular area of storage is unknown, rather than due to\nan unexpected error condition.  This error is triggered by passing\nnull in response to a storage request."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Generic errors"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 771,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 925,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L925"
												}
											],
											"type": {
												"type": "literal",
												"value": "StorageNotSuppliedError"
											}
										},
										{
											"id": 772,
											"name": "slot",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 926,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L926"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
													"qualifiedName": "BN"
												},
												"name": "BN",
												"package": "@types/bn.js"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												771,
												772
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 924,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L924"
										}
									]
								},
								{
									"id": 616,
									"name": "StringErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for a string"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 619,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 333,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L333"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 745,
														"name": "DynamicDataImplementationError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 618,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 332,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L332"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 617,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 331,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L331"
												}
											],
											"type": {
												"type": "reference",
												"target": 136,
												"name": "StringType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												619,
												618,
												617
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 330,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L330"
										}
									]
								},
								{
									"id": 684,
									"name": "StructErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for a struct"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 687,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 577,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L577"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 745,
														"name": "DynamicDataImplementationError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 686,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 576,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L576"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 685,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 575,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L575"
												}
											],
											"type": {
												"type": "reference",
												"target": 194,
												"name": "StructType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												687,
												686,
												685
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 574,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L574"
										}
									]
								},
								{
									"id": 689,
									"name": "TupleErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for a tuple"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 692,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 595,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L595"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 745,
														"name": "DynamicDataImplementationError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 691,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 594,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L594"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 690,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 593,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L593"
												}
											],
											"type": {
												"type": "reference",
												"target": 217,
												"name": "TupleType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												692,
												691,
												690
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 592,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L592"
										}
									]
								},
								{
									"id": 699,
									"name": "TypeErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for a type"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special container types (debugger-only)"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 702,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 631,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L631"
												}
											],
											"type": {
												"type": "reference",
												"target": 743,
												"name": "GenericError",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 701,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 630,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L630"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 700,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 629,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L629"
												}
											],
											"type": {
												"type": "reference",
												"target": 273,
												"name": "TypeType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												702,
												701,
												700
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 628,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L628"
										}
									]
								},
								{
									"id": 625,
									"name": "UfixedErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for an unsigned fixed-point number"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 628,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 361,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L361"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 635,
														"name": "UfixedPaddingError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 627,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 360,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L360"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 626,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 359,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L359"
												}
											],
											"type": {
												"type": "reference",
												"target": 145,
												"name": "UfixedType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												628,
												627,
												626
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 358,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L358"
										}
									]
								},
								{
									"id": 635,
									"name": "UfixedPaddingError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A padding error for an unsigned fixed-point number (note padding is not always checked)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 637,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 402,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L402"
												}
											],
											"type": {
												"type": "literal",
												"value": "UfixedPaddingError"
											}
										},
										{
											"id": 638,
											"name": "paddingType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 403,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L403"
												}
											],
											"type": {
												"type": "reference",
												"target": 2340,
												"name": "PaddingType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 636,
											"name": "raw",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "hex string"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 401,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L401"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												637,
												638,
												636
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 397,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L397"
										}
									]
								},
								{
									"id": 563,
									"name": "UintErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for an unsigned integer"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 566,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 145,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L145"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 568,
														"name": "UintPaddingError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 565,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 144,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L144"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 564,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 143,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L143"
												}
											],
											"type": {
												"type": "reference",
												"target": 105,
												"name": "UintType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												566,
												565,
												564
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 142,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L142"
										}
									]
								},
								{
									"id": 568,
									"name": "UintPaddingError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A padding error for an unsigned integer (note padding is not always checked)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 570,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 165,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L165"
												}
											],
											"type": {
												"type": "literal",
												"value": "UintPaddingError"
											}
										},
										{
											"id": 571,
											"name": "paddingType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 166,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L166"
												}
											],
											"type": {
												"type": "reference",
												"target": 2340,
												"name": "PaddingType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 569,
											"name": "raw",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "hex string"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 164,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L164"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												570,
												571,
												569
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 160,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L160"
										}
									]
								},
								{
									"id": 754,
									"name": "UnsupportedConstantError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error for an unsupported type of constant (this counts as a read error)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Generic errors"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 756,
											"name": "definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 870,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L870"
												}
											],
											"type": {
												"type": "reference",
												"target": 1688,
												"name": "AstNode",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 755,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 869,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L869"
												}
											],
											"type": {
												"type": "literal",
												"value": "UnsupportedConstantError"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												756,
												755
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 868,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L868"
										}
									]
								},
								{
									"id": 773,
									"name": "UnusedImmutableError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Attempting to read an immutable that is never stored anywhere"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Generic errors"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 774,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 935,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L935"
												}
											],
											"type": {
												"type": "literal",
												"value": "UnusedImmutableError"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												774
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 934,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L934"
										}
									]
								},
								{
									"id": 751,
									"name": "UserDefinedTypeNotFoundError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error for when can't find the definition info for a user-defined type"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Generic errors"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 752,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 859,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L859"
												}
											],
											"type": {
												"type": "literal",
												"value": "UserDefinedTypeNotFoundError"
											}
										},
										{
											"id": 753,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 860,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L860"
												}
											],
											"type": {
												"type": "reference",
												"target": 193,
												"name": "UserDefinedType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												752,
												753
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 858,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L858"
										}
									]
								},
								{
									"id": 657,
									"name": "UserDefinedValueTypeErrorResult",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for a user-defined value type"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 660,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 476,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L476"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 743,
														"name": "GenericError",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 662,
														"name": "WrappedError",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 659,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 475,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L475"
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										},
										{
											"id": 658,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 474,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L474"
												}
											],
											"type": {
												"type": "reference",
												"target": 250,
												"name": "UserDefinedValueTypeType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												660,
												659,
												658
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 473,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L473"
										}
									]
								},
								{
									"id": 662,
									"name": "WrappedError",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result representing something going wrong decoding\nthe underlying type when decoding a UDVT"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 664,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 494,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L494"
												}
											],
											"type": {
												"type": "reference",
												"target": 561,
												"name": "BuiltInValueErrorResult",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 663,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/errors.ts",
													"line": 493,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L493"
												}
											],
											"type": {
												"type": "literal",
												"value": "WrappedError"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												664,
												663
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 492,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L492"
										}
									]
								},
								{
									"id": 558,
									"name": "AbiErrorResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for an ABI type"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "General categories"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 52,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L52"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 563,
												"name": "UintErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 572,
												"name": "IntErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 581,
												"name": "BoolErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 562,
												"name": "BytesErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 607,
												"name": "AddressErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 621,
												"name": "FixedErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 625,
												"name": "UfixedErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 616,
												"name": "StringErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 674,
												"name": "ArrayErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 704,
												"name": "FunctionExternalErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 689,
												"name": "TupleErrorResult",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 611,
									"name": "AddressError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A address-specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 309,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L309"
										}
									],
									"type": {
										"type": "reference",
										"target": 612,
										"name": "AddressPaddingError",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 678,
									"name": "ArrayError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An arrray-specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 549,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L549"
										}
									],
									"type": {
										"type": "reference",
										"target": 745,
										"name": "DynamicDataImplementationError",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 585,
									"name": "BoolError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bool-specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 217,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L217"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 586,
												"name": "BoolOutOfRangeError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 589,
												"name": "BoolPaddingError",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 561,
									"name": "BuiltInValueErrorResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for a built-in value type"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 121,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L121"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 563,
												"name": "UintErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 572,
												"name": "IntErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 581,
												"name": "BoolErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 593,
												"name": "BytesStaticErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 607,
												"name": "AddressErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 621,
												"name": "FixedErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 625,
												"name": "UfixedErrorResult",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 606,
									"name": "BytesDynamicError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A dynamic-bytestring-specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 291,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L291"
										}
									],
									"type": {
										"type": "reference",
										"target": 745,
										"name": "DynamicDataImplementationError",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 562,
									"name": "BytesErrorResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for a bytestring"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 135,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L135"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 593,
												"name": "BytesStaticErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 602,
												"name": "BytesDynamicErrorResult",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 761,
									"name": "BytesLocation",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A byte-based location"
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 887,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L887"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "memory"
											},
											{
												"type": "literal",
												"value": "calldata"
											},
											{
												"type": "literal",
												"value": "eventdata"
											},
											{
												"type": "literal",
												"value": "returndata"
											},
											{
												"type": "literal",
												"value": "code"
											}
										]
									}
								},
								{
									"id": 597,
									"name": "BytesStaticError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A static-bytestring-specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 259,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L259"
										}
									],
									"type": {
										"type": "reference",
										"target": 598,
										"name": "BytesPaddingError",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 669,
									"name": "ContractError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A contract-specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 513,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L513"
										}
									],
									"type": {
										"type": "reference",
										"target": 670,
										"name": "ContractPaddingError",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 559,
									"name": "DecoderError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "One of the underlying errors contained in an [[ErrorResult]]"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "General categories"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 70,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L70"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 743,
												"name": "GenericError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 567,
												"name": "UintError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 576,
												"name": "IntError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 585,
												"name": "BoolError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 597,
												"name": "BytesStaticError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 606,
												"name": "BytesDynamicError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 611,
												"name": "AddressError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 620,
												"name": "StringError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 629,
												"name": "FixedError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 634,
												"name": "UfixedError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 678,
												"name": "ArrayError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 683,
												"name": "MappingError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 688,
												"name": "StructError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 698,
												"name": "MagicError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 703,
												"name": "TypeErrorUnion",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 693,
												"name": "TupleError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 643,
												"name": "EnumError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 661,
												"name": "UserDefinedValueTypeError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 669,
												"name": "ContractError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 708,
												"name": "FunctionExternalError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 721,
												"name": "FunctionInternalError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 785,
												"name": "InternalUseError",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 745,
									"name": "DynamicDataImplementationError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error resulting from overlarge length or pointer values"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Generic errors"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 826,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L826"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 778,
												"name": "OverlongArraysAndStringsNotImplementedError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 782,
												"name": "OverlargePointersNotImplementedError",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 560,
									"name": "ElementaryErrorResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error result for an elementary value"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 103,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L103"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 563,
												"name": "UintErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 572,
												"name": "IntErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 581,
												"name": "BoolErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 562,
												"name": "BytesErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 607,
												"name": "AddressErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 616,
												"name": "StringErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 621,
												"name": "FixedErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 625,
												"name": "UfixedErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 639,
												"name": "EnumErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 657,
												"name": "UserDefinedValueTypeErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 665,
												"name": "ContractErrorResult",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 643,
									"name": "EnumError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An enum-specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 426,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L426"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 644,
												"name": "EnumOutOfRangeError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 648,
												"name": "EnumPaddingError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 653,
												"name": "EnumNotFoundDecodingError",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 746,
									"name": "ErrorForThrowing",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error that may occur in a component other than the main\ncore of the decoder itself and thus may need to get thrown to it"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Generic errors"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 836,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L836"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 751,
												"name": "UserDefinedTypeNotFoundError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 744,
												"name": "ReadError",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 557,
									"name": "ErrorResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A result which is an error rather than a value"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "General categories"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 35,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L35"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 560,
												"name": "ElementaryErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 674,
												"name": "ArrayErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 679,
												"name": "MappingErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 684,
												"name": "StructErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 694,
												"name": "MagicErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 699,
												"name": "TypeErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 689,
												"name": "TupleErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 704,
												"name": "FunctionExternalErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 717,
												"name": "FunctionInternalErrorResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 738,
												"name": "OptionsErrorResult",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 629,
									"name": "FixedError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A fixed-specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 369,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L369"
										}
									],
									"type": {
										"type": "reference",
										"target": 630,
										"name": "FixedPaddingError",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 708,
									"name": "FunctionExternalError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An external-function specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 662,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L662"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 709,
												"name": "FunctionExternalNonStackPaddingError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 713,
												"name": "FunctionExternalStackPaddingError",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 721,
									"name": "FunctionInternalError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An internal-function specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 717,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L717"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 722,
												"name": "FunctionInternalPaddingError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 726,
												"name": "NoSuchInternalFunctionError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 730,
												"name": "DeployedFunctionInConstructorError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 734,
												"name": "MalformedInternalFunctionError",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 743,
									"name": "GenericError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A type-non-specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Generic errors"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 802,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L802"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 751,
												"name": "UserDefinedTypeNotFoundError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 747,
												"name": "IndexedReferenceTypeError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 744,
												"name": "ReadError",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 576,
									"name": "IntError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An int-specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 185,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L185"
										}
									],
									"type": {
										"type": "reference",
										"target": 577,
										"name": "IntPaddingError",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 785,
									"name": "InternalUseError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Internal-use error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Internal-use errors"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 980,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L980"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 786,
												"name": "OverlongArrayOrStringStrictModeError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 790,
												"name": "InternalFunctionInABIError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 792,
												"name": "ReEncodingMismatchError",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 698,
									"name": "MagicError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A magic-specific error (there are none)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special container types (debugger-only)"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 621,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L621"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								{
									"id": 683,
									"name": "MappingError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A mapping-specific error (there are none)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 567,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L567"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								{
									"id": 742,
									"name": "OptionsError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The options type has no type-specific errors at the moment"
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 791,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L791"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								{
									"id": 744,
									"name": "ReadError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A read error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Generic errors"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 812,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L812"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 754,
												"name": "UnsupportedConstantError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 757,
												"name": "ReadErrorStack",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 762,
												"name": "ReadErrorBytes",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 767,
												"name": "ReadErrorStorage",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 770,
												"name": "StorageNotSuppliedError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 773,
												"name": "UnusedImmutableError",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 775,
												"name": "CodeNotSuppliedError",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 620,
									"name": "StringError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A string-specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 341,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L341"
										}
									],
									"type": {
										"type": "reference",
										"target": 745,
										"name": "DynamicDataImplementationError",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 688,
									"name": "StructError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A struct-specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 585,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L585"
										}
									],
									"type": {
										"type": "reference",
										"target": 745,
										"name": "DynamicDataImplementationError",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 693,
									"name": "TupleError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A tuple-specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 603,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L603"
										}
									],
									"type": {
										"type": "reference",
										"target": 745,
										"name": "DynamicDataImplementationError",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 703,
									"name": "TypeErrorUnion",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An error specific to type values (there are none);\nthis isn't called TypeError because that's not legal"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special container types (debugger-only)"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 640,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L640"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								{
									"id": 634,
									"name": "UfixedError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A ufixed-specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 390,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L390"
										}
									],
									"type": {
										"type": "reference",
										"target": 635,
										"name": "UfixedPaddingError",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 567,
									"name": "UintError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A uint-specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 153,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L153"
										}
									],
									"type": {
										"type": "reference",
										"target": 568,
										"name": "UintPaddingError",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 661,
									"name": "UserDefinedValueTypeError",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A UDVT-specific error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/errors.ts",
											"line": 484,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L484"
										}
									],
									"type": {
										"type": "reference",
										"target": 662,
										"name": "WrappedError",
										"package": "@truffle/codec"
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										607,
										612,
										674,
										581,
										586,
										589,
										602,
										598,
										593,
										775,
										665,
										670,
										730,
										639,
										653,
										644,
										648,
										621,
										630,
										704,
										709,
										713,
										717,
										722,
										747,
										572,
										577,
										790,
										694,
										734,
										679,
										726,
										738,
										782,
										786,
										778,
										792,
										762,
										757,
										767,
										770,
										616,
										684,
										689,
										699,
										625,
										635,
										563,
										568,
										754,
										773,
										751,
										657,
										662
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										558,
										611,
										678,
										585,
										561,
										606,
										562,
										761,
										597,
										669,
										559,
										745,
										560,
										643,
										746,
										557,
										629,
										708,
										721,
										743,
										576,
										785,
										698,
										683,
										742,
										744,
										620,
										688,
										693,
										703,
										634,
										567,
										661
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/format/errors.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/errors.ts#L1"
								}
							]
						},
						{
							"id": 80,
							"name": "Types",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Contains the types for type objects, and some\nfunctions for working with them."
									}
								]
							},
							"children": [
								{
									"id": 132,
									"name": "AddressTypeGeneral",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of an address (with payability unspecified)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 134,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 144,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L144"
												}
											],
											"type": {
												"type": "literal",
												"value": "general"
											}
										},
										{
											"id": 133,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 143,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L143"
												}
											],
											"type": {
												"type": "literal",
												"value": "address"
											}
										},
										{
											"id": 135,
											"name": "typeHint",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 145,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L145"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												134,
												133,
												135
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 142,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L142"
										}
									]
								},
								{
									"id": 128,
									"name": "AddressTypeSpecific",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of an address (with payability specified)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 130,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 133,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L133"
												}
											],
											"type": {
												"type": "literal",
												"value": "specific"
											}
										},
										{
											"id": 131,
											"name": "payable",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 134,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L134"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 129,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 132,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L132"
												}
											],
											"type": {
												"type": "literal",
												"value": "address"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												130,
												131,
												129
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 131,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L131"
										}
									]
								},
								{
									"id": 158,
									"name": "ArrayTypeDynamic",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a dynamic-length array"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 161,
											"name": "baseType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 212,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L212"
												}
											],
											"type": {
												"type": "reference",
												"target": 104,
												"name": "Type",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 160,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 211,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L211"
												}
											],
											"type": {
												"type": "literal",
												"value": "dynamic"
											}
										},
										{
											"id": 162,
											"name": "location",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 213,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L213"
												}
											],
											"type": {
												"type": "reference",
												"target": 2335,
												"name": "Location",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 159,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 210,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L210"
												}
											],
											"type": {
												"type": "literal",
												"value": "array"
											}
										},
										{
											"id": 163,
											"name": "typeHint",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 214,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L214"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												161,
												160,
												162,
												159,
												163
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 209,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L209"
										}
									]
								},
								{
									"id": 151,
									"name": "ArrayTypeStatic",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a static-length array"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 154,
											"name": "baseType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 198,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L198"
												}
											],
											"type": {
												"type": "reference",
												"target": 104,
												"name": "Type",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 153,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 197,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L197"
												}
											],
											"type": {
												"type": "literal",
												"value": "static"
											}
										},
										{
											"id": 155,
											"name": "length",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 199,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L199"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
													"qualifiedName": "BN"
												},
												"name": "BN",
												"package": "@types/bn.js"
											}
										},
										{
											"id": 156,
											"name": "location",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 200,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L200"
												}
											],
											"type": {
												"type": "reference",
												"target": 2335,
												"name": "Location",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 152,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 196,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L196"
												}
											],
											"type": {
												"type": "literal",
												"value": "array"
											}
										},
										{
											"id": 157,
											"name": "typeHint",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 201,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L201"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												154,
												153,
												155,
												156,
												152,
												157
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 195,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L195"
										}
									]
								},
								{
									"id": 113,
									"name": "BoolType",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a boolean"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 114,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 84,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L84"
												}
											],
											"type": {
												"type": "literal",
												"value": "bool"
											}
										},
										{
											"id": 115,
											"name": "typeHint",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 85,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L85"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												114,
												115
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 83,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L83"
										}
									]
								},
								{
									"id": 122,
									"name": "BytesTypeDynamic",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a dynamic-length bytestring"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 124,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 114,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L114"
												}
											],
											"type": {
												"type": "literal",
												"value": "dynamic"
											}
										},
										{
											"id": 125,
											"name": "location",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 115,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L115"
												}
											],
											"type": {
												"type": "reference",
												"target": 2335,
												"name": "Location",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 123,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 113,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L113"
												}
											],
											"type": {
												"type": "literal",
												"value": "bytes"
											}
										},
										{
											"id": 126,
											"name": "typeHint",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 116,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L116"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												124,
												125,
												123,
												126
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 112,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L112"
										}
									]
								},
								{
									"id": 117,
									"name": "BytesTypeStatic",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a static-length bytestring"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 119,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 102,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L102"
												}
											],
											"type": {
												"type": "literal",
												"value": "static"
											}
										},
										{
											"id": 120,
											"name": "length",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 103,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L103"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 118,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 101,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L101"
												}
											],
											"type": {
												"type": "literal",
												"value": "bytes"
											}
										},
										{
											"id": 121,
											"name": "typeHint",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 104,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L104"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												119,
												120,
												118,
												121
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 100,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L100"
										}
									]
								},
								{
									"id": 244,
									"name": "ContractTypeForeign",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a contract w/o full Solidity info -- not used for actual variables"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 248,
											"name": "contractKind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 521,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L521"
												}
											],
											"type": {
												"type": "reference",
												"target": 2338,
												"name": "ContractKind",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 246,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 519,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L519"
												}
											],
											"type": {
												"type": "literal",
												"value": "foreign"
											}
										},
										{
											"id": 249,
											"name": "payable",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Indicates whether contract has payable fallback function"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 525,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L525"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 245,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 518,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L518"
												}
											],
											"type": {
												"type": "literal",
												"value": "contract"
											}
										},
										{
											"id": 247,
											"name": "typeName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 520,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L520"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												248,
												246,
												249,
												245,
												247
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 517,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L517"
										}
									]
								},
								{
									"id": 237,
									"name": "ContractTypeNative",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a contract with full Solidity info -- may be used for actual variables"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 242,
											"name": "contractKind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 503,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L503"
												}
											],
											"type": {
												"type": "reference",
												"target": 2338,
												"name": "ContractKind",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 240,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Internal ID.  Format may change in future."
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 501,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L501"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 239,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 497,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L497"
												}
											],
											"type": {
												"type": "literal",
												"value": "native"
											}
										},
										{
											"id": 243,
											"name": "payable",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Indicates whether contract has payable fallback function"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 507,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L507"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 238,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 496,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L496"
												}
											],
											"type": {
												"type": "literal",
												"value": "contract"
											}
										},
										{
											"id": 241,
											"name": "typeName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 502,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L502"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												242,
												240,
												239,
												243,
												238,
												241
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 495,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L495"
										}
									]
								},
								{
									"id": 230,
									"name": "EnumTypeGlobal",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Global enum"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 233,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Internal ID.  Format may change in future."
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 472,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L472"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 232,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 468,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L468"
												}
											],
											"type": {
												"type": "literal",
												"value": "global"
											}
										},
										{
											"id": 235,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "these must be in order"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 477,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L477"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 231,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 467,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L467"
												}
											],
											"type": {
												"type": "literal",
												"value": "enum"
											}
										},
										{
											"id": 234,
											"name": "typeName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 473,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L473"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												233,
												232,
												235,
												231,
												234
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 466,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L466"
										}
									]
								},
								{
									"id": 222,
									"name": "EnumTypeLocal",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Local enum (defined in a contract)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 228,
											"name": "definingContract",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 454,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L454"
												}
											],
											"type": {
												"type": "reference",
												"target": 237,
												"name": "ContractTypeNative",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 227,
											"name": "definingContractName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 453,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L453"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 225,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Internal ID.  Format may change in future."
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 451,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L451"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 224,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 447,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L447"
												}
											],
											"type": {
												"type": "literal",
												"value": "local"
											}
										},
										{
											"id": 229,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "these must be in order"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 458,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L458"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 223,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 446,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L446"
												}
											],
											"type": {
												"type": "literal",
												"value": "enum"
											}
										},
										{
											"id": 226,
											"name": "typeName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 452,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L452"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												228,
												227,
												225,
												224,
												229,
												223,
												226
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 445,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L445"
										}
									]
								},
								{
									"id": 140,
									"name": "FixedType",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a signed fixed-point number"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 142,
											"name": "bits",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 166,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L166"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 143,
											"name": "places",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 167,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L167"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 141,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 165,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L165"
												}
											],
											"type": {
												"type": "literal",
												"value": "fixed"
											}
										},
										{
											"id": 144,
											"name": "typeHint",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 168,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L168"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												142,
												143,
												141,
												144
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 164,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L164"
										}
									]
								},
								{
									"id": 187,
									"name": "FunctionExternalTypeGeneral",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of an external function pointer (general ABI type)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 190,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 332,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L332"
												}
											],
											"type": {
												"type": "literal",
												"value": "general"
											}
										},
										{
											"id": 188,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 330,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L330"
												}
											],
											"type": {
												"type": "literal",
												"value": "function"
											}
										},
										{
											"id": 191,
											"name": "typeHint",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 334,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L334"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189,
											"name": "visibility",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 331,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L331"
												}
											],
											"type": {
												"type": "literal",
												"value": "external"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												190,
												188,
												191,
												189
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 329,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L329"
										}
									]
								},
								{
									"id": 180,
									"name": "FunctionExternalTypeSpecific",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of an external function pointer (full Solidity type)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 185,
											"name": "inputParameterTypes",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 319,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L319"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 104,
													"name": "Type",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 183,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 317,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L317"
												}
											],
											"type": {
												"type": "literal",
												"value": "specific"
											}
										},
										{
											"id": 184,
											"name": "mutability",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 318,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L318"
												}
											],
											"type": {
												"type": "reference",
												"target": 2337,
												"name": "Mutability",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 186,
											"name": "outputParameterTypes",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 320,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L320"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 104,
													"name": "Type",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 181,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 315,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L315"
												}
											],
											"type": {
												"type": "literal",
												"value": "function"
											}
										},
										{
											"id": 182,
											"name": "visibility",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 316,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L316"
												}
											],
											"type": {
												"type": "literal",
												"value": "external"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												185,
												183,
												184,
												186,
												181,
												182
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 314,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L314"
										}
									]
								},
								{
									"id": 173,
									"name": "FunctionInternalType",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of an internal function pointer"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 177,
											"name": "inputParameterTypes",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 295,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L295"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 104,
													"name": "Type",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 176,
											"name": "mutability",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 294,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L294"
												}
											],
											"type": {
												"type": "reference",
												"target": 2337,
												"name": "Mutability",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 178,
											"name": "outputParameterTypes",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 296,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L296"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 104,
													"name": "Type",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 174,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 292,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L292"
												}
											],
											"type": {
												"type": "literal",
												"value": "function"
											}
										},
										{
											"id": 175,
											"name": "visibility",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 293,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L293"
												}
											],
											"type": {
												"type": "literal",
												"value": "internal"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												177,
												176,
												178,
												174,
												175
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 291,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L291"
										}
									]
								},
								{
									"id": 109,
									"name": "IntType",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a signed integer"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 111,
											"name": "bits",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 74,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L74"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 110,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 73,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L73"
												}
											],
											"type": {
												"type": "literal",
												"value": "int"
											}
										},
										{
											"id": 112,
											"name": "typeHint",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 75,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L75"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												111,
												110,
												112
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 72,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L72"
										}
									]
								},
								{
									"id": 266,
									"name": "MagicType",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a magic variable"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special container types (debugger-only)"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 269,
											"name": "memberTypes",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 588,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L588"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 270,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/format/types.ts",
															"line": 588,
															"character": 16,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L588"
														}
													],
													"indexSignature": {
														"id": 271,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"sources": [
															{
																"fileName": "codec/lib/format/types.ts",
																"line": 589,
																"character": 4,
																"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L589"
															}
														],
														"parameters": [
															{
																"id": 272,
																"name": "field",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"target": 104,
															"name": "Type",
															"package": "@truffle/codec"
														}
													}
												}
											}
										},
										{
											"id": 267,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 583,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L583"
												}
											],
											"type": {
												"type": "literal",
												"value": "magic"
											}
										},
										{
											"id": 268,
											"name": "variable",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 584,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L584"
												}
											],
											"type": {
												"type": "reference",
												"target": 265,
												"name": "MagicVariableName",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												269,
												267,
												268
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 582,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L582"
										}
									]
								},
								{
									"id": 167,
									"name": "MappingType",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a mapping"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 169,
											"name": "keyType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 274,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L274"
												}
											],
											"type": {
												"type": "reference",
												"target": 164,
												"name": "ElementaryType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 171,
											"name": "location",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 276,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L276"
												}
											],
											"type": {
												"type": "literal",
												"value": "storage"
											}
										},
										{
											"id": 168,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 273,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L273"
												}
											],
											"type": {
												"type": "literal",
												"value": "mapping"
											}
										},
										{
											"id": 170,
											"name": "valueType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 275,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L275"
												}
											],
											"type": {
												"type": "reference",
												"target": 104,
												"name": "Type",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												169,
												171,
												168,
												170
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 272,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L272"
										}
									]
								},
								{
									"id": 195,
									"name": "NameTypePair",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 196,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 369,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L369"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 197,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 370,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L370"
												}
											],
											"type": {
												"type": "reference",
												"target": 104,
												"name": "Type",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												196,
												197
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 368,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L368"
										}
									]
								},
								{
									"id": 214,
									"name": "OptionallyNamedType",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 215,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 416,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L416"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 417,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L417"
												}
											],
											"type": {
												"type": "reference",
												"target": 104,
												"name": "Type",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												215,
												216
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 415,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L415"
										}
									]
								},
								{
									"id": 281,
									"name": "OptionsType",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fictitious type used for a transaction options argument\n(e.g. value, from, etc)."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special types (encoder-only)"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 282,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 631,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L631"
												}
											],
											"type": {
												"type": "literal",
												"value": "options"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												282
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 630,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L630"
										}
									]
								},
								{
									"id": 136,
									"name": "StringType",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a string"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 138,
											"name": "location",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 155,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L155"
												}
											],
											"type": {
												"type": "reference",
												"target": 2335,
												"name": "Location",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 137,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 154,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L154"
												}
											],
											"type": {
												"type": "literal",
												"value": "string"
											}
										},
										{
											"id": 139,
											"name": "typeHint",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 156,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L156"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												138,
												137,
												139
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 153,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L153"
										}
									]
								},
								{
									"id": 207,
									"name": "StructTypeGlobal",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Global structs"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 210,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Internal ID.  Format may change in future."
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 406,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L406"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 209,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 402,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L402"
												}
											],
											"type": {
												"type": "literal",
												"value": "global"
											}
										},
										{
											"id": 213,
											"name": "location",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 412,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L412"
												}
											],
											"type": {
												"type": "reference",
												"target": 2335,
												"name": "Location",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 212,
											"name": "memberTypes",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "these must be in order"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 411,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L411"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 195,
													"name": "NameTypePair",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 208,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 401,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L401"
												}
											],
											"type": {
												"type": "literal",
												"value": "struct"
											}
										},
										{
											"id": 211,
											"name": "typeName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 407,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L407"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												210,
												209,
												213,
												212,
												208,
												211
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 400,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L400"
										}
									]
								},
								{
									"id": 198,
									"name": "StructTypeLocal",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Local structs (defined in contracts)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 204,
											"name": "definingContract",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 387,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L387"
												}
											],
											"type": {
												"type": "reference",
												"target": 237,
												"name": "ContractTypeNative",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 203,
											"name": "definingContractName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 386,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L386"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 201,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Internal ID.  Format may change in future."
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 384,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L384"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 200,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 380,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L380"
												}
											],
											"type": {
												"type": "literal",
												"value": "local"
											}
										},
										{
											"id": 206,
											"name": "location",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 392,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L392"
												}
											],
											"type": {
												"type": "reference",
												"target": 2335,
												"name": "Location",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 205,
											"name": "memberTypes",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "these must be in order"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 391,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L391"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 195,
													"name": "NameTypePair",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 199,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 379,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L379"
												}
											],
											"type": {
												"type": "literal",
												"value": "struct"
											}
										},
										{
											"id": 202,
											"name": "typeName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 385,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L385"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												204,
												203,
												201,
												200,
												206,
												205,
												199,
												202
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 378,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L378"
										}
									]
								},
								{
									"id": 217,
									"name": "TupleType",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a tuple (for use in ABI)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 219,
											"name": "memberTypes",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 427,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L427"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 214,
													"name": "OptionallyNamedType",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 218,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 426,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L426"
												}
											],
											"type": {
												"type": "literal",
												"value": "tuple"
											}
										},
										{
											"id": 220,
											"name": "typeHint",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 428,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L428"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												219,
												218,
												220
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 425,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L425"
										}
									]
								},
								{
									"id": 274,
									"name": "TypeTypeContract",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a contract type"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special container types (debugger-only)"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 277,
											"name": "stateVariableTypes",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "these must be in order, and must only include\n**non-inherited** state variables"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 612,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L612"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 195,
													"name": "NameTypePair",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 276,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 607,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L607"
												}
											],
											"type": {
												"type": "reference",
												"target": 237,
												"name": "ContractTypeNative",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 275,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 606,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L606"
												}
											],
											"type": {
												"type": "literal",
												"value": "type"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												277,
												276,
												275
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 605,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L605"
										}
									]
								},
								{
									"id": 278,
									"name": "TypeTypeEnum",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of an enum type"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special container types (debugger-only)"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 280,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 621,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L621"
												}
											],
											"type": {
												"type": "reference",
												"target": 221,
												"name": "EnumType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 279,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 620,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L620"
												}
											],
											"type": {
												"type": "literal",
												"value": "type"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												280,
												279
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 619,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L619"
										}
									]
								},
								{
									"id": 287,
									"name": "TypesByCompilationAndId",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 650,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L650"
										}
									],
									"indexSignature": {
										"id": 288,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "codec/lib/format/types.ts",
												"line": 651,
												"character": 2,
												"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L651"
											}
										],
										"parameters": [
											{
												"id": 289,
												"name": "compilationId",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reflection",
											"declaration": {
												"id": 290,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 291,
														"name": "compiler",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "codec/lib/format/types.ts",
																"line": 652,
																"character": 4,
																"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L652"
															}
														],
														"type": {
															"type": "reference",
															"target": 1764,
															"name": "CompilerVersion",
															"package": "@truffle/codec"
														}
													},
													{
														"id": 292,
														"name": "types",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "codec/lib/format/types.ts",
																"line": 653,
																"character": 4,
																"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L653"
															}
														],
														"type": {
															"type": "reference",
															"target": 284,
															"name": "TypesById",
															"package": "@truffle/codec"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															291,
															292
														]
													}
												],
												"sources": [
													{
														"fileName": "codec/lib/format/types.ts",
														"line": 651,
														"character": 27,
														"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L651"
													}
												]
											}
										}
									}
								},
								{
									"id": 284,
									"name": "TypesById",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 646,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L646"
										}
									],
									"indexSignature": {
										"id": 285,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "codec/lib/format/types.ts",
												"line": 647,
												"character": 2,
												"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L647"
											}
										],
										"parameters": [
											{
												"id": 286,
												"name": "id",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": 193,
											"name": "UserDefinedType",
											"package": "@truffle/codec"
										}
									}
								},
								{
									"id": 145,
									"name": "UfixedType",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of an unsigned fixed-point number"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 147,
											"name": "bits",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 178,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L178"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 148,
											"name": "places",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 179,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L179"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 146,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 177,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L177"
												}
											],
											"type": {
												"type": "literal",
												"value": "ufixed"
											}
										},
										{
											"id": 149,
											"name": "typeHint",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 180,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L180"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												147,
												148,
												146,
												149
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 176,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L176"
										}
									]
								},
								{
									"id": 105,
									"name": "UintType",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of an unsigned integer"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 107,
											"name": "bits",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 63,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L63"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 106,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 62,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L62"
												}
											],
											"type": {
												"type": "literal",
												"value": "uint"
											}
										},
										{
											"id": 108,
											"name": "typeHint",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 64,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L64"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												107,
												106,
												108
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 61,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L61"
										}
									]
								},
								{
									"id": 259,
									"name": "UserDefinedValueTypeTypeGlobal",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Global UDVT (defined outside a contract)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 262,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Internal ID.  Format may change in future."
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 570,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L570"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 261,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 566,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L566"
												}
											],
											"type": {
												"type": "literal",
												"value": "global"
											}
										},
										{
											"id": 260,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 565,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L565"
												}
											],
											"type": {
												"type": "literal",
												"value": "userDefinedValueType"
											}
										},
										{
											"id": 263,
											"name": "typeName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 571,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L571"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 264,
											"name": "underlyingType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 572,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L572"
												}
											],
											"type": {
												"type": "reference",
												"target": 165,
												"name": "BuiltInValueType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												262,
												261,
												260,
												263,
												264
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 564,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L564"
										}
									]
								},
								{
									"id": 251,
									"name": "UserDefinedValueTypeTypeLocal",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Local UDVT (defined in a contract)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 257,
											"name": "definingContract",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 555,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L555"
												}
											],
											"type": {
												"type": "reference",
												"target": 237,
												"name": "ContractTypeNative",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 256,
											"name": "definingContractName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 554,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L554"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 254,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Internal ID.  Format may change in future."
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 552,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L552"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 253,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 548,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L548"
												}
											],
											"type": {
												"type": "literal",
												"value": "local"
											}
										},
										{
											"id": 252,
											"name": "typeClass",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 547,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L547"
												}
											],
											"type": {
												"type": "literal",
												"value": "userDefinedValueType"
											}
										},
										{
											"id": 255,
											"name": "typeName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 553,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L553"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 258,
											"name": "underlyingType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 556,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L556"
												}
											],
											"type": {
												"type": "reference",
												"target": 165,
												"name": "BuiltInValueType",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												257,
												256,
												254,
												253,
												252,
												255,
												258
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 546,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L546"
										}
									]
								},
								{
									"id": 166,
									"name": "AbiType",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Types that can go in the ABI"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "General categories"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 254,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L254"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 105,
												"name": "UintType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 109,
												"name": "IntType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 113,
												"name": "BoolType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 116,
												"name": "BytesType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 132,
												"name": "AddressTypeGeneral",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 140,
												"name": "FixedType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 145,
												"name": "UfixedType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 136,
												"name": "StringType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 150,
												"name": "ArrayType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 187,
												"name": "FunctionExternalTypeGeneral",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 217,
												"name": "TupleType",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 127,
									"name": "AddressType",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of an address"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 124,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L124"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 128,
												"name": "AddressTypeSpecific",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 132,
												"name": "AddressTypeGeneral",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 150,
									"name": "ArrayType",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of an array"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 188,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L188"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 151,
												"name": "ArrayTypeStatic",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 158,
												"name": "ArrayTypeDynamic",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 165,
									"name": "BuiltInValueType",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Types that can underlie a user-defined value type"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "General categories"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 240,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L240"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 105,
												"name": "UintType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 109,
												"name": "IntType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 113,
												"name": "BoolType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 117,
												"name": "BytesTypeStatic",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 140,
												"name": "FixedType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 145,
												"name": "UfixedType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 128,
												"name": "AddressTypeSpecific",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 116,
									"name": "BytesType",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a bytestring (static or dynamic)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 93,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L93"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 117,
												"name": "BytesTypeStatic",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 122,
												"name": "BytesTypeDynamic",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 192,
									"name": "ContractDefinedType",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Types defined inside contracts"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "General categories"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 342,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L342"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 198,
												"name": "StructTypeLocal",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 222,
												"name": "EnumTypeLocal",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 251,
												"name": "UserDefinedValueTypeTypeLocal",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 236,
									"name": "ContractType",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a contract; used not just for actual values but wherever a contract type\nis needed\n\nContract types may be native (has Solidity info) or foreign (lacking Solidity info)."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 488,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L488"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 237,
												"name": "ContractTypeNative",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 244,
												"name": "ContractTypeForeign",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 164,
									"name": "ElementaryType",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of an elementary value"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "General categories"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 222,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L222"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 105,
												"name": "UintType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 109,
												"name": "IntType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 113,
												"name": "BoolType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 116,
												"name": "BytesType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 140,
												"name": "FixedType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 145,
												"name": "UfixedType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 127,
												"name": "AddressType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 136,
												"name": "StringType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 221,
												"name": "EnumType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 250,
												"name": "UserDefinedValueTypeType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 236,
												"name": "ContractType",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 221,
									"name": "EnumType",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of an enum\n\nEnums may be local (defined in a contract) or global (defined outside of any contract)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 438,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L438"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 222,
												"name": "EnumTypeLocal",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 230,
												"name": "EnumTypeGlobal",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 179,
									"name": "FunctionExternalType",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of an external function pointer"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 305,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L305"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 180,
												"name": "FunctionExternalTypeSpecific",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 187,
												"name": "FunctionExternalTypeGeneral",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 172,
									"name": "FunctionType",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a function pointer (internal or external)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 284,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L284"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 173,
												"name": "FunctionInternalType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 179,
												"name": "FunctionExternalType",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 265,
									"name": "MagicVariableName",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 575,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L575"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "message"
											},
											{
												"type": "literal",
												"value": "block"
											},
											{
												"type": "literal",
												"value": "transaction"
											}
										]
									}
								},
								{
									"id": 283,
									"name": "ReferenceType",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Reference types"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "General categories"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 639,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L639"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 150,
												"name": "ArrayType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 167,
												"name": "MappingType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 194,
												"name": "StructType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 136,
												"name": "StringType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 122,
												"name": "BytesTypeDynamic",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 194,
									"name": "StructType",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a struct\n\nStructs may be local (defined in a contract) or global (defined outside of any contract)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 366,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L366"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 198,
												"name": "StructTypeLocal",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 207,
												"name": "StructTypeGlobal",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 104,
									"name": "Type",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object representing a type"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "General categories"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 35,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L35"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 105,
												"name": "UintType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 109,
												"name": "IntType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 113,
												"name": "BoolType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 116,
												"name": "BytesType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 127,
												"name": "AddressType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 140,
												"name": "FixedType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 145,
												"name": "UfixedType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 136,
												"name": "StringType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 150,
												"name": "ArrayType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 167,
												"name": "MappingType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 172,
												"name": "FunctionType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 194,
												"name": "StructType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 221,
												"name": "EnumType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 250,
												"name": "UserDefinedValueTypeType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 236,
												"name": "ContractType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 266,
												"name": "MagicType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 273,
												"name": "TypeType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 217,
												"name": "TupleType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 281,
												"name": "OptionsType",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 273,
									"name": "TypeType",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a type!  This is currently only used for contract types and enum\ntypes, but may expand in the future."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special container types (debugger-only)"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 599,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L599"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 274,
												"name": "TypeTypeContract",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 278,
												"name": "TypeTypeEnum",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 193,
									"name": "UserDefinedType",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "User-defined types"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "General categories"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 352,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L352"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 192,
												"name": "ContractDefinedType",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 237,
												"name": "ContractTypeNative",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 207,
												"name": "StructTypeGlobal",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 230,
												"name": "EnumTypeGlobal",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 259,
												"name": "UserDefinedValueTypeTypeGlobal",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 250,
									"name": "UserDefinedValueTypeType",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Type of a user-defined value type\n\nThese may be local (defined in a contract) or global (defined outside of any contract)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 537,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L537"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 251,
												"name": "UserDefinedValueTypeTypeLocal",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 259,
												"name": "UserDefinedValueTypeTypeGlobal",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 81,
									"name": "forgetCompilations",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 657,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L657"
										}
									],
									"signatures": [
										{
											"id": 82,
											"name": "forgetCompilations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 657,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L657"
												}
											],
											"parameters": [
												{
													"id": 83,
													"name": "typesByCompilation",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 287,
														"name": "TypesByCompilationAndId",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 284,
												"name": "TypesById",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 87,
									"name": "fullType",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 689,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L689"
										}
									],
									"signatures": [
										{
											"id": 88,
											"name": "fullType",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 689,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L689"
												}
											],
											"parameters": [
												{
													"id": 89,
													"name": "basicType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 90,
													"name": "userDefinedTypes",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 284,
														"name": "TypesById",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 104,
												"name": "Type",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 101,
									"name": "isContractDefinedType",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 877,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L877"
										}
									],
									"signatures": [
										{
											"id": 102,
											"name": "isContractDefinedType",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 877,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L877"
												}
											],
											"parameters": [
												{
													"id": 103,
													"name": "anyType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "predicate",
												"name": "anyType",
												"asserts": false,
												"targetType": {
													"type": "reference",
													"target": 192,
													"name": "ContractDefinedType",
													"package": "@truffle/codec"
												}
											}
										}
									]
								},
								{
									"id": 84,
									"name": "isReferenceType",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 676,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L676"
										}
									],
									"signatures": [
										{
											"id": 85,
											"name": "isReferenceType",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 676,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L676"
												}
											],
											"parameters": [
												{
													"id": 86,
													"name": "anyType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "predicate",
												"name": "anyType",
												"asserts": false,
												"targetType": {
													"type": "reference",
													"target": 283,
													"name": "ReferenceType",
													"package": "@truffle/codec"
												}
											}
										}
									]
								},
								{
									"id": 91,
									"name": "specifyLocation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 706,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L706"
										}
									],
									"signatures": [
										{
											"id": 92,
											"name": "specifyLocation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 706,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L706"
												}
											],
											"parameters": [
												{
													"id": 93,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 94,
													"name": "location",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2335,
														"name": "Location",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 104,
												"name": "Type",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 95,
									"name": "typeString",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 751,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L751"
										}
									],
									"signatures": [
										{
											"id": 96,
											"name": "typeString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 751,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L751"
												}
											],
											"parameters": [
												{
													"id": 97,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 98,
									"name": "typeStringWithoutLocation",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/format/types.ts",
											"line": 760,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L760"
										}
									],
									"signatures": [
										{
											"id": 99,
											"name": "typeStringWithoutLocation",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/types.ts",
													"line": 760,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L760"
												}
											],
											"parameters": [
												{
													"id": 100,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										132,
										128,
										158,
										151,
										113,
										122,
										117,
										244,
										237,
										230,
										222,
										140,
										187,
										180,
										173,
										109,
										266,
										167,
										195,
										214,
										281,
										136,
										207,
										198,
										217,
										274,
										278,
										287,
										284,
										145,
										105,
										259,
										251
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										166,
										127,
										150,
										165,
										116,
										192,
										236,
										164,
										221,
										179,
										172,
										265,
										283,
										194,
										104,
										273,
										193,
										250
									]
								},
								{
									"title": "Functions",
									"children": [
										81,
										87,
										101,
										84,
										91,
										95,
										98
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/format/types.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/types.ts#L1"
								}
							]
						},
						{
							"id": 796,
							"name": "Utils",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 846,
									"name": "Circularity",
									"variant": "declaration",
									"kind": 4,
									"flags": {},
									"children": [
										{
											"id": 847,
											"name": "tie",
											"variant": "declaration",
											"kind": 64,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/utils/circularity.ts",
													"line": 6,
													"character": 16,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/circularity.ts#L6"
												}
											],
											"signatures": [
												{
													"id": 848,
													"name": "tie",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/format/utils/circularity.ts",
															"line": 6,
															"character": 0,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/circularity.ts#L6"
														}
													],
													"parameters": [
														{
															"id": 849,
															"name": "untied",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 294,
																"name": "Result",
																"package": "@truffle/codec"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 294,
														"name": "Format.Values.Result",
														"package": "@truffle/codec",
														"qualifiedName": "Result"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Functions",
											"children": [
												847
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/utils/circularity.ts",
											"line": 1,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/circularity.ts#L1"
										}
									]
								},
								{
									"id": 797,
									"name": "Exception",
									"variant": "declaration",
									"kind": 4,
									"flags": {
										"isProtected": true
									},
									"children": [
										{
											"id": 798,
											"name": "message",
											"variant": "declaration",
											"kind": 64,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/utils/exception.ts",
													"line": 16,
													"character": 16,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/exception.ts#L16"
												}
											],
											"signatures": [
												{
													"id": 799,
													"name": "message",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/format/utils/exception.ts",
															"line": 16,
															"character": 0,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/exception.ts#L16"
														}
													],
													"parameters": [
														{
															"id": 800,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 746,
																"name": "ErrorForThrowing",
																"package": "@truffle/codec"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Functions",
											"children": [
												798
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/utils/exception.ts",
											"line": 1,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/exception.ts#L1"
										}
									]
								},
								{
									"id": 801,
									"name": "Inspect",
									"variant": "declaration",
									"kind": 4,
									"flags": {},
									"children": [
										{
											"id": 831,
											"name": "ResultInspector",
											"variant": "declaration",
											"kind": 128,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This class is meant to be used with Node's\n[util.inspect()](https://nodejs.org/api/util.html#util_util_inspect_object_options)\nfunction.  Given a [[Format.Values.Result]] "
													},
													{
														"kind": "code",
														"text": "`value`"
													},
													{
														"kind": "text",
														"text": ", one can use\n"
													},
													{
														"kind": "code",
														"text": "`new ResultInspector(value)`"
													},
													{
														"kind": "text",
														"text": " to create a ResultInspector for that value,\nwhich can be used with util.inspect() to create a human-readable string\nrepresenting the value."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Suppose "
															},
															{
																"kind": "code",
																"text": "`value`"
															},
															{
																"kind": "text",
																"text": " is a Result.  In Node, the following would print to the\nconsole a human-readable representation of "
															},
															{
																"kind": "code",
																"text": "`value`"
															},
															{
																"kind": "text",
																"text": ", with colors enabled,\nno maximum depth, and no maximum array length, and lines (usually) no\nlonger than 80 characters:\n"
															},
															{
																"kind": "code",
																"text": "```javascript\nconsole.log(\n  util.inspect(\n    new ResultInspector(value),\n    {\n      colors: true,\n      depth: null,\n      maxArrayLength: null,\n      breakLength: 80\n    }\n  )\n);\n```"
															},
															{
																"kind": "text",
																"text": "\nOf course, there are many other ways to use util.inspect; see Node's\ndocumentation, linked above, for more."
															}
														]
													}
												]
											},
											"children": [
												{
													"id": 832,
													"name": "constructor",
													"variant": "declaration",
													"kind": 512,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/format/utils/inspect.ts",
															"line": 73,
															"character": 2,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L73"
														}
													],
													"signatures": [
														{
															"id": 833,
															"name": "new ResultInspector",
															"variant": "signature",
															"kind": 16384,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/format/utils/inspect.ts",
																	"line": 73,
																	"character": 2,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L73"
																}
															],
															"parameters": [
																{
																	"id": 834,
																	"name": "result",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 294,
																		"name": "Result",
																		"package": "@truffle/codec"
																	}
																},
																{
																	"id": 835,
																	"name": "options",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": 828,
																		"name": "ResultInspectorOptions",
																		"package": "@truffle/codec"
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": 831,
																"name": "ResultInspector",
																"package": "@truffle/codec"
															}
														}
													]
												},
												{
													"id": 837,
													"name": "options",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/format/utils/inspect.ts",
															"line": 72,
															"character": 2,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L72"
														}
													],
													"type": {
														"type": "reference",
														"target": 828,
														"name": "ResultInspectorOptions",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 836,
													"name": "result",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/format/utils/inspect.ts",
															"line": 71,
															"character": 2,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L71"
														}
													],
													"type": {
														"type": "reference",
														"target": 294,
														"name": "Result",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 842,
													"name": "[custom]",
													"variant": "declaration",
													"kind": 2048,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/format/utils/inspect.ts",
															"line": 84,
															"character": 2,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L84"
														}
													],
													"signatures": [
														{
															"id": 843,
															"name": "[custom]",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/format/utils/inspect.ts",
																	"line": 84,
																	"character": 2,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L84"
																}
															],
															"parameters": [
																{
																	"id": 844,
																	"name": "depth",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 845,
																	"name": "options",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 820,
																		"name": "InspectOptions",
																		"package": "@truffle/codec"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												},
												{
													"id": 838,
													"name": "inspect",
													"variant": "declaration",
													"kind": 2048,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/format/utils/inspect.ts",
															"line": 81,
															"character": 2,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L81"
														}
													],
													"signatures": [
														{
															"id": 839,
															"name": "inspect",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [],
																"blockTags": [
																	{
																		"tag": "@dev",
																		"content": [
																			{
																				"kind": "text",
																				"text": "non-standard alternative interface name used by browser-util-inspect\n     package"
																			}
																		]
																	}
																]
															},
															"sources": [
																{
																	"fileName": "codec/lib/format/utils/inspect.ts",
																	"line": 81,
																	"character": 2,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L81"
																}
															],
															"parameters": [
																{
																	"id": 840,
																	"name": "depth",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 841,
																	"name": "options",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 820,
																		"name": "InspectOptions",
																		"package": "@truffle/codec"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													]
												}
											],
											"groups": [
												{
													"title": "Constructors",
													"children": [
														832
													]
												},
												{
													"title": "Properties",
													"children": [
														837,
														836
													]
												},
												{
													"title": "Methods",
													"children": [
														842,
														838
													]
												}
											],
											"sources": [
												{
													"fileName": "codec/lib/format/utils/inspect.ts",
													"line": 70,
													"character": 13,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L70"
												}
											]
										},
										{
											"id": 820,
											"name": "InspectOptions",
											"variant": "declaration",
											"kind": 256,
											"flags": {},
											"children": [
												{
													"id": 827,
													"name": "breakLength",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/format/utils/inspect.ts",
															"line": 16,
															"character": 2,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L16"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 826,
													"name": "colors",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/format/utils/inspect.ts",
															"line": 15,
															"character": 2,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L15"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 821,
													"name": "stylize",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "codec/lib/format/utils/inspect.ts",
															"line": 14,
															"character": 2,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L14"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 822,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/format/utils/inspect.ts",
																	"line": 14,
																	"character": 12,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L14"
																}
															],
															"signatures": [
																{
																	"id": 823,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "codec/lib/format/utils/inspect.ts",
																			"line": 14,
																			"character": 12,
																			"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L14"
																		}
																	],
																	"parameters": [
																		{
																			"id": 824,
																			"name": "toMaybeColor",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 825,
																			"name": "style",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														827,
														826,
														821
													]
												}
											],
											"sources": [
												{
													"fileName": "codec/lib/format/utils/inspect.ts",
													"line": 13,
													"character": 17,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L13"
												}
											]
										},
										{
											"id": 828,
											"name": "ResultInspectorOptions",
											"variant": "declaration",
											"kind": 256,
											"flags": {},
											"children": [
												{
													"id": 829,
													"name": "noHideAddress",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "This option causes the [[ResultInspector]] to display, for\naddresses with a reverse ENS record, both the ENS name and\nthe address.  (By default it displays only the ENS name.)"
															}
														]
													},
													"sources": [
														{
															"fileName": "codec/lib/format/utils/inspect.ts",
															"line": 32,
															"character": 2,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L32"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 830,
													"name": "renderMappingsViaObjects",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "This flag, if set, causes mappings to be rendered via objects\nrather than Maps.  This is intended for compatibility and not\nrecommended for normal use."
															}
														]
													},
													"sources": [
														{
															"fileName": "codec/lib/format/utils/inspect.ts",
															"line": 38,
															"character": 2,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L38"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														829,
														830
													]
												}
											],
											"sources": [
												{
													"fileName": "codec/lib/format/utils/inspect.ts",
													"line": 26,
													"character": 17,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L26"
												}
											]
										},
										{
											"id": 814,
											"name": "nativizeAccessList",
											"variant": "declaration",
											"kind": 64,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/utils/inspect.ts",
													"line": 787,
													"character": 16,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L787"
												}
											],
											"signatures": [
												{
													"id": 815,
													"name": "nativizeAccessList",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Turns a wrapped access list into a usable form.\nWill fail if the input is not a wrapped access list!\nNote that the storage keys must be given as uint256, not bytes32.\nPrimarily meant for internal use."
															}
														]
													},
													"sources": [
														{
															"fileName": "codec/lib/format/utils/inspect.ts",
															"line": 787,
															"character": 0,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L787"
														}
													],
													"parameters": [
														{
															"id": 816,
															"name": "wrappedAccessList",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 313,
																"name": "ArrayValue",
																"package": "@truffle/codec"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 2362,
														"name": "Common.AccessList",
														"package": "@truffle/codec",
														"qualifiedName": "AccessList"
													}
												}
											]
										},
										{
											"id": 817,
											"name": "stringValueInfoToStringLossy",
											"variant": "declaration",
											"kind": 64,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/utils/inspect.ts",
													"line": 815,
													"character": 16,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L815"
												}
											],
											"signatures": [
												{
													"id": 818,
													"name": "stringValueInfoToStringLossy",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/format/utils/inspect.ts",
															"line": 815,
															"character": 0,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L815"
														}
													],
													"parameters": [
														{
															"id": 819,
															"name": "info",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 491,
																"name": "StringValueInfo",
																"package": "@truffle/codec"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										},
										{
											"id": 811,
											"name": "unsafeNativize",
											"variant": "declaration",
											"kind": 64,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/utils/inspect.ts",
													"line": 599,
													"character": 16,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L599"
												}
											],
											"signatures": [
												{
													"id": 812,
													"name": "unsafeNativize",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "WARNING! Do NOT use this function in real code unless you absolutely have\nto!  Using it in controlled tests is fine, but do NOT use it in real code if\nyou have any better option!\n\nThis function is a giant hack.  It will throw exceptions on numbers that\ndon't fit in a Javascript number.  It loses various information.  It was\nonly ever written to support our hacked-together watch expression system,\nand later repurposed to make testing easier.\n\nIf you are not doing something as horrible as evaluating user-inputted\nJavascript expressions meant to operate upon Solidity variables, then you\nprobably have a better option than using this in real code!\n\n(For instance, if you just want to nicely print individual values, without\nattempting to first operate on them via Javascript expressions, we have the\n[[ResultInspector]] class, which can be used with Node's\n[util.inspect()](https://nodejs.org/api/util.html#util_util_inspect_object_options)\nto do exactly that.)\n\nRemember, the decoder output format was made to be machine-readable.  It\nshouldn't be too hard for you to process.  If it comes to it, copy-paste\nthis code and dehackify it for your use case, which hopefully is more\nmanageable than the one that caused us to write this."
															}
														]
													},
													"sources": [
														{
															"fileName": "codec/lib/format/utils/inspect.ts",
															"line": 599,
															"character": 0,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L599"
														}
													],
													"parameters": [
														{
															"id": 813,
															"name": "result",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 294,
																"name": "Result",
																"package": "@truffle/codec"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										},
										{
											"id": 802,
											"name": "unsafeNativizeVariables",
											"variant": "declaration",
											"kind": 64,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/utils/inspect.ts",
													"line": 558,
													"character": 16,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L558"
												}
											],
											"signatures": [
												{
													"id": 803,
													"name": "unsafeNativizeVariables",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "WARNING! Do NOT use this function in real code unless you\nabsolutely have to!  Using it in controlled tests is fine,\nbut do NOT use it in real code if you have any better option!\nSee [[unsafeNativize]] for why!"
															}
														]
													},
													"sources": [
														{
															"fileName": "codec/lib/format/utils/inspect.ts",
															"line": 558,
															"character": 0,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L558"
														}
													],
													"parameters": [
														{
															"id": 804,
															"name": "variables",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 805,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "codec/lib/format/utils/inspect.ts",
																			"line": 558,
																			"character": 51,
																			"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L558"
																		}
																	],
																	"indexSignature": {
																		"id": 806,
																		"name": "__index",
																		"variant": "signature",
																		"kind": 8192,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "codec/lib/format/utils/inspect.ts",
																				"line": 559,
																				"character": 2,
																				"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L559"
																			}
																		],
																		"parameters": [
																			{
																				"id": 807,
																				"name": "name",
																				"variant": "param",
																				"kind": 32768,
																				"flags": {},
																				"type": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 294,
																			"name": "Format.Values.Result",
																			"package": "@truffle/codec",
																			"qualifiedName": "Result"
																		}
																	}
																}
															}
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 808,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/format/utils/inspect.ts",
																	"line": 560,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L560"
																}
															],
															"indexSignature": {
																"id": 809,
																"name": "__index",
																"variant": "signature",
																"kind": 8192,
																"flags": {},
																"sources": [
																	{
																		"fileName": "codec/lib/format/utils/inspect.ts",
																		"line": 560,
																		"character": 6,
																		"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L560"
																	}
																],
																"parameters": [
																	{
																		"id": 810,
																		"name": "name",
																		"variant": "param",
																		"kind": 32768,
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Classes",
											"children": [
												831
											]
										},
										{
											"title": "Interfaces",
											"children": [
												820,
												828
											]
										},
										{
											"title": "Functions",
											"children": [
												814,
												817,
												811,
												802
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/utils/inspect.ts",
											"line": 1,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/inspect.ts#L1"
										}
									]
								}
							],
							"groups": [
								{
									"title": "Namespaces",
									"children": [
										846,
										797,
										801
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/format/utils/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/utils/index.ts#L1"
								}
							]
						},
						{
							"id": 293,
							"name": "Values",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Contains the types for value and result objects."
									}
								]
							},
							"children": [
								{
									"id": 474,
									"name": "AddressValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An address value"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 481,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 138,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L138"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 482,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 484,
															"name": "contractClass",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 140,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L140"
																}
															],
															"type": {
																"type": "reference",
																"target": 236,
																"name": "ContractType",
																"package": "@truffle/codec"
															}
														},
														{
															"id": 483,
															"name": "ensName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 139,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L139"
																}
															],
															"type": {
																"type": "reference",
																"target": 491,
																"name": "StringValueInfo",
																"package": "@truffle/codec"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																484,
																483
															]
														}
													],
													"sources": [
														{
															"fileName": "codec/lib/format/elementary.ts",
															"line": 138,
															"character": 19,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L138"
														}
													]
												}
											}
										},
										{
											"id": 476,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 127,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L127"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 475,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 126,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L126"
												}
											],
											"type": {
												"type": "reference",
												"target": 127,
												"name": "AddressType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 477,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 128,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L128"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 478,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 479,
															"name": "asAddress",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "has leading \"0x\" and is checksum-cased"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 132,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L132"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 480,
															"name": "rawAsHex",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "just a hex string, so no checksum"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 136,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L136"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																479,
																480
															]
														}
													],
													"sources": [
														{
															"fileName": "codec/lib/format/elementary.ts",
															"line": 128,
															"character": 9,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L128"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												481,
												476,
												475,
												477
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 125,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L125"
										}
									]
								},
								{
									"id": 313,
									"name": "ArrayValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array value (may contain errors!)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 318,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 273,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L273"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 319,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 315,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 267,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L267"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 316,
											"name": "reference",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "will be used in the future for circular vales"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 271,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L271"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 314,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 266,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L266"
												}
											],
											"type": {
												"type": "reference",
												"target": 150,
												"name": "ArrayType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 317,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 272,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L272"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 294,
													"name": "Result",
													"package": "@truffle/codec"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												318,
												315,
												316,
												314,
												317
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 265,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L265"
										}
									]
								},
								{
									"id": 449,
									"name": "BoolValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A boolean value"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 455,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 82,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L82"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 456,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 451,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 78,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L78"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 450,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 77,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L77"
												}
											],
											"type": {
												"type": "reference",
												"target": 113,
												"name": "BoolType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 452,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 79,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L79"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 453,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 454,
															"name": "asBoolean",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 80,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L80"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																454
															]
														}
													],
													"sources": [
														{
															"fileName": "codec/lib/format/elementary.ts",
															"line": 79,
															"character": 9,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L79"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												455,
												451,
												450,
												452
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 76,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L76"
										}
									]
								},
								{
									"id": 466,
									"name": "BytesDynamicValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bytestring value (dynamic length)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 472,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 117,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L117"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 473,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 468,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 110,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L110"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 467,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 109,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L109"
												}
											],
											"type": {
												"type": "reference",
												"target": 122,
												"name": "BytesTypeDynamic",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 469,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 111,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L111"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 470,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 471,
															"name": "asHex",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "hex-formatted, with leading \"0x\""
																	}
																]
															},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 115,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L115"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																471
															]
														}
													],
													"sources": [
														{
															"fileName": "codec/lib/format/elementary.ts",
															"line": 111,
															"character": 9,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L111"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												472,
												468,
												467,
												469
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 108,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L108"
										}
									]
								},
								{
									"id": 457,
									"name": "BytesStaticValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bytestring value (static length)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 464,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 100,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L100"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 465,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 459,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 92,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L92"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 458,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 91,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L91"
												}
											],
											"type": {
												"type": "reference",
												"target": 117,
												"name": "BytesTypeStatic",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 460,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 93,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L93"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 461,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 462,
															"name": "asHex",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "hex-formatted, with leading \"0x\""
																	}
																]
															},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 97,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L97"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 463,
															"name": "rawAsHex",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 98,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L98"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																462,
																463
															]
														}
													],
													"sources": [
														{
															"fileName": "codec/lib/format/elementary.ts",
															"line": 93,
															"character": 9,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L93"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												464,
												459,
												458,
												460
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 90,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L90"
										}
									]
								},
								{
									"id": 531,
									"name": "ContractValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A contract value; see [[ContractValueInfo]] for more detail"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 535,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 255,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L255"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 536,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 537,
															"name": "ensName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 256,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L256"
																}
															],
															"type": {
																"type": "reference",
																"target": 491,
																"name": "StringValueInfo",
																"package": "@truffle/codec"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																537
															]
														}
													],
													"sources": [
														{
															"fileName": "codec/lib/format/elementary.ts",
															"line": 255,
															"character": 19,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L255"
														}
													]
												}
											}
										},
										{
											"id": 533,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 253,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L253"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 532,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 252,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L252"
												}
											],
											"type": {
												"type": "reference",
												"target": 236,
												"name": "ContractType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 534,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 254,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L254"
												}
											],
											"type": {
												"type": "reference",
												"target": 538,
												"name": "ContractValueInfo",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												535,
												533,
												532,
												534
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 251,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L251"
										}
									]
								},
								{
									"id": 539,
									"name": "ContractValueInfoKnown",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This type of ContractValueInfo is used when we can identify the class."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 541,
											"name": "address",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "formatted as address (leading \"0x\", checksum-cased);\nnote that this is not an AddressResult!"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 281,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L281"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 543,
											"name": "class",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 286,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L286"
												}
											],
											"type": {
												"type": "reference",
												"target": 236,
												"name": "ContractType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 540,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 276,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L276"
												}
											],
											"type": {
												"type": "literal",
												"value": "known"
											}
										},
										{
											"id": 542,
											"name": "rawAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "this is just a hexstring; no checksum (also may have padding beforehand)"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 285,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L285"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												541,
												543,
												540,
												542
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 275,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L275"
										}
									]
								},
								{
									"id": 544,
									"name": "ContractValueInfoUnknown",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This type of ContractValueInfo is used when we can't identify the class."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 546,
											"name": "address",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "formatted as address (leading \"0x\", checksum-cased);\nnote that this is not an AddressResult!"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 301,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L301"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 545,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 296,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L296"
												}
											],
											"type": {
												"type": "literal",
												"value": "unknown"
											}
										},
										{
											"id": 547,
											"name": "rawAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "this is just a hexstring; no checksum (also may have padding beforehand)"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 305,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L305"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												546,
												545,
												547
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 295,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L295"
										}
									]
								},
								{
									"id": 516,
									"name": "EnumValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An enum value"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 523,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 231,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L231"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 524,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 518,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 223,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L223"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 517,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 222,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L222"
												}
											],
											"type": {
												"type": "reference",
												"target": 221,
												"name": "EnumType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 519,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 224,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L224"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 520,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 521,
															"name": "name",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 225,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L225"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 522,
															"name": "numericAsBN",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "the numeric value of the enum"
																	}
																]
															},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 229,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L229"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
																	"qualifiedName": "BN"
																},
																"name": "BN",
																"package": "@types/bn.js"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																521,
																522
															]
														}
													],
													"sources": [
														{
															"fileName": "codec/lib/format/elementary.ts",
															"line": 224,
															"character": 9,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L224"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												523,
												518,
												517,
												519
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 221,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L221"
										}
									]
								},
								{
									"id": 498,
									"name": "FixedValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A signed fixed-point value"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 505,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 198,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L198"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 506,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 500,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 193,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L193"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 499,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 192,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L192"
												}
											],
											"type": {
												"type": "reference",
												"target": 140,
												"name": "FixedType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 501,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 194,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L194"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 502,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 503,
															"name": "asBig",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 195,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L195"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/@types/big.js/index.d.ts",
																	"qualifiedName": "Big"
																},
																"name": "Big",
																"package": "@types/big.js"
															}
														},
														{
															"id": 504,
															"name": "rawAsBig",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 196,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L196"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/@types/big.js/index.d.ts",
																	"qualifiedName": "Big"
																},
																"name": "Big",
																"package": "@types/big.js"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																503,
																504
															]
														}
													],
													"sources": [
														{
															"fileName": "codec/lib/format/elementary.ts",
															"line": 194,
															"character": 9,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L194"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												505,
												500,
												499,
												501
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 191,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L191"
										}
									]
								},
								{
									"id": 376,
									"name": "FunctionExternalValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An external function pointer value; see [[FunctionExternalValueInfo]] for more detail"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 380,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 454,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L454"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 381,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 382,
															"name": "contractEnsName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "codec/lib/format/values.ts",
																	"line": 455,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L455"
																}
															],
															"type": {
																"type": "reference",
																"target": 491,
																"name": "StringValueInfo",
																"package": "@truffle/codec"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																382
															]
														}
													],
													"sources": [
														{
															"fileName": "codec/lib/format/values.ts",
															"line": 454,
															"character": 19,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L454"
														}
													]
												}
											}
										},
										{
											"id": 378,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 452,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L452"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 377,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 451,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L451"
												}
											],
											"type": {
												"type": "reference",
												"target": 179,
												"name": "FunctionExternalType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 379,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 453,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L453"
												}
											],
											"type": {
												"type": "reference",
												"target": 383,
												"name": "FunctionExternalValueInfo",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												380,
												378,
												377,
												379
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 450,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L450"
										}
									]
								},
								{
									"id": 389,
									"name": "FunctionExternalValueInfoInvalid",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This type of FunctionExternalValueInfo is used when we can identify the class but can't locate the function."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 391,
											"name": "contract",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 495,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L495"
												}
											],
											"type": {
												"type": "reference",
												"target": 539,
												"name": "ContractValueInfoKnown",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 390,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 494,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L494"
												}
											],
											"type": {
												"type": "literal",
												"value": "invalid"
											}
										},
										{
											"id": 392,
											"name": "selector",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "formatted as a hex string"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 499,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L499"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												391,
												390,
												392
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 493,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L493"
										}
									]
								},
								{
									"id": 384,
									"name": "FunctionExternalValueInfoKnown",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This type of FunctionExternalValueInfo is used for a known function of a known class."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 388,
											"name": "abi",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 484,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L484"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../abi-utils/lib/types.ts",
													"qualifiedName": "FunctionEntry"
												},
												"name": "FunctionEntry",
												"package": "@truffle/abi-utils"
											}
										},
										{
											"id": 386,
											"name": "contract",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 479,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L479"
												}
											],
											"type": {
												"type": "reference",
												"target": 539,
												"name": "ContractValueInfoKnown",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 385,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 478,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L478"
												}
											],
											"type": {
												"type": "literal",
												"value": "known"
											}
										},
										{
											"id": 387,
											"name": "selector",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "formatted as a hex string"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 483,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L483"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												388,
												386,
												385,
												387
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 477,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L477"
										}
									]
								},
								{
									"id": 393,
									"name": "FunctionExternalValueInfoUnknown",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This type of FunctionExternalValueInfo is used when we can't even locate the class."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 395,
											"name": "contract",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 509,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L509"
												}
											],
											"type": {
												"type": "reference",
												"target": 544,
												"name": "ContractValueInfoUnknown",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 394,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 508,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L508"
												}
											],
											"type": {
												"type": "literal",
												"value": "unknown"
											}
										},
										{
											"id": 396,
											"name": "selector",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "formatted as a hex string"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 513,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L513"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												395,
												394,
												396
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 507,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L507"
										}
									]
								},
								{
									"id": 553,
									"name": "FunctionInternalRawInfoIndex",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "In IR-based Solidity, the raw information for an internal function pointer is\ngiven as an index into a jump table."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 555,
											"name": "functionIndex",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/internal.ts",
													"line": 34,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/internal.ts#L34"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 554,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/internal.ts",
													"line": 33,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/internal.ts#L33"
												}
											],
											"type": {
												"type": "literal",
												"value": "index"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												555,
												554
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/internal.ts",
											"line": 32,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/internal.ts#L32"
										}
									]
								},
								{
									"id": 549,
									"name": "FunctionInternalRawInfoPcPair",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "In non-IR Solidity, the raw information for an internal function pointer is\ngiven as pair of program counter values; one for the constructor context and\none for the deployed context)."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 552,
											"name": "constructorProgramCounter",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/internal.ts",
													"line": 23,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/internal.ts#L23"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 551,
											"name": "deployedProgramCounter",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/internal.ts",
													"line": 22,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/internal.ts#L22"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 550,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/internal.ts",
													"line": 21,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/internal.ts#L21"
												}
											],
											"type": {
												"type": "literal",
												"value": "pcpair"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												552,
												551,
												550
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/internal.ts",
											"line": 20,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/internal.ts#L20"
										}
									]
								},
								{
									"id": 398,
									"name": "FunctionInternalValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An internal function pointer value; see [[FunctionInternalValueInfo]] for more detail"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 402,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 538,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L538"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 403,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 400,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 536,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L536"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 399,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 535,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L535"
												}
											],
											"type": {
												"type": "reference",
												"target": 173,
												"name": "FunctionInternalType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 401,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 537,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L537"
												}
											],
											"type": {
												"type": "reference",
												"target": 404,
												"name": "FunctionInternalValueInfo",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												402,
												400,
												399,
												401
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 534,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L534"
										}
									]
								},
								{
									"id": 413,
									"name": "FunctionInternalValueInfoException",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A default value -- internal functions have two default values\ndepending on whether they live in storage or elsewhere.\nIn storage the default value is 0 for both program counters.\nElsewhere they're both nonzero."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 415,
											"name": "context",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 586,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L586"
												}
											],
											"type": {
												"type": "reference",
												"target": 236,
												"name": "ContractType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 414,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 585,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L585"
												}
											],
											"type": {
												"type": "literal",
												"value": "exception"
											}
										},
										{
											"id": 416,
											"name": "rawInformation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 587,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L587"
												}
											],
											"type": {
												"type": "reference",
												"target": 548,
												"name": "FunctionInternalRawInfo",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												415,
												414,
												416
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 584,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L584"
										}
									]
								},
								{
									"id": 405,
									"name": "FunctionInternalValueInfoKnown",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This type of FunctionInternalValueInfo is used for an actual internal function."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 407,
											"name": "context",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 561,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L561"
												}
											],
											"type": {
												"type": "reference",
												"target": 236,
												"name": "ContractType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 410,
											"name": "definedIn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Is null for a free function"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 567,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L567"
												}
											],
											"type": {
												"type": "reference",
												"target": 236,
												"name": "ContractType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 411,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An internal opaque ID"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 571,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L571"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 406,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 560,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L560"
												}
											],
											"type": {
												"type": "literal",
												"value": "function"
											}
										},
										{
											"id": 412,
											"name": "mutability",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 572,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L572"
												}
											],
											"type": {
												"type": "reference",
												"target": 2337,
												"name": "Mutability",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 409,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 563,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L563"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 408,
											"name": "rawInformation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 562,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L562"
												}
											],
											"type": {
												"type": "reference",
												"target": 548,
												"name": "FunctionInternalRawInfo",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												407,
												410,
												411,
												406,
												412,
												409,
												408
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 559,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L559"
										}
									]
								},
								{
									"id": 417,
									"name": "FunctionInternalValueInfoUnknown",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This type is used when decoding internal functions in contexts that don't\nsupport full decoding of such functions.  The high-level decoding interface\ncan currently only sometimes perform such a full decoding.\n\nIn contexts where such full decoding isn't supported, you'll get one of\nthese; so you'll still get the program counter values, but further\ninformation will be absent.  Note you'll get this even if really it should\ndecode to an error, because if there's insufficient information to determine\nadditional function information, there's necessarily insufficient\ninformation to determine if it should be an error."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 419,
											"name": "context",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 606,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L606"
												}
											],
											"type": {
												"type": "reference",
												"target": 236,
												"name": "ContractType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 418,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 605,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L605"
												}
											],
											"type": {
												"type": "literal",
												"value": "unknown"
											}
										},
										{
											"id": 420,
											"name": "rawInformation",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 607,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L607"
												}
											],
											"type": {
												"type": "reference",
												"target": 548,
												"name": "FunctionInternalRawInfo",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												419,
												418,
												420
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 604,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L604"
										}
									]
								},
								{
									"id": 440,
									"name": "IntValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A signed integer value"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 447,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 68,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L68"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 448,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 442,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 63,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L63"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 441,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 62,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L62"
												}
											],
											"type": {
												"type": "reference",
												"target": 109,
												"name": "IntType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 443,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 64,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L64"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 444,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 445,
															"name": "asBN",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 65,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L65"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
																	"qualifiedName": "BN"
																},
																"name": "BN",
																"package": "@types/bn.js"
															}
														},
														{
															"id": 446,
															"name": "rawAsBN",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 66,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L66"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
																	"qualifiedName": "BN"
																},
																"name": "BN",
																"package": "@types/bn.js"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																445,
																446
															]
														}
													],
													"sources": [
														{
															"fileName": "codec/lib/format/elementary.ts",
															"line": 64,
															"character": 9,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L64"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												447,
												442,
												441,
												443
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 61,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L61"
										}
									]
								},
								{
									"id": 327,
									"name": "KeyValuePair",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 328,
											"name": "key",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 301,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L301"
												}
											],
											"type": {
												"type": "reference",
												"target": 428,
												"name": "ElementaryValue",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 329,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 302,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L302"
												}
											],
											"type": {
												"type": "reference",
												"target": 294,
												"name": "Result",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												328,
												329
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 300,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L300"
										}
									]
								},
								{
									"id": 352,
									"name": "MagicValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A magic variable's value (may contain errors?)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special container types (debugger-only)"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 359,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 381,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L381"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 360,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 354,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 376,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L376"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 353,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 375,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L375"
												}
											],
											"type": {
												"type": "reference",
												"target": 266,
												"name": "MagicType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 355,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 378,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L378"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 356,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/format/values.ts",
															"line": 378,
															"character": 9,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L378"
														}
													],
													"indexSignature": {
														"id": 357,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"sources": [
															{
																"fileName": "codec/lib/format/values.ts",
																"line": 379,
																"character": 4,
																"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L379"
															}
														],
														"parameters": [
															{
																"id": 358,
																"name": "field",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"target": 294,
															"name": "Result",
															"package": "@truffle/codec"
														}
													}
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												359,
												354,
												353,
												355
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 374,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L374"
										}
									]
								},
								{
									"id": 321,
									"name": "MappingValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A mapping value (may contain errors!)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 325,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 297,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L297"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 326,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 323,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 290,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L290"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 322,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 289,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L289"
												}
											],
											"type": {
												"type": "reference",
												"target": 167,
												"name": "MappingType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 324,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "order is irrelevant; also note keys must be values, not errors"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 296,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L296"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 327,
													"name": "KeyValuePair",
													"package": "@truffle/codec"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												325,
												323,
												322,
												324
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 288,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L288"
										}
									]
								},
								{
									"id": 338,
									"name": "NameValuePair",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 339,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 334,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L334"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 340,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 335,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L335"
												}
											],
											"type": {
												"type": "reference",
												"target": 294,
												"name": "Result",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												339,
												340
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 333,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L333"
										}
									]
								},
								{
									"id": 348,
									"name": "OptionallyNamedValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 349,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 358,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L358"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 350,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 359,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L359"
												}
											],
											"type": {
												"type": "reference",
												"target": 294,
												"name": "Result",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												349,
												350
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 357,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L357"
										}
									]
								},
								{
									"id": 422,
									"name": "OptionsValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An options value"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special types (encoder-only)"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 426,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 630,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L630"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 427,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 424,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 628,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L628"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 423,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 627,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L627"
												}
											],
											"type": {
												"type": "reference",
												"target": 281,
												"name": "OptionsType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 425,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 629,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L629"
												}
											],
											"type": {
												"type": "reference",
												"target": 2348,
												"name": "Options",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												426,
												424,
												423,
												425
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 626,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L626"
										}
									]
								},
								{
									"id": 485,
									"name": "StringValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A string value; see [[StringValueInfo]] for more detail"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 489,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 153,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L153"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 490,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 487,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 151,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L151"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 486,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 150,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L150"
												}
											],
											"type": {
												"type": "reference",
												"target": 136,
												"name": "StringType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 488,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 152,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L152"
												}
											],
											"type": {
												"type": "reference",
												"target": 491,
												"name": "StringValueInfo",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												489,
												487,
												486,
												488
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 149,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L149"
										}
									]
								},
								{
									"id": 495,
									"name": "StringValueInfoMalformed",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This type of StringValueInfo represents a malformed string."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 497,
											"name": "asHex",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "hex-formatted, with leading \"0x\""
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 183,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L183"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 496,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 179,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L179"
												}
											],
											"type": {
												"type": "literal",
												"value": "malformed"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												497,
												496
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 178,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L178"
										}
									]
								},
								{
									"id": 492,
									"name": "StringValueInfoValid",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This type of StringValueInfo represents a valid UTF-8 string."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 494,
											"name": "asString",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 170,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L170"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 493,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 169,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L169"
												}
											],
											"type": {
												"type": "literal",
												"value": "valid"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												494,
												493
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 168,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L168"
										}
									]
								},
								{
									"id": 331,
									"name": "StructValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A struct value (may contain errors!)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 336,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 330,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L330"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 337,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 333,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 319,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L319"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 334,
											"name": "reference",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "will be used in the future for circular vales"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 323,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L323"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 332,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 318,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L318"
												}
											],
											"type": {
												"type": "reference",
												"target": 194,
												"name": "StructType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 335,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "these must be stored in order!\nmoreover, any mappings *must* be included, even\nif this is a memory struct (such mappings will be empty)"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 329,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L329"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 338,
													"name": "NameValuePair",
													"package": "@truffle/codec"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												336,
												333,
												334,
												332,
												335
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 317,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L317"
										}
									]
								},
								{
									"id": 342,
									"name": "TupleValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A tuple value (may contain errors!)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 346,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 354,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L354"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 347,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 344,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 352,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L352"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 343,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 351,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L351"
												}
											],
											"type": {
												"type": "reference",
												"target": 217,
												"name": "TupleType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 345,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 353,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L353"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 348,
													"name": "OptionallyNamedValue",
													"package": "@truffle/codec"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												346,
												344,
												343,
												345
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 350,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L350"
										}
									]
								},
								{
									"id": 363,
									"name": "TypeValueContract",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A contract type's value (see [[TypeValue]])"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special container types (debugger-only)"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 367,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 414,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L414"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 368,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 365,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 409,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L409"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 364,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 408,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L408"
												}
											],
											"type": {
												"type": "reference",
												"target": 274,
												"name": "TypeTypeContract",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 366,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "these must be stored in order!"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 413,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L413"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 338,
													"name": "NameValuePair",
													"package": "@truffle/codec"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												367,
												365,
												364,
												366
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 407,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L407"
										}
									]
								},
								{
									"id": 369,
									"name": "TypeValueEnum",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An enum type's value (see [[TypeValue]])"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special container types (debugger-only)"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 373,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 429,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L429"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 374,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 371,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 424,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L424"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 370,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 423,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L423"
												}
											],
											"type": {
												"type": "reference",
												"target": 278,
												"name": "TypeTypeEnum",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 372,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "these must be stored in order!"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/format/values.ts",
													"line": 428,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L428"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 516,
													"name": "EnumValue",
													"package": "@truffle/codec"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												373,
												371,
												370,
												372
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 422,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L422"
										}
									]
								},
								{
									"id": 507,
									"name": "UfixedValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An unsigned fixed-point value"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 514,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 213,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L213"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 515,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 509,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 208,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L208"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 508,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 207,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L207"
												}
											],
											"type": {
												"type": "reference",
												"target": 145,
												"name": "UfixedType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 510,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 209,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L209"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 511,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 512,
															"name": "asBig",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 210,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L210"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/@types/big.js/index.d.ts",
																	"qualifiedName": "Big"
																},
																"name": "Big",
																"package": "@types/big.js"
															}
														},
														{
															"id": 513,
															"name": "rawAsBig",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 211,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L211"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/@types/big.js/index.d.ts",
																	"qualifiedName": "Big"
																},
																"name": "Big",
																"package": "@types/big.js"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																512,
																513
															]
														}
													],
													"sources": [
														{
															"fileName": "codec/lib/format/elementary.ts",
															"line": 209,
															"character": 9,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L209"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												514,
												509,
												508,
												510
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 206,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L206"
										}
									]
								},
								{
									"id": 431,
									"name": "UintValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An unsigned integer value"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 438,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 53,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L53"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 439,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 433,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 48,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L48"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 432,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 47,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L47"
												}
											],
											"type": {
												"type": "reference",
												"target": 105,
												"name": "UintType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 434,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 49,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L49"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 435,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 436,
															"name": "asBN",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 50,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L50"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
																	"qualifiedName": "BN"
																},
																"name": "BN",
																"package": "@types/bn.js"
															}
														},
														{
															"id": 437,
															"name": "rawAsBN",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "codec/lib/format/elementary.ts",
																	"line": 51,
																	"character": 4,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L51"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
																	"qualifiedName": "BN"
																},
																"name": "BN",
																"package": "@types/bn.js"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																436,
																437
															]
														}
													],
													"sources": [
														{
															"fileName": "codec/lib/format/elementary.ts",
															"line": 49,
															"character": 9,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L49"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												438,
												433,
												432,
												434
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 46,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L46"
										}
									]
								},
								{
									"id": 525,
									"name": "UserDefinedValueTypeValue",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A UDVT value"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"children": [
										{
											"id": 529,
											"name": "interpretations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 243,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L243"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 530,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										},
										{
											"id": 527,
											"name": "kind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 241,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L241"
												}
											],
											"type": {
												"type": "literal",
												"value": "value"
											}
										},
										{
											"id": 526,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 240,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L240"
												}
											],
											"type": {
												"type": "reference",
												"target": 250,
												"name": "UserDefinedValueTypeType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 528,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/format/elementary.ts",
													"line": 242,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L242"
												}
											],
											"type": {
												"type": "reference",
												"target": 429,
												"name": "BuiltInValueValue",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												529,
												527,
												526,
												528
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 239,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L239"
										}
									]
								},
								{
									"id": 297,
									"name": "AbiResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A result for an ABI type"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "General categories"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 109,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L109"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 300,
												"name": "UintResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 301,
												"name": "IntResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 302,
												"name": "BoolResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 299,
												"name": "BytesResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 305,
												"name": "AddressResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 307,
												"name": "FixedResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 308,
												"name": "UfixedResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 306,
												"name": "StringResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 312,
												"name": "ArrayResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 375,
												"name": "FunctionExternalResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 341,
												"name": "TupleResult",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 296,
									"name": "AbiValue",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A value that can go in the ABI"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "General categories"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 91,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L91"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 431,
												"name": "UintValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 440,
												"name": "IntValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 449,
												"name": "BoolValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 430,
												"name": "BytesValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 474,
												"name": "AddressValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 498,
												"name": "FixedValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 507,
												"name": "UfixedValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 485,
												"name": "StringValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 313,
												"name": "ArrayValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 376,
												"name": "FunctionExternalValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 342,
												"name": "TupleValue",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 305,
									"name": "AddressResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An address value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 199,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L199"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 474,
												"name": "AddressValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 607,
												"name": "Errors.AddressErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "AddressErrorResult"
											}
										]
									}
								},
								{
									"id": 312,
									"name": "ArrayResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 258,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L258"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 313,
												"name": "ArrayValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 674,
												"name": "Errors.ArrayErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "ArrayErrorResult"
											}
										]
									}
								},
								{
									"id": 302,
									"name": "BoolResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A boolean value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 174,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L174"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 449,
												"name": "BoolValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 581,
												"name": "Errors.BoolErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "BoolErrorResult"
											}
										]
									}
								},
								{
									"id": 429,
									"name": "BuiltInValueValue",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 25,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L25"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 431,
												"name": "UintValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 440,
												"name": "IntValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 449,
												"name": "BoolValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 457,
												"name": "BytesStaticValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 474,
												"name": "AddressValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 498,
												"name": "FixedValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 507,
												"name": "UfixedValue",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 304,
									"name": "BytesDynamicResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bytestring value or error (dynamic-length)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 190,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L190"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 466,
												"name": "BytesDynamicValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 602,
												"name": "Errors.BytesDynamicErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "BytesDynamicErrorResult"
											}
										]
									}
								},
								{
									"id": 299,
									"name": "BytesResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bytestring value or error (static or dynamic)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 153,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L153"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 303,
												"name": "BytesStaticResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 304,
												"name": "BytesDynamicResult",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 303,
									"name": "BytesStaticResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bytestring value or error (static-length)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 181,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L181"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 457,
												"name": "BytesStaticValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 593,
												"name": "Errors.BytesStaticErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "BytesStaticErrorResult"
											}
										]
									}
								},
								{
									"id": 430,
									"name": "BytesValue",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A bytestring value (static or dynamic)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 39,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L39"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 457,
												"name": "BytesStaticValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 466,
												"name": "BytesDynamicValue",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 311,
									"name": "ContractResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A contract value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 247,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L247"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 531,
												"name": "ContractValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 665,
												"name": "Errors.ContractErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "ContractErrorResult"
											}
										]
									}
								},
								{
									"id": 538,
									"name": "ContractValueInfo",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "There are two types -- one for contracts whose class we can identify, and one\nfor when we can't identify the class."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 266,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L266"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 539,
												"name": "ContractValueInfoKnown",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 544,
												"name": "ContractValueInfoUnknown",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 298,
									"name": "ElementaryResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An elementary value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "General categories"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 135,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L135"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 300,
												"name": "UintResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 301,
												"name": "IntResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 302,
												"name": "BoolResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 299,
												"name": "BytesResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 305,
												"name": "AddressResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 306,
												"name": "StringResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 307,
												"name": "FixedResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 308,
												"name": "UfixedResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 309,
												"name": "EnumResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 310,
												"name": "UserDefinedValueTypeResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 311,
												"name": "ContractResult",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 428,
									"name": "ElementaryValue",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An elementary value"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "General categories"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 12,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L12"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 431,
												"name": "UintValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 440,
												"name": "IntValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 449,
												"name": "BoolValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 430,
												"name": "BytesValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 474,
												"name": "AddressValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 485,
												"name": "StringValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 498,
												"name": "FixedValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 507,
												"name": "UfixedValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 516,
												"name": "EnumValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 525,
												"name": "UserDefinedValueTypeValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 531,
												"name": "ContractValue",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 309,
									"name": "EnumResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An enum value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 231,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L231"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 516,
												"name": "EnumValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 639,
												"name": "Errors.EnumErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "EnumErrorResult"
											}
										]
									}
								},
								{
									"id": 307,
									"name": "FixedResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A signed fixed-point value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 213,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L213"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 498,
												"name": "FixedValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 621,
												"name": "Errors.FixedErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "FixedErrorResult"
											}
										]
									}
								},
								{
									"id": 375,
									"name": "FunctionExternalResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An external function pointer value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 441,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L441"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 376,
												"name": "FunctionExternalValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 704,
												"name": "Errors.FunctionExternalErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "FunctionExternalErrorResult"
											}
										]
									}
								},
								{
									"id": 383,
									"name": "FunctionExternalValueInfo",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "External function values come in 3 types:\n1. known function of known class\n2. known class, but can't locate function\n3. can't determine class"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 467,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L467"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 384,
												"name": "FunctionExternalValueInfoKnown",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 389,
												"name": "FunctionExternalValueInfoInvalid",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 393,
												"name": "FunctionExternalValueInfoUnknown",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 548,
									"name": "FunctionInternalRawInfo",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The raw information for an internal function pointer can take two forms.\nIn non-IR Solidity, it's given as a pair of program counter values (one\nfor the constructor context and one for the deployed context).  In IR-based\nSolidity, it's given as an index into a jump table."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/internal.ts",
											"line": 9,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/internal.ts#L9"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 549,
												"name": "FunctionInternalRawInfoPcPair",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 553,
												"name": "FunctionInternalRawInfoIndex",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 397,
									"name": "FunctionInternalResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An internal function pointer value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 525,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L525"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 398,
												"name": "FunctionInternalValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 717,
												"name": "Errors.FunctionInternalErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "FunctionInternalErrorResult"
											}
										]
									}
								},
								{
									"id": 404,
									"name": "FunctionInternalValueInfo",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Internal functions come in three types:\n1. An actual function,\n2. A default value,\n3. A special value to indicate that decoding internal functions isn't supported in this context."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Function types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 549,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L549"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 405,
												"name": "FunctionInternalValueInfoKnown",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 413,
												"name": "FunctionInternalValueInfoException",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 417,
												"name": "FunctionInternalValueInfoUnknown",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 301,
									"name": "IntResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A signed integer value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 167,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L167"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 440,
												"name": "IntValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 572,
												"name": "Errors.IntErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "IntErrorResult"
											}
										]
									}
								},
								{
									"id": 351,
									"name": "MagicResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A magic variable's value (or error)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special container types (debugger-only)"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 367,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L367"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 352,
												"name": "MagicValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 694,
												"name": "Errors.MagicErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "MagicErrorResult"
											}
										]
									}
								},
								{
									"id": 320,
									"name": "MappingResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A mapping value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 281,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L281"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 321,
												"name": "MappingValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 679,
												"name": "Errors.MappingErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "MappingErrorResult"
											}
										]
									}
								},
								{
									"id": 421,
									"name": "OptionsResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An options value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special types (encoder-only)"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 619,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L619"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 422,
												"name": "OptionsValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 738,
												"name": "Errors.OptionsErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "OptionsErrorResult"
											}
										]
									}
								},
								{
									"id": 294,
									"name": "Result",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This is the overall Result type.  It may encode an actual value or an error."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "General categories"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 57,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L57"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 298,
												"name": "ElementaryResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 312,
												"name": "ArrayResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 320,
												"name": "MappingResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 330,
												"name": "StructResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 341,
												"name": "TupleResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 351,
												"name": "MagicResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 361,
												"name": "TypeResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 375,
												"name": "FunctionExternalResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 397,
												"name": "FunctionInternalResult",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 421,
												"name": "OptionsResult",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 306,
									"name": "StringResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A string value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 206,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L206"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 485,
												"name": "StringValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 616,
												"name": "Errors.StringErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "StringErrorResult"
											}
										]
									}
								},
								{
									"id": 491,
									"name": "StringValueInfo",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "These come in two types: valid strings and malformed strings."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/elementary.ts",
											"line": 161,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/elementary.ts#L161"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 492,
												"name": "StringValueInfoValid",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 495,
												"name": "StringValueInfoMalformed",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 330,
									"name": "StructResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A struct value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 310,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L310"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 331,
												"name": "StructValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 684,
												"name": "Errors.StructErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "StructErrorResult"
											}
										]
									}
								},
								{
									"id": 341,
									"name": "TupleResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A tuple value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Container types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 343,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L343"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 342,
												"name": "TupleValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 689,
												"name": "Errors.TupleErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "TupleErrorResult"
											}
										]
									}
								},
								{
									"id": 361,
									"name": "TypeResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A type's value (or error); currently only allows contract types and\nenum types"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special container types (debugger-only)"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 390,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L390"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 362,
												"name": "TypeValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 699,
												"name": "Errors.TypeErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "TypeErrorResult"
											}
										]
									}
								},
								{
									"id": 362,
									"name": "TypeValue",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A type's value -- for now, we consider the value of a contract type to\nconsist of the values of its non-inherited state variables in the current\ncontext, and the value of an enum type to be an array of its possible options\n(as Values).  May contain errors."
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Special container types (debugger-only)"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 400,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L400"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 363,
												"name": "TypeValueContract",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 369,
												"name": "TypeValueEnum",
												"package": "@truffle/codec"
											}
										]
									}
								},
								{
									"id": 308,
									"name": "UfixedResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An unsigned fixed-point value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 220,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L220"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 507,
												"name": "UfixedValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 625,
												"name": "Errors.UfixedErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "UfixedErrorResult"
											}
										]
									}
								},
								{
									"id": 300,
									"name": "UintResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An unsigned integer value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "Elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 160,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L160"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 431,
												"name": "UintValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 563,
												"name": "Errors.UintErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "UintErrorResult"
											}
										]
									}
								},
								{
									"id": 310,
									"name": "UserDefinedValueTypeResult",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A UDVT value or error"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "User-defined elementary types"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 238,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L238"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 525,
												"name": "UserDefinedValueTypeValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 657,
												"name": "Errors.UserDefinedValueTypeErrorResult",
												"package": "@truffle/codec",
												"qualifiedName": "UserDefinedValueTypeErrorResult"
											}
										]
									}
								},
								{
									"id": 295,
									"name": "Value",
									"variant": "declaration",
									"kind": 4194304,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An actual value, not an error (although if a container type it may contain errors!)"
											}
										],
										"blockTags": [
											{
												"tag": "@Category",
												"content": [
													{
														"kind": "text",
														"text": "General categories"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/format/values.ts",
											"line": 74,
											"character": 12,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L74"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 428,
												"name": "ElementaryValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 313,
												"name": "ArrayValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 321,
												"name": "MappingValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 331,
												"name": "StructValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 342,
												"name": "TupleValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 352,
												"name": "MagicValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 362,
												"name": "TypeValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 376,
												"name": "FunctionExternalValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 398,
												"name": "FunctionInternalValue",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 422,
												"name": "OptionsValue",
												"package": "@truffle/codec"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										474,
										313,
										449,
										466,
										457,
										531,
										539,
										544,
										516,
										498,
										376,
										389,
										384,
										393,
										553,
										549,
										398,
										413,
										405,
										417,
										440,
										327,
										352,
										321,
										338,
										348,
										422,
										485,
										495,
										492,
										331,
										342,
										363,
										369,
										507,
										431,
										525
									]
								},
								{
									"title": "Type Aliases",
									"children": [
										297,
										296,
										305,
										312,
										302,
										429,
										304,
										299,
										303,
										430,
										311,
										538,
										298,
										428,
										309,
										307,
										375,
										383,
										548,
										397,
										404,
										301,
										351,
										320,
										421,
										294,
										306,
										491,
										330,
										341,
										361,
										362,
										308,
										300,
										310,
										295
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/format/values.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/values.ts#L1"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								556,
								80,
								796,
								293
							],
							"categories": [
								{
									"title": "Main Format",
									"children": [
										556,
										80,
										293
									]
								},
								{
									"title": "Other",
									"children": [
										796
									]
								}
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/format/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/format/index.ts#L1"
						}
					]
				},
				{
					"id": 1361,
					"name": "MappingKey",
					"variant": "declaration",
					"kind": 4,
					"flags": {
						"isProtected": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "For encoding mapping keys"
							}
						]
					},
					"children": [
						{
							"id": 1362,
							"name": "Encode",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1363,
									"name": "encodeMappingKey",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/mapping-key/encode/index.ts",
											"line": 16,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/mapping-key/encode/index.ts#L16"
										}
									],
									"signatures": [
										{
											"id": 1364,
											"name": "encodeMappingKey",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [],
												"blockTags": [
													{
														"tag": "@Category",
														"content": [
															{
																"kind": "text",
																"text": "Encoding (low-level)"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/mapping-key/encode/index.ts",
													"line": 16,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/mapping-key/encode/index.ts#L16"
												}
											],
											"parameters": [
												{
													"id": 1365,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 428,
														"name": "ElementaryValue",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 1366,
									"name": "mappingKeyAsHex",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/mapping-key/encode/index.ts",
											"line": 34,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/mapping-key/encode/index.ts#L34"
										}
									],
									"signatures": [
										{
											"id": 1367,
											"name": "mappingKeyAsHex",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [],
												"blockTags": [
													{
														"tag": "@Category",
														"content": [
															{
																"kind": "text",
																"text": "Encoding (low-level)"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/mapping-key/encode/index.ts",
													"line": 34,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/mapping-key/encode/index.ts#L34"
												}
											],
											"parameters": [
												{
													"id": 1368,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 428,
														"name": "ElementaryValue",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1363,
										1366
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/mapping-key/encode/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/mapping-key/encode/index.ts#L1"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1362
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/mapping-key/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/mapping-key/index.ts#L1"
						}
					]
				},
				{
					"id": 1369,
					"name": "Memory",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "For allocation and decoding of memory data"
							}
						]
					},
					"children": [
						{
							"id": 1370,
							"name": "Allocate",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1380,
									"name": "MemoryAllocation",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1381,
											"name": "members",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/memory/allocate/types.ts",
													"line": 16,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/allocate/types.ts#L16"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1382,
													"name": "MemoryMemberAllocation",
													"package": "@truffle/codec"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1381
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/memory/allocate/types.ts",
											"line": 15,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/allocate/types.ts#L15"
										}
									]
								},
								{
									"id": 1377,
									"name": "MemoryAllocations",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/memory/allocate/types.ts",
											"line": 11,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/allocate/types.ts#L11"
										}
									],
									"indexSignature": {
										"id": 1378,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "codec/lib/memory/allocate/types.ts",
												"line": 12,
												"character": 2,
												"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/allocate/types.ts#L12"
											}
										],
										"parameters": [
											{
												"id": 1379,
												"name": "id",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": 1380,
											"name": "MemoryAllocation",
											"package": "@truffle/codec"
										}
									}
								},
								{
									"id": 1382,
									"name": "MemoryMemberAllocation",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1383,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/memory/allocate/types.ts",
													"line": 20,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/allocate/types.ts#L20"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1385,
											"name": "pointer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/memory/allocate/types.ts",
													"line": 22,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/allocate/types.ts#L22"
												}
											],
											"type": {
												"type": "reference",
												"target": 1984,
												"name": "MemoryPointer",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1384,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/memory/allocate/types.ts",
													"line": 21,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/allocate/types.ts#L21"
												}
											],
											"type": {
												"type": "reference",
												"target": 104,
												"name": "Type",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1383,
												1385,
												1384
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/memory/allocate/types.ts",
											"line": 19,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/allocate/types.ts#L19"
										}
									]
								},
								{
									"id": 1371,
									"name": "getMemoryAllocations",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/memory/allocate/index.ts",
											"line": 14,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/allocate/index.ts#L14"
										}
									],
									"signatures": [
										{
											"id": 1372,
											"name": "getMemoryAllocations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/memory/allocate/index.ts",
													"line": 14,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/allocate/index.ts#L14"
												}
											],
											"parameters": [
												{
													"id": 1373,
													"name": "userDefinedTypes",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 284,
														"name": "TypesById",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 1377,
												"name": "MemoryAllocations",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 1374,
									"name": "isSkippedInMemoryStructs",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/memory/allocate/index.ts",
											"line": 26,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/allocate/index.ts#L26"
										}
									],
									"signatures": [
										{
											"id": 1375,
											"name": "isSkippedInMemoryStructs",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/memory/allocate/index.ts",
													"line": 26,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/allocate/index.ts#L26"
												}
											],
											"parameters": [
												{
													"id": 1376,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Interfaces",
									"children": [
										1380,
										1377,
										1382
									]
								},
								{
									"title": "Functions",
									"children": [
										1371,
										1374
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/memory/allocate/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/allocate/index.ts#L1"
								}
							]
						},
						{
							"id": 1386,
							"name": "Decode",
							"variant": "declaration",
							"kind": 4,
							"flags": {
								"isProtected": true
							},
							"children": [
								{
									"id": 1387,
									"name": "decodeMemory",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/memory/decode/index.ts",
											"line": 22,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/decode/index.ts#L22"
										}
									],
									"signatures": [
										{
											"id": 1388,
											"name": "decodeMemory",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/memory/decode/index.ts",
													"line": 22,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/decode/index.ts#L22"
												}
											],
											"parameters": [
												{
													"id": 1389,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1390,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1984,
														"name": "MemoryPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1391,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1392,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "lib/types.ts",
															"qualifiedName": "DecoderOptions"
														},
														"name": "DecoderOptions",
														"package": "@truffle/codec"
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 294,
														"name": "Format.Values.Result",
														"package": "@truffle/codec",
														"qualifiedName": "Result"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 1393,
									"name": "decodeMemoryReferenceByAddress",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/memory/decode/index.ts",
											"line": 67,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/decode/index.ts#L67"
										}
									],
									"signatures": [
										{
											"id": 1394,
											"name": "decodeMemoryReferenceByAddress",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/memory/decode/index.ts",
													"line": 67,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/decode/index.ts#L67"
												}
											],
											"parameters": [
												{
													"id": 1395,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 283,
														"name": "ReferenceType",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1396,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1974,
														"name": "DataPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1397,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1398,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "lib/types.ts",
															"qualifiedName": "DecoderOptions"
														},
														"name": "DecoderOptions",
														"package": "@truffle/codec"
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 294,
														"name": "Format.Values.Result",
														"package": "@truffle/codec",
														"qualifiedName": "Result"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1387,
										1393
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/memory/decode/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/decode/index.ts#L1"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1370,
								1386
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/memory/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/memory/index.ts#L1"
						}
					]
				},
				{
					"id": 1973,
					"name": "Pointer",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 1988,
							"name": "CalldataPointer",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1991,
									"name": "length",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 38,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L38"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1989,
									"name": "location",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 36,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L36"
										}
									],
									"type": {
										"type": "literal",
										"value": "calldata"
									}
								},
								{
									"id": 1990,
									"name": "start",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 37,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L37"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1991,
										1989,
										1990
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 35,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L35"
								}
							]
						},
						{
							"id": 2007,
							"name": "CodePointer",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2010,
									"name": "length",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 67,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L67"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2008,
									"name": "location",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 65,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L65"
										}
									],
									"type": {
										"type": "literal",
										"value": "code"
									}
								},
								{
									"id": 2009,
									"name": "start",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 66,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L66"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2010,
										2008,
										2009
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 64,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L64"
								}
							]
						},
						{
							"id": 2017,
							"name": "ConstantDefinitionPointer",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2019,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 82,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L82"
										}
									],
									"type": {
										"type": "reference",
										"target": 1688,
										"name": "AstNode",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2018,
									"name": "location",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 81,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L81"
										}
									],
									"type": {
										"type": "literal",
										"value": "definition"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2019,
										2018
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 80,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L80"
								}
							]
						},
						{
							"id": 1996,
							"name": "EventDataPointer",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1999,
									"name": "length",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 50,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L50"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1997,
									"name": "location",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 48,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L48"
										}
									],
									"type": {
										"type": "literal",
										"value": "eventdata"
									}
								},
								{
									"id": 1998,
									"name": "start",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 49,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L49"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1999,
										1997,
										1998
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 47,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L47"
								}
							]
						},
						{
							"id": 2000,
							"name": "EventTopicPointer",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2001,
									"name": "location",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 54,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L54"
										}
									],
									"type": {
										"type": "literal",
										"value": "eventtopic"
									}
								},
								{
									"id": 2002,
									"name": "topic",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 55,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L55"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2001,
										2002
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 53,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L53"
								}
							]
						},
						{
							"id": 2003,
							"name": "GenericAbiPointer",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2006,
									"name": "length",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 61,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L61"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2004,
									"name": "location",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 59,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L59"
										}
									],
									"type": {
										"type": "literal",
										"value": "abi"
									}
								},
								{
									"id": 2005,
									"name": "start",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 60,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L60"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2006,
										2004,
										2005
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 58,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L58"
								}
							]
						},
						{
							"id": 1984,
							"name": "MemoryPointer",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1987,
									"name": "length",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 32,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L32"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1985,
									"name": "location",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 30,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L30"
										}
									],
									"type": {
										"type": "literal",
										"value": "memory"
									}
								},
								{
									"id": 1986,
									"name": "start",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 31,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L31"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1987,
										1985,
										1986
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 29,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L29"
								}
							]
						},
						{
							"id": 1992,
							"name": "ReturndataPointer",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1995,
									"name": "length",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 44,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L44"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1993,
									"name": "location",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 42,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L42"
										}
									],
									"type": {
										"type": "literal",
										"value": "returndata"
									}
								},
								{
									"id": 1994,
									"name": "start",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 43,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L43"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1995,
										1993,
										1994
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 41,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L41"
								}
							]
						},
						{
							"id": 2020,
							"name": "SpecialPointer",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2021,
									"name": "location",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 86,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L86"
										}
									],
									"type": {
										"type": "literal",
										"value": "special"
									}
								},
								{
									"id": 2022,
									"name": "special",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 87,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L87"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2021,
										2022
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 85,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L85"
								}
							]
						},
						{
							"id": 2014,
							"name": "StackLiteralPointer",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2016,
									"name": "literal",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 77,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L77"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								},
								{
									"id": 2015,
									"name": "location",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 76,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L76"
										}
									],
									"type": {
										"type": "literal",
										"value": "stackliteral"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2016,
										2015
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 75,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L75"
								}
							]
						},
						{
							"id": 1980,
							"name": "StackPointer",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1982,
									"name": "from",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 25,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L25"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1981,
									"name": "location",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 24,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L24"
										}
									],
									"type": {
										"type": "literal",
										"value": "stack"
									}
								},
								{
									"id": 1983,
									"name": "to",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 26,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L26"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1982,
										1981,
										1983
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 23,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L23"
								}
							]
						},
						{
							"id": 2011,
							"name": "StoragePointer",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2012,
									"name": "location",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 71,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L71"
										}
									],
									"type": {
										"type": "literal",
										"value": "storage"
									}
								},
								{
									"id": 2013,
									"name": "range",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 72,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L72"
										}
									],
									"type": {
										"type": "reference",
										"target": 1537,
										"name": "Range",
										"package": "@truffle/codec"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2012,
										2013
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 70,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L70"
								}
							]
						},
						{
							"id": 2023,
							"name": "UnreadablePointer",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2024,
									"name": "location",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/pointer/types.ts",
											"line": 91,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L91"
										}
									],
									"type": {
										"type": "literal",
										"value": "nowhere"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2024
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 90,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L90"
								}
							]
						},
						{
							"id": 1977,
							"name": "AbiDataPointer",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 16,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L16"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 1988,
										"name": "CalldataPointer",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 1992,
										"name": "ReturndataPointer",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 1996,
										"name": "EventDataPointer",
										"package": "@truffle/codec"
									}
								]
							}
						},
						{
							"id": 1976,
							"name": "AbiPointer",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 15,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L15"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 1977,
										"name": "AbiDataPointer",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 2003,
										"name": "GenericAbiPointer",
										"package": "@truffle/codec"
									}
								]
							}
						},
						{
							"id": 1978,
							"name": "BytesPointer",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 20,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L20"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 1984,
										"name": "MemoryPointer",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 1977,
										"name": "AbiDataPointer",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 2007,
										"name": "CodePointer",
										"package": "@truffle/codec"
									}
								]
							}
						},
						{
							"id": 1979,
							"name": "CodeFormPointer",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 21,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L21"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 2007,
										"name": "CodePointer",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 2023,
										"name": "UnreadablePointer",
										"package": "@truffle/codec"
									}
								]
							}
						},
						{
							"id": 1974,
							"name": "DataPointer",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 4,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L4"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 1975,
										"name": "StackFormPointer",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 1984,
										"name": "MemoryPointer",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 2011,
										"name": "StoragePointer",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 1977,
										"name": "AbiDataPointer",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 1979,
										"name": "CodeFormPointer",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 2017,
										"name": "ConstantDefinitionPointer",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 2020,
										"name": "SpecialPointer",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 2000,
										"name": "EventTopicPointer",
										"package": "@truffle/codec"
									}
								]
							}
						},
						{
							"id": 1975,
							"name": "StackFormPointer",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/pointer/types.ts",
									"line": 14,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/types.ts#L14"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 1980,
										"name": "StackPointer",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 2014,
										"name": "StackLiteralPointer",
										"package": "@truffle/codec"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								1988,
								2007,
								2017,
								1996,
								2000,
								2003,
								1984,
								1992,
								2020,
								2014,
								1980,
								2011,
								2023
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								1977,
								1976,
								1978,
								1979,
								1974,
								1975
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/pointer/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/pointer/index.ts#L1"
						}
					]
				},
				{
					"id": 1399,
					"name": "Special",
					"variant": "declaration",
					"kind": 4,
					"flags": {
						"isProtected": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "For decoding of special/magic variables"
							}
						]
					},
					"children": [
						{
							"id": 1400,
							"name": "Decode",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1406,
									"name": "decodeMagic",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/special/decode/index.ts",
											"line": 24,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/special/decode/index.ts#L24"
										}
									],
									"signatures": [
										{
											"id": 1407,
											"name": "decodeMagic",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/special/decode/index.ts",
													"line": 24,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/special/decode/index.ts#L24"
												}
											],
											"parameters": [
												{
													"id": 1408,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 266,
														"name": "MagicType",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1409,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2020,
														"name": "SpecialPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1410,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 351,
														"name": "Format.Values.MagicResult",
														"package": "@truffle/codec",
														"qualifiedName": "MagicResult"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 1401,
									"name": "decodeSpecial",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/special/decode/index.ts",
											"line": 12,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/special/decode/index.ts#L12"
										}
									],
									"signatures": [
										{
											"id": 1402,
											"name": "decodeSpecial",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/special/decode/index.ts",
													"line": 12,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/special/decode/index.ts#L12"
												}
											],
											"parameters": [
												{
													"id": 1403,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1404,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2020,
														"name": "SpecialPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1405,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 294,
														"name": "Format.Values.Result",
														"package": "@truffle/codec",
														"qualifiedName": "Result"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1406,
										1401
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/special/decode/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/special/decode/index.ts#L1"
								}
							]
						},
						{
							"id": 1411,
							"name": "Read",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1412,
									"name": "readSpecial",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/special/read/index.ts",
											"line": 4,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/special/read/index.ts#L4"
										}
									],
									"signatures": [
										{
											"id": 1413,
											"name": "readSpecial",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/special/read/index.ts",
													"line": 4,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/special/read/index.ts#L4"
												}
											],
											"parameters": [
												{
													"id": 1414,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2020,
														"name": "SpecialPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1415,
													"name": "state",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2050,
														"name": "EvmState",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1412
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/special/read/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/special/read/index.ts#L1"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1400,
								1411
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/special/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/special/index.ts#L1"
						}
					]
				},
				{
					"id": 1416,
					"name": "Stack",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "For decoding stack variables"
							}
						]
					},
					"children": [
						{
							"id": 1417,
							"name": "Decode",
							"variant": "declaration",
							"kind": 4,
							"flags": {
								"isProtected": true
							},
							"children": [
								{
									"id": 1423,
									"name": "decodeLiteral",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/stack/decode/index.ts",
											"line": 40,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/stack/decode/index.ts#L40"
										}
									],
									"signatures": [
										{
											"id": 1424,
											"name": "decodeLiteral",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/stack/decode/index.ts",
													"line": 40,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/stack/decode/index.ts#L40"
												}
											],
											"parameters": [
												{
													"id": 1425,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1426,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2014,
														"name": "StackLiteralPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1427,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 294,
														"name": "Format.Values.Result",
														"package": "@truffle/codec",
														"qualifiedName": "Result"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 1418,
									"name": "decodeStack",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/stack/decode/index.ts",
											"line": 22,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/stack/decode/index.ts#L22"
										}
									],
									"signatures": [
										{
											"id": 1419,
											"name": "decodeStack",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/stack/decode/index.ts",
													"line": 22,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/stack/decode/index.ts#L22"
												}
											],
											"parameters": [
												{
													"id": 1420,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1421,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1980,
														"name": "StackPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1422,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 294,
														"name": "Format.Values.Result",
														"package": "@truffle/codec",
														"qualifiedName": "Result"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1423,
										1418
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/stack/decode/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/stack/decode/index.ts#L1"
								}
							]
						},
						{
							"id": 1428,
							"name": "Read",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1429,
									"name": "readStack",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/stack/read/index.ts",
											"line": 8,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/stack/read/index.ts#L8"
										}
									],
									"signatures": [
										{
											"id": 1430,
											"name": "readStack",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/stack/read/index.ts",
													"line": 8,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/stack/read/index.ts#L8"
												}
											],
											"parameters": [
												{
													"id": 1431,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1980,
														"name": "StackPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1432,
													"name": "state",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2050,
														"name": "EvmState",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 1433,
									"name": "readStackLiteral",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/stack/read/index.ts",
											"line": 35,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/stack/read/index.ts#L35"
										}
									],
									"signatures": [
										{
											"id": 1434,
											"name": "readStackLiteral",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/stack/read/index.ts",
													"line": 35,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/stack/read/index.ts#L35"
												}
											],
											"parameters": [
												{
													"id": 1435,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2014,
														"name": "StackLiteralPointer",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1429,
										1433
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/stack/read/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/stack/read/index.ts#L1"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1417,
								1428
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/stack/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/stack/index.ts#L1"
						}
					]
				},
				{
					"id": 1436,
					"name": "Storage",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "For allocation and decoding of storage variables"
							}
						]
					},
					"children": [
						{
							"id": 1453,
							"name": "Allocate",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1496,
									"name": "UnknownBaseContractIdError",
									"variant": "declaration",
									"kind": 128,
									"flags": {},
									"children": [
										{
											"id": 1497,
											"name": "constructor",
											"variant": "declaration",
											"kind": 512,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/index.ts",
													"line": 40,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/index.ts#L40"
												}
											],
											"signatures": [
												{
													"id": 1498,
													"name": "new UnknownBaseContractIdError",
													"variant": "signature",
													"kind": 16384,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/storage/allocate/index.ts",
															"line": 40,
															"character": 2,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/index.ts#L40"
														}
													],
													"parameters": [
														{
															"id": 1499,
															"name": "derivedId",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 1500,
															"name": "derivedName",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1501,
															"name": "derivedKind",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 1502,
															"name": "baseId",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 1496,
														"name": "UnknownBaseContractIdError",
														"package": "@truffle/codec"
													},
													"overwrites": {
														"type": "reference",
														"target": -1,
														"name": "Error.constructor"
													}
												}
											],
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "Error.constructor"
											}
										},
										{
											"id": 1506,
											"name": "baseId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isPublic": true
											},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/index.ts",
													"line": 39,
													"character": 9,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/index.ts#L39"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1503,
											"name": "derivedId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isPublic": true
											},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/index.ts",
													"line": 36,
													"character": 9,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/index.ts#L36"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 1505,
											"name": "derivedKind",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isPublic": true
											},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/index.ts",
													"line": 38,
													"character": 9,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/index.ts#L38"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1504,
											"name": "derivedName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isPublic": true
											},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/index.ts",
													"line": 37,
													"character": 9,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/index.ts#L37"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Constructors",
											"children": [
												1497
											]
										},
										{
											"title": "Properties",
											"children": [
												1506,
												1503,
												1505,
												1504
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/storage/allocate/index.ts",
											"line": 35,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/index.ts#L35"
										}
									],
									"extendedTypes": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Error"
											},
											"name": "Error",
											"package": "typescript"
										}
									]
								},
								{
									"id": 1483,
									"name": "StateAllocation",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1484,
											"name": "members",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/types.ts",
													"line": 35,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L35"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1491,
													"name": "StateVariableAllocation",
													"package": "@truffle/codec"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1484
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/storage/allocate/types.ts",
											"line": 34,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L34"
										}
									]
								},
								{
									"id": 1485,
									"name": "StateAllocations",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/allocate/types.ts",
											"line": 26,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L26"
										}
									],
									"indexSignature": {
										"id": 1486,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "codec/lib/storage/allocate/types.ts",
												"line": 27,
												"character": 2,
												"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L27"
											}
										],
										"parameters": [
											{
												"id": 1487,
												"name": "compilationId",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reflection",
											"declaration": {
												"id": 1488,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "codec/lib/storage/allocate/types.ts",
														"line": 27,
														"character": 27,
														"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L27"
													}
												],
												"indexSignature": {
													"id": 1489,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/storage/allocate/types.ts",
															"line": 28,
															"character": 4,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L28"
														}
													],
													"parameters": [
														{
															"id": 1490,
															"name": "id",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 1483,
														"name": "StateAllocation",
														"package": "@truffle/codec"
													}
												}
											}
										}
									}
								},
								{
									"id": 1491,
									"name": "StateVariableAllocation",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1494,
											"name": "compilationId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/types.ts",
													"line": 42,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L42"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1493,
											"name": "definedIn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/types.ts",
													"line": 41,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L41"
												}
											],
											"type": {
												"type": "reference",
												"target": 1688,
												"name": "AstNode",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1492,
											"name": "definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/types.ts",
													"line": 40,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L40"
												}
											],
											"type": {
												"type": "reference",
												"target": 1688,
												"name": "AstNode",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1495,
											"name": "pointer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/types.ts",
													"line": 43,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L43"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 2011,
														"name": "StoragePointer",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 1979,
														"name": "CodeFormPointer",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 2017,
														"name": "ConstantDefinitionPointer",
														"package": "@truffle/codec"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1494,
												1493,
												1492,
												1495
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/storage/allocate/types.ts",
											"line": 39,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L39"
										}
									]
								},
								{
									"id": 1473,
									"name": "StorageAllocation",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1475,
											"name": "members",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/types.ts",
													"line": 14,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L14"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1479,
													"name": "StorageMemberAllocation",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 1474,
											"name": "size",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/types.ts",
													"line": 13,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L13"
												}
											],
											"type": {
												"type": "reference",
												"target": 1532,
												"name": "StorageLength",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1475,
												1474
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/storage/allocate/types.ts",
											"line": 12,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L12"
										}
									]
								},
								{
									"id": 1476,
									"name": "StorageAllocations",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/allocate/types.ts",
											"line": 7,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L7"
										}
									],
									"indexSignature": {
										"id": 1477,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "codec/lib/storage/allocate/types.ts",
												"line": 8,
												"character": 2,
												"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L8"
											}
										],
										"parameters": [
											{
												"id": 1478,
												"name": "id",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": 1473,
											"name": "StorageAllocation",
											"package": "@truffle/codec"
										}
									}
								},
								{
									"id": 1479,
									"name": "StorageMemberAllocation",
									"variant": "declaration",
									"kind": 256,
									"flags": {},
									"children": [
										{
											"id": 1480,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/types.ts",
													"line": 19,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L19"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 1482,
											"name": "pointer",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/types.ts",
													"line": 21,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L21"
												}
											],
											"type": {
												"type": "reference",
												"target": 2011,
												"name": "StoragePointer",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 1481,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/types.ts",
													"line": 20,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L20"
												}
											],
											"type": {
												"type": "reference",
												"target": 104,
												"name": "Type",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1480,
												1482,
												1481
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/storage/allocate/types.ts",
											"line": 18,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/types.ts#L18"
										}
									]
								},
								{
									"id": 1457,
									"name": "getStateAllocations",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/allocate/index.ts",
											"line": 100,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/index.ts#L100"
										}
									],
									"signatures": [
										{
											"id": 1458,
											"name": "getStateAllocations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This function gets allocations for the state variables of the contracts;\nthis is distinct from getStorageAllocations, which gets allocations for\nstorage structs.\n\nWhile mostly state variables are kept in storage, constant ones are not.\nAnd immutable ones, once those are introduced, will be kept in code!\n(But those don't exist yet so this function doesn't handle them yet.)"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/index.ts",
													"line": 100,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/index.ts#L100"
												}
											],
											"parameters": [
												{
													"id": 1459,
													"name": "contracts",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 1237,
															"name": "ContractAllocationInfo",
															"package": "@truffle/codec"
														}
													}
												},
												{
													"id": 1460,
													"name": "referenceDeclarations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 1461,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "codec/lib/storage/allocate/index.ts",
																	"line": 102,
																	"character": 25,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/index.ts#L102"
																}
															],
															"indexSignature": {
																"id": 1462,
																"name": "__index",
																"variant": "signature",
																"kind": 8192,
																"flags": {},
																"sources": [
																	{
																		"fileName": "codec/lib/storage/allocate/index.ts",
																		"line": 102,
																		"character": 27,
																		"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/index.ts#L102"
																	}
																],
																"parameters": [
																	{
																		"id": 1463,
																		"name": "compilationId",
																		"variant": "param",
																		"kind": 32768,
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 1743,
																	"name": "Ast.AstNodes",
																	"package": "@truffle/codec",
																	"qualifiedName": "AstNodes"
																}
															}
														}
													}
												},
												{
													"id": 1464,
													"name": "userDefinedTypes",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 284,
														"name": "TypesById",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1465,
													"name": "storageAllocations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1476,
														"name": "StorageAllocations",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1466,
													"name": "existingAllocations",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1485,
														"name": "StateAllocations",
														"package": "@truffle/codec"
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"target": 1485,
												"name": "StateAllocations",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 1454,
									"name": "getStorageAllocations",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/allocate/index.ts",
											"line": 63,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/index.ts#L63"
										}
									],
									"signatures": [
										{
											"id": 1455,
											"name": "getStorageAllocations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/index.ts",
													"line": 63,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/index.ts#L63"
												}
											],
											"parameters": [
												{
													"id": 1456,
													"name": "userDefinedTypesByCompilation",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 287,
														"name": "TypesByCompilationAndId",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 1476,
												"name": "StorageAllocations",
												"package": "@truffle/codec"
											}
										}
									]
								},
								{
									"id": 1467,
									"name": "storageSize",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/allocate/index.ts",
											"line": 445,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/index.ts#L445"
										}
									],
									"signatures": [
										{
											"id": 1468,
											"name": "storageSize",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/allocate/index.ts",
													"line": 445,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/index.ts#L445"
												}
											],
											"parameters": [
												{
													"id": 1469,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1470,
													"name": "userDefinedTypes",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 284,
														"name": "TypesById",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1471,
													"name": "allocations",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 1476,
														"name": "StorageAllocations",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1472,
													"name": "compiler",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 1764,
														"name": "CompilerVersion",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 1532,
												"name": "Storage.StorageLength",
												"package": "@truffle/codec",
												"qualifiedName": "StorageLength"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Classes",
									"children": [
										1496
									]
								},
								{
									"title": "Interfaces",
									"children": [
										1483,
										1485,
										1491,
										1473,
										1476,
										1479
									]
								},
								{
									"title": "Functions",
									"children": [
										1457,
										1454,
										1467
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/storage/allocate/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/allocate/index.ts#L1"
								}
							]
						},
						{
							"id": 1507,
							"name": "Decode",
							"variant": "declaration",
							"kind": 4,
							"flags": {
								"isProtected": true
							},
							"children": [
								{
									"id": 1508,
									"name": "decodeStorage",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/decode/index.ts",
											"line": 24,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/decode/index.ts#L24"
										}
									],
									"signatures": [
										{
											"id": 1509,
											"name": "decodeStorage",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/decode/index.ts",
													"line": 24,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/decode/index.ts#L24"
												}
											],
											"parameters": [
												{
													"id": 1510,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1511,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2011,
														"name": "StoragePointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1512,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 294,
														"name": "Format.Values.Result",
														"package": "@truffle/codec",
														"qualifiedName": "Result"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 1518,
									"name": "decodeStorageReference",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/decode/index.ts",
											"line": 90,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/decode/index.ts#L90"
										}
									],
									"signatures": [
										{
											"id": 1519,
											"name": "decodeStorageReference",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/decode/index.ts",
													"line": 90,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/decode/index.ts#L90"
												}
											],
											"parameters": [
												{
													"id": 1520,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 283,
														"name": "ReferenceType",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1521,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2011,
														"name": "StoragePointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1522,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 294,
														"name": "Format.Values.Result",
														"package": "@truffle/codec",
														"qualifiedName": "Result"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 1513,
									"name": "decodeStorageReferenceByAddress",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/decode/index.ts",
											"line": 39,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/decode/index.ts#L39"
										}
									],
									"signatures": [
										{
											"id": 1514,
											"name": "decodeStorageReferenceByAddress",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/decode/index.ts",
													"line": 39,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/decode/index.ts#L39"
												}
											],
											"parameters": [
												{
													"id": 1515,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 283,
														"name": "ReferenceType",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1516,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1974,
														"name": "DataPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1517,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 294,
														"name": "Format.Values.Result",
														"package": "@truffle/codec",
														"qualifiedName": "Result"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1508,
										1518,
										1513
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/storage/decode/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/decode/index.ts#L1"
								}
							]
						},
						{
							"id": 1523,
							"name": "Read",
							"variant": "declaration",
							"kind": 4,
							"flags": {
								"isProtected": true
							},
							"children": [
								{
									"id": 1524,
									"name": "readSlot",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/read/index.ts",
											"line": 19,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/read/index.ts#L19"
										}
									],
									"signatures": [
										{
											"id": 1525,
											"name": "readSlot",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/read/index.ts",
													"line": 19,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/read/index.ts#L19"
												}
											],
											"parameters": [
												{
													"id": 1526,
													"name": "storage",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2063,
														"name": "WordMapping",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1527,
													"name": "slot",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1544,
														"name": "Slot",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 1528,
									"name": "readStorage",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/read/index.ts",
											"line": 50,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/read/index.ts#L50"
										}
									],
									"signatures": [
										{
											"id": 1529,
											"name": "readStorage",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/read/index.ts",
													"line": 50,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/read/index.ts#L50"
												}
											],
											"parameters": [
												{
													"id": 1530,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2011,
														"name": "StoragePointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1531,
													"name": "state",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2050,
														"name": "EvmState",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1524,
										1528
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/storage/read/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/read/index.ts#L1"
								}
							]
						},
						{
							"id": 1437,
							"name": "Utils",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1449,
									"name": "equalSlots",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/utils.ts",
											"line": 50,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/utils.ts#L50"
										}
									],
									"signatures": [
										{
											"id": 1450,
											"name": "equalSlots",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/utils.ts",
													"line": 50,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/utils.ts#L50"
												}
											],
											"parameters": [
												{
													"id": 1451,
													"name": "slot1",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1544,
														"name": "Slot",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1452,
													"name": "slot2",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1544,
														"name": "Slot",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								},
								{
									"id": 1438,
									"name": "isWordsLength",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/utils.ts",
											"line": 9,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/utils.ts#L9"
										}
									],
									"signatures": [
										{
											"id": 1439,
											"name": "isWordsLength",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/utils.ts",
													"line": 9,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/utils.ts#L9"
												}
											],
											"parameters": [
												{
													"id": 1440,
													"name": "size",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1532,
														"name": "StorageLength",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "predicate",
												"name": "size",
												"asserts": false,
												"targetType": {
													"type": "reflection",
													"declaration": {
														"id": 1441,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 1442,
																"name": "words",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "codec/lib/storage/utils.ts",
																		"line": 9,
																		"character": 62,
																		"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/utils.ts#L9"
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	1442
																]
															}
														],
														"sources": [
															{
																"fileName": "codec/lib/storage/utils.ts",
																"line": 9,
																"character": 60,
																"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/utils.ts#L9"
															}
														]
													}
												}
											}
										}
									]
								},
								{
									"id": 1446,
									"name": "slotAddress",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/utils.ts",
											"line": 30,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/utils.ts#L30"
										}
									],
									"signatures": [
										{
											"id": 1447,
											"name": "slotAddress",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "convert a slot to a word corresponding to actual storage address\n\nif "
													},
													{
														"kind": "code",
														"text": "`slot`"
													},
													{
														"kind": "text",
														"text": " is an array, return hash of array values.\nif "
													},
													{
														"kind": "code",
														"text": "`slot`"
													},
													{
														"kind": "text",
														"text": " array is nested, recurse on sub-arrays"
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/storage/utils.ts",
													"line": 30,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/utils.ts#L30"
												}
											],
											"parameters": [
												{
													"id": 1448,
													"name": "slot",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "number or possibly-nested array of numbers"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": 1544,
														"name": "Slot",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
													"qualifiedName": "BN"
												},
												"name": "BN",
												"package": "@types/bn.js"
											}
										}
									]
								},
								{
									"id": 1443,
									"name": "storageLengthToBytes",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/utils.ts",
											"line": 13,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/utils.ts#L13"
										}
									],
									"signatures": [
										{
											"id": 1444,
											"name": "storageLengthToBytes",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/storage/utils.ts",
													"line": 13,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/utils.ts#L13"
												}
											],
											"parameters": [
												{
													"id": 1445,
													"name": "size",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1532,
														"name": "StorageLength",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1449,
										1438,
										1446,
										1443
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/storage/utils.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/utils.ts#L1"
								}
							]
						},
						{
							"id": 1537,
							"name": "Range",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1538,
									"name": "from",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/types.ts",
											"line": 8,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L8"
										}
									],
									"type": {
										"type": "reference",
										"target": 1541,
										"name": "StoragePosition",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1540,
									"name": "length",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/storage/types.ts",
											"line": 10,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L10"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1539,
									"name": "to",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/storage/types.ts",
											"line": 9,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L9"
										}
									],
									"type": {
										"type": "reference",
										"target": 1541,
										"name": "StoragePosition",
										"package": "@truffle/codec"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1538,
										1540,
										1539
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/storage/types.ts",
									"line": 7,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L7"
								}
							]
						},
						{
							"id": 1544,
							"name": "Slot",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1547,
									"name": "hashPath",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/storage/types.ts",
											"line": 21,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L21"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 1545,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/storage/types.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L19"
										}
									],
									"type": {
										"type": "reference",
										"target": 428,
										"name": "ElementaryValue",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1548,
									"name": "offset",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/types.ts",
											"line": 22,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L22"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
											"qualifiedName": "BN"
										},
										"name": "BN",
										"package": "@types/bn.js"
									}
								},
								{
									"id": 1546,
									"name": "path",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/storage/types.ts",
											"line": 20,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L20"
										}
									],
									"type": {
										"type": "reference",
										"target": 1544,
										"name": "Slot",
										"package": "@truffle/codec"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1547,
										1545,
										1548,
										1546
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/storage/types.ts",
									"line": 18,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L18"
								}
							]
						},
						{
							"id": 1541,
							"name": "StoragePosition",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 1543,
									"name": "index",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/types.ts",
											"line": 15,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L15"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 1542,
									"name": "slot",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/storage/types.ts",
											"line": 14,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L14"
										}
									],
									"type": {
										"type": "reference",
										"target": 1544,
										"name": "Slot",
										"package": "@truffle/codec"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1543,
										1542
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/storage/types.ts",
									"line": 13,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L13"
								}
							]
						},
						{
							"id": 1532,
							"name": "StorageLength",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/storage/types.ts",
									"line": 5,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L5"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 1533,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1534,
													"name": "bytes",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/storage/types.ts",
															"line": 5,
															"character": 30,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L5"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1534
													]
												}
											],
											"sources": [
												{
													"fileName": "codec/lib/storage/types.ts",
													"line": 5,
													"character": 28,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L5"
												}
											]
										}
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1535,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 1536,
													"name": "words",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "codec/lib/storage/types.ts",
															"line": 5,
															"character": 50,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L5"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														1536
													]
												}
											],
											"sources": [
												{
													"fileName": "codec/lib/storage/types.ts",
													"line": 5,
													"character": 48,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/types.ts#L5"
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1453,
								1507,
								1523,
								1437
							]
						},
						{
							"title": "Interfaces",
							"children": [
								1537,
								1544,
								1541
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								1532
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/storage/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/storage/index.ts#L1"
						}
					]
				},
				{
					"id": 1344,
					"name": "Topic",
					"variant": "declaration",
					"kind": 4,
					"flags": {
						"isProtected": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "For decoding of event topics"
							}
						]
					},
					"children": [
						{
							"id": 1345,
							"name": "Decode",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1346,
									"name": "decodeTopic",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/topic/decode/index.ts",
											"line": 12,
											"character": 17,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/topic/decode/index.ts#L12"
										}
									],
									"signatures": [
										{
											"id": 1347,
											"name": "decodeTopic",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/topic/decode/index.ts",
													"line": 12,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/topic/decode/index.ts#L12"
												}
											],
											"parameters": [
												{
													"id": 1348,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1349,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2000,
														"name": "EventTopicPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1350,
													"name": "info",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2066,
														"name": "EvmInfo",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1351,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "lib/types.ts",
															"qualifiedName": "DecoderOptions"
														},
														"name": "DecoderOptions",
														"package": "@truffle/codec"
													},
													"defaultValue": "{}"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1023,
														"name": "DecoderRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 294,
														"name": "Format.Values.Result",
														"package": "@truffle/codec",
														"qualifiedName": "Result"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Uint8Array"
																},
																"name": "Uint8Array",
																"package": "typescript"
															},
															{
																"type": "literal",
																"value": null
															}
														]
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1346
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/topic/decode/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/topic/decode/index.ts#L1"
								}
							]
						},
						{
							"id": 1352,
							"name": "Encode",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1353,
									"name": "encodeTopic",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/topic/encode/index.ts",
											"line": 14,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/topic/encode/index.ts#L14"
										}
									],
									"signatures": [
										{
											"id": 1354,
											"name": "encodeTopic",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Encodes for event topics (indexed parameters).\nWarning: This function is not fully implemented yet!"
													}
												],
												"blockTags": [
													{
														"tag": "@Category",
														"content": [
															{
																"kind": "text",
																"text": "Encoding (low-level)"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/topic/encode/index.ts",
													"line": 14,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/topic/encode/index.ts#L14"
												}
											],
											"parameters": [
												{
													"id": 1355,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 294,
														"name": "Result",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Uint8Array"
														},
														"name": "Uint8Array",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1353
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/topic/encode/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/topic/encode/index.ts#L1"
								}
							]
						},
						{
							"id": 1356,
							"name": "Read",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 1357,
									"name": "readTopic",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/topic/read/index.ts",
											"line": 4,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/topic/read/index.ts#L4"
										}
									],
									"signatures": [
										{
											"id": 1358,
											"name": "readTopic",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/topic/read/index.ts",
													"line": 4,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/topic/read/index.ts#L4"
												}
											],
											"parameters": [
												{
													"id": 1359,
													"name": "pointer",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2000,
														"name": "EventTopicPointer",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 1360,
													"name": "state",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2050,
														"name": "EvmState",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Functions",
									"children": [
										1357
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/topic/read/index.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/topic/read/index.ts#L1"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								1345,
								1352,
								1356
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/topic/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/topic/index.ts#L1"
						}
					]
				},
				{
					"id": 2180,
					"name": "Wrap",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 2235,
							"name": "Messages",
							"variant": "declaration",
							"kind": 4,
							"flags": {},
							"children": [
								{
									"id": 2270,
									"name": "badEnumMessage",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 19,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L19"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Input string was neither numeric nor a valid enum value\""
								},
								{
									"id": 2273,
									"name": "checksumFailedMessage",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 23,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L23"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Address checksum failed (use all lowercase or all uppercase to circumvent)\""
								},
								{
									"id": 2265,
									"name": "errorResultMessage",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 12,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L12"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Input is a wrapped result representing an error rather than a value\""
								},
								{
									"id": 2274,
									"name": "invalidUtf16Message",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 25,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L25"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Input string was not valid UTF-16\""
								},
								{
									"id": 2275,
									"name": "looseModeOnlyMessage",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 26,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L26"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Numeric input for bytes is only allowed in loose mode and only for dynamic-length bytestrings\""
								},
								{
									"id": 2276,
									"name": "negativeBytesMessage",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 27,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L27"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Input for bytes cannot be negative\""
								},
								{
									"id": 2267,
									"name": "nonIntegerMessage",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 16,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L16"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Input numeric value was not an integer\""
								},
								{
									"id": 2268,
									"name": "nonNumericMessage",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 17,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L17"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Input string was not numeric\""
								},
								{
									"id": 2269,
									"name": "nonSafeMessage",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 18,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L18"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Input number is not a Javascript safe integer\""
								},
								{
									"id": 2266,
									"name": "notAStringMessage",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 14,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L14"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Input was not a string, type/value pair, or wrapped or boxed string\""
								},
								{
									"id": 2272,
									"name": "outOfRangeEnumMessage",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 22,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L22"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Input is outside the range of this enum type\""
								},
								{
									"id": 2271,
									"name": "outOfRangeMessage",
									"variant": "declaration",
									"kind": 32,
									"flags": {
										"isConst": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 21,
											"character": 13,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L21"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Input is outside the range of this numeric type\""
								},
								{
									"id": 2254,
									"name": "notABytestringMessage",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 43,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L43"
										}
									],
									"signatures": [
										{
											"id": 2255,
											"name": "notABytestringMessage",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/wrap/messages.ts",
													"line": 43,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L43"
												}
											],
											"parameters": [
												{
													"id": 2256,
													"name": "what",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2246,
									"name": "overlongMessage",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 37,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L37"
										}
									],
									"signatures": [
										{
											"id": 2247,
											"name": "overlongMessage",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/wrap/messages.ts",
													"line": 37,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L37"
												}
											],
											"parameters": [
												{
													"id": 2248,
													"name": "expected",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2249,
													"name": "got",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2243,
									"name": "specifiedTypeMessage",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 34,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L34"
										}
									],
									"signatures": [
										{
											"id": 2244,
											"name": "specifiedTypeMessage",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/wrap/messages.ts",
													"line": 34,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L34"
												}
											],
											"parameters": [
												{
													"id": 2245,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2250,
									"name": "tooPreciseMessage",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 40,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L40"
										}
									],
									"signatures": [
										{
											"id": 2251,
											"name": "tooPreciseMessage",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/wrap/messages.ts",
													"line": 40,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L40"
												}
											],
											"parameters": [
												{
													"id": 2252,
													"name": "expected",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2253,
													"name": "got",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2262,
									"name": "unrecognizedNumberMessage",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 54,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L54"
										}
									],
									"signatures": [
										{
											"id": 2263,
											"name": "unrecognizedNumberMessage",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/wrap/messages.ts",
													"line": 54,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L54"
												}
											],
											"parameters": [
												{
													"id": 2264,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": 2327,
																"name": "IntegerOrEnumType",
																"package": "@truffle/codec"
															},
															{
																"type": "reference",
																"target": 2328,
																"name": "DecimalType",
																"package": "@truffle/codec"
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2240,
									"name": "wrappedTypeMessage",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 29,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L29"
										}
									],
									"signatures": [
										{
											"id": 2241,
											"name": "wrappedTypeMessage",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/wrap/messages.ts",
													"line": 29,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L29"
												}
											],
											"parameters": [
												{
													"id": 2242,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2236,
									"name": "wrongArrayLengthMessage",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 8,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L8"
										}
									],
									"signatures": [
										{
											"id": 2237,
											"name": "wrongArrayLengthMessage",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/wrap/messages.ts",
													"line": 8,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L8"
												}
											],
											"parameters": [
												{
													"id": 2238,
													"name": "expected",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
																	"qualifiedName": "BN"
																},
																"name": "BN",
																"package": "@types/bn.js"
															}
														]
													}
												},
												{
													"id": 2239,
													"name": "got",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								},
								{
									"id": 2257,
									"name": "wrongLengthMessage",
									"variant": "declaration",
									"kind": 64,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/messages.ts",
											"line": 46,
											"character": 16,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L46"
										}
									],
									"signatures": [
										{
											"id": 2258,
											"name": "wrongLengthMessage",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/wrap/messages.ts",
													"line": 46,
													"character": 0,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L46"
												}
											],
											"parameters": [
												{
													"id": 2259,
													"name": "what",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2260,
													"name": "expected",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2261,
													"name": "got",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Variables",
									"children": [
										2270,
										2273,
										2265,
										2274,
										2275,
										2276,
										2267,
										2268,
										2269,
										2266,
										2272,
										2271
									]
								},
								{
									"title": "Functions",
									"children": [
										2254,
										2246,
										2243,
										2250,
										2262,
										2240,
										2236,
										2257
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/wrap/messages.ts",
									"line": 1,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/messages.ts#L1"
								}
							]
						},
						{
							"id": 2223,
							"name": "BadResponseTypeError",
							"variant": "declaration",
							"kind": 128,
							"flags": {},
							"children": [
								{
									"id": 2224,
									"name": "constructor",
									"variant": "declaration",
									"kind": 512,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/errors.ts",
											"line": 101,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L101"
										}
									],
									"signatures": [
										{
											"id": 2225,
											"name": "new BadResponseTypeError",
											"variant": "signature",
											"kind": 16384,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/wrap/errors.ts",
													"line": 101,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L101"
												}
											],
											"parameters": [
												{
													"id": 2226,
													"name": "request",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1036,
														"name": "WrapRequest",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 2227,
													"name": "response",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 1046,
														"name": "WrapResponse",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 2223,
												"name": "BadResponseTypeError",
												"package": "@truffle/codec"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "Error.constructor"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								},
								{
									"id": 2228,
									"name": "request",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/errors.ts",
											"line": 98,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L98"
										}
									],
									"type": {
										"type": "reference",
										"target": 1036,
										"name": "WrapRequest",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2229,
									"name": "response",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/errors.ts",
											"line": 99,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L99"
										}
									],
									"type": {
										"type": "reference",
										"target": 1046,
										"name": "WrapResponse",
										"package": "@truffle/codec"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"children": [
										2224
									]
								},
								{
									"title": "Properties",
									"children": [
										2228,
										2229
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/wrap/errors.ts",
									"line": 97,
									"character": 13,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L97"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Error"
									},
									"name": "Error",
									"package": "typescript"
								}
							]
						},
						{
							"id": 2196,
							"name": "NoOverloadsMatchedError",
							"variant": "declaration",
							"kind": 128,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This error indicates that no overloads matched when performing\noverload resolution.  If there was only one plausible match,\na [[TypeMismatchError]] will be thrown instead."
									}
								]
							},
							"children": [
								{
									"id": 2197,
									"name": "constructor",
									"variant": "declaration",
									"kind": 512,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/errors.ts",
											"line": 15,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L15"
										}
									],
									"signatures": [
										{
											"id": 2198,
											"name": "new NoOverloadsMatchedError",
											"variant": "signature",
											"kind": 16384,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/wrap/errors.ts",
													"line": 15,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L15"
												}
											],
											"parameters": [
												{
													"id": 2199,
													"name": "methods",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 2281,
															"name": "Method",
															"package": "@truffle/codec"
														}
													}
												},
												{
													"id": 2200,
													"name": "inputs",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												},
												{
													"id": 2201,
													"name": "userDefinedTypes",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 284,
														"name": "TypesById",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 2196,
												"name": "NoOverloadsMatchedError",
												"package": "@truffle/codec"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "Error.constructor"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								},
								{
									"id": 2203,
									"name": "inputs",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/errors.ts",
											"line": 13,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L13"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								},
								{
									"id": 2202,
									"name": "methods",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/errors.ts",
											"line": 12,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L12"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2281,
											"name": "Method",
											"package": "@truffle/codec"
										}
									}
								},
								{
									"id": 2204,
									"name": "userDefinedTypes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/errors.ts",
											"line": 14,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L14"
										}
									],
									"type": {
										"type": "reference",
										"target": 284,
										"name": "TypesById",
										"package": "@truffle/codec"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"children": [
										2197
									]
								},
								{
									"title": "Properties",
									"children": [
										2203,
										2202,
										2204
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/wrap/errors.ts",
									"line": 11,
									"character": 13,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L11"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Error"
									},
									"name": "Error",
									"package": "typescript"
								}
							]
						},
						{
							"id": 2205,
							"name": "NoUniqueBestOverloadError",
							"variant": "declaration",
							"kind": 128,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This error indicates that multiple overloads matched during\noverload resolution, but none of them was the unique best\noverload."
									}
								]
							},
							"children": [
								{
									"id": 2206,
									"name": "constructor",
									"variant": "declaration",
									"kind": 512,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/errors.ts",
											"line": 37,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L37"
										}
									],
									"signatures": [
										{
											"id": 2207,
											"name": "new NoUniqueBestOverloadError",
											"variant": "signature",
											"kind": 16384,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/wrap/errors.ts",
													"line": 37,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L37"
												}
											],
											"parameters": [
												{
													"id": 2208,
													"name": "resolutions",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 2277,
															"name": "Resolution",
															"package": "@truffle/codec"
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 2205,
												"name": "NoUniqueBestOverloadError",
												"package": "@truffle/codec"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "Error.constructor"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								},
								{
									"id": 2209,
									"name": "resolutions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/errors.ts",
											"line": 36,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L36"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2277,
											"name": "Resolution",
											"package": "@truffle/codec"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"children": [
										2206
									]
								},
								{
									"title": "Properties",
									"children": [
										2209
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/wrap/errors.ts",
									"line": 35,
									"character": 13,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L35"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Error"
									},
									"name": "Error",
									"package": "typescript"
								}
							]
						},
						{
							"id": 2210,
							"name": "TypeMismatchError",
							"variant": "declaration",
							"kind": 128,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This error indicates that the given input could not be recognized as the\ntype it was supposed to be."
									}
								]
							},
							"children": [
								{
									"id": 2211,
									"name": "constructor",
									"variant": "declaration",
									"kind": 512,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/errors.ts",
											"line": 77,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L77"
										}
									],
									"signatures": [
										{
											"id": 2212,
											"name": "new TypeMismatchError",
											"variant": "signature",
											"kind": 16384,
											"flags": {},
											"sources": [
												{
													"fileName": "codec/lib/wrap/errors.ts",
													"line": 77,
													"character": 2,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L77"
												}
											],
											"parameters": [
												{
													"id": 2213,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 104,
														"name": "Type",
														"package": "@truffle/codec"
													}
												},
												{
													"id": 2214,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 2215,
													"name": "variableName",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 2216,
													"name": "specificity",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 2217,
													"name": "reason",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 2210,
												"name": "TypeMismatchError",
												"package": "@truffle/codec"
											},
											"overwrites": {
												"type": "reference",
												"target": -1,
												"name": "Error.constructor"
											}
										}
									],
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								},
								{
									"id": 2220,
									"name": "dataType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/errors.ts",
											"line": 55,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L55"
										}
									],
									"type": {
										"type": "reference",
										"target": 104,
										"name": "Type",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2221,
									"name": "input",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/errors.ts",
											"line": 56,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L56"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2219,
									"name": "reason",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/errors.ts",
											"line": 54,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L54"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2222,
									"name": "specificity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Specificity is used to determine which error to display;\nthe error with the highest specificity will be used.\n\nSpecificity 0: Only for use by the dispatcher\n\nSpecificity 1: The user shouldn't see this\n\nSpecificity 2: For always-error fallbacks\n\nSpecificity 3: For failure to get a good response on yielding\n\nSpecificity 4: More specific errors thrown from a semi-generic case\n\nSpecificity 5: Specific errors thrown from specific cases\n\nSpecificity 6: For one specific error that could use it :P"
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/errors.ts",
											"line": 75,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L75"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2218,
									"name": "variableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/errors.ts",
											"line": 53,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L53"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Constructors",
									"children": [
										2211
									]
								},
								{
									"title": "Properties",
									"children": [
										2220,
										2221,
										2219,
										2222,
										2218
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/wrap/errors.ts",
									"line": 52,
									"character": 13,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/errors.ts#L52"
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Error"
									},
									"name": "Error",
									"package": "typescript"
								}
							]
						},
						{
							"id": 2308,
							"name": "ContractInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2309,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 64,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L64"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2310,
									"name": "selector",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 65,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L65"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2309,
										2310
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 63,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L63"
								}
							]
						},
						{
							"id": 2317,
							"name": "EncodingTextInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2318,
									"name": "encoding",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 79,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L79"
										}
									],
									"type": {
										"type": "literal",
										"value": "utf8"
									}
								},
								{
									"id": 2319,
									"name": "text",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 80,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L80"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2318,
										2319
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 78,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L78"
								}
							]
						},
						{
							"id": 2311,
							"name": "FunctionExternalInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2312,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 69,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L69"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2313,
									"name": "selector",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 70,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L70"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2312,
										2313
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 68,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L68"
								}
							]
						},
						{
							"id": 2281,
							"name": "Method",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This type represents a contract method or constructor.  Note that it's not a\nmethod for a specific instance, so there's no address field."
									}
								],
								"blockTags": [
									{
										"tag": "@Category",
										"content": [
											{
												"kind": "text",
												"text": "Interfaces"
											}
										]
									}
								]
							},
							"children": [
								{
									"id": 2285,
									"name": "abi",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ABI entry for the method."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 37,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L37"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../abi-utils/lib/types.ts",
													"qualifiedName": "FunctionEntry"
												},
												"name": "FunctionEntry",
												"package": "@truffle/abi-utils"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../abi-utils/lib/types.ts",
													"qualifiedName": "ConstructorEntry"
												},
												"name": "ConstructorEntry",
												"package": "@truffle/abi-utils"
											}
										]
									}
								},
								{
									"id": 2284,
									"name": "inputs",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The types of the inputs (each of which may optionally have a name)."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 33,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L33"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 214,
											"name": "OptionallyNamedType",
											"package": "@truffle/codec"
										}
									}
								},
								{
									"id": 2282,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The method name; omitted for constructors."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 24,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L24"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2283,
									"name": "selector",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The method selector; for a constructor, this is instead the (linked)\nconstructor bytecode."
											}
										]
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 29,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L29"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2285,
										2284,
										2282,
										2283
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 20,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L20"
								}
							]
						},
						{
							"id": 2277,
							"name": "Resolution",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@Category",
										"content": [
											{
												"kind": "text",
												"text": "Interfaces"
											}
										]
									}
								]
							},
							"children": [
								{
									"id": 2279,
									"name": "arguments",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 11,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L11"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 295,
											"name": "Value",
											"package": "@truffle/codec"
										}
									}
								},
								{
									"id": 2278,
									"name": "method",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 10,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L10"
										}
									],
									"type": {
										"type": "reference",
										"target": 2281,
										"name": "Method",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 2280,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 12,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L12"
										}
									],
									"type": {
										"type": "reference",
										"target": 2348,
										"name": "Options",
										"package": "@truffle/codec"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2279,
										2278,
										2280
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 9,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L9"
								}
							]
						},
						{
							"id": 2294,
							"name": "ResolveOptions",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2297,
									"name": "allowJson",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 53,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L53"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2296,
									"name": "allowOptions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 52,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L52"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2298,
									"name": "strictBooleans",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 54,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L54"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2295,
									"name": "userDefinedTypes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 51,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L51"
										}
									],
									"type": {
										"type": "reference",
										"target": 284,
										"name": "TypesById",
										"package": "@truffle/codec"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2297,
										2296,
										2298,
										2295
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 50,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L50"
								}
							]
						},
						{
							"id": 2314,
							"name": "TypeValueInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2315,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 74,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L74"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2316,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 75,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L75"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2315,
										2316
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 73,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L73"
								}
							]
						},
						{
							"id": 2320,
							"name": "Uint8ArrayLike",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2321,
									"name": "length",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 84,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L84"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2321
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 83,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L83"
								}
							],
							"indexSignature": {
								"id": 2322,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"sources": [
									{
										"fileName": "codec/lib/wrap/types.ts",
										"line": 85,
										"character": 2,
										"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L85"
									}
								],
								"parameters": [
									{
										"id": 2323,
										"name": "index",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						},
						{
							"id": 2286,
							"name": "WrapOptions",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 2292,
									"name": "allowJson",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 46,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L46"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2289,
									"name": "loose",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 43,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L43"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2288,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 42,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L42"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2290,
									"name": "oldOptionsBehavior",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 44,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L44"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2291,
									"name": "specificityFloor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 45,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L45"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 2293,
									"name": "strictBooleans",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 47,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L47"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 2287,
									"name": "userDefinedTypes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 41,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L41"
										}
									],
									"type": {
										"type": "reference",
										"target": 284,
										"name": "TypesById",
										"package": "@truffle/codec"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2292,
										2289,
										2288,
										2290,
										2291,
										2293,
										2287
									]
								}
							],
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 40,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L40"
								}
							]
						},
						{
							"id": 2324,
							"name": "AddressLikeType",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 89,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L89"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 127,
										"name": "Format.Types.AddressType",
										"package": "@truffle/codec",
										"qualifiedName": "AddressType"
									},
									{
										"type": "reference",
										"target": 236,
										"name": "Format.Types.ContractType",
										"package": "@truffle/codec",
										"qualifiedName": "ContractType"
									}
								]
							}
						},
						{
							"id": 2325,
							"name": "AddressLikeValue",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 93,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L93"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 474,
										"name": "Format.Values.AddressValue",
										"package": "@truffle/codec",
										"qualifiedName": "AddressValue"
									},
									{
										"type": "reference",
										"target": 531,
										"name": "Format.Values.ContractValue",
										"package": "@truffle/codec",
										"qualifiedName": "ContractValue"
									}
								]
							}
						},
						{
							"id": 2299,
							"name": "Case",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 57,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L57"
								}
							],
							"typeParameters": [
								{
									"id": 2305,
									"name": "TypeType",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 2306,
									"name": "ValueType",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 2307,
									"name": "RequestType",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2300,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/types.ts",
											"line": 57,
											"character": 53,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L57"
										}
									],
									"signatures": [
										{
											"id": 2301,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 2302,
													"name": "dataType",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": -1,
														"name": "TypeType",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 2303,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												},
												{
													"id": 2304,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 2286,
														"name": "WrapOptions",
														"package": "@truffle/codec"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "RequestType",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": -1,
														"name": "ValueType",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 1046,
														"name": "WrapResponse",
														"package": "@truffle/codec"
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 2328,
							"name": "DecimalType",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 101,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L101"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 140,
										"name": "Format.Types.FixedType",
										"package": "@truffle/codec",
										"qualifiedName": "FixedType"
									},
									{
										"type": "reference",
										"target": 145,
										"name": "Format.Types.UfixedType",
										"package": "@truffle/codec",
										"qualifiedName": "UfixedType"
									}
								]
							}
						},
						{
							"id": 2332,
							"name": "DecimalValue",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 109,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L109"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 498,
										"name": "Format.Values.FixedValue",
										"package": "@truffle/codec",
										"qualifiedName": "FixedValue"
									},
									{
										"type": "reference",
										"target": 507,
										"name": "Format.Values.UfixedValue",
										"package": "@truffle/codec",
										"qualifiedName": "UfixedValue"
									}
								]
							}
						},
						{
							"id": 2327,
							"name": "IntegerOrEnumType",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 99,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L99"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 2326,
										"name": "IntegerType",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 221,
										"name": "Format.Types.EnumType",
										"package": "@truffle/codec",
										"qualifiedName": "EnumType"
									}
								]
							}
						},
						{
							"id": 2331,
							"name": "IntegerOrEnumValue",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 107,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L107"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 2330,
										"name": "IntegerValue",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 516,
										"name": "Format.Values.EnumValue",
										"package": "@truffle/codec",
										"qualifiedName": "EnumValue"
									}
								]
							}
						},
						{
							"id": 2326,
							"name": "IntegerType",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 97,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L97"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 105,
										"name": "Format.Types.UintType",
										"package": "@truffle/codec",
										"qualifiedName": "UintType"
									},
									{
										"type": "reference",
										"target": 109,
										"name": "Format.Types.IntType",
										"package": "@truffle/codec",
										"qualifiedName": "IntType"
									}
								]
							}
						},
						{
							"id": 2330,
							"name": "IntegerValue",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 105,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L105"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 431,
										"name": "Format.Values.UintValue",
										"package": "@truffle/codec",
										"qualifiedName": "UintValue"
									},
									{
										"type": "reference",
										"target": 440,
										"name": "Format.Values.IntValue",
										"package": "@truffle/codec",
										"qualifiedName": "IntValue"
									}
								]
							}
						},
						{
							"id": 2329,
							"name": "NumericType",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 103,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L103"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 2326,
										"name": "IntegerType",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 2328,
										"name": "DecimalType",
										"package": "@truffle/codec"
									}
								]
							}
						},
						{
							"id": 2333,
							"name": "TupleLikeType",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 111,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L111"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 217,
										"name": "Format.Types.TupleType",
										"package": "@truffle/codec",
										"qualifiedName": "TupleType"
									},
									{
										"type": "reference",
										"target": 194,
										"name": "Format.Types.StructType",
										"package": "@truffle/codec",
										"qualifiedName": "StructType"
									}
								]
							}
						},
						{
							"id": 2334,
							"name": "TupleLikeValue",
							"variant": "declaration",
							"kind": 4194304,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/wrap/types.ts",
									"line": 113,
									"character": 12,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/types.ts#L113"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 342,
										"name": "Format.Values.TupleValue",
										"package": "@truffle/codec",
										"qualifiedName": "TupleValue"
									},
									{
										"type": "reference",
										"target": 331,
										"name": "Format.Values.StructValue",
										"package": "@truffle/codec",
										"qualifiedName": "StructValue"
									}
								]
							}
						},
						{
							"id": 2191,
							"name": "resolveAndWrap",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/wrap/index.ts",
									"line": 132,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/index.ts#L132"
								}
							],
							"signatures": [
								{
									"id": 2192,
									"name": "resolveAndWrap",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/index.ts",
											"line": 132,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/index.ts#L132"
										}
									],
									"parameters": [
										{
											"id": 2193,
											"name": "methods",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2281,
													"name": "Method",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 2194,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 2195,
											"name": "__namedParameters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2294,
												"name": "ResolveOptions",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
											"qualifiedName": "Generator"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1036,
												"name": "WrapRequest",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 2277,
												"name": "Resolution",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 1046,
												"name": "WrapResponse",
												"package": "@truffle/codec"
											}
										],
										"name": "Generator",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2230,
							"name": "wrap",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/wrap/wrap.ts",
									"line": 78,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/wrap.ts#L78"
								}
							],
							"signatures": [
								{
									"id": 2231,
									"name": "wrap",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/wrap.ts",
											"line": 78,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/wrap.ts#L78"
										}
									],
									"parameters": [
										{
											"id": 2232,
											"name": "dataType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 104,
												"name": "Type",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2233,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 2234,
											"name": "wrapOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2286,
												"name": "WrapOptions",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
											"qualifiedName": "Generator"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1036,
												"name": "WrapRequest",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 295,
												"name": "Format.Values.Value",
												"package": "@truffle/codec",
												"qualifiedName": "Value"
											},
											{
												"type": "reference",
												"target": 1046,
												"name": "WrapResponse",
												"package": "@truffle/codec"
											}
										],
										"name": "Generator",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2186,
							"name": "wrapForMethod",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/wrap/index.ts",
									"line": 47,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/index.ts#L47"
								}
							],
							"signatures": [
								{
									"id": 2187,
									"name": "wrapForMethod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/index.ts",
											"line": 47,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/index.ts#L47"
										}
									],
									"parameters": [
										{
											"id": 2188,
											"name": "method",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2281,
												"name": "Method",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2189,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 2190,
											"name": "resolveOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2294,
												"name": "ResolveOptions",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
											"qualifiedName": "Generator"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1036,
												"name": "WrapRequest",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 2277,
												"name": "Resolution",
												"package": "@truffle/codec"
											},
											{
												"type": "reference",
												"target": 1046,
												"name": "WrapResponse",
												"package": "@truffle/codec"
											}
										],
										"name": "Generator",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2181,
							"name": "wrapMultiple",
							"variant": "declaration",
							"kind": 64,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/wrap/index.ts",
									"line": 29,
									"character": 17,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/index.ts#L29"
								}
							],
							"signatures": [
								{
									"id": 2182,
									"name": "wrapMultiple",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/wrap/index.ts",
											"line": 29,
											"character": 0,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/index.ts#L29"
										}
									],
									"parameters": [
										{
											"id": 2183,
											"name": "types",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 214,
													"name": "OptionallyNamedType",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 2184,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 2185,
											"name": "wrapOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2286,
												"name": "WrapOptions",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
											"qualifiedName": "Generator"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1036,
												"name": "WrapRequest",
												"package": "@truffle/codec"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 295,
													"name": "Format.Values.Value",
													"package": "@truffle/codec",
													"qualifiedName": "Value"
												}
											},
											{
												"type": "reference",
												"target": 1046,
												"name": "WrapResponse",
												"package": "@truffle/codec"
											}
										],
										"name": "Generator",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Namespaces",
							"children": [
								2235
							]
						},
						{
							"title": "Classes",
							"children": [
								2223,
								2196,
								2205,
								2210
							],
							"categories": [
								{
									"title": "Errors",
									"children": [
										2196,
										2205,
										2210
									]
								},
								{
									"title": "Other",
									"children": [
										2223
									]
								}
							]
						},
						{
							"title": "Interfaces",
							"children": [
								2308,
								2317,
								2311,
								2281,
								2277,
								2294,
								2314,
								2320,
								2286
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								2324,
								2325,
								2299,
								2328,
								2332,
								2327,
								2331,
								2326,
								2330,
								2329,
								2333,
								2334
							]
						},
						{
							"title": "Functions",
							"children": [
								2191,
								2230,
								2186,
								2181
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/wrap/index.ts",
							"line": 1,
							"character": 0,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/wrap/index.ts#L1"
						}
					]
				},
				{
					"id": 887,
					"name": "NoProjectInfoError",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This error indicates that the user attempted to instantiate a decoder\nwith no project information (by explicitly overriding the default)."
							}
						]
					},
					"children": [
						{
							"id": 888,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/errors.ts",
									"line": 74,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/errors.ts#L74"
								}
							],
							"signatures": [
								{
									"id": 889,
									"name": "new NoProjectInfoError",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/errors.ts",
											"line": 74,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/errors.ts#L74"
										}
									],
									"type": {
										"type": "reference",
										"target": 887,
										"name": "NoProjectInfoError",
										"package": "@truffle/codec"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								888
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/errors.ts",
							"line": 73,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/errors.ts#L73"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Error"
							},
							"name": "Error",
							"package": "typescript"
						}
					]
				},
				{
					"id": 890,
					"name": "RepeatCompilationIdError",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This error indicates there was an attempt to add multiple compilations\nwith the same ID, or a compilation whose ID was already in use."
							}
						]
					},
					"children": [
						{
							"id": 891,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/errors.ts",
									"line": 86,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/errors.ts#L86"
								}
							],
							"signatures": [
								{
									"id": 892,
									"name": "new RepeatCompilationIdError",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/errors.ts",
											"line": 86,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/errors.ts#L86"
										}
									],
									"parameters": [
										{
											"id": 893,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 890,
										"name": "RepeatCompilationIdError",
										"package": "@truffle/codec"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						},
						{
							"id": 894,
							"name": "ids",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "codec/lib/errors.ts",
									"line": 85,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/errors.ts#L85"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								891
							]
						},
						{
							"title": "Properties",
							"children": [
								894
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/errors.ts",
							"line": 84,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/errors.ts#L84"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Error"
							},
							"name": "Error",
							"package": "typescript"
						}
					]
				},
				{
					"id": 2341,
					"name": "UnknownUserDefinedTypeError",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This error indicates that the decoder was unable to locate a user-defined\ntype (struct, enum, or contract type) via its ID.  Unfortunately, we can't\nalways avoid this at the moment; we're hoping to make this more robust in\nthe future with Truffle DB.  In the meantime, it is at least worth noting that\nyou should not encounter this error if your entire project was written in\nSolidity and all compiled at once.  Sorry."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Errors"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2342,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L49"
								}
							],
							"signatures": [
								{
									"id": 2343,
									"name": "new UnknownUserDefinedTypeError",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "codec/lib/common/types.ts",
											"line": 49,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L49"
										}
									],
									"parameters": [
										{
											"id": 2344,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2345,
											"name": "typeString",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2341,
										"name": "UnknownUserDefinedTypeError",
										"package": "@truffle/codec"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						},
						{
							"id": 2347,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 48,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L48"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2346,
							"name": "typeString",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 47,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L47"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2342
							]
						},
						{
							"title": "Properties",
							"children": [
								2347,
								2346
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/common/types.ts",
							"line": 46,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L46"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Error"
							},
							"name": "Error",
							"package": "typescript"
						}
					]
				},
				{
					"id": 1015,
					"name": "AbiArgument",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents a decoded argument passed to a transaction or event,\nor returned from a call."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1017,
							"name": "indexed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether this is an indexed paramter.  Only included for event parameters."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 673,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L673"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1016,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the parameter.  Excluded if the parameter is nameless."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 669,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L669"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1018,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoded value of the argument.  Note that this is a [[Format.Values.Result|Format.Values.Result]], so it\nmay contain errors (although event decodings should typically not contain errors;\nsee the [[DecodedLog]] documentation for why)."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 679,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L679"
								}
							],
							"type": {
								"type": "reference",
								"target": 294,
								"name": "Result",
								"package": "@truffle/codec"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1017,
								1016,
								1018
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 665,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L665"
						}
					]
				},
				{
					"id": 2363,
					"name": "AccessListForAddress",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type for an individual address's entry in an\naccess list"
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2364,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This should be an address"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 127,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L127"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2365,
							"name": "storageKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "These should be 32-byte bytestrings"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 131,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L131"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2364,
								2365
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/common/types.ts",
							"line": 123,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L123"
						}
					]
				},
				{
					"id": 1043,
					"name": "AddressWrapRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A request to resolve a contract name to an address."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Requests"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1044,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that this is an AddressWrapRequest."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 827,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L827"
								}
							],
							"type": {
								"type": "literal",
								"value": "address"
							}
						},
						{
							"id": 1045,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name that needs to be resolved to an address."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 831,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L831"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1044,
								1045
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 823,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L823"
						}
					]
				},
				{
					"id": 1057,
					"name": "AddressWrapResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A response with an address for a contract name (or unusual address form)."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Requests"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1059,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address for the contract name, or null, to indicate that no such\ncontract was found."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 909,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L909"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1058,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that this is an AddressWrapResponse."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 904,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L904"
								}
							],
							"type": {
								"type": "literal",
								"value": "address"
							}
						},
						{
							"id": 1061,
							"name": "partiallyRecognized",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If present, indicates that the input was recognized but not as a valid address."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 917,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L917"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						},
						{
							"id": 1060,
							"name": "reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If present, the reason the address wasn't found."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 913,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L913"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1059,
								1058,
								1061,
								1060
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 900,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L900"
						}
					]
				},
				{
					"id": 954,
					"name": "AnonymousDecoding",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents a decoding of a log as an anonymous event."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 959,
							"name": "abi",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ABI entry for the event.  You can use this to extract the name, for\ninstance."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 386,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L386"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../abi-utils/lib/types.ts",
									"qualifiedName": "EventEntry"
								},
								"name": "EventEntry",
								"package": "@truffle/abi-utils"
							}
						},
						{
							"id": 958,
							"name": "arguments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of decoded arguments to the event."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 381,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L381"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1015,
									"name": "AbiArgument",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 956,
							"name": "class",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The class of the contract that (according to this decoding) emitted the event, as a Format.Types.ContractType.\nThis may be a library!  When a library emits an event, the EVM records it as the calling contract\nhaving emitted the event, but we decode it as if the library emitted the event, for clarity.\n(The address of the contract the EVM thinks emitted the event can of course be found in the original log.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 372,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L372"
								}
							],
							"type": {
								"type": "reference",
								"target": 236,
								"name": "ContractType",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 960,
							"name": "decodingMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 391,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L391"
								}
							],
							"type": {
								"type": "reference",
								"target": 895,
								"name": "DecodingMode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 957,
							"name": "definedIn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The class of the contract that (according to this decoding) defined the event, as a Format.Types.ContractType.\nMay be omitted if we can't determine it, as may occur in ABI mode."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 377,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L377"
								}
							],
							"type": {
								"type": "reference",
								"target": 236,
								"name": "ContractType",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 961,
							"name": "interpretations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Further information about how the decoding may be interpreted.  Note that interpretations\nmay be added by things that use @truffle/codec, such as @truffle/decoder, rather than by\n@truffle/codec itself.  See individual interpretations for details.\n(Currently there are none for this type.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 398,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L398"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 962,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 955,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The kind of decoding; indicates that this is an AnonymousDecoding."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 365,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L365"
								}
							],
							"type": {
								"type": "literal",
								"value": "anonymous"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								959,
								958,
								956,
								960,
								957,
								961,
								955
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 361,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L361"
						}
					]
				},
				{
					"id": 1075,
					"name": "BlockhashedMulticallInfo",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used by the "
							},
							{
								"kind": "code",
								"text": "`specifiedBlockhashMulticall`"
							},
							{
								"kind": "text",
								"text": " interpretation."
							}
						]
					},
					"children": [
						{
							"id": 1077,
							"name": "calls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decodings of the individual calls; these may each be null in\ncase of an error."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 1009,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L1009"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 896,
									"name": "CalldataDecoding",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 1076,
							"name": "specifiedBlockhash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The specified parent blockhash."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 1004,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L1004"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1077,
								1076
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 1000,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L1000"
						}
					]
				},
				{
					"id": 977,
					"name": "BytecodeDecoding",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents a decoding of the return data as bytecode for a known\nclass returned from a constructor.\n\nNOTE: In the future, this type will also contain information about\nany linked libraries the contract being constructed uses.  However,\nthis is not implemented at present."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 984,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the contract created was a library, and was compiled with Solidity\n0.4.20 or later, this field will be included, which gives the address of\nthe created contract (checksummed).  This field will not be included\notherwise!"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 612,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L612"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 983,
							"name": "bytecode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The bytecode of the contract that was created."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 605,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L605"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 981,
							"name": "class",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The class of contract being constructed, as a Format.Types.ContractType."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 596,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L596"
								}
							],
							"type": {
								"type": "reference",
								"target": 236,
								"name": "ContractType",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 980,
							"name": "decodingMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 592,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L592"
								}
							],
							"type": {
								"type": "reference",
								"target": 895,
								"name": "DecodingMode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 982,
							"name": "immutables",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Decodings for any immutable state variables the created contract contains.\nOmitted in ABI mode."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 601,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L601"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1019,
									"name": "StateVariable",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 985,
							"name": "interpretations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Further information about how the decoding may be interpreted.  Note that interpretations\nmay be added by things that use @truffle/codec, such as @truffle/decoder, rather than by\n@truffle/codec itself.  See individual interpretations for details.\n(Currently there are none for this type.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 619,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L619"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 986,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 978,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The kind of decoding; indicates that this is a BytecodeDecoding."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 583,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L583"
								}
							],
							"type": {
								"type": "literal",
								"value": "bytecode"
							}
						},
						{
							"id": 979,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that this kind of decoding indicates a successful return."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 587,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L587"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								984,
								983,
								981,
								980,
								982,
								985,
								978,
								979
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 579,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L579"
						}
					]
				},
				{
					"id": 1064,
					"name": "CallInterpretationInfo",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used by some multicall-like interpretations."
							}
						]
					},
					"children": [
						{
							"id": 1065,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address the call was sent to; may be null in case of\nan error."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 950,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L950"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1067,
							"name": "allowFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether failure was allowed; may be null in case of error."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 958,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L958"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1066,
							"name": "decoding",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoding of the call; may be null in case of error."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 954,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L954"
								}
							],
							"type": {
								"type": "reference",
								"target": 896,
								"name": "CalldataDecoding",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 1068,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The value sent with the call, in Wei.  May be null in case of error."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 962,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L962"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
									"qualifiedName": "BN"
								},
								"name": "BN",
								"package": "@types/bn.js"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1065,
								1067,
								1066,
								1068
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 945,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L945"
						}
					]
				},
				{
					"id": 1027,
					"name": "CodeRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A request for code"
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Requests"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1029,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 707,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L707"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1028,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 706,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L706"
								}
							],
							"type": {
								"type": "literal",
								"value": "code"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1029,
								1028
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 705,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L705"
						}
					]
				},
				{
					"id": 913,
					"name": "ConstructorDecoding",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents a transaction decoding for a constructor call.\nIt's even possible to decode a library constructor call with this.\n\nNOTE: In the future, this type will also contain information about\nany linked libraries the contract being constructed uses.  However,\nthis is not implemented at present."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 917,
							"name": "abi",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ABI entry for the constructor that was called.  Note that although\ndefault constructors don't actually get an ABI entry, we still return an\nABI entry regardless in that case."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 172,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L172"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../abi-utils/lib/types.ts",
									"qualifiedName": "ConstructorEntry"
								},
								"name": "ConstructorEntry",
								"package": "@truffle/abi-utils"
							}
						},
						{
							"id": 916,
							"name": "arguments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of decoded arguments to the constructor.  This will be empty for a\ndefault constructor."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 166,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L166"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1015,
									"name": "AbiArgument",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 918,
							"name": "bytecode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The bytecode of the constructor that was called."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 176,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L176"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 915,
							"name": "class",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The class of contract being constructed, as a Format.Types.ContractType."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 161,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L161"
								}
							],
							"type": {
								"type": "reference",
								"target": 236,
								"name": "ContractType",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 919,
							"name": "decodingMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 181,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L181"
								}
							],
							"type": {
								"type": "reference",
								"target": 895,
								"name": "DecodingMode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 920,
							"name": "interpretations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Further information about how the decoding may be interpreted.  Note that interpretations\nmay be added by things that use @truffle/codec, such as @truffle/decoder, rather than by\n@truffle/codec itself.  See individual interpretations for details.\n(Currently there are none for this type.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 188,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L188"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 921,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 914,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The kind of decoding; indicates that this is a ConstructorDecoding."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 157,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L157"
								}
							],
							"type": {
								"type": "literal",
								"value": "constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								917,
								916,
								918,
								915,
								919,
								920,
								914
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 153,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L153"
						}
					]
				},
				{
					"id": 1072,
					"name": "DeadlinedMulticallInfo",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used by the "
							},
							{
								"kind": "code",
								"text": "`deadlinedMulticall`"
							},
							{
								"kind": "text",
								"text": " interpretation."
							}
						]
					},
					"children": [
						{
							"id": 1074,
							"name": "calls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decodings of the individual calls; these may each be null in\ncase of an error."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 993,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L993"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 896,
									"name": "CalldataDecoding",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 1073,
							"name": "deadline",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deadline."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 988,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L988"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
									"qualifiedName": "BN"
								},
								"name": "BN",
								"package": "@types/bn.js"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1074,
								1073
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 984,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L984"
						}
					]
				},
				{
					"id": 1040,
					"name": "DecimalWrapRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A request to understand an decimal value."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Requests"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1042,
							"name": "input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input whose numeric value needs to be extracted."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 815,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L815"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 1041,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that this is a DecimalWrapRequest."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 811,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L811"
								}
							],
							"type": {
								"type": "literal",
								"value": "decimal"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1042,
								1041
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 807,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L807"
						}
					]
				},
				{
					"id": 1052,
					"name": "DecimalWrapResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A response with an decimal numeric value, as Big."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Requests"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1053,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that this is a DecimalWrapResponse."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 879,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L879"
								}
							],
							"type": {
								"type": "literal",
								"value": "decimal"
							}
						},
						{
							"id": 1056,
							"name": "partiallyRecognized",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If present, indicates that the input was recognized but not as a decimal."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 892,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L892"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						},
						{
							"id": 1055,
							"name": "reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If present, the reason the number wasn't recognized as a decimal."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 888,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L888"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1054,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The numeric value that was extracted, as a Big, or null, to indicate\nthat the number format wasn't recognized."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 884,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L884"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/big.js/index.d.ts",
									"qualifiedName": "Big"
								},
								"name": "Big",
								"package": "@types/big.js"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1053,
								1056,
								1055,
								1054
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 875,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L875"
						}
					]
				},
				{
					"id": 1009,
					"name": "EmptyFailureDecoding",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents a decoding of empty return data from an unsuccessful\ncall, a reversion with no message."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1012,
							"name": "decodingMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 511,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L511"
								}
							],
							"type": {
								"type": "reference",
								"target": 895,
								"name": "DecodingMode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 1013,
							"name": "interpretations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Further information about how the decoding may be interpreted.  Note that interpretations\nmay be added by things that use @truffle/codec, such as @truffle/decoder, rather than by\n@truffle/codec itself.  See individual interpretations for details.\n(Currently there are none for this type.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 518,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L518"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1014,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 1010,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The kind of decoding; indicates that this is an EmptyFailureDecoding."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 502,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L502"
								}
							],
							"type": {
								"type": "literal",
								"value": "failure"
							}
						},
						{
							"id": 1011,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that this kind of decoding indicates an unsuccessful return."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 506,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L506"
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1012,
								1013,
								1010,
								1011
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 498,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L498"
						}
					]
				},
				{
					"id": 944,
					"name": "EventDecoding",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents a decoding of a log as a non-anonymous event."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 949,
							"name": "abi",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ABI entry for the event.  You can use this to extract the name, for\ninstance."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 337,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L337"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../abi-utils/lib/types.ts",
									"qualifiedName": "EventEntry"
								},
								"name": "EventEntry",
								"package": "@truffle/abi-utils"
							}
						},
						{
							"id": 948,
							"name": "arguments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of decoded arguments to the event."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 332,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L332"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1015,
									"name": "AbiArgument",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 946,
							"name": "class",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The class of the contract that (according to this decoding) emitted the event, as a Format.Types.ContractType.\nThis may be a library!  When a library emits an event, the EVM records it as the calling contract\nhaving emitted the event, but we decode it as if the library emitted the event, for clarity.\n(The address of the contract the EVM thinks emitted the event can of course be found in the original log.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 322,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L322"
								}
							],
							"type": {
								"type": "reference",
								"target": 236,
								"name": "ContractType",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 951,
							"name": "decodingMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 346,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L346"
								}
							],
							"type": {
								"type": "reference",
								"target": 895,
								"name": "DecodingMode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 947,
							"name": "definedIn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The class of the contract that (according to this decoding) defined the event, as a Format.Types.ContractType.\nMay be omitted if we can't determine it, as may occur in ABI mode.  If null, this means that it's a file-level\nevent (which as of right now is just future-proofing)."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 328,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L328"
								}
							],
							"type": {
								"type": "reference",
								"target": 236,
								"name": "ContractType",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 952,
							"name": "interpretations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Further information about how the decoding may be interpreted.  Note that interpretations\nmay be added by things that use @truffle/codec, such as @truffle/decoder, rather than by\n@truffle/codec itself.  See individual interpretations for details.\n(Currently there are none for this type.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 353,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L353"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 953,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 945,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The kind of decoding; indicates that this is an EventDecoding."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 315,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L315"
								}
							],
							"type": {
								"type": "literal",
								"value": "event"
							}
						},
						{
							"id": 950,
							"name": "selector",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The selector for the event, as a hexadecimal string."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 341,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L341"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								949,
								948,
								946,
								951,
								947,
								952,
								945,
								950
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 311,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L311"
						}
					]
				},
				{
					"id": 899,
					"name": "FunctionDecoding",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents a transaction decoding for an ordinary function call to a known class;\nnot a constructor call, not a fallback call."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 903,
							"name": "abi",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ABI entry for the function that was called.  You can use this\nto extract the name, for instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 96,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L96"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../abi-utils/lib/types.ts",
									"qualifiedName": "FunctionEntry"
								},
								"name": "FunctionEntry",
								"package": "@truffle/abi-utils"
							}
						},
						{
							"id": 902,
							"name": "arguments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of decoded arguments to the function."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 91,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L91"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1015,
									"name": "AbiArgument",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 901,
							"name": "class",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The class of contract that was called, as a Format.Types.ContractType."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 87,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L87"
								}
							],
							"type": {
								"type": "reference",
								"target": 236,
								"name": "ContractType",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 905,
							"name": "decodingMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 105,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L105"
								}
							],
							"type": {
								"type": "reference",
								"target": 895,
								"name": "DecodingMode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 906,
							"name": "interpretations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Further information about how the decoding may be interpreted.  Note that interpretations\nmay be added by things that use @truffle/codec, such as @truffle/decoder, rather than by\n@truffle/codec itself.  See individual interpretations for details."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 111,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L111"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 907,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 909,
											"name": "aggregate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If this interpretation is present, indicates that the transaction can be\nunderstood as an "
													},
													{
														"kind": "code",
														"text": "`aggregate`"
													},
													{
														"kind": "text",
														"text": " (from multicallv2).  This also includes\n"
													},
													{
														"kind": "code",
														"text": "`blockAndAggregate`"
													},
													{
														"kind": "text",
														"text": ", as well as "
													},
													{
														"kind": "code",
														"text": "`aggregate3`"
													},
													{
														"kind": "text",
														"text": " (from multicallv3), and\n"
													},
													{
														"kind": "code",
														"text": "`aggregate3Value`"
													},
													{
														"kind": "text",
														"text": ".  See [[CallInterpretationInfo]] for more information."
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/types.ts",
													"line": 126,
													"character": 4,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L126"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1064,
													"name": "CallInterpretationInfo",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 911,
											"name": "deadlinedMulticall",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Similar to "
													},
													{
														"kind": "code",
														"text": "`multicall`"
													},
													{
														"kind": "text",
														"text": ", but for Uniswap's deadlined multicall."
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/types.ts",
													"line": 135,
													"character": 4,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L135"
												}
											],
											"type": {
												"type": "reference",
												"target": 1072,
												"name": "DeadlinedMulticallInfo",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 908,
											"name": "multicall",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If this interpretation is present, indicates that the transaction can be\nunderstood as a multicall (v1).  The field contains decodings for the\nindividual calls that the multicall can be broken into.  Note that in\ncase of an error, individual decodings will be returned as null, so be\nsure to check for this."
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/types.ts",
													"line": 119,
													"character": 4,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L119"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 896,
													"name": "CalldataDecoding",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 912,
											"name": "specifiedBlockhashMulticall",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Similar to "
													},
													{
														"kind": "code",
														"text": "`multicall`"
													},
													{
														"kind": "text",
														"text": ", but for Uniswap's multicall with previous block hash."
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/types.ts",
													"line": 139,
													"character": 4,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L139"
												}
											],
											"type": {
												"type": "reference",
												"target": 1075,
												"name": "BlockhashedMulticallInfo",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 910,
											"name": "tryAggregate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Similar to the "
													},
													{
														"kind": "code",
														"text": "`aggregate`"
													},
													{
														"kind": "text",
														"text": " interpretation, but for "
													},
													{
														"kind": "code",
														"text": "`tryAggregate`"
													},
													{
														"kind": "text",
														"text": ".  Also\nincludes "
													},
													{
														"kind": "code",
														"text": "`tryBlockAndAggregate`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/types.ts",
													"line": 131,
													"character": 4,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L131"
												}
											],
											"type": {
												"type": "reference",
												"target": 1069,
												"name": "TryAggregateInfo",
												"package": "@truffle/codec"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												909,
												911,
												908,
												912,
												910
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/types.ts",
											"line": 111,
											"character": 19,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L111"
										}
									]
								}
							}
						},
						{
							"id": 900,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The kind of decoding; indicates that this is a FunctionDecoding."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 83,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L83"
								}
							],
							"type": {
								"type": "literal",
								"value": "function"
							}
						},
						{
							"id": 904,
							"name": "selector",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The selector for the function that was called, as a hexadecimal string."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 100,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L100"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								903,
								902,
								901,
								905,
								906,
								900,
								904
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 79,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L79"
						}
					]
				},
				{
					"id": 1037,
					"name": "IntegerWrapRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A request to understand an integer value."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Requests"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1039,
							"name": "input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input whose numeric value needs to be extracted."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 799,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L799"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 1038,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that this is a IntegerWrapRequest."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 795,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L795"
								}
							],
							"type": {
								"type": "literal",
								"value": "integer"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1039,
								1038
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 791,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L791"
						}
					]
				},
				{
					"id": 1047,
					"name": "IntegerWrapResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A response with an integral numeric value, as BigInt."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Requests"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1048,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that this is a IntegerWrapResponse."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 854,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L854"
								}
							],
							"type": {
								"type": "literal",
								"value": "integer"
							}
						},
						{
							"id": 1051,
							"name": "partiallyRecognized",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If present, indicates that the input was recognized but not as an integer."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 867,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L867"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						},
						{
							"id": 1050,
							"name": "reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If present, the reason the number wasn't recognized as an integer."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 863,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L863"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1049,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The numeric value that was extracted, as a BigInt, or null, to indicate\nthat either the number format wasn't recognized or wasn't an integer."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 859,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L859"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "bigint"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1048,
								1051,
								1050,
								1049
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 850,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L850"
						}
					]
				},
				{
					"id": 1030,
					"name": "LogOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the options parameter to [[decodeEvent]].  This type will be expanded in the future\nas more filtering options are added."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Inputs"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1034,
							"name": "disableChecks",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allows decodings that don't pass the re-encoding test.  Don't turn\nthis on unless you know what you're doing!"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 771,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L771"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1032,
							"name": "extras",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used to indicate whether \"extra\" event decodings -- event decodings from\nnon-library contracts other than the one that appears to have emitted\nthe event -- should be returned.  Defaults to "
									},
									{
										"kind": "code",
										"text": "`\"off\"`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 760,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L760"
								}
							],
							"type": {
								"type": "reference",
								"target": 1035,
								"name": "ExtrasAllowed",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 1033,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If passed, restricts to events with the given ID.  This is meant for\ninternal use by Truffle Debugger; you probably don't want to bother\nwith this option."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 766,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L766"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1031,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If passed, restricts to events with the given name."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 754,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L754"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1034,
								1032,
								1033,
								1031
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 750,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L750"
						}
					]
				},
				{
					"id": 922,
					"name": "MessageDecoding",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents a decoding for a call to a known class that does not appear\nto be a function call, i.e., one that will result in the fallback function being invoked\nif there is one."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 925,
							"name": "abi",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ABI entry for the contract's fallback or receive function that would\nhandle this message; will be null if there is none."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 211,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L211"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../abi-utils/lib/types.ts",
											"qualifiedName": "FallbackEntry"
										},
										"name": "FallbackEntry",
										"package": "@truffle/abi-utils"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../abi-utils/lib/types.ts",
											"qualifiedName": "ReceiveEntry"
										},
										"name": "ReceiveEntry",
										"package": "@truffle/abi-utils"
									}
								]
							}
						},
						{
							"id": 924,
							"name": "class",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The class of contract that was called, as a Format.Types.ContractType."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 206,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L206"
								}
							],
							"type": {
								"type": "reference",
								"target": 236,
								"name": "ContractType",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 926,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that was sent to the contract."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 215,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L215"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 927,
							"name": "decodingMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 220,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L220"
								}
							],
							"type": {
								"type": "reference",
								"target": 895,
								"name": "DecodingMode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 928,
							"name": "interpretations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Further information about how the decoding may be interpreted.  Note that interpretations\nmay be added by things that use @truffle/codec, such as @truffle/decoder, rather than by\n@truffle/codec itself.  See individual interpretations for details."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 226,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L226"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 929,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 930,
											"name": "selectorBasedDecodings",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If we can't recognize the function, we attempt to see if we can decode based on the\nfunction selector alone using https://www.4byte.directory/ to determine possible\nsignatures.  Note these decodings will necessarily be made in ABI mode, and will\neven be lacking names of struct members.\n\nThis interpretation will only be present if the array is nonempty."
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/types.ts",
													"line": 235,
													"character": 4,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L235"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 899,
													"name": "FunctionDecoding",
													"package": "@truffle/codec"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												930
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/types.ts",
											"line": 226,
											"character": 19,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L226"
										}
									]
								}
							}
						},
						{
							"id": 923,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The kind of decoding; indicates that this is a MessageDecoding."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 202,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L202"
								}
							],
							"type": {
								"type": "literal",
								"value": "message"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								925,
								924,
								926,
								927,
								928,
								923
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 198,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L198"
						}
					]
				},
				{
					"id": 2348,
					"name": "Options",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type for transaction options, including\nQuorum-specific ones (privateFor) and\nTruffle-specific ones (overwrite)"
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2359,
							"name": "accessList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 98,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L98"
								}
							],
							"type": {
								"type": "reference",
								"target": 2362,
								"name": "AccessList",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2356,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This should be a bytestring (even-length hex string, with \"0x\")"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 90,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L90"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2349,
							"name": "from",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This should be an address"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 77,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L77"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2351,
							"name": "gas",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 82,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L82"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
									"qualifiedName": "BN"
								},
								"name": "BN",
								"package": "@types/bn.js"
							}
						},
						{
							"id": 2352,
							"name": "gasPrice",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 83,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L83"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
									"qualifiedName": "BN"
								},
								"name": "BN",
								"package": "@types/bn.js"
							}
						},
						{
							"id": 2353,
							"name": "maxFeePerGas",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 84,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L84"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
									"qualifiedName": "BN"
								},
								"name": "BN",
								"package": "@types/bn.js"
							}
						},
						{
							"id": 2354,
							"name": "maxPriorityFeePerGas",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 85,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L85"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
									"qualifiedName": "BN"
								},
								"name": "BN",
								"package": "@types/bn.js"
							}
						},
						{
							"id": 2357,
							"name": "nonce",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 91,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L91"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
									"qualifiedName": "BN"
								},
								"name": "BN",
								"package": "@types/bn.js"
							}
						},
						{
							"id": 2361,
							"name": "overwrite",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Truffle-specific"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 107,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L107"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2360,
							"name": "privateFor",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Quorum-specific; this should be an array of base64-encoded strings,\neach of which encodes a 32-byte bytestring"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 103,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L103"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2350,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This should be an address"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 81,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L81"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2358,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This represents a number, but for compatibility purposes\nit should be given as a hex string.  It should be in the\nrange of 0x00 to 0xbf."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 97,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L97"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2355,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "codec/lib/common/types.ts",
									"line": 86,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L86"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
									"qualifiedName": "BN"
								},
								"name": "BN",
								"package": "@types/bn.js"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2359,
								2356,
								2349,
								2351,
								2352,
								2353,
								2354,
								2357,
								2361,
								2360,
								2350,
								2358,
								2355
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/common/types.ts",
							"line": 65,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L65"
						}
					]
				},
				{
					"id": 970,
					"name": "RawReturnDecoding",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents a decoding of the return data as a raw bytestring\n(as might be returned from a fallback function)."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 973,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The returned bytestring, as a hex string."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 450,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L450"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 974,
							"name": "decodingMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 455,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L455"
								}
							],
							"type": {
								"type": "reference",
								"target": 895,
								"name": "DecodingMode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 975,
							"name": "interpretations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Further information about how the decoding may be interpreted.  Note that interpretations\nmay be added by things that use @truffle/codec, such as @truffle/decoder, rather than by\n@truffle/codec itself.  See individual interpretations for details.\n(Currently there are none for this type.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 462,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L462"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 976,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 971,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The kind of decoding; indicates that this is a RawReturnDecoding."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 442,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L442"
								}
							],
							"type": {
								"type": "literal",
								"value": "returnmessage"
							}
						},
						{
							"id": 972,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that this kind of decoding indicates a successful return."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 446,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L446"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								973,
								974,
								975,
								971,
								972
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 438,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L438"
						}
					]
				},
				{
					"id": 963,
					"name": "ReturnDecoding",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents a decoding of the return data as a collection of\nreturn values from a successful call."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 966,
							"name": "arguments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of decoded return values from the function."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 418,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L418"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1015,
									"name": "AbiArgument",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 967,
							"name": "decodingMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 423,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L423"
								}
							],
							"type": {
								"type": "reference",
								"target": 895,
								"name": "DecodingMode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 968,
							"name": "interpretations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Further information about how the decoding may be interpreted.  Note that interpretations\nmay be added by things that use @truffle/codec, such as @truffle/decoder, rather than by\n@truffle/codec itself.  See individual interpretations for details.\n(Currently there are none for this type.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 430,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L430"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 969,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 964,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The kind of decoding; indicates that this is a ReturnDecoding."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 410,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L410"
								}
							],
							"type": {
								"type": "literal",
								"value": "return"
							}
						},
						{
							"id": 965,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that this kind of decoding indicates a successful return."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 414,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L414"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								966,
								967,
								968,
								964,
								965
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 406,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L406"
						}
					]
				},
				{
					"id": 1000,
					"name": "RevertMessageDecoding",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents a decoding of the return data as a revert message.\nFor forward-compatibility, we do not assume that the revert message is\na string."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1002,
							"name": "abi",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ABI entry for the error that was thrown.  You can use this\nto extract the name, for instance.  This may be spoofed for built-in\ntypes of errors."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 537,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L537"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../abi-utils/lib/types.ts",
									"qualifiedName": "ErrorEntry"
								},
								"name": "ErrorEntry",
								"package": "@truffle/abi-utils"
							}
						},
						{
							"id": 1005,
							"name": "arguments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of decoded arguments passed to revert(); currently, this will\nalways contain just a single string."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 554,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L554"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1015,
									"name": "AbiArgument",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 1006,
							"name": "decodingMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 559,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L559"
								}
							],
							"type": {
								"type": "reference",
								"target": 895,
								"name": "DecodingMode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 1003,
							"name": "definedIn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The class of the contract that (according to this decoding) defined the\nerror type, as a Format.Types.ContractType.  This will be "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " if the\nerror was defined outside of the contract or it's one of the builtin\n"
									},
									{
										"kind": "code",
										"text": "`Error(string)`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`Panic(uint)`"
									},
									{
										"kind": "text",
										"text": " types.\nMay be omitted if we can't determine it, as may occur in ABI mode."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 545,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L545"
								}
							],
							"type": {
								"type": "reference",
								"target": 236,
								"name": "ContractType",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 1007,
							"name": "interpretations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Further information about how the decoding may be interpreted.  Note that interpretations\nmay be added by things that use @truffle/codec, such as @truffle/decoder, rather than by\n@truffle/codec itself.  See individual interpretations for details.\n(Currently there are none for this type.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 566,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L566"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1008,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 1001,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The kind of decoding; indicates that this is a RevertMessageDecoding."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 531,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L531"
								}
							],
							"type": {
								"type": "literal",
								"value": "revert"
							}
						},
						{
							"id": 1004,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that this kind of decoding indicates an unsuccessful return."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 549,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L549"
								}
							],
							"type": {
								"type": "literal",
								"value": false
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1002,
								1005,
								1006,
								1003,
								1007,
								1001,
								1004
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 527,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L527"
						}
					]
				},
				{
					"id": 994,
					"name": "SelfDestructDecoding",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents a decoding of unexpectedly empty return data from a\nsuccessful call, indicating that the contract self-destructed."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 997,
							"name": "decodingMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 483,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L483"
								}
							],
							"type": {
								"type": "reference",
								"target": 895,
								"name": "DecodingMode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 998,
							"name": "interpretations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Further information about how the decoding may be interpreted.  Note that interpretations\nmay be added by things that use @truffle/codec, such as @truffle/decoder, rather than by\n@truffle/codec itself.  See individual interpretations for details.\n(Currently there are none for this type.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 490,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L490"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 999,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 995,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The kind of decoding; indicates that this is an SelfDestructDecoding."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 474,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L474"
								}
							],
							"type": {
								"type": "literal",
								"value": "selfdestruct"
							}
						},
						{
							"id": 996,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that this kind of decoding indicates a successful return."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 478,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L478"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								997,
								998,
								995,
								996
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 470,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L470"
						}
					]
				},
				{
					"id": 1019,
					"name": "StateVariable",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used for representing decoded state variables."
							}
						]
					},
					"children": [
						{
							"id": 1021,
							"name": "class",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The class of the contract that defined the variable, as a Format.Types.ContractType.\nNote that this class may differ from that of the contract being decoded, due\nto inheritance."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 67,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L67"
								}
							],
							"type": {
								"type": "reference",
								"target": 236,
								"name": "ContractType",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 1020,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the variable.  Note that due to inheritance, this may not be unique\namong the contract's state variables."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 61,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L61"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1022,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoded value of the variable.  Note this is a Format.Values.Result, so it may be an error."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 71,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L71"
								}
							],
							"type": {
								"type": "reference",
								"target": 294,
								"name": "Result",
								"package": "@truffle/codec"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1021,
								1020,
								1022
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 56,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L56"
						}
					]
				},
				{
					"id": 1024,
					"name": "StorageRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A request for storage"
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Requests"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 1026,
							"name": "slot",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 697,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L697"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
									"qualifiedName": "BN"
								},
								"name": "BN",
								"package": "@types/bn.js"
							}
						},
						{
							"id": 1025,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 696,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L696"
								}
							],
							"type": {
								"type": "literal",
								"value": "storage"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1026,
								1025
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 695,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L695"
						}
					]
				},
				{
					"id": 1069,
					"name": "TryAggregateInfo",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used by the "
							},
							{
								"kind": "code",
								"text": "`tryAggregate`"
							},
							{
								"kind": "text",
								"text": " interpretation."
							}
						]
					},
					"children": [
						{
							"id": 1071,
							"name": "calls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decodings of the individual calls."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 977,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L977"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1064,
									"name": "CallInterpretationInfo",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 1070,
							"name": "requireSuccess",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether success was required."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 973,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L973"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1071,
								1070
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 969,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L969"
						}
					]
				},
				{
					"id": 987,
					"name": "UnknownBytecodeDecoding",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents a decoding of the return data as bytecode for an\nunknown class returned from a constructor.\n\nNOTE: In the future, this type will also contain information about\nany linked libraries the contract being constructed uses.  However,\nthis is not implemented at present."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 991,
							"name": "bytecode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The bytecode of the contract that was created."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 649,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L649"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 990,
							"name": "decodingMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 645,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L645"
								}
							],
							"type": {
								"type": "reference",
								"target": 895,
								"name": "DecodingMode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 992,
							"name": "interpretations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Further information about how the decoding may be interpreted.  Note that interpretations\nmay be added by things that use @truffle/codec, such as @truffle/decoder, rather than by\n@truffle/codec itself.  See individual interpretations for details.\n(Currently there are none for this type.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 656,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L656"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 993,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 988,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The kind of decoding; indicates that this is an UnknownBytecodeDecoding."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 636,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L636"
								}
							],
							"type": {
								"type": "literal",
								"value": "unknownbytecode"
							}
						},
						{
							"id": 989,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates that this kind of decoding indicates a successful return."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 640,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L640"
								}
							],
							"type": {
								"type": "literal",
								"value": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								991,
								990,
								992,
								988,
								989
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 632,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L632"
						}
					]
				},
				{
					"id": 931,
					"name": "UnknownCallDecoding",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents a function call to an unknown class.  In this case,\nit's simply not possible to return much information."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 934,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that was sent to the contract."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 258,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L258"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 933,
							"name": "decodingMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 254,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L254"
								}
							],
							"type": {
								"type": "reference",
								"target": 895,
								"name": "DecodingMode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 935,
							"name": "interpretations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Further information about how the decoding may be interpreted.  Note that interpretations\nmay be added by things that use @truffle/codec, such as @truffle/decoder, rather than by\n@truffle/codec itself.  See individual interpretations for details."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 264,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L264"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 936,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 937,
											"name": "selectorBasedDecodings",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If we can't recognize the function, we attempt to see if we can decode based on the\nfunction selector alone using https://www.4byte.directory/ to determine possible\nsignatures.  Note these decodings will necessarily be made in ABI mode, and will\neven be lacking names of struct members.\n\nThis interpretation will only be present if the array is nonempty."
													}
												]
											},
											"sources": [
												{
													"fileName": "codec/lib/types.ts",
													"line": 273,
													"character": 4,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L273"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 899,
													"name": "FunctionDecoding",
													"package": "@truffle/codec"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												937
											]
										}
									],
									"sources": [
										{
											"fileName": "codec/lib/types.ts",
											"line": 264,
											"character": 19,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L264"
										}
									]
								}
							}
						},
						{
							"id": 932,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The kind of decoding; indicates that this is an UnknownDecoding."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 249,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L249"
								}
							],
							"type": {
								"type": "literal",
								"value": "unknown"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								934,
								933,
								935,
								932
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 245,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L245"
						}
					]
				},
				{
					"id": 938,
					"name": "UnknownCreationDecoding",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents a contract creation for an unknown class. In this case,\nit's simply not possible to return much information."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 941,
							"name": "bytecode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The bytecode of the contract creation."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 296,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L296"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 940,
							"name": "decodingMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The decoding mode that was used; [see the README](../#decoding-modes) for\nmore on these."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 292,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L292"
								}
							],
							"type": {
								"type": "reference",
								"target": 895,
								"name": "DecodingMode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 942,
							"name": "interpretations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Further information about how the decoding may be interpreted.  Note that interpretations\nmay be added by things that use @truffle/codec, such as @truffle/decoder, rather than by\n@truffle/codec itself.  See individual interpretations for details.\n(Currently there are none for this type.)"
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 303,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L303"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 943,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 939,
							"name": "kind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The kind of decoding; indicates that this is an UnknownCreationDecoding."
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/types.ts",
									"line": 287,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L287"
								}
							],
							"type": {
								"type": "literal",
								"value": "create"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								941,
								940,
								942,
								939
							]
						}
					],
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 283,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L283"
						}
					]
				},
				{
					"id": 2362,
					"name": "AccessList",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type for access lists"
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Interfaces"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "codec/lib/common/types.ts",
							"line": 115,
							"character": 12,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L115"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 2363,
							"name": "AccessListForAddress",
							"package": "@truffle/codec"
						}
					}
				},
				{
					"id": 1062,
					"name": "BlockSpecifier",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies a block.  Can be given by number, or can be given via the\nspecial strings \"genesis\", \"latest\", or \"pending\".\n\nIntended to work like Web3's\n[BlockType](https://web3js.readthedocs.io/en/v1.2.1/web3-eth.html#id14).\n\n*Warning*: Using \"pending\", while allowed, is not advised, as it may lead\nto internally inconsistent results.  Use of \"latest\" is safe and will not\nlead to inconsistent results from a single decoder call due to the decoder's\ncaching system, but pending blocks cannot be cached under this system, which\nmay cause inconsistencies."
							}
						]
					},
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 934,
							"character": 12,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L934"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "literal",
								"value": "genesis"
							},
							{
								"type": "literal",
								"value": "latest"
							},
							{
								"type": "literal",
								"value": "pending"
							}
						]
					}
				},
				{
					"id": 896,
					"name": "CalldataDecoding",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type representing a transaction (calldata) decoding.  As you can see, these come in five types,\neach of which is documented separately."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 14,
							"character": 12,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L14"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 899,
								"name": "FunctionDecoding",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": 913,
								"name": "ConstructorDecoding",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": 922,
								"name": "MessageDecoding",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": 931,
								"name": "UnknownCallDecoding",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": 938,
								"name": "UnknownCreationDecoding",
								"package": "@truffle/codec"
							}
						]
					}
				},
				{
					"id": 2338,
					"name": "ContractKind",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Enumerations"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "codec/lib/common/types.ts",
							"line": 18,
							"character": 12,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L18"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "contract"
							},
							{
								"type": "literal",
								"value": "library"
							},
							{
								"type": "literal",
								"value": "interface"
							}
						]
					}
				},
				{
					"id": 1023,
					"name": "DecoderRequest",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Requests"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 685,
							"character": 12,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L685"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 1024,
								"name": "StorageRequest",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": 1027,
								"name": "CodeRequest",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "lib/types.ts",
									"qualifiedName": "EnsPrimaryNameRequest"
								},
								"name": "EnsPrimaryNameRequest",
								"package": "@truffle/codec"
							}
						]
					}
				},
				{
					"id": 895,
					"name": "DecodingMode",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This is a type for recording what decoding mode a given decoding was produced in.  There are two\ndecoding modes, full mode and ABI mode.  In ABI mode, decoding is done purely based on the ABI JSON.\nFull mode, by contrast, additionally uses AST information to produce a more informative decoding.\nFor more on full mode and ABI mode, see the notes on [Decoding modes](../#decoding-modes)."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 50,
							"character": 12,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L50"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "full"
							},
							{
								"type": "literal",
								"value": "abi"
							}
						]
					}
				},
				{
					"id": 1035,
					"name": "ExtrasAllowed",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used to indicate whether \"extra\" event decodings -- event decodings from\nnon-library contracts other than the one that appears to have emitted\nthe event -- should be returned.\n\n* "
							},
							{
								"kind": "code",
								"text": "`\"off\"`"
							},
							{
								"kind": "text",
								"text": ": Exclude extra decodings (the default).\n* "
							},
							{
								"kind": "code",
								"text": "`\"on\"`"
							},
							{
								"kind": "text",
								"text": ": Include extra decodings.\n* "
							},
							{
								"kind": "code",
								"text": "`\"necessary\"`"
							},
							{
								"kind": "text",
								"text": ": Include extra decodings only if there are no others.\n\nExtra decodings will always be returned after other decodings."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Inputs"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 742,
							"character": 12,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L742"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "off"
							},
							{
								"type": "literal",
								"value": "on"
							},
							{
								"type": "literal",
								"value": "necessary"
							}
						]
					}
				},
				{
					"id": 2335,
					"name": "Location",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Enumerations"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "codec/lib/common/types.ts",
							"line": 6,
							"character": 12,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L6"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "storage"
							},
							{
								"type": "literal",
								"value": "memory"
							},
							{
								"type": "literal",
								"value": "calldata"
							}
						]
					}
				},
				{
					"id": 897,
					"name": "LogDecoding",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type representing a log (event) decoding.  As you can see, these come in two types, each of which\nis documented separately."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 26,
							"character": 12,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L26"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 944,
								"name": "EventDecoding",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": 954,
								"name": "AnonymousDecoding",
								"package": "@truffle/codec"
							}
						]
					}
				},
				{
					"id": 2337,
					"name": "Mutability",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Enumerations"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "codec/lib/common/types.ts",
							"line": 14,
							"character": 12,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L14"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "pure"
							},
							{
								"type": "literal",
								"value": "view"
							},
							{
								"type": "literal",
								"value": "nonpayable"
							},
							{
								"type": "literal",
								"value": "payable"
							}
						]
					}
				},
				{
					"id": 2339,
					"name": "PaddingMode",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Enumerations"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "codec/lib/common/types.ts",
							"line": 23,
							"character": 12,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L23"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "default"
							},
							{
								"type": "literal",
								"value": "permissive"
							},
							{
								"type": "literal",
								"value": "zero"
							},
							{
								"type": "literal",
								"value": "right"
							},
							{
								"type": "literal",
								"value": "defaultOrZero"
							}
						]
					}
				},
				{
					"id": 2340,
					"name": "PaddingType",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Enumerations"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "codec/lib/common/types.ts",
							"line": 33,
							"character": 12,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L33"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "left"
							},
							{
								"type": "literal",
								"value": "right"
							},
							{
								"type": "literal",
								"value": "signed"
							},
							{
								"type": "literal",
								"value": "signedOrLeft"
							}
						]
					}
				},
				{
					"id": 898,
					"name": "ReturndataDecoding",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type representing a returndata (return value or revert message) decoding.\nAs you can see, these come in six types, each of which is documented\nseparately."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Output"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 34,
							"character": 12,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L34"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 963,
								"name": "ReturnDecoding",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": 970,
								"name": "RawReturnDecoding",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": 977,
								"name": "BytecodeDecoding",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": 987,
								"name": "UnknownBytecodeDecoding",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": 994,
								"name": "SelfDestructDecoding",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": 1000,
								"name": "RevertMessageDecoding",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": 1009,
								"name": "EmptyFailureDecoding",
								"package": "@truffle/codec"
							}
						]
					}
				},
				{
					"id": 2336,
					"name": "Visibility",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Enumerations"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "codec/lib/common/types.ts",
							"line": 10,
							"character": 12,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/common/types.ts#L10"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "internal"
							},
							{
								"type": "literal",
								"value": "external"
							}
						]
					}
				},
				{
					"id": 1036,
					"name": "WrapRequest",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An encoder request; can come in one of three types.  It can be either a\nrequest to understand a numeric input (integer or decimal), or a request to\nresolve a contract name.  The \"kind\" field distinguishes."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Requests"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 781,
							"character": 12,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L781"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 1037,
								"name": "IntegerWrapRequest",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": 1040,
								"name": "DecimalWrapRequest",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": 1043,
								"name": "AddressWrapRequest",
								"package": "@truffle/codec"
							}
						]
					}
				},
				{
					"id": 1046,
					"name": "WrapResponse",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An encoder response; contains either a numeric value (as a BigInt or Big)\nor an address."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Requests"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "codec/lib/types.ts",
							"line": 840,
							"character": 12,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/types.ts#L840"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 1047,
								"name": "IntegerWrapResponse",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": 1052,
								"name": "DecimalWrapResponse",
								"package": "@truffle/codec"
							},
							{
								"type": "reference",
								"target": 1057,
								"name": "AddressWrapResponse",
								"package": "@truffle/codec"
							}
						]
					}
				},
				{
					"id": 1078,
					"name": "abifyCalldataDecoding",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "codec/lib/abify.ts",
							"line": 346,
							"character": 16,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abify.ts#L346"
						}
					],
					"signatures": [
						{
							"id": 1079,
							"name": "abifyCalldataDecoding",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/abify.ts",
									"line": 346,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abify.ts#L346"
								}
							],
							"parameters": [
								{
									"id": 1080,
									"name": "decoding",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 896,
										"name": "CalldataDecoding",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1081,
									"name": "userDefinedTypes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 284,
										"name": "TypesById",
										"package": "@truffle/codec"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 896,
								"name": "CalldataDecoding",
								"package": "@truffle/codec"
							}
						}
					]
				},
				{
					"id": 1082,
					"name": "abifyLogDecoding",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "codec/lib/abify.ts",
							"line": 373,
							"character": 16,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abify.ts#L373"
						}
					],
					"signatures": [
						{
							"id": 1083,
							"name": "abifyLogDecoding",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/abify.ts",
									"line": 373,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abify.ts#L373"
								}
							],
							"parameters": [
								{
									"id": 1084,
									"name": "decoding",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 897,
										"name": "LogDecoding",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1085,
									"name": "userDefinedTypes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 284,
										"name": "TypesById",
										"package": "@truffle/codec"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 897,
								"name": "LogDecoding",
								"package": "@truffle/codec"
							}
						}
					]
				},
				{
					"id": 1086,
					"name": "abifyReturndataDecoding",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "codec/lib/abify.ts",
							"line": 391,
							"character": 16,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abify.ts#L391"
						}
					],
					"signatures": [
						{
							"id": 1087,
							"name": "abifyReturndataDecoding",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "codec/lib/abify.ts",
									"line": 391,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/abify.ts#L391"
								}
							],
							"parameters": [
								{
									"id": 1088,
									"name": "decoding",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 898,
										"name": "ReturndataDecoding",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 1089,
									"name": "userDefinedTypes",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 284,
										"name": "TypesById",
										"package": "@truffle/codec"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 898,
								"name": "ReturndataDecoding",
								"package": "@truffle/codec"
							}
						}
					]
				},
				{
					"id": 861,
					"name": "decodeCalldata",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "codec/lib/core.ts",
							"line": 52,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/core.ts#L52"
						}
					],
					"signatures": [
						{
							"id": 862,
							"name": "decodeCalldata",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@Category",
										"content": [
											{
												"kind": "text",
												"text": "Decoding"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/core.ts",
									"line": 52,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/core.ts#L52"
								}
							],
							"parameters": [
								{
									"id": 863,
									"name": "info",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2066,
										"name": "EvmInfo",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 864,
									"name": "isConstructor",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 865,
									"name": "strictAbiMode",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
									"qualifiedName": "Generator"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1023,
										"name": "DecoderRequest",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 896,
										"name": "CalldataDecoding",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								],
								"name": "Generator",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 856,
					"name": "decodeEvent",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "codec/lib/core.ts",
							"line": 236,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/core.ts#L236"
						}
					],
					"signatures": [
						{
							"id": 857,
							"name": "decodeEvent",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@Category",
										"content": [
											{
												"kind": "text",
												"text": "Decoding"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/core.ts",
									"line": 236,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/core.ts#L236"
								}
							],
							"parameters": [
								{
									"id": 858,
									"name": "info",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2066,
										"name": "EvmInfo",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 859,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 860,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1030,
										"name": "LogOptions",
										"package": "@truffle/codec"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
									"qualifiedName": "Generator"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1023,
										"name": "DecoderRequest",
										"package": "@truffle/codec"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 897,
											"name": "LogDecoding",
											"package": "@truffle/codec"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								],
								"name": "Generator",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 866,
					"name": "decodeReturndata",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "codec/lib/core.ts",
							"line": 636,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/core.ts#L636"
						}
					],
					"signatures": [
						{
							"id": 867,
							"name": "decodeReturndata",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If there are multiple possibilities, they're always returned in\nthe order: return, revert, returnmessage, failure, empty, bytecode, unknownbytecode\nMoreover, within \"revert\", builtin ones are put above custom ones"
									}
								],
								"blockTags": [
									{
										"tag": "@Category",
										"content": [
											{
												"kind": "text",
												"text": "Decoding"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/core.ts",
									"line": 636,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/core.ts#L636"
								}
							],
							"parameters": [
								{
									"id": 868,
									"name": "info",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2066,
										"name": "EvmInfo",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 869,
									"name": "successAllocation",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1204,
										"name": "ReturndataAllocation",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 870,
									"name": "status",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 871,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
									"qualifiedName": "Generator"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1023,
										"name": "DecoderRequest",
										"package": "@truffle/codec"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 898,
											"name": "ReturndataDecoding",
											"package": "@truffle/codec"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								],
								"name": "Generator",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 872,
					"name": "decodeRevert",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "codec/lib/core.ts",
							"line": 959,
							"character": 16,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/core.ts#L959"
						}
					],
					"signatures": [
						{
							"id": 873,
							"name": "decodeRevert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Decodes the return data from a failed call."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An array of possible decodings.  At the moment it's\n  impossible for there to be more than one.  (If the call didn't actually\n  fail, or failed in a nonstandard way, you may get no decodings at all, though!)\n\n  Decodings can either be decodings of revert messages, or decodings\n  indicating that there was no revert message.  If somehow both were to be\n  possible, they'd go in that order, although as mentioned, there (at least\n  currently) isn't any way for that to occur."
											}
										]
									},
									{
										"tag": "@Category",
										"content": [
											{
												"kind": "text",
												"text": "Decoding convenience"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/core.ts",
									"line": 959,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/core.ts#L959"
								}
							],
							"parameters": [
								{
									"id": 874,
									"name": "returndata",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The returned data, as a Uint8Array."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 898,
									"name": "ReturndataDecoding",
									"package": "@truffle/codec"
								}
							}
						}
					]
				},
				{
					"id": 850,
					"name": "decodeVariable",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "codec/lib/core.ts",
							"line": 34,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/core.ts#L34"
						}
					],
					"signatures": [
						{
							"id": 851,
							"name": "decodeVariable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@Category",
										"content": [
											{
												"kind": "text",
												"text": "Decoding"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "codec/lib/core.ts",
									"line": 34,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/core.ts#L34"
								}
							],
							"parameters": [
								{
									"id": 852,
									"name": "definition",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1688,
										"name": "AstNode",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 853,
									"name": "pointer",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1974,
										"name": "DataPointer",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 854,
									"name": "info",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2066,
										"name": "EvmInfo",
										"package": "@truffle/codec"
									}
								},
								{
									"id": 855,
									"name": "compilationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
									"qualifiedName": "Generator"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1023,
										"name": "DecoderRequest",
										"package": "@truffle/codec"
									},
									{
										"type": "reference",
										"target": 294,
										"name": "Format.Values.Result",
										"package": "@truffle/codec",
										"qualifiedName": "Result"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Uint8Array"
										},
										"name": "Uint8Array",
										"package": "typescript"
									}
								],
								"name": "Generator",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						1147,
						1560,
						1549,
						1090,
						1123,
						1770,
						1759,
						1862,
						1931,
						2025,
						2102,
						79,
						1361,
						1369,
						1973,
						1399,
						1416,
						1436,
						1344,
						2180
					],
					"categories": [
						{
							"title": "Data",
							"children": [
								79
							]
						},
						{
							"title": "ABI data location",
							"children": [
								1147,
								1344
							]
						},
						{
							"title": "Solidity data location",
							"children": [
								1549,
								1361,
								1369,
								1399,
								1416,
								1436
							]
						},
						{
							"title": "Other",
							"children": [
								1560,
								1090,
								1123,
								1770,
								1759,
								1862,
								1931,
								2025,
								2102,
								1973,
								2180
							]
						}
					]
				},
				{
					"title": "Classes",
					"children": [
						887,
						890,
						2341
					],
					"categories": [
						{
							"title": "Exception",
							"children": [
								887
							]
						},
						{
							"title": "Other",
							"children": [
								890,
								2341
							]
						}
					]
				},
				{
					"title": "Interfaces",
					"children": [
						1015,
						2363,
						1043,
						1057,
						954,
						1075,
						977,
						1064,
						1027,
						913,
						1072,
						1040,
						1052,
						1009,
						944,
						899,
						1037,
						1047,
						1030,
						922,
						2348,
						970,
						963,
						1000,
						994,
						1019,
						1024,
						1069,
						987,
						931,
						938
					],
					"categories": [
						{
							"title": "Output",
							"children": [
								1075,
								1064,
								1072,
								1019,
								1069
							]
						},
						{
							"title": "Other",
							"children": [
								1015,
								2363,
								1043,
								1057,
								954,
								977,
								1027,
								913,
								1040,
								1052,
								1009,
								944,
								899,
								1037,
								1047,
								1030,
								922,
								2348,
								970,
								963,
								1000,
								994,
								1024,
								987,
								931,
								938
							]
						}
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						2362,
						1062,
						896,
						2338,
						1023,
						895,
						1035,
						2335,
						897,
						2337,
						2339,
						2340,
						898,
						2336,
						1036,
						1046
					],
					"categories": [
						{
							"title": "Inputs",
							"children": [
								1062
							]
						},
						{
							"title": "Other",
							"children": [
								2362,
								896,
								2338,
								1023,
								895,
								1035,
								2335,
								897,
								2337,
								2339,
								2340,
								898,
								2336,
								1036,
								1046
							]
						}
					]
				},
				{
					"title": "Functions",
					"children": [
						1078,
						1082,
						1086,
						861,
						856,
						866,
						872,
						850
					],
					"categories": [
						{
							"title": "ABIfication",
							"children": [
								1078,
								1082,
								1086
							]
						},
						{
							"title": "Other",
							"children": [
								861,
								856,
								866,
								872,
								850
							]
						}
					]
				}
			],
			"sources": [
				{
					"fileName": "codec/lib/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/codec/lib/index.ts#L1"
				}
			]
		},
		{
			"id": 41,
			"name": "@truffle/encoder",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "# Truffle Encoder\n\nThis module provides an interface for recognizing JavaScript user input of\nSolidity values, encoding those values for use in a transaction, and performing\noverload resolution based on those values to determine which Solidity method to\nencode for.\n\nThe interface is split into three classes: The project encoder, the contract\nencoder, and the contract instance encoder.  The project encoder is associated\nto the project as a whole; it can recognize user input, encode transactions,\nand resolve overloads, although the interface for the latter two is somewhat\ninconvenient.  The contract encoder is associated to a specific contract class.\nIt is similar to the project encoder, but presents an easier-to-use interface\nfor transaction encoding and overload resolution, so long as one is dealing\nwith methods of the specified class.  The contract instance encoder is\nassociated to a specific contract instance; it is like the contract encoder,\nbut is associated to a specific address, allowing the "
					},
					{
						"kind": "code",
						"text": "`to`"
					},
					{
						"kind": "text",
						"text": " option in\ntransactions to be populated automatically.\n\n## Usage\n\n### Initialization\n\nCreate a encoder with one of the various constructor functions.\n\nFor a project encoder, use the [[forProject|"
					},
					{
						"kind": "code",
						"text": "`forProject`"
					},
					{
						"kind": "text",
						"text": "]] function.\n\nFor a contract encoder, use the [[forArtifact|"
					},
					{
						"kind": "code",
						"text": "`forArtifact`"
					},
					{
						"kind": "text",
						"text": "]] or\n[[forContract|"
					},
					{
						"kind": "code",
						"text": "`forContract`"
					},
					{
						"kind": "text",
						"text": "]] function.\n\nFor a contract instance encoder, use one of the following:\n* [[forDeployedArtifact|"
					},
					{
						"kind": "code",
						"text": "`forDeployedArtifact`"
					},
					{
						"kind": "text",
						"text": "]]\n* [[forDeployedContract|"
					},
					{
						"kind": "code",
						"text": "`forDeployedContract`"
					},
					{
						"kind": "text",
						"text": "]]\n* [[forArtifactAt|"
					},
					{
						"kind": "code",
						"text": "`forArtifactAt`"
					},
					{
						"kind": "text",
						"text": "]]\n* [[forContractAt|"
					},
					{
						"kind": "code",
						"text": "`forContractAt`"
					},
					{
						"kind": "text",
						"text": "]]\n* [[forContractInstance|"
					},
					{
						"kind": "code",
						"text": "`forContractInstance`"
					},
					{
						"kind": "text",
						"text": "]]\n\nSee the documentation of these functions for details, or below for usage\nexamples.\n\nAll of these functions take a final argument in which information about the\nproject is specified; currently only a few methods for specifying project\ninformation are allowed, but more are planned.\n\nOne can also spawn encoders from other encoders by supplying additional\ninformation.  See the documentation for the individual encoder classes for a\nmethod listing.\n\n### Encoder methods\n\nSee the documentation for the individual encoder classes for a method listing.\n\n### Wrapped format information\n\nWhen using the various \"wrap\" functions, values will be wrapped in\nmachine-readable [[Format.Values.Value]] objects containing individual wrapped\nvalues.  (This is the same format that "
					},
					{
						"kind": "code",
						"text": "`@truffle/decoder`"
					},
					{
						"kind": "text",
						"text": " produces output in.)\nSee the [[Format|format documentation]] for an overview and complete module\nlisting.\n\n### Use of project information and encoding of enums\n\nThe encoder can do purely ABI-based encoding, like other encoders; however it\nhas the capability to use project information to do more.\n\nThe most significant use of this is that if further project information is\npresent, this allows for enums to be entered as strings with the name of\nthe option, rather than having to be entered via the underlying number.\nSee the documentation of [[ProjectEncoder.wrap]] for more.\n\nSimilarly, if project information is present, the encoder will also throw an\nerror if you attempt to put an out-of-range value into an enum type, and\nrefuse to consider overloads that would result in this during overload\nresolution.  If project information is absent, the encoder will be unable to\nrecognize any error in these situations.\n\n### ENS resolution\n\nThe encoder supports ENS resolution for address and contract types if\ninitialized to support such.  See the documentation of the [[EncoderSettings]]\nand [[EnsSettings]] types for more.\n\n### Basic usage examples\n\nThese usage examples are for a project with two contracts, "
					},
					{
						"kind": "code",
						"text": "`Contract1`"
					},
					{
						"kind": "text",
						"text": " and\n"
					},
					{
						"kind": "code",
						"text": "`Contract2`"
					},
					{
						"kind": "text",
						"text": ".  Let's suppose these look like the following:\n\n"
					},
					{
						"kind": "code",
						"text": "```solidity\npragma solidity ^0.8.0;\n\ncontract Contract1 {\n function enumExample(Contract2.Ternary x) public payable {\n }\n\n function overloaded(uint x) public payable {\n }\n\n function overloaded(string x) public payable {\n }\n}\n\ncontract Contract2 {\n enum Ternary { No, Yes, Maybe }\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\n#### Encoding a transaction\n\n"
					},
					{
						"kind": "code",
						"text": "```typescript\nimport { forContract } from \"@truffle/encoder\";\nconst contract1 = artifacts.require(\"Contract1\");\nconst contract2 = artifacts.require(\"Contract2\");\nconst encoder = await Encoder.forContract(Contract1, [Contract1, Contract2]);\nconst abi = Contract1.abi.find(abiEntry => abiEntry.name === \"enumExample\");\nconst tx = await encoder.encodeTransaction(\n abi,\n [\"Maybe\", { value: 1 }],\n { allowOptions: true }\n);\n```"
					},
					{
						"kind": "text",
						"text": "\n\n### Performing overload resolution\n\n"
					},
					{
						"kind": "code",
						"text": "```typescript\nimport { forContract } from \"@truffle/encoder\";\nconst contract1 = artifacts.require(\"Contract1\");\nconst contract2 = artifacts.require(\"Contract2\");\nconst encoder = await Encoder.forContract(Contract1, [Contract1, Contract2]);\nconst abis = Contract1.abi.filter(abiEntry => abiEntry.name === \"overloaded\");\nconst { tx, abi } = await encoder.encodeTransaction(\n abis,\n [\"hello\", { value: 1 }],\n { allowOptions: true }\n);\n```"
					}
				]
			},
			"children": [
				{
					"id": 2952,
					"name": "ContractEncoder",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ContractEncoder class.\nCan encode transactions, resolve overloads, and wrap values.\nSee below for a method listing."
							}
						]
					},
					"children": [
						{
							"id": 2953,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 680,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L680"
								}
							],
							"signatures": [
								{
									"id": 2954,
									"name": "new ContractEncoder",
									"variant": "signature",
									"kind": 16384,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 680,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L680"
										}
									],
									"parameters": [
										{
											"id": 2955,
											"name": "projectEncoder",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2861,
												"name": "ProjectEncoder",
												"package": "@truffle/encoder"
											}
										},
										{
											"id": 2956,
											"name": "compilation",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1817,
												"name": "Compilation",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2957,
											"name": "contract",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1832,
												"name": "Contract",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2958,
											"name": "artifact",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../contract-schema/spec/index.d.ts",
													"qualifiedName": "ContractObject"
												},
												"name": "ContractObject",
												"package": "@truffle/contract-schema"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2952,
										"name": "ContractEncoder",
										"package": "@truffle/encoder"
									}
								}
							]
						},
						{
							"id": 2961,
							"name": "abi",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 658,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L658"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../abi-utils/lib/types.ts",
									"qualifiedName": "Abi"
								},
								"name": "Abi",
								"package": "@truffle/abi-utils"
							}
						},
						{
							"id": 2962,
							"name": "artifact",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 659,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L659"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../contract-schema/spec/index.d.ts",
									"qualifiedName": "ContractObject"
								},
								"name": "ContractObject",
								"package": "@truffle/contract-schema"
							}
						},
						{
							"id": 2971,
							"name": "compilation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 667,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L667"
								}
							],
							"type": {
								"type": "reference",
								"target": 1817,
								"name": "Compilation",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2963,
							"name": "constructorBinary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 660,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L660"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2964,
							"name": "constructorContextHash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 661,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L661"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2960,
							"name": "contract",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 657,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L657"
								}
							],
							"type": {
								"type": "reference",
								"target": 1832,
								"name": "Contract",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2970,
							"name": "contractNode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 666,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L666"
								}
							],
							"type": {
								"type": "reference",
								"target": 1688,
								"name": "AstNode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2965,
							"name": "deployedContextHash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 662,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L662"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2966,
							"name": "noBytecodeAllocations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 663,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L663"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2967,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 663,
											"character": 33,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L663"
										}
									],
									"indexSignature": {
										"id": 2968,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "encoder/lib/encoders.ts",
												"line": 664,
												"character": 4,
												"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L664"
											}
										],
										"parameters": [
											{
												"id": 2969,
												"name": "selector",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": 1233,
											"name": "Codec.AbiData.Allocate.CalldataAndReturndataAllocation",
											"package": "@truffle/codec",
											"qualifiedName": "CalldataAndReturndataAllocation"
										}
									}
								}
							}
						},
						{
							"id": 2959,
							"name": "projectEncoder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 656,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L656"
								}
							],
							"type": {
								"type": "reference",
								"target": 2861,
								"name": "ProjectEncoder",
								"package": "@truffle/encoder"
							}
						},
						{
							"id": 3002,
							"name": "encodeCreation",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1323,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1323"
								}
							],
							"signatures": [
								{
									"id": 3003,
									"name": "encodeCreation",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nThis method is similar to [[encodeTransaction]], except that instead of\nencoding a function transaction, it encodes a creation transaction.\n\nBecause this method does not perform overload resolution, it only returns\nthe resulting transaction options (including the encoded "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": "), and does\nnot bother returning the ABI used (as this was user-supplied.)\n\nIf the "
											},
											{
												"kind": "code",
												"text": "`allowOptions`"
											},
											{
												"kind": "text",
												"text": " flag is set in the "
											},
											{
												"kind": "code",
												"text": "`options`"
											},
											{
												"kind": "text",
												"text": " argument, the input may\ncontain an additional transaction options argument after the other\narguments.  Any non-"
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " options not specified in such a transaction\noptions argument will be simply omitted; it you want some options to have\ndefaults, it is up to the you to set these options as appropriate\nafterwards.\n\nIf the transaction options parameter has a "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " or a "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " option,\nthese option will be recognized but ignored.\n\nSee [[encodeTransaction]] for documentation of the inputs."
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 1323,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1323"
										}
									],
									"parameters": [
										{
											"id": 3004,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 3005,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3077,
												"name": "ResolveOptions",
												"package": "@truffle/encoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2348,
												"name": "Options",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2997,
							"name": "encodeTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1283,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1283"
								}
							],
							"signatures": [
								{
									"id": 2998,
									"name": "encodeTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nThis method recognizes user input for a given set of contract methods,\nattempts to interpret it as valid input for one of them, and then\nencodes the result.  (That is to say, it performs overload resolution,\nthen encodes.)  Note that this method cannot be used to encode contract\ncreations; use [[encodeTxNoResolution]] for that.\n\nIf this method cannot match the user input to any of the possible\noverloads, it will throw a [[TypeMismatchError]] or a\n[[NoOverloadsMatchedError]].  If more than one overload matches but none\ncan be considered the unique best, you will get a\n[[NoUniqueBestOverloadError]].  If due to inputting a nonexistent function\nname there are no overloads to check, you will get a\n[[NoFunctionByThatNameError]].  See below for a full list of the accepted\nforms of input, and see [[resolveAndWrap]] for full documentation of the\noverload resolution system.\n\nBe aware that overload resolution may not always be fully reliable; if you\nwant to be absolutely certain that you get the right overload, you can use\n[[encodeTxNoResolution]], which does not perform overload resolution, but\nrequires you to specify exactly which overload you mean.  However, you can\nalso adjust your input to this function to get the overload you want; see\nbelow about "
											},
											{
												"kind": "code",
												"text": "`{ type: ..., value: ... }`"
											},
											{
												"kind": "text",
												"text": " input and enum string input for\ndetails.\n\nIf the "
											},
											{
												"kind": "code",
												"text": "`allowOptions`"
											},
											{
												"kind": "text",
												"text": " flag is set in the "
											},
											{
												"kind": "code",
												"text": "`options`"
											},
											{
												"kind": "text",
												"text": " argument, the input may\ncontain an additional transaction options argument after the other\narguments.  Any non-"
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " options not specified in such a transaction\noptions argument will be simply omitted; it you want some options to have\ndefaults, it is up to the you to set these options as appropriate\nafterwards.  Also, if the transaction options parameter has a "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": "\noption, this option will be recognized but ignored.\n\nUse of the encoder for transactions to be sent to libraries is\npresently not supported and may have unreliable results.  Limited support\nfor this is planned for future versions.\n\n**Accepted forms of input**\n\nThe "
											},
											{
												"kind": "code",
												"text": "`input`"
											},
											{
												"kind": "text",
												"text": " argument may come in a number of forms, depending on the\ntarget data type.  A list of the specific inputs accepted for each type is\nbelow.  However first we must note a few generic forms that inputs are\naccepted in.\n\nInputs may be given as an object of the form "
											},
											{
												"kind": "code",
												"text": "`{ type: ..., value: ... }`"
											},
											{
												"kind": "text",
												"text": "\n(additional fields not allowed), where "
											},
											{
												"kind": "code",
												"text": "`type`"
											},
											{
												"kind": "text",
												"text": " is a string describing the\ntype, and "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " is anything that would be accepted for that type (other\nthan another type/value object).  This form of input is not very useful\nwith *this* method, but it is useful when performing overload resolution\n(see [[resolveAndWrap]]) to restrict the overloads that will be selected\nfrom.  Note that for arrays, "
											},
											{
												"kind": "code",
												"text": "`type`"
											},
											{
												"kind": "text",
												"text": " should simply be "
											},
											{
												"kind": "code",
												"text": "`\"array\"`"
											},
											{
												"kind": "text",
												"text": "; for\nstructs and tuples, "
											},
											{
												"kind": "code",
												"text": "`\"struct\"`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`\"tuple\"`"
											},
											{
												"kind": "text",
												"text": "; for addresses and contracts,\n"
											},
											{
												"kind": "code",
												"text": "`\"address\"`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`\"contract\"`"
											},
											{
												"kind": "text",
												"text": "; for external functions, "
											},
											{
												"kind": "code",
												"text": "`\"function\"`"
											},
											{
												"kind": "text",
												"text": "; for\ntransaction options, "
											},
											{
												"kind": "code",
												"text": "`\"options\"`"
											},
											{
												"kind": "text",
												"text": "; and for enums, it can be either "
											},
											{
												"kind": "code",
												"text": "`\"enum\"`"
											},
											{
												"kind": "text",
												"text": "\n(or the underlying uint type).  For other Solidity types, it should be the\nname of the type; note that "
											},
											{
												"kind": "code",
												"text": "`\"uint\"`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`\"int\"`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`\"fixed\"`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`\"ufixed\"`"
											},
											{
												"kind": "text",
												"text": ", and\n"
											},
											{
												"kind": "code",
												"text": "`\"byte\"`"
											},
											{
												"kind": "text",
												"text": " are accepted.  Vyper's "
											},
											{
												"kind": "code",
												"text": "`\"decimal\"`"
											},
											{
												"kind": "text",
												"text": " type is also accepted.\nAlso, user-defined value types use exactly the same\n"
											},
											{
												"kind": "code",
												"text": "`type`"
											},
											{
												"kind": "text",
												"text": " field as the underlying type; this input format does not distinguish\nbetween them and the underlying type.\n\nNote that input in the form of a [[Format.Values.Value|Value]] is\naccepted, so long as the type is appropriate, but error results are\ntypically not accepted (exceptions are discussed below).\n\nNow then, the list of accepted inputs by type, excluding the above:\n\n**Strings**: The input may be given as string (or "
											},
											{
												"kind": "code",
												"text": "`String`"
											},
											{
												"kind": "text",
												"text": "); note that\nstrings with invalid UTF-16 will not be accepted.  It may also be given as a\n"
											},
											{
												"kind": "code",
												"text": "`Uint8Array`"
											},
											{
												"kind": "text",
												"text": " (or anything that mimics one; see below about bytestrings), which\nwill be treated as UTF-8; note that invalid UTF-8 is allowed in this format.\nStrings may also be given as a [[Format.Values.StringValue|StringValue]].\n\n**Integer types**: Input for integer types may take a variety of forms.\nThe input may be a "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": " (or "
											},
											{
												"kind": "code",
												"text": "`Number`"
											},
											{
												"kind": "text",
												"text": "); note that if so it must be a\nsafe integer.  For larger integers, you must use other forms of input.\nFor instance, the input may be a "
											},
											{
												"kind": "code",
												"text": "`BigInt`"
											},
											{
												"kind": "text",
												"text": ".  The input may also be one\nof several recognized big number classes:\n  * ["
											},
											{
												"kind": "code",
												"text": "`BN`"
											},
											{
												"kind": "text",
												"text": "](https://github.com/indutny/bn.js)\n  * ["
											},
											{
												"kind": "code",
												"text": "`Big`"
											},
											{
												"kind": "text",
												"text": "](https://github.com/MikeMcl/Big.js)\n  * MikeMcl's ["
											},
											{
												"kind": "code",
												"text": "`BigNumber`"
											},
											{
												"kind": "text",
												"text": "](https://github.com/MikeMcl/bignumber.js)\n  * Ethers's ["
											},
											{
												"kind": "code",
												"text": "`BigNumber`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`FixedNumber`"
											},
											{
												"kind": "text",
												"text": "](https://www.npmjs.com/package/@ethersproject/bignumber)\nOf course, any numeric input, no matter the format, must be integral.\nInput may also take the form of a numeric string (or "
											},
											{
												"kind": "code",
												"text": "`String`"
											},
											{
												"kind": "text",
												"text": ").\nThe string may be decimal, but it may also be hexadecimal with "
											},
											{
												"kind": "code",
												"text": "`\"0x\"`"
											},
											{
												"kind": "text",
												"text": "\nprefix, octal with "
											},
											{
												"kind": "code",
												"text": "`\"0o\"`"
											},
											{
												"kind": "text",
												"text": " prefix, or binary with "
											},
											{
												"kind": "code",
												"text": "`\"0xb\"`"
											},
											{
												"kind": "text",
												"text": " prefix.\nYou can also use a negated hexadecimal, octal, or binary string to\nrepresent a negative number.  Whitespace before or after the number is OK,\nand you may use underscores to separate groups of digits (in any base).\nFor decimal strings, scientific notation (e.g. "
											},
											{
												"kind": "code",
												"text": "`1.1e4`"
											},
											{
												"kind": "text",
												"text": ") is also accepted.\nIt is also possible to affix one of the units "
											},
											{
												"kind": "code",
												"text": "`\"wei\"`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`\"gwei\"`"
											},
											{
												"kind": "text",
												"text": ",\n"
											},
											{
												"kind": "code",
												"text": "`\"shannon\"`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`\"finney\"`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`\"szabo\"`"
											},
											{
												"kind": "text",
												"text": ", or "
											},
											{
												"kind": "code",
												"text": "`\"ether\"`"
											},
											{
												"kind": "text",
												"text": " (these are case-insensitive)\nonto a decimal numeric string (you may include space inbetween the\nquantity and the unit) to act as a multiplier (where here the\nassumption is that 1 wei means the number 1).  You may also use a\nunit by itself, with no specified quantity, to mean 1 of that unit.\n(E.g., an input of "
											},
											{
												"kind": "code",
												"text": "`\"wei\"`"
											},
											{
												"kind": "text",
												"text": " will be interpreted as 1.)  Note that it's OK\nif the quantity before the unit is not itself an integer, so long as the\noverall resulting quantity is an integer; e.g., \"1.1 gwei\" is legal integer\ninput.  In addition to giving the input in any of these obviously numeric\nforms, the input may also be given a a "
											},
											{
												"kind": "code",
												"text": "`Uint8Array`"
											},
											{
												"kind": "text",
												"text": " or anything that\nmimics one (see above about bytestrings); in this case the input will\nbe interpreted as the big-endian byte representation of an unsigned\ninteger (or in other words, it will be interpreted as base 256).\nNegative numbers cannot be represented in this way.\nFinally, the input may be given as a\n[[Format.Values.UintValue|UintValue]],\n[[Format.Values.IntValue|IntValue]],\n[[Format.Values.UfixedValue|UfixedValue]],\n[[Format.Values.FixedValue|FixedValue]],\n[[Format.Values.UserDefinedTypeValue|UserDefinedTypeValue]] on top of one of these,\nor [[Format.Values.EnumValue|EnumValue]]; the type is not required to\nmatch unless strict checking is on (see [[resolveAndWrap]]), in which case\nthe type must match exactly.  In addition, the input may also be a\n[[Format.Errors.EnumErrorResult|EnumErrorResult]] so long as\nthe error is a\n[[Format.Errors.EnumOutOfRangeError|EnumOutOfRangeError]];\nother types of error results are not accepted.\n\n**Enums**: Enums accept all the same forms of input as integer types.\nHowever, if the encoder is aware that a particular argument or field is in\nfact an enum and not just an integer, it accepts one additional form of\ninput; the input may be a string (or "
											},
											{
												"kind": "code",
												"text": "`String`"
											},
											{
												"kind": "text",
												"text": ") containing the name of the\nenumerated option.  So, for instance, given the following Solidity code:\n"
											},
											{
												"kind": "code",
												"text": "```solidity\ncontract MyContract {\n  enum Ternary {\n    No, Yes, Maybe\n  }\n}\n```"
											},
											{
												"kind": "text",
												"text": "\nthen "
											},
											{
												"kind": "code",
												"text": "`\"Yes\"`"
											},
											{
												"kind": "text",
												"text": " would be a valid input for an enum of type\n"
											},
											{
												"kind": "code",
												"text": "`MyContract.Ternary`"
											},
											{
												"kind": "text",
												"text": ".  Moreover, "
											},
											{
												"kind": "code",
												"text": "`\"Ternary.Yes\"`"
											},
											{
												"kind": "text",
												"text": " and\n"
											},
											{
												"kind": "code",
												"text": "`\"MyContract.Ternary.Yes\"`"
											},
											{
												"kind": "text",
												"text": " would also work; these latter forms will only\nmatch enum types with the appropriate name and optionally defining\ncontract, so you can use these to restrict matching for overload\nresolution, much like type/value input.  Note these forms do not require\nthe enum to be defined inside of a contract; those defined outside of\ncontracts are supported too, so long as the encoder was initialized to\nknow about them.\n\n**Bytestrings**: Bytestrings can be given in several forms.  Note that for\nall forms of input, if the specified type is "
											},
											{
												"kind": "code",
												"text": "`bytesN`"
											},
											{
												"kind": "text",
												"text": ", it is OK if the\nlength of the input is shorter than N bytes; it will automatically be\nright-padded with zero bytes in this case.  (The exception is if the input\nis a [[Format.Values.BytesValue|BytesValue]] and strict checking is\non; see [[resolveAndWrap]].)  Bytestrings may be given as "
											},
											{
												"kind": "code",
												"text": "`\"0x\"`"
											},
											{
												"kind": "text",
												"text": "-prefixed\neven-length hex strings (a "
											},
											{
												"kind": "code",
												"text": "`String`"
											},
											{
												"kind": "text",
												"text": " may be used in place of a string);\nunderscores may be used to separate groups of hex digits.\nBytestrings may also be given as a "
											},
											{
												"kind": "code",
												"text": "`Uint8Array`"
											},
											{
												"kind": "text",
												"text": ", or anything resembling a\n"
											},
											{
												"kind": "code",
												"text": "`Uint8Array`"
											},
											{
												"kind": "text",
												"text": " -- any object with a "
											},
											{
												"kind": "code",
												"text": "`length`"
											},
											{
												"kind": "text",
												"text": " field which is a "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": ", and\nwhich has fields from "
											},
											{
												"kind": "code",
												"text": "`0`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`length-1`"
											},
											{
												"kind": "text",
												"text": " all "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": "s from 0 to 255, will\nbe accepted.  Input may also be given as a\n[[Format.Values.BytesValue|BytesValue]] or a\n[[Format.Values.UserDefinedTypeValue|UserDefinedTypeValue]]\non top of one; the specific type does not\nhave to match unless strict checking is on.  In addition, a bytestring may be\ngiven as an object with just the fields "
											},
											{
												"kind": "code",
												"text": "`text`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": "; in this\ncase, "
											},
											{
												"kind": "code",
												"text": "`text`"
											},
											{
												"kind": "text",
												"text": " should be a string (it must not have invalid UTF-16) and\n"
											},
											{
												"kind": "code",
												"text": "`encoding`"
											},
											{
												"kind": "text",
												"text": " an encoding to encode it as.  The only supported encoding\ncurrently is "
											},
											{
												"kind": "code",
												"text": "`\"utf8\"`"
											},
											{
												"kind": "text",
												"text": ".  Finally, for compatibility with ethers, when\nstrict checking is off (see [[resolveAndWrap]]), a\nbytestring of dynamic length ("
											},
											{
												"kind": "code",
												"text": "`bytes`"
											},
											{
												"kind": "text",
												"text": ") may have its input given numerically.\nThe valid formats for this are the same as for integer types, except that\nwrapped numeric values are not accepted, numeric strings may not use\nscientific notation or units, and the number may not be negative.  For\ncompatibility reasons, if the number zero is given as input in this way,\nit will be treated as a bytestring consisting of a single zero byte, rather\nthan the empty bytestring.  Warning: an odd-length hex string will be\ntreated as numeric input!  (Effectively, it will be padded on the left\nwith a zero hex digit.)\n\n**Addresses and contracts**: Input may be given as a hex string\nrepresenting 20 bytes, with capitalization according to the Ethereum\naddress checksum.  The "
											},
											{
												"kind": "code",
												"text": "`\"0x\"`"
											},
											{
												"kind": "text",
												"text": " prefix is optional.  If the hex string\nis all lowercase or all uppercase, however, then the checksum check will\nbe skipped, and the input accepted regardless.  Input may also be given\nas an ICAP address; again, the checksum must be correct.  Finally, if ENS\nresolution has been configured, input may be given as an ENS name.\nAll of these may also be given as "
											},
											{
												"kind": "code",
												"text": "`String`"
											},
											{
												"kind": "text",
												"text": "s instead of strings.\nInput may also be given as an object with an "
											},
											{
												"kind": "code",
												"text": "`address`"
											},
											{
												"kind": "text",
												"text": " field, although the\ncontents of that address field must be a "
											},
											{
												"kind": "code",
												"text": "`\"0x\"`"
											},
											{
												"kind": "text",
												"text": "-prefixed hex string (not\n"
											},
											{
												"kind": "code",
												"text": "`String`"
											},
											{
												"kind": "text",
												"text": "), and not any other address format.  Input may also be given\nas a [[Format.Values.AddressValue|AddressValue]],\n[[Format.Values.UserDefinedTypeValue|UserDefinedTypeValue]] on top of such, or\n[[Format.Values.ContractValue|ContractValue]]; the specific type\ndoes not matter.\n\n**Booleans**: Unless the "
											},
											{
												"kind": "code",
												"text": "`strictBooleans`"
											},
											{
												"kind": "text",
												"text": " option is passed, almost any\ninput is accepted (as long as it's not type/value input for a different\ntype), but how it is interpreted depends on the input.  A boolean will be\ninterpreted in the obvious way, and a "
											},
											{
												"kind": "code",
												"text": "`Boolean`"
											},
											{
												"kind": "text",
												"text": " will be unwrapped.  A\nstring will be considered true unless it is falsy or is equal (ignoring\ncase) to the string "
											},
											{
												"kind": "code",
												"text": "`\"false\"`"
											},
											{
												"kind": "text",
												"text": "; however, if "
											},
											{
												"kind": "code",
												"text": "`strictBooleans`"
											},
											{
												"kind": "text",
												"text": " is passed, then\nonly strings that are (ignoring case) equal to "
											},
											{
												"kind": "code",
												"text": "`\"true\"`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`\"false\"`"
											},
											{
												"kind": "text",
												"text": " will\nbe accepted.  A "
											},
											{
												"kind": "code",
												"text": "`String`"
											},
											{
												"kind": "text",
												"text": " will be\nconsidered true if and only if the underlying string is.  A number will be\nconsidered true so long as it is truthy, and a "
											},
											{
												"kind": "code",
												"text": "`Number`"
											},
											{
												"kind": "text",
												"text": " will be considered\ntrue if and only if the underlying number is.  A\n[[Format.Values.BoolValue|BoolValue]], or\n[[Format.Values.UserDefinedTypeValue|UserDefinedTypeValue]] on top of such,\nwill be considered true so\nlong as it represents a true value.  Moreover, two types of\n[[Format.Errors.BoolErrorResult|BoolErrorResult]] also count as\ntrue: Those where the error is a\n[[Format.Errors.BoolOutOfRangeError|BoolOutOfRangeError]] and\nthose where the error is a\n[[Format.Errors.BoolPaddingError|BoolPaddingError]].  This also applies to\na [[Format.Errors.UserDefinedTypeValue|UserDefinedTypeErrors]] on top of one\nof these.  All other\nerror results, and all [[Format.Values.Value|Values]] that are not\n[[Format.Values.BoolValue|BoolValues]] or a\n[[Format.Values.UserDefinedTypeValue|UserDefinedTypeValue]] on top of one,\nwill be rejected.  All other inputs will be considered true so long as\nthey are truthy, unless "
											},
											{
												"kind": "code",
												"text": "`strictBooleans`"
											},
											{
												"kind": "text",
												"text": " is passed, in which case they will\nbe rejected.\n\n**Decimal fixed-point types**: Input for fixed-point decimal types is\nsimilar to input for integer types.  The differences are as follows:\n  * Units are not accepted in numeric strings (or "
											},
											{
												"kind": "code",
												"text": "`String`"
											},
											{
												"kind": "text",
												"text": "s).\n  * Hexadecimal, octal, and binary strings (or "
											},
											{
												"kind": "code",
												"text": "`String`"
											},
											{
												"kind": "text",
												"text": "s) are not\n    accepted.\n  * "
											},
											{
												"kind": "code",
												"text": "`Uint8Array`"
											},
											{
												"kind": "text",
												"text": "s, or objects that mimic them, are not accepted.\n  * Numeric values do not have to be integral.\nNote that if the input is a "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": " (or "
											},
											{
												"kind": "code",
												"text": "`Number`"
											},
											{
												"kind": "text",
												"text": ") or MikeMcl\n[BigNumber](https://github.com/MikeMcl/bignumber.js), it must be a finite\nvalue.  Also, the number of decimal places in the input may not exceed the\nnumber of decimal places allowed in the type.  Finally, just as integer\ntypes do not allow "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": "s (or "
											},
											{
												"kind": "code",
												"text": "`Number`"
											},
											{
												"kind": "text",
												"text": "s) that are unsafe integers as\ninput, decimal types will not accept a "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": " (or "
											},
											{
												"kind": "code",
												"text": "`Number`"
											},
											{
												"kind": "text",
												"text": ") as input if\nthat "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": " is outside the safe range for that type, i.e., it is large\nenough that there may be loss of precision.  (This means that "
											},
											{
												"kind": "code",
												"text": "`1`"
											},
											{
												"kind": "text",
												"text": " is not\nvalid input for a "
											},
											{
												"kind": "code",
												"text": "`fixed128x18`"
											},
											{
												"kind": "text",
												"text": "!)  Using other, safer, forms of input is\nencouraged.\n\n**User-defined value types**: These take exactly the same input as the\nunderlying type.\n\n**Arrays**: The input may be an array, or it may be a\n[[Format.Values.ArrayValue|ArrayValue]].  In the latter case,\nwhether it is static-length or dynamic-length does not need to match\n(unless strict checking is on, see [[resolveAndWrap]]).  If the "
											},
											{
												"kind": "code",
												"text": "`allowJson`"
											},
											{
												"kind": "text",
												"text": "\noption is passed, the array may also be a JSON string.  Note that any allowed\nformat is allowed for the individual elements.\n\n**Structs and tuples**: The input can be given either as an array or as an\nobject; if the "
											},
											{
												"kind": "code",
												"text": "`allowJson`"
											},
											{
												"kind": "text",
												"text": " option is passed, it may also be given as a\nJSON string for one of these (any format is allowed for the individual\nelements).  If given as an array, the elements should be the members of\nthe struct/tuple, in order.  If given as an object, it should be keyed by\nthe struct or tuple's field names; if any of the elements of the tuple are\nunnamed, then input cannot be given as an object.  Additional keys are\nalso allowed unless strict checking is on.  Input may also be given as a\n[[Format.Values.StructValue|StructValue]] or\n[[Format.Values.TupleValue|TupleValue]]; the specific type does not\nmatter.\n\n**External function pointers**: These may be given as an object with fields\n"
											},
											{
												"kind": "code",
												"text": "`address`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`selector`"
											},
											{
												"kind": "text",
												"text": " (additional fields are allowed); the "
											},
											{
												"kind": "code",
												"text": "`address`"
											},
											{
												"kind": "text",
												"text": "\nfield may be anything that would be recognized as an address (see above),\nand the "
											},
											{
												"kind": "code",
												"text": "`selector`"
											},
											{
												"kind": "text",
												"text": " field may be anything that would be recgonized as a\n"
											},
											{
												"kind": "code",
												"text": "`bytes4`"
											},
											{
												"kind": "text",
												"text": " (see above).  Alternatively, this may be given as a bytestring\n(even length "
											},
											{
												"kind": "code",
												"text": "`\"0x\"`"
											},
											{
												"kind": "text",
												"text": "-prefixed hex string or "
											},
											{
												"kind": "code",
												"text": "`String`"
											},
											{
												"kind": "text",
												"text": ") of 24 bytes,\nspecifying the address followed by the selector; in this case, the address\ndoes not need to be checksummed.  Finally, input may of course also be\ngiven as a\n[[Format.Values.FunctionExternalValue|FunctionExternalValue]];\nits more specific type does not matter.\n\n* Transaction options: These are given as an object with fields for the\ndesired options (you can leave options out or have them be "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": " and\nthey'll be ignored).  Note that, in order to maintain compatibility with\nolder versions of Truffle, additional keys are accepted, but there must be\nat least one key that belongs in a transaction options object.  Note that\nif any field exists, and is not "
											},
											{
												"kind": "code",
												"text": "`undefined`"
											},
											{
												"kind": "text",
												"text": ", but the value of that field\ncannot be interpreted as input of the appropriate type, the input will be\nrejected.  Otherwise, inputs for each field can be anything that the\nencoder will understand for this field.  Accepted fields are:\n  * "
											},
											{
												"kind": "code",
												"text": "`gas`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`gasPrice`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`nonce`"
											},
											{
												"kind": "text",
												"text": ": These take integer input\n    (see above).\n  * "
											},
											{
												"kind": "code",
												"text": "`from`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": ": These take address input (see above).\n  * "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": ": This takes "
											},
											{
												"kind": "code",
												"text": "`bytes`"
											},
											{
												"kind": "text",
												"text": " input (see above).\n  * "
											},
											{
												"kind": "code",
												"text": "`overwrite`"
											},
											{
												"kind": "text",
												"text": ": This takes boolean input (see above).\n  * "
											},
											{
												"kind": "code",
												"text": "`type`"
											},
											{
												"kind": "text",
												"text": ": This takes integer input, which must be in the range from\n    0 to "
											},
											{
												"kind": "code",
												"text": "`0xbf`"
											},
											{
												"kind": "text",
												"text": ".\n  * "
											},
											{
												"kind": "code",
												"text": "`accessList`"
											},
											{
												"kind": "text",
												"text": ": This takes input as if for an array of type "
											},
											{
												"kind": "code",
												"text": "`AccessListForAddress[]`"
											},
											{
												"kind": "text",
												"text": ",\n     if "
											},
											{
												"kind": "code",
												"text": "`AccessListForAddress`"
											},
											{
												"kind": "text",
												"text": " were a struct with two fields, "
											},
											{
												"kind": "code",
												"text": "`address`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`storageKeys`"
											},
											{
												"kind": "text",
												"text": ",\n     with "
											},
											{
												"kind": "code",
												"text": "`address`"
											},
											{
												"kind": "text",
												"text": " being an "
											},
											{
												"kind": "code",
												"text": "`address`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`storageKeys`"
											},
											{
												"kind": "text",
												"text": " being of type "
											},
											{
												"kind": "code",
												"text": "`uint256[]`"
											},
											{
												"kind": "text",
												"text": ".\n     Yes, this means storage keys may be given numerically; it also means that if a\n     storage key is given as a hex string representing less than 32 bytes, it will be\n     padded on the left, rather than on the right.\n  * "
											},
											{
												"kind": "code",
												"text": "`privateFor`"
											},
											{
												"kind": "text",
												"text": ": This one is a special case, and requires a specific\n    form of input.  Input must be an array of base64-encoded\n    bytestrings (as strings or "
											},
											{
												"kind": "code",
												"text": "`String`"
											},
											{
												"kind": "text",
												"text": "s), each with a decoded length of\n    32 bytes.\nIn addition, input may also be given as a\n[[Format.Values.OptionsValue|OptionsValue]]."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object with a "
													},
													{
														"kind": "code",
														"text": "`tx`"
													},
													{
														"kind": "text",
														"text": " field, holding the transaction options,\n  including the encoded "
													},
													{
														"kind": "code",
														"text": "`data`"
													},
													{
														"kind": "text",
														"text": ", and an "
													},
													{
														"kind": "code",
														"text": "`abi`"
													},
													{
														"kind": "text",
														"text": " field, indicating which\n  ABI entry was used for encoding."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 1283,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1283"
										}
									],
									"parameters": [
										{
											"id": 2999,
											"name": "abisOrNameOrSig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ABI entries for the overloads, or the name\n  or full signature of the function.  Note that if you are inputting ABI\n  entries, they must be for functions, not constructors.  The entries must\n  be ones associated with this contract."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../abi-utils/lib/types.ts",
																"qualifiedName": "FunctionEntry"
															},
															"name": "FunctionEntry",
															"package": "@truffle/abi-utils"
														}
													}
												]
											}
										},
										{
											"id": 3000,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 3001,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3077,
												"name": "ResolveOptions",
												"package": "@truffle/encoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3067,
												"name": "TxAndAbi",
												"package": "@truffle/encoder"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2992,
							"name": "encodeTxNoResolution",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 960,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L960"
								}
							],
							"signatures": [
								{
									"id": 2993,
									"name": "encodeTxNoResolution",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nThis method is similar to [[encodeTransaction]], except that it does not\nperform overload resolution; it takes a single ABI entry, rather than a\nlist of them or a function name.  Note that unlike [[encodeTransaction]],\nit can also encode contract creation transactions.\n\nBecause this method does not perform overload resolution, it only returns\nthe resulting transaction options (including the encoded "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": "), and does\nnot bother returning the ABI used (as this was user-supplied.)\n\nIf the "
											},
											{
												"kind": "code",
												"text": "`allowOptions`"
											},
											{
												"kind": "text",
												"text": " flag is set in the "
											},
											{
												"kind": "code",
												"text": "`options`"
											},
											{
												"kind": "text",
												"text": " argument, the input may\ncontain an additional transaction options argument after the other\narguments.  Any non-"
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " options not specified in such a transaction\noptions argument will be simply omitted; it you want some options to have\ndefaults, it is up to the you to set these options as appropriate\nafterwards.\n\nIf the transaction options parameter has a "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " option, this option will\nbe recognized but ignored.  Similarly, when encoding a contract creation,\nthe "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " option will also be ignored.\n\nSee [[encodeTransaction]] for documentation of most of the inputs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The resulting transaction options, including the encoded "
													},
													{
														"kind": "code",
														"text": "`data`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 960,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L960"
										}
									],
									"parameters": [
										{
											"id": 2994,
											"name": "abi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ABI entry for the transaction to encode for.  Note it must\n  be one for this contract.  May be for either a function or a constructor."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "FunctionEntry"
														},
														"name": "FunctionEntry",
														"package": "@truffle/abi-utils"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "ConstructorEntry"
														},
														"name": "ConstructorEntry",
														"package": "@truffle/abi-utils"
													}
												]
											}
										},
										{
											"id": 2995,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 2996,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3077,
												"name": "ResolveOptions",
												"package": "@truffle/encoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2348,
												"name": "Options",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3006,
							"name": "forInstance",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1344,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1344"
								}
							],
							"signatures": [
								{
									"id": 3007,
									"name": "forInstance",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nConstructs a contract instance encoder for a given instance of the\ncontract this encoder is for."
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 1344,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1344"
										}
									],
									"parameters": [
										{
											"id": 3008,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The address of the contract instance.\n  If omitted, it will be autodetected.\n  If an invalid address is provided, this method will throw an exception."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3020,
												"name": "ContractInstanceEncoder",
												"package": "@truffle/encoder"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3009,
							"name": "getAbis",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1362,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1362"
								}
							],
							"signatures": [
								{
									"id": 3010,
									"name": "getAbis",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 1362,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1362"
										}
									],
									"parameters": [
										{
											"id": 3011,
											"name": "abisOrNameOrSig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../abi-utils/lib/types.ts",
																"qualifiedName": "FunctionEntry"
															},
															"name": "FunctionEntry",
															"package": "@truffle/abi-utils"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../abi-utils/lib/types.ts",
												"qualifiedName": "FunctionEntry"
											},
											"name": "FunctionEntry",
											"package": "@truffle/abi-utils"
										}
									}
								}
							]
						},
						{
							"id": 3018,
							"name": "getConstructorAbi",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1449,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1449"
								}
							],
							"signatures": [
								{
									"id": 3019,
									"name": "getConstructorAbi",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 1449,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1449"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../abi-utils/lib/types.ts",
											"qualifiedName": "ConstructorEntry"
										},
										"name": "ConstructorEntry",
										"package": "@truffle/abi-utils"
									}
								}
							]
						},
						{
							"id": 3015,
							"name": "getConstructorMethod",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1418,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1418"
								}
							],
							"signatures": [
								{
									"id": 3016,
									"name": "getConstructorMethod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 1418,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1418"
										}
									],
									"parameters": [
										{
											"id": 3017,
											"name": "abi",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../abi-utils/lib/types.ts",
													"qualifiedName": "ConstructorEntry"
												},
												"name": "ConstructorEntry",
												"package": "@truffle/abi-utils"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2281,
										"name": "Method",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 3012,
							"name": "getMethod",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1386,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1386"
								}
							],
							"signatures": [
								{
									"id": 3013,
									"name": "getMethod",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 1386,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1386"
										}
									],
									"parameters": [
										{
											"id": 3014,
											"name": "abi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "FunctionEntry"
														},
														"name": "FunctionEntry",
														"package": "@truffle/abi-utils"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "ConstructorEntry"
														},
														"name": "ConstructorEntry",
														"package": "@truffle/abi-utils"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2281,
										"name": "Method",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2972,
							"name": "getProjectEncoder",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 673,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L673"
								}
							],
							"signatures": [
								{
									"id": 2973,
									"name": "getProjectEncoder",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Just used for testing, currently"
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 673,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L673"
										}
									],
									"type": {
										"type": "reference",
										"target": 2861,
										"name": "ProjectEncoder",
										"package": "@truffle/encoder"
									}
								}
							]
						},
						{
							"id": 2987,
							"name": "resolveAndWrap",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 917,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L917"
								}
							],
							"signatures": [
								{
									"id": 2988,
									"name": "resolveAndWrap",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nThis method attempts to perform overload resolution given user input\nto one of several possible methods.  If the given input matches more than\none of these methods, it will attempt to select the best match.  See\n[[encodeTransaction]] for documentation of the acccepted input forms.\n\nIf it is not possible for the given input to match any of the given methods,\neither a [[TypeMismatchError]] or a\n[[NoOverloadsMatchedError]] will be\nthrown.  If more than one overload matches but none can be considered the\nunique best, you will get a\n[[NoUniqueBestOverloadError]].\nIf due to inputting a nonexistent function name there are no overloads to\ncheck, you will get a [[NoFunctionByThatNameError]].\n\nIf the "
											},
											{
												"kind": "code",
												"text": "`allowOptions`"
											},
											{
												"kind": "text",
												"text": " flag is set in the "
											},
											{
												"kind": "code",
												"text": "`options`"
											},
											{
												"kind": "text",
												"text": " argument, the input may\ncontain an additional transaction options argument after the other\narguments.\n\nNote that use of the encoder for transactions to be sent to libraries is\npresently not supported and may have unreliable results.  Limited support\nfor this is planned for future versions.\n\n**Overload resolution system**\n\nIf it is necessary to perform overload resolution by type rather than\nsimply by length, the encoder will select among the overloads that\ncould work the one it considers to be the best match.  To be the best\nmatch, it must be a best match for each argument.  An overload is\na best match for a given argument if the type it would assign that\nargument is highest-priority among all types it could assign that\nargument (selected from overloads that match overall).\n\nNote that when doing this the match checker will be somewhat stricter than\nusual; inputs for structs/tuples will not be allowed to contain extra\nkeys, numeric input (including odd-length hex strings)\nwill not be accepted for dynamic-length bytestrings,\nand if a value is given as a [[Format.Values.Value|Value]], it\nwill only match its specific type, rather than being allowed to match\nother types as usual (unless it is itself wrapped in a type/value pair).\n\nThe overall order of priority of types is as follows:\n1. transaction options\n2. arrays\n3. structs and tuples\n4. addresses and contracts\n5. bytestrings ("
											},
											{
												"kind": "code",
												"text": "`bytesN`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`bytes`"
											},
											{
												"kind": "text",
												"text": ")\n6. external function pointers\n7. numeric types\n8. "
											},
											{
												"kind": "code",
												"text": "`enum`"
											},
											{
												"kind": "text",
												"text": "s\n9. "
											},
											{
												"kind": "code",
												"text": "`string`"
											},
											{
												"kind": "text",
												"text": " [is #10 with "
											},
											{
												"kind": "code",
												"text": "`strictBooleans`"
											},
											{
												"kind": "text",
												"text": "]\n10. "
											},
											{
												"kind": "code",
												"text": "`bool`"
											},
											{
												"kind": "text",
												"text": " [is #9 with "
											},
											{
												"kind": "code",
												"text": "`strictBooleans`"
											},
											{
												"kind": "text",
												"text": "]\n\n(Note that if the encoder does not know that a certain argument is\nsupposed to be an enum, it will of course just be treated as the\nunderlying numeric type.)\n\n(If the "
											},
											{
												"kind": "code",
												"text": "`strictBooleans`"
											},
											{
												"kind": "text",
												"text": " option is passed, the priority order of "
											},
											{
												"kind": "code",
												"text": "`string`"
											},
											{
												"kind": "text",
												"text": "\nand "
											},
											{
												"kind": "code",
												"text": "`bool`"
											},
											{
												"kind": "text",
												"text": " is swapped.)\n\nMoreover, within each category there is a priority ordering (which is\nnot always total).  Specifically:\n* For arrays, if "
											},
											{
												"kind": "code",
												"text": "`S`"
											},
											{
												"kind": "text",
												"text": " has priority over "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": ", then "
											},
											{
												"kind": "code",
												"text": "`S[]`"
											},
											{
												"kind": "text",
												"text": " has priority\n  over "
											},
											{
												"kind": "code",
												"text": "`T[]`"
											},
											{
												"kind": "text",
												"text": ", and "
											},
											{
												"kind": "code",
												"text": "`S[n]`"
											},
											{
												"kind": "text",
												"text": " has priority over "
											},
											{
												"kind": "code",
												"text": "`T[n]`"
											},
											{
												"kind": "text",
												"text": ".  Moreover, "
											},
											{
												"kind": "code",
												"text": "`S[n]`"
											},
											{
												"kind": "text",
												"text": "\n  has priority over "
											},
											{
												"kind": "code",
												"text": "`S[]`"
											},
											{
												"kind": "text",
												"text": " and so also over "
											},
											{
												"kind": "code",
												"text": "`T[]`"
											},
											{
												"kind": "text",
												"text": ".\n* Structs and tuples mostly act the same as the overall arguments list; for\n  one such type "
											},
											{
												"kind": "code",
												"text": "`S`"
											},
											{
												"kind": "text",
												"text": " to have priority over another type "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": ", each\n  member type of "
											},
											{
												"kind": "code",
												"text": "`S`"
											},
											{
												"kind": "text",
												"text": " must have priority over the corresponding member type\n  of "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": " (correspondence being determined by the order of the members).\n  However, if the two types "
											},
											{
												"kind": "code",
												"text": "`S`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": " also have exactly the same\n  component names (and each has all of its components named), then\n  this will also be checked with correspondence by name instead of\n  position, and "
											},
											{
												"kind": "code",
												"text": "`S`"
											},
											{
												"kind": "text",
												"text": " will only be considered more specific than "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": " if\n  both checks pass.\n* "
											},
											{
												"kind": "code",
												"text": "`bytesN`"
											},
											{
												"kind": "text",
												"text": " has priority over "
											},
											{
												"kind": "code",
												"text": "`bytesM`"
											},
											{
												"kind": "text",
												"text": " if "
											},
											{
												"kind": "code",
												"text": "`N<=M`"
											},
											{
												"kind": "text",
												"text": ", and has priority over\n  "
											},
											{
												"kind": "code",
												"text": "`bytes`"
											},
											{
												"kind": "text",
												"text": "\n* A numeric type "
											},
											{
												"kind": "code",
												"text": "`S`"
											},
											{
												"kind": "text",
												"text": " has priority over a numeric type "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": " if the values\n  representable by "
											},
											{
												"kind": "code",
												"text": "`S`"
											},
											{
												"kind": "text",
												"text": " are a subset of those representable by "
											},
											{
												"kind": "code",
												"text": "`T`"
											},
											{
												"kind": "text",
												"text": ".\n\nIf you are not getting the overload you want, you can use explicit\ntype-value input as discussed in the documentation for\n[[encodeTransaction]], or you can skip overload resolution and explicitly\nselect an overload by other means.  For enums you may also specify the\nenum type as documented in [[encodeTransaction]]."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The interpretation of the input and the resolved method, as a\n  [[Resolution]] object."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 917,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L917"
										}
									],
									"parameters": [
										{
											"id": 2989,
											"name": "abisOrNameOrSig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ABI entries for the overloads, or the name or\n  full signature of the function.  Note that if you are inputting ABI\n  entries, they must be for functions, not constructors.  The entries must\n  be ones associated with this contract."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../abi-utils/lib/types.ts",
																"qualifiedName": "FunctionEntry"
															},
															"name": "FunctionEntry",
															"package": "@truffle/abi-utils"
														}
													}
												]
											}
										},
										{
											"id": 2990,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An array of the inputs to the transaction.  May include a\n  transaction options argument on the end if the "
													},
													{
														"kind": "code",
														"text": "`allowOptions`"
													},
													{
														"kind": "text",
														"text": " flag is\n  set."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 2991,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Contains options to control the operation of this method."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 3077,
												"name": "ResolveOptions",
												"package": "@truffle/encoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2277,
												"name": "Resolution",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2978,
							"name": "wrap",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 772,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L772"
								}
							],
							"signatures": [
								{
									"id": 2979,
									"name": "wrap",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "See [[ProjectEncoder.wrap]]."
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 772,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L772"
										}
									],
									"parameters": [
										{
											"id": 2980,
											"name": "dataType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 104,
												"name": "Type",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2981,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 295,
												"name": "Value",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2974,
							"name": "wrapElementaryValue",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 762,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L762"
								}
							],
							"signatures": [
								{
									"id": 2975,
									"name": "wrapElementaryValue",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "See [[ProjectEncoder.wrapElementaryValue]]."
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 762,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L762"
										}
									],
									"parameters": [
										{
											"id": 2976,
											"name": "dataType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 164,
												"name": "ElementaryType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2977,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 428,
												"name": "ElementaryValue",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2982,
							"name": "wrapForTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 806,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L806"
								}
							],
							"signatures": [
								{
									"id": 2983,
									"name": "wrapForTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nThis method recognizes user input for a transaction.  It will throw\na [[TypeMismatchError]] if it cannot do this.  This method requires\nthat the precise function be specified; it does not perofrm overload\nresolution.  See [[encodeTransaction]] for documentation of the accepted\nforms of input.\n\nIf the "
											},
											{
												"kind": "code",
												"text": "`allowOptions`"
											},
											{
												"kind": "text",
												"text": " flag is set in the "
											},
											{
												"kind": "code",
												"text": "`options`"
											},
											{
												"kind": "text",
												"text": " argument, the input may\ncontain an additional transaction options argument after the other\narguments.\n\nNote that use of the encoder for transactions to be sent to libraries is\npresently not supported and may have unreliable results.  Limited support\nfor this is planned for future versions."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The interpretation of the input, as a\n  [[Resolution]] object."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 806,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L806"
										}
									],
									"parameters": [
										{
											"id": 2984,
											"name": "abi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "FunctionEntry"
														},
														"name": "FunctionEntry",
														"package": "@truffle/abi-utils"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "ConstructorEntry"
														},
														"name": "ConstructorEntry",
														"package": "@truffle/abi-utils"
													}
												]
											}
										},
										{
											"id": 2985,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An array of the inputs to the transaction.  May include a\n  transaction options argument on the end if the "
													},
													{
														"kind": "code",
														"text": "`allowOptions`"
													},
													{
														"kind": "text",
														"text": " flag is\n  set."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 2986,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Contains options to control the operation of this method."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 3077,
												"name": "ResolveOptions",
												"package": "@truffle/encoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2277,
												"name": "Resolution",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2953
							]
						},
						{
							"title": "Properties",
							"children": [
								2961,
								2962,
								2971,
								2963,
								2964,
								2960,
								2970,
								2965,
								2966,
								2959
							]
						},
						{
							"title": "Methods",
							"children": [
								3002,
								2997,
								2992,
								3006,
								3009,
								3018,
								3015,
								3012,
								2972,
								2987,
								2978,
								2974,
								2982
							]
						}
					],
					"sources": [
						{
							"fileName": "encoder/lib/encoders.ts",
							"line": 655,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L655"
						}
					]
				},
				{
					"id": 3020,
					"name": "ContractInstanceEncoder",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ContractInstanceEncoder class.\nCan encode transactions, resolve overloads, and wrap values.\nDiffers from the [[ContractEncoder]] only in that it carries\na "
							},
							{
								"kind": "code",
								"text": "`to`"
							},
							{
								"kind": "text",
								"text": " address for non-constructor transactions.\nSee below for a method listing."
							}
						]
					},
					"children": [
						{
							"id": 3021,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1474,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1474"
								}
							],
							"signatures": [
								{
									"id": 3022,
									"name": "new ContractInstanceEncoder",
									"variant": "signature",
									"kind": 16384,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 1474,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1474"
										}
									],
									"parameters": [
										{
											"id": 3023,
											"name": "contractEncoder",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2952,
												"name": "ContractEncoder",
												"package": "@truffle/encoder"
											}
										},
										{
											"id": 3024,
											"name": "toAddress",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 3020,
										"name": "ContractInstanceEncoder",
										"package": "@truffle/encoder"
									}
								}
							]
						},
						{
							"id": 3025,
							"name": "contractEncoder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1468,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1468"
								}
							],
							"type": {
								"type": "reference",
								"target": 2952,
								"name": "ContractEncoder",
								"package": "@truffle/encoder"
							}
						},
						{
							"id": 3026,
							"name": "toAddress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1469,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1469"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3055,
							"name": "encodeCreation",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1610,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1610"
								}
							],
							"signatures": [
								{
									"id": 3056,
									"name": "encodeCreation",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nThis method functions identically to [[ContractEncoder.encodeCreation]].\nThe particular contract instance is ignored, only its class is used."
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 1610,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1610"
										}
									],
									"parameters": [
										{
											"id": 3057,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 3058,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3077,
												"name": "ResolveOptions",
												"package": "@truffle/encoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2348,
												"name": "Options",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3050,
							"name": "encodeTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1587,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1587"
								}
							],
							"signatures": [
								{
									"id": 3051,
									"name": "encodeTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nThis method functions identically to [[ContractEncoder.encodeTransaction]],\nexcept that the "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " option is automatically set to this contract\ninstance's address.  If an explicit "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " address is passed as a\ntransaction option, it will be recognized but ignored."
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 1587,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1587"
										}
									],
									"parameters": [
										{
											"id": 3052,
											"name": "abisOrNameOrSig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../abi-utils/lib/types.ts",
																"qualifiedName": "FunctionEntry"
															},
															"name": "FunctionEntry",
															"package": "@truffle/abi-utils"
														}
													}
												]
											}
										},
										{
											"id": 3053,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 3054,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3077,
												"name": "ResolveOptions",
												"package": "@truffle/encoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3067,
												"name": "TxAndAbi",
												"package": "@truffle/encoder"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3045,
							"name": "encodeTxNoResolution",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1558,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1558"
								}
							],
							"signatures": [
								{
									"id": 3046,
									"name": "encodeTxNoResolution",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nThis method functions identically to [[ContractEncoder.encodeTxNoResolution]],\nexcept that, when preparing a function transaction, the "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " option is\nautomatically set to this contract instance's address.  If an explicit\n"
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " address is passed as a transaction option, it will be recognized\nbut ignored."
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 1558,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1558"
										}
									],
									"parameters": [
										{
											"id": 3047,
											"name": "abi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "FunctionEntry"
														},
														"name": "FunctionEntry",
														"package": "@truffle/abi-utils"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "ConstructorEntry"
														},
														"name": "ConstructorEntry",
														"package": "@truffle/abi-utils"
													}
												]
											}
										},
										{
											"id": 3048,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 3049,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3077,
												"name": "ResolveOptions",
												"package": "@truffle/encoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2348,
												"name": "Options",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3040,
							"name": "resolveAndWrap",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1535,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1535"
								}
							],
							"signatures": [
								{
									"id": 3041,
									"name": "resolveAndWrap",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nThis method functions identically to [[ContractEncoder.resolveAndWrap]],\nexcept that the "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " option is automatically set to this contract\ninstance's address.  If an explicit "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " address is passed as a\ntransaction option, it will be recognized but ignored."
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 1535,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1535"
										}
									],
									"parameters": [
										{
											"id": 3042,
											"name": "abis",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../abi-utils/lib/types.ts",
																"qualifiedName": "FunctionEntry"
															},
															"name": "FunctionEntry",
															"package": "@truffle/abi-utils"
														}
													}
												]
											}
										},
										{
											"id": 3043,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 3044,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3077,
												"name": "ResolveOptions",
												"package": "@truffle/encoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2277,
												"name": "Resolution",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3031,
							"name": "wrap",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1495,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1495"
								}
							],
							"signatures": [
								{
									"id": 3032,
									"name": "wrap",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "See [[ProjectEncoder.wrap]]."
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 1495,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1495"
										}
									],
									"parameters": [
										{
											"id": 3033,
											"name": "dataType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 104,
												"name": "Type",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 3034,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 295,
												"name": "Value",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3027,
							"name": "wrapElementaryValue",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1485,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1485"
								}
							],
							"signatures": [
								{
									"id": 3028,
									"name": "wrapElementaryValue",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "See [[ProjectEncoder.wrapElementaryValue]]."
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 1485,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1485"
										}
									],
									"parameters": [
										{
											"id": 3029,
											"name": "dataType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 164,
												"name": "ElementaryType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 3030,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 428,
												"name": "ElementaryValue",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 3035,
							"name": "wrapForTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 1511,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1511"
								}
							],
							"signatures": [
								{
									"id": 3036,
									"name": "wrapForTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nThis method functions identically to [[ContractEncoder.wrapForTransaction]],\nexcept that, when preparing a function transaction, the "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " option is\nautomatically set to this contract instance's address.  If an explicit\n"
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " address is passed as a transaction option, it will be recognized\nbut ignored."
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 1511,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1511"
										}
									],
									"parameters": [
										{
											"id": 3037,
											"name": "abi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "FunctionEntry"
														},
														"name": "FunctionEntry",
														"package": "@truffle/abi-utils"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../abi-utils/lib/types.ts",
															"qualifiedName": "ConstructorEntry"
														},
														"name": "ConstructorEntry",
														"package": "@truffle/abi-utils"
													}
												]
											}
										},
										{
											"id": 3038,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 3039,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3077,
												"name": "ResolveOptions",
												"package": "@truffle/encoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2277,
												"name": "Resolution",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3021
							]
						},
						{
							"title": "Properties",
							"children": [
								3025,
								3026
							]
						},
						{
							"title": "Methods",
							"children": [
								3055,
								3050,
								3045,
								3040,
								3031,
								3027,
								3035
							]
						}
					],
					"sources": [
						{
							"fileName": "encoder/lib/encoders.ts",
							"line": 1467,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L1467"
						}
					]
				},
				{
					"id": 3107,
					"name": "ContractNotDeployedError",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This error indicates that you attempted to use address autodetection\nfor a contract that isn't deployed to the current network."
							}
						]
					},
					"children": [
						{
							"id": 3108,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 86,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L86"
								}
							],
							"signatures": [
								{
									"id": 3109,
									"name": "new ContractNotDeployedError",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/errors.ts",
											"line": 86,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L86"
										}
									],
									"parameters": [
										{
											"id": 3110,
											"name": "contractName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3111,
											"name": "networkId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 3107,
										"name": "ContractNotDeployedError",
										"package": "@truffle/encoder"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						},
						{
							"id": 3112,
							"name": "contractName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 84,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L84"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3113,
							"name": "networkId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 85,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L85"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3108
							]
						},
						{
							"title": "Properties",
							"children": [
								3112,
								3113
							]
						}
					],
					"sources": [
						{
							"fileName": "encoder/lib/errors.ts",
							"line": 83,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L83"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Error"
							},
							"name": "Error",
							"package": "typescript"
						}
					]
				},
				{
					"id": 3096,
					"name": "ContractNotFoundError",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This error indicates that the contract you are attempting to create an\nencoder for does not appear in the project info."
							}
						]
					},
					"children": [
						{
							"id": 3097,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 134,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L134"
								}
							],
							"signatures": [
								{
									"id": 3098,
									"name": "new ContractNotFoundError",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/errors.ts",
											"line": 134,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L134"
										}
									],
									"parameters": [
										{
											"id": 3099,
											"name": "contractName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3100,
											"name": "bytecode",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3101,
											"name": "deployedBytecode",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3102,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 3096,
										"name": "ContractNotFoundError",
										"package": "@truffle/encoder"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						},
						{
							"id": 3106,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 133,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L133"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3104,
							"name": "bytecode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 131,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L131"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3103,
							"name": "contractName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 130,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L130"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3105,
							"name": "deployedBytecode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 132,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L132"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3097
							]
						},
						{
							"title": "Properties",
							"children": [
								3106,
								3104,
								3103,
								3105
							]
						}
					],
					"sources": [
						{
							"fileName": "encoder/lib/errors.ts",
							"line": 129,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L129"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Error"
							},
							"name": "Error",
							"package": "typescript"
						}
					]
				},
				{
					"id": 3081,
					"name": "InvalidAddressError",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This error indicates that an invalid address was passed to one of the\ncontract instance encoder spawners ([[forContractInstance]], etc).  Valid\naddresses are those that Web3 accepts; i.e., either those with correct\nchecksums, or those that are all-lowercase or all-uppercase to deliberately\ncircumvent the checksum."
							}
						]
					},
					"children": [
						{
							"id": 3082,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L54"
								}
							],
							"signatures": [
								{
									"id": 3083,
									"name": "new InvalidAddressError",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/errors.ts",
											"line": 54,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L54"
										}
									],
									"parameters": [
										{
											"id": 3084,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 3081,
										"name": "InvalidAddressError",
										"package": "@truffle/encoder"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						},
						{
							"id": 3085,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 53,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L53"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3082
							]
						},
						{
							"title": "Properties",
							"children": [
								3085
							]
						}
					],
					"sources": [
						{
							"fileName": "encoder/lib/errors.ts",
							"line": 52,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L52"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Error"
							},
							"name": "Error",
							"package": "typescript"
						}
					]
				},
				{
					"id": 3114,
					"name": "NoFunctionByThatNameError",
					"variant": "declaration",
					"kind": 128,
					"flags": {
						"isProtected": true
					},
					"children": [
						{
							"id": 3115,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 32,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L32"
								}
							],
							"signatures": [
								{
									"id": 3116,
									"name": "new NoFunctionByThatNameError",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/errors.ts",
											"line": 32,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L32"
										}
									],
									"parameters": [
										{
											"id": 3117,
											"name": "functionNameOrSig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3118,
											"name": "contractName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 3114,
										"name": "NoFunctionByThatNameError",
										"package": "@truffle/encoder"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						},
						{
							"id": 3120,
							"name": "contractName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 31,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L31"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3119,
							"name": "functionNameOrSig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 30,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3115
							]
						},
						{
							"title": "Properties",
							"children": [
								3120,
								3119
							]
						}
					],
					"sources": [
						{
							"fileName": "encoder/lib/errors.ts",
							"line": 29,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L29"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Error"
							},
							"name": "Error",
							"package": "typescript"
						}
					]
				},
				{
					"id": 3086,
					"name": "NoInternalInfoError",
					"variant": "declaration",
					"kind": 128,
					"flags": {
						"isProtected": true
					},
					"children": [
						{
							"id": 3087,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L6"
								}
							],
							"signatures": [
								{
									"id": 3088,
									"name": "new NoInternalInfoError",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/errors.ts",
											"line": 6,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L6"
										}
									],
									"type": {
										"type": "reference",
										"target": 3086,
										"name": "NoInternalInfoError",
										"package": "@truffle/encoder"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3087
							]
						}
					],
					"sources": [
						{
							"fileName": "encoder/lib/errors.ts",
							"line": 5,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L5"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Error"
							},
							"name": "Error",
							"package": "typescript"
						}
					]
				},
				{
					"id": 2861,
					"name": "ProjectEncoder",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ProjectEncoder class.  Can wrap values; can also encode transactions and\nresolve overloads if sufficient information is provided.  See below for a\nmethod listing."
							}
						]
					},
					"children": [
						{
							"id": 2862,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 89,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L89"
								}
							],
							"signatures": [
								{
									"id": 2863,
									"name": "new ProjectEncoder",
									"variant": "signature",
									"kind": 16384,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 89,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L89"
										}
									],
									"parameters": [
										{
											"id": 2864,
											"name": "info",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../encoder/lib/types.ts",
													"qualifiedName": "EncoderInfoInternal"
												},
												"name": "EncoderInfoInternal",
												"package": "@truffle/encoder"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2861,
										"name": "ProjectEncoder",
										"package": "@truffle/encoder"
									}
								}
							]
						},
						{
							"id": 2869,
							"name": "allocations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 46,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L46"
								}
							],
							"type": {
								"type": "reference",
								"target": 2076,
								"name": "AllocationInfo",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2876,
							"name": "compilations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 52,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L52"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1817,
									"name": "Compilation",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 2877,
							"name": "contractsAndContexts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 53,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L53"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1245,
									"name": "ContractAndContexts",
									"package": "@truffle/codec"
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 2866,
							"name": "ens",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 43,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L43"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2868,
							"name": "ensCache",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 45,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L45"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../encoder/lib/encoders.ts",
									"qualifiedName": "ENSCache"
								},
								"name": "ENSCache",
								"package": "@truffle/encoder"
							},
							"defaultValue": "{}"
						},
						{
							"id": 2871,
							"name": "networkId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 48,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L48"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2865,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 42,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L42"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../encoder/lib/adapter.ts",
									"qualifiedName": "Provider"
								},
								"name": "Provider",
								"package": "@truffle/encoder"
							}
						},
						{
							"id": 2872,
							"name": "referenceDeclarations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 49,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L49"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2873,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 49,
											"character": 33,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L49"
										}
									],
									"indexSignature": {
										"id": 2874,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "encoder/lib/encoders.ts",
												"line": 50,
												"character": 4,
												"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L50"
											}
										],
										"parameters": [
											{
												"id": 2875,
												"name": "compilationId",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": 1743,
											"name": "Codec.Ast.AstNodes",
											"package": "@truffle/codec",
											"qualifiedName": "AstNodes"
										}
									}
								}
							}
						},
						{
							"id": 2867,
							"name": "registryAddress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 44,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L44"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "undefined"
						},
						{
							"id": 2870,
							"name": "userDefinedTypes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 47,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L47"
								}
							],
							"type": {
								"type": "reference",
								"target": 284,
								"name": "TypesById",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2909,
							"name": "driveGenerator",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 259,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L259"
								}
							],
							"signatures": [
								{
									"id": 2910,
									"name": "driveGenerator",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 259,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L259"
										}
									],
									"typeParameter": [
										{
											"id": 2911,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 2912,
											"name": "generator",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.generator.d.ts",
													"qualifiedName": "Generator"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 1036,
														"name": "WrapRequest",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 1046,
														"name": "WrapResponse",
														"package": "@truffle/codec"
													}
												],
												"name": "Generator",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2921,
							"name": "encodeTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 326,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L326"
								}
							],
							"signatures": [
								{
									"id": 2922,
									"name": "encodeTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 326,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L326"
										}
									],
									"parameters": [
										{
											"id": 2923,
											"name": "methods",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2281,
													"name": "Method",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 2924,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 2925,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3077,
												"name": "ResolveOptions",
												"package": "@truffle/encoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3067,
												"name": "TxAndAbi",
												"package": "@truffle/encoder"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2916,
							"name": "encodeTxNoResolution",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 296,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L296"
								}
							],
							"signatures": [
								{
									"id": 2917,
									"name": "encodeTxNoResolution",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 296,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L296"
										}
									],
									"parameters": [
										{
											"id": 2918,
											"name": "method",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2281,
												"name": "Method",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2919,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 2920,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3077,
												"name": "ResolveOptions",
												"package": "@truffle/encoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2348,
												"name": "Options",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2948,
							"name": "forAddress",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 598,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L598"
								}
							],
							"signatures": [
								{
									"id": 2949,
									"name": "forAddress",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nConstructs a contract instance encoder for a given instance of a contract in this\nproject.  Unlike [[forInstance]], this method doesn't require an artifact; it\nwill automatically detect the class of the given contract.  If it's not in\nthe project, or the encoder can't identify it, you'll get an exception."
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 598,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L598"
										}
									],
									"parameters": [
										{
											"id": 2950,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The address of the contract instance to encoder for.\n  If an invalid address is provided, this method will throw an exception."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2951,
											"name": "block",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "You can include this argument to specify that this should be\n  based on the addresses content's at a specific block (if say the contract\n  has since self-destructed)."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1062,
												"name": "BlockSpecifier",
												"package": "@truffle/codec"
											},
											"defaultValue": "\"latest\""
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3020,
												"name": "ContractInstanceEncoder",
												"package": "@truffle/encoder"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2938,
							"name": "forArtifact",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 525,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L525"
								}
							],
							"signatures": [
								{
									"id": 2939,
									"name": "forArtifact",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nConstructs a contract encoder for a given contract in this project."
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 525,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L525"
										}
									],
									"parameters": [
										{
											"id": 2940,
											"name": "artifact",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The contract the encoder is for.  If you want to\n  encode contract creation transactions, it must have all of\n  its libraries linked.\n\n  Note: The contract must be one that the encoder knows about;\n  otherwise you will have problems."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../contract-schema/spec/index.d.ts",
													"qualifiedName": "ContractObject"
												},
												"name": "ContractObject",
												"package": "@truffle/contract-schema"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2952,
												"name": "ContractEncoder",
												"package": "@truffle/encoder"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2941,
							"name": "forContract",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 554,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L554"
								}
							],
							"signatures": [
								{
									"id": 2942,
									"name": "forContract",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nConstructs a contract encoder for a given contract in this project."
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 554,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L554"
										}
									],
									"parameters": [
										{
											"id": 2943,
											"name": "contract",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The contract the encoder is for.  If you want to\n  encode contract creation transactions, it must have all of\n  its libraries linked.\n\n  Note: The contract must be one that the encoder knows about;\n  otherwise you will have problems."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../encoder/lib/types.ts",
													"qualifiedName": "ContractConstructorObject"
												},
												"name": "ContractConstructorObject",
												"package": "@truffle/encoder"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2952,
												"name": "ContractEncoder",
												"package": "@truffle/encoder"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2944,
							"name": "forInstance",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 577,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L577"
								}
							],
							"signatures": [
								{
									"id": 2945,
									"name": "forInstance",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nConstructs a contract instance encoder for a given contract instance."
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 577,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L577"
										}
									],
									"parameters": [
										{
											"id": 2946,
											"name": "artifact",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The artifact for the contract the encoder is for.  If you\n  want to encode contract creation transactions, it must have all of its\n  libraries linked.\n\n  Note: The contract must be one that the encoder knows about;\n  otherwise you will have problems."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../contract-schema/spec/index.d.ts",
													"qualifiedName": "ContractObject"
												},
												"name": "ContractObject",
												"package": "@truffle/contract-schema"
											}
										},
										{
											"id": 2947,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The address of the contract instance.\n  If omitted, but the project encoder has a provider or network ID,\n  it will be autodetected.  If there is no provider or network ID,\n  it must be included.\n\n  If an invalid address is provided, this method will throw an exception."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3020,
												"name": "ContractInstanceEncoder",
												"package": "@truffle/encoder"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2878,
							"name": "getAllocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 59,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L59"
								}
							],
							"signatures": [
								{
									"id": 2879,
									"name": "getAllocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 59,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L59"
										}
									],
									"type": {
										"type": "reference",
										"target": 2076,
										"name": "AllocationInfo",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2882,
							"name": "getNetworkId",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 73,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L73"
								}
							],
							"signatures": [
								{
									"id": 2883,
									"name": "getNetworkId",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 73,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L73"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							]
						},
						{
							"id": 2884,
							"name": "getReferenceDeclarations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 80,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L80"
								}
							],
							"signatures": [
								{
									"id": 2885,
									"name": "getReferenceDeclarations",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 80,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L80"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2886,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "encoder/lib/encoders.ts",
													"line": 80,
													"character": 37,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L80"
												}
											],
											"indexSignature": {
												"id": 2887,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"sources": [
													{
														"fileName": "encoder/lib/encoders.ts",
														"line": 81,
														"character": 4,
														"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L81"
													}
												],
												"parameters": [
													{
														"id": 2888,
														"name": "compilationId",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"target": 1743,
													"name": "Codec.Ast.AstNodes",
													"package": "@truffle/codec",
													"qualifiedName": "AstNodes"
												}
											}
										}
									}
								}
							]
						},
						{
							"id": 2880,
							"name": "getUserDefinedTypes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 66,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L66"
								}
							],
							"signatures": [
								{
									"id": 2881,
									"name": "getUserDefinedTypes",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 66,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L66"
										}
									],
									"type": {
										"type": "reference",
										"target": 284,
										"name": "TypesById",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2889,
							"name": "init",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 144,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L144"
								}
							],
							"signatures": [
								{
									"id": 2890,
									"name": "init",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 144,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L144"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2932,
							"name": "recognizeAddress",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 438,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L438"
								}
							],
							"signatures": [
								{
									"id": 2933,
									"name": "recognizeAddress",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 438,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L438"
										}
									],
									"parameters": [
										{
											"id": 2934,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1057,
												"name": "AddressWrapResponse",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2929,
							"name": "recognizeDecimal",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 404,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L404"
								}
							],
							"signatures": [
								{
									"id": 2930,
									"name": "recognizeDecimal",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 404,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L404"
										}
									],
									"parameters": [
										{
											"id": 2931,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1052,
										"name": "DecimalWrapResponse",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2926,
							"name": "recognizeInteger",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 352,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L352"
								}
							],
							"signatures": [
								{
									"id": 2927,
									"name": "recognizeInteger",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 352,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L352"
										}
									],
									"parameters": [
										{
											"id": 2928,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1047,
										"name": "IntegerWrapResponse",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2904,
							"name": "resolveAndWrap",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 246,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L246"
								}
							],
							"signatures": [
								{
									"id": 2905,
									"name": "resolveAndWrap",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 246,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L246"
										}
									],
									"parameters": [
										{
											"id": 2906,
											"name": "methods",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2281,
													"name": "Method",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 2907,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 2908,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3077,
												"name": "ResolveOptions",
												"package": "@truffle/encoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2277,
												"name": "Resolution",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2935,
							"name": "resolveEnsName",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 491,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L491"
								}
							],
							"signatures": [
								{
									"id": 2936,
									"name": "resolveEnsName",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 491,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L491"
										}
									],
									"parameters": [
										{
											"id": 2937,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2913,
							"name": "respond",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 280,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L280"
								}
							],
							"signatures": [
								{
									"id": 2914,
									"name": "respond",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 280,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L280"
										}
									],
									"parameters": [
										{
											"id": 2915,
											"name": "request",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1036,
												"name": "WrapRequest",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1046,
												"name": "WrapResponse",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2895,
							"name": "wrap",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 214,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L214"
								}
							],
							"signatures": [
								{
									"id": 2896,
									"name": "wrap",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nThis method recognizes user input for a given data type and attempts\nto interpret it as a value of that type.  It will throw a\n[[TypeMismatchError]] if it cannot do this.\n\nFor documentation of the accepted forms of input, see\n[[ContractEncoder.encodeTransaction]]."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The interpreted value wrapped as a [[Format.Values.Value|Value]]\n  object."
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 214,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L214"
										}
									],
									"parameters": [
										{
											"id": 2897,
											"name": "dataType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data type that the given value is to be interpreted\n  as."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 104,
												"name": "Type",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2898,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The value to be interpreted.  This can take a number of\n  forms depending on the data type, as documented above."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 295,
												"name": "Value",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2891,
							"name": "wrapElementaryValue",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 188,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L188"
								}
							],
							"signatures": [
								{
									"id": 2892,
									"name": "wrapElementaryValue",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nThis is a restricted version of [[wrap]], which only handles elementary\ntypes and values (those that can be used as mapping keys in Solidity);\nit's present here for type convenience.  See the [[wrap]] and\n[[ContractEncoder.encodeTransaction]] documentation\nfor further information."
											}
										]
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 188,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L188"
										}
									],
									"parameters": [
										{
											"id": 2893,
											"name": "dataType",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 164,
												"name": "ElementaryType",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2894,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 428,
												"name": "ElementaryValue",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2899,
							"name": "wrapForTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/encoders.ts",
									"line": 229,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L229"
								}
							],
							"signatures": [
								{
									"id": 2900,
									"name": "wrapForTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "encoder/lib/encoders.ts",
											"line": 229,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L229"
										}
									],
									"parameters": [
										{
											"id": 2901,
											"name": "method",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2281,
												"name": "Method",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2902,
											"name": "inputs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 2903,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 3077,
												"name": "ResolveOptions",
												"package": "@truffle/encoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2277,
												"name": "Resolution",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2862
							]
						},
						{
							"title": "Properties",
							"children": [
								2869,
								2876,
								2877,
								2866,
								2868,
								2871,
								2865,
								2872,
								2867,
								2870
							]
						},
						{
							"title": "Methods",
							"children": [
								2909,
								2921,
								2916,
								2948,
								2938,
								2941,
								2944,
								2878,
								2882,
								2884,
								2880,
								2889,
								2932,
								2929,
								2926,
								2904,
								2935,
								2913,
								2895,
								2891,
								2899
							]
						}
					],
					"sources": [
						{
							"fileName": "encoder/lib/encoders.ts",
							"line": 41,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/encoders.ts#L41"
						}
					]
				},
				{
					"id": 3089,
					"name": "UnlinkedContractError",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This error indicates that you attempted to encode a contract creation\ntransaction for a contract that has not had all of its libraries linked."
							}
						]
					},
					"children": [
						{
							"id": 3090,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 69,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L69"
								}
							],
							"signatures": [
								{
									"id": 3091,
									"name": "new UnlinkedContractError",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "encoder/lib/errors.ts",
											"line": 69,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L69"
										}
									],
									"parameters": [
										{
											"id": 3092,
											"name": "contractName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3093,
											"name": "bytecode",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 3089,
										"name": "UnlinkedContractError",
										"package": "@truffle/encoder"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						},
						{
							"id": 3095,
							"name": "bytecode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 68,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L68"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3094,
							"name": "contractName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/errors.ts",
									"line": 67,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L67"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								3090
							]
						},
						{
							"title": "Properties",
							"children": [
								3095,
								3094
							]
						}
					],
					"sources": [
						{
							"fileName": "encoder/lib/errors.ts",
							"line": 66,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/errors.ts#L66"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Error"
							},
							"name": "Error",
							"package": "typescript"
						}
					]
				},
				{
					"id": 3059,
					"name": "EncoderSettings",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type contains information needed to initialize the encoder."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Inputs"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 3063,
							"name": "ens",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This field can be included to enable or disable ENS resolution and specify\nhow it should be performed.  If absent, but a provider was given above,\nENS resolution will be performed using that."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/types.ts",
									"line": 117,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/types.ts#L117"
								}
							],
							"type": {
								"type": "reference",
								"target": 3064,
								"name": "EnsSettings",
								"package": "@truffle/encoder"
							}
						},
						{
							"id": 3062,
							"name": "networkId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optionally include a network ID; this is used for the same purposes as the\nprovider (see above), but won't turn on ENS resolution.\n\nThere is no need to include this when using a Truffle Contract based\nconstructor, as it will use the contract's network ID, but if you do include\nit, it will override that network ID.\n\nIf this is passed in addition to provider, this network ID will override the\none from provider."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/types.ts",
									"line": 111,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/types.ts#L111"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3060,
							"name": "projectInfo",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Information about the project or contracts being decoded.\nThis may come in several forms; see the type documentation for\nmore information.  The simplest way to use this to set it to\n"
									},
									{
										"kind": "code",
										"text": "`{ artifacts: <array of artifacts in project> }`"
									},
									{
										"kind": "text",
										"text": ".\n\nThis may be left out if an artifact or contract has been passed\nin by some other means, in which case the encoder will be made\nbased purely on that single contract, but it's recommended to pass in\nproject info for all your contracts to get the encoder's full power."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/types.ts",
									"line": 83,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/types.ts#L83"
								}
							],
							"type": {
								"type": "reference",
								"target": 1855,
								"name": "ProjectInfo",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 3061,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optionally include a provider; if given, this allows the encoder to know\nthe current network ID and thereby perform any necessary library linking\nwhen encoding a contract creation.  If you attempt to encode a contract\ncreation transaction for a contract that still has unlinked libraries,\nand do not provide the information needed to link them, an exception will\nbe thrown.\n\nThere is no need to include this when using a Truffle Contract based\nconstructor, as it will use the contract's provider, but if you do include\nit, it will override that provider.\n\nIncluding this will also turn on ENS resolution unless it is turned off in\nthe ENS settings (see below)."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/types.ts",
									"line": 99,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/types.ts#L99"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../encoder/lib/adapter.ts",
									"qualifiedName": "Provider"
								},
								"name": "Provider",
								"package": "@truffle/encoder"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3063,
								3062,
								3060,
								3061
							]
						}
					],
					"sources": [
						{
							"fileName": "encoder/lib/types.ts",
							"line": 71,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/types.ts#L71"
						}
					]
				},
				{
					"id": 3064,
					"name": "EnsSettings",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type indicates settings to be used for ENS resolution."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Inputs"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 3065,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The provider to use for ENS resolution; set this to "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " to disable\nENS resolution.  If absent, will default to the encoders's usual provider,\nif there is one, or to "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": ", if not."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/types.ts",
									"line": 130,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/types.ts#L130"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../encoder/lib/adapter.ts",
									"qualifiedName": "Provider"
								},
								"name": "Provider",
								"package": "@truffle/encoder"
							}
						},
						{
							"id": 3066,
							"name": "registryAddress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ENS registry address to use; if absent, will use the default one\nfor the current network.  If there is no default registry for the\ncurrent network, ENS resolution will be disabled."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/types.ts",
									"line": 136,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/types.ts#L136"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3065,
								3066
							]
						}
					],
					"sources": [
						{
							"fileName": "encoder/lib/types.ts",
							"line": 124,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/types.ts#L124"
						}
					]
				},
				{
					"id": 3077,
					"name": "ResolveOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type contains options to be used when preparing transactions\nor resolving overloads.  Currently the only allowed option is one for\nwhether to allow a transaction options argument on the end."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Inputs"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 3079,
							"name": "allowJson",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This field, if set to true, allows JSON strings to be used for structs,\ntuples, and arrays.  Note that this does *not* allow JSON to be used for\nelementary types like strings!"
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/types.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/types.ts#L25"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3078,
							"name": "allowOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This field, if set to true, allows an optional transaction options\nargument after the other arguments."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/types.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/types.ts#L19"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3080,
							"name": "strictBooleans",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This field, if set to true, disallows accepting arbitrary input as\nbooleans."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/types.ts",
									"line": 30,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/types.ts#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3079,
								3078,
								3080
							]
						}
					],
					"sources": [
						{
							"fileName": "encoder/lib/types.ts",
							"line": 14,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/types.ts#L14"
						}
					]
				},
				{
					"id": 3067,
					"name": "TxAndAbi",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type is a pair containing both a set of transaction options (as might\nbe sent to web3), including "
							},
							{
								"kind": "code",
								"text": "`data`"
							},
							{
								"kind": "text",
								"text": ", and an ABI for that transaction.  Only\nfunction transactions are covered here at the moment, because this is meant\nto be used with overload resolution as the return type."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Inputs"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 3069,
							"name": "abi",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This field holds the ABI for the transaction.  Because this is intended\nas a return type for overload resolution, only function ABI entries can go\nhere."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/types.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/types.ts#L50"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../abi-utils/lib/types.ts",
									"qualifiedName": "FunctionEntry"
								},
								"name": "FunctionEntry",
								"package": "@truffle/abi-utils"
							}
						},
						{
							"id": 3068,
							"name": "tx",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This field holds the transaction options."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/types.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/types.ts#L44"
								}
							],
							"type": {
								"type": "reference",
								"target": 2348,
								"name": "Options",
								"package": "@truffle/codec"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3069,
								3068
							]
						}
					],
					"sources": [
						{
							"fileName": "encoder/lib/types.ts",
							"line": 40,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/types.ts#L40"
						}
					]
				},
				{
					"id": 48,
					"name": "forArtifact",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "encoder/lib/index.ts",
							"line": 233,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L233"
						}
					],
					"signatures": [
						{
							"id": 49,
							"name": "forArtifact",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a contract encoder for a given contract artifact."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/index.ts",
									"line": 233,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L233"
								}
							],
							"parameters": [
								{
									"id": 50,
									"name": "artifact",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The artifact for the contract.\n\n  A contract constructor object may be substituted for the artifact, so if\n  you're not sure which you're dealing with, it's OK."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../contract-schema/spec/index.d.ts",
											"qualifiedName": "ContractObject"
										},
										"name": "ContractObject",
										"package": "@truffle/contract-schema"
									}
								},
								{
									"id": 51,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [[EncoderSettings]] to use;\n  see the documentation for that type for more information.  If absent, the\n  encoder will be based on just the single contract provided; it is\n  recommended to pass more information to get the encoder's full power.\n\n  Note that if the artifact contains unlinked libraries, you will have to\n  pass either the "
											},
											{
												"kind": "code",
												"text": "`provider`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`networkId`"
											},
											{
												"kind": "text",
												"text": " setting in order to encode\n  contract creation transactions."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3059,
										"name": "EncoderSettings",
										"package": "@truffle/encoder"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2952,
										"name": "ContractEncoder",
										"package": "@truffle/encoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 64,
					"name": "forArtifactAt",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "encoder/lib/index.ts",
							"line": 333,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L333"
						}
					],
					"signatures": [
						{
							"id": 65,
							"name": "forArtifactAt",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a contract instance decoder for a contract instance at a given address."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/index.ts",
									"line": 333,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L333"
								}
							],
							"parameters": [
								{
									"id": 66,
									"name": "artifact",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The artifact corresponding to the type of the contract.\n\n  A contract constructor object may be substituted for the artifact, so if\n  you're not sure which you're dealing with, it's OK."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../contract-schema/spec/index.d.ts",
											"qualifiedName": "ContractObject"
										},
										"name": "ContractObject",
										"package": "@truffle/contract-schema"
									}
								},
								{
									"id": 67,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the contract instance to decode.\n\n  Address must either be checksummed, or in all one case to circumvent the checksum.\n  Mixed-case with bad checksum will cause this function to throw an exception."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 68,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [[EncoderSettings]] to use;\n  see the documentation for that type for more information.  If absent, the\n  encoder will be based on just the single contract provided; it is\n  recommended to pass more information to get the encoder's full power.\n\n  Note that if the artifact contains unlinked libraries, you will have to\n  pass either the "
											},
											{
												"kind": "code",
												"text": "`provider`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`networkId`"
											},
											{
												"kind": "text",
												"text": " setting in order to encode\n  contract creation transactions."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3059,
										"name": "EncoderSettings",
										"package": "@truffle/encoder"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3020,
										"name": "ContractInstanceEncoder",
										"package": "@truffle/encoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 52,
					"name": "forContract",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "encoder/lib/index.ts",
							"line": 259,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L259"
						}
					],
					"signatures": [
						{
							"id": 53,
							"name": "forContract",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a contract encoder for a given contract."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/index.ts",
									"line": 259,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L259"
								}
							],
							"parameters": [
								{
									"id": 54,
									"name": "contract",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract the encoder is for.  It should have all of\n  its libraries linked."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../encoder/lib/types.ts",
											"qualifiedName": "ContractConstructorObject"
										},
										"name": "ContractConstructorObject",
										"package": "@truffle/encoder"
									}
								},
								{
									"id": 55,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [[EncoderSettings]] to use; see the documentation for\n  that type for more information.  If absent, the encoder will be based on\n  just the single contract provided; it is recommended to pass more\n  information to get the encoder's full power."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3059,
										"name": "EncoderSettings",
										"package": "@truffle/encoder"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2952,
										"name": "ContractEncoder",
										"package": "@truffle/encoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 69,
					"name": "forContractAt",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "encoder/lib/index.ts",
							"line": 358,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L358"
						}
					],
					"signatures": [
						{
							"id": 70,
							"name": "forContractAt",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a contract instance encoder for a contract instance at a given address."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/index.ts",
									"line": 358,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L358"
								}
							],
							"parameters": [
								{
									"id": 71,
									"name": "contract",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract constructor object corresponding to the type of the contract."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../encoder/lib/types.ts",
											"qualifiedName": "ContractConstructorObject"
										},
										"name": "ContractConstructorObject",
										"package": "@truffle/encoder"
									}
								},
								{
									"id": 72,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the contract instance to decode.\n\n  Address must either be checksummed, or in all one case to circumvent the checksum.\n  Mixed-case with bad checksum will cause this function to throw an exception."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 73,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [[EncoderSettings]] to use; see the documentation for\n  that type for more information.  If absent, the encoder will be based on\n  just the single contract provided; it is recommended to pass more\n  information to get the encoder's full power."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3059,
										"name": "EncoderSettings",
										"package": "@truffle/encoder"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3020,
										"name": "ContractInstanceEncoder",
										"package": "@truffle/encoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 74,
					"name": "forContractInstance",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "encoder/lib/index.ts",
							"line": 378,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L378"
						}
					],
					"signatures": [
						{
							"id": 75,
							"name": "forContractInstance",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a contract instance encoder for a deployed contract instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/index.ts",
									"line": 378,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L378"
								}
							],
							"parameters": [
								{
									"id": 76,
									"name": "contract",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract abstraction object corresponding to the contract instance."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../encoder/lib/types.ts",
											"qualifiedName": "ContractInstanceObject"
										},
										"name": "ContractInstanceObject",
										"package": "@truffle/encoder"
									}
								},
								{
									"id": 77,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [[EncoderSettings]] to use; see the documentation for\n  that type for more information.  If absent, the encoder will be based on\n  just the single contract provided; it is recommended to pass more\n  information to get the encoder's full power."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3059,
										"name": "EncoderSettings",
										"package": "@truffle/encoder"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3020,
										"name": "ContractInstanceEncoder",
										"package": "@truffle/encoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 56,
					"name": "forDeployedArtifact",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "encoder/lib/index.ts",
							"line": 283,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L283"
						}
					],
					"signatures": [
						{
							"id": 57,
							"name": "forDeployedArtifact",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a contract instance encoder for a deployed contract instance.\nYou must pass in a provider or network ID to use this function."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/index.ts",
									"line": 283,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L283"
								}
							],
							"parameters": [
								{
									"id": 58,
									"name": "artifact",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The artifact corresponding to the type of the contract.\n\n  A contract constructor object may be substituted for the artifact, so if\n  you're not sure which you're dealing with, it's OK."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../contract-schema/spec/index.d.ts",
											"qualifiedName": "ContractObject"
										},
										"name": "ContractObject",
										"package": "@truffle/contract-schema"
									}
								},
								{
									"id": 59,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [[EncoderSettings]] to use, including the provider or\n  network id; see the documentation for that type for more information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3059,
										"name": "EncoderSettings",
										"package": "@truffle/encoder"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3020,
										"name": "ContractInstanceEncoder",
										"package": "@truffle/encoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 60,
					"name": "forDeployedContract",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "encoder/lib/index.ts",
							"line": 303,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L303"
						}
					],
					"signatures": [
						{
							"id": 61,
							"name": "forDeployedContract",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a contract instance encoder for a deployed contract instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/index.ts",
									"line": 303,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L303"
								}
							],
							"parameters": [
								{
									"id": 62,
									"name": "contract",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract constructor object corresponding to the type of the contract."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../encoder/lib/types.ts",
											"qualifiedName": "ContractConstructorObject"
										},
										"name": "ContractConstructorObject",
										"package": "@truffle/encoder"
									}
								},
								{
									"id": 63,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [[EncoderSettings]] to use; see the documentation for\n  that type for more information.  If absent, the encoder will be based on\n  just the single contract provided; it is recommended to pass more\n  information to get the encoder's full power."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3059,
										"name": "EncoderSettings",
										"package": "@truffle/encoder"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3020,
										"name": "ContractInstanceEncoder",
										"package": "@truffle/encoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 42,
					"name": "forProject",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "encoder/lib/index.ts",
							"line": 190,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L190"
						}
					],
					"signatures": [
						{
							"id": 43,
							"name": "forProject",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a project encoder for the project."
									}
								]
							},
							"sources": [
								{
									"fileName": "encoder/lib/index.ts",
									"line": 190,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L190"
								}
							],
							"parameters": [
								{
									"id": 44,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3059,
										"name": "EncoderSettings",
										"package": "@truffle/encoder"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2861,
										"name": "ProjectEncoder",
										"package": "@truffle/encoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 45,
					"name": "forProjectInternal",
					"variant": "declaration",
					"kind": 64,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "encoder/lib/index.ts",
							"line": 207,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L207"
						}
					],
					"signatures": [
						{
							"id": 46,
							"name": "forProjectInternal",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "encoder/lib/index.ts",
									"line": 207,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L207"
								}
							],
							"parameters": [
								{
									"id": 47,
									"name": "info",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../encoder/lib/types.ts",
											"qualifiedName": "EncoderInfoInternal"
										},
										"name": "EncoderInfoInternal",
										"package": "@truffle/encoder"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2861,
										"name": "ProjectEncoder",
										"package": "@truffle/encoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"children": [
						2952,
						3020,
						3107,
						3096,
						3081,
						3114,
						3086,
						2861,
						3089
					],
					"categories": [
						{
							"title": "Encoder",
							"children": [
								2952,
								3020,
								2861
							]
						},
						{
							"title": "Exception",
							"children": [
								3107,
								3096,
								3081,
								3114,
								3086,
								3089
							]
						}
					]
				},
				{
					"title": "Interfaces",
					"children": [
						3059,
						3064,
						3077,
						3067
					]
				},
				{
					"title": "Functions",
					"children": [
						48,
						64,
						52,
						69,
						74,
						56,
						60,
						42,
						45
					],
					"categories": [
						{
							"title": "Constructors",
							"children": [
								48,
								56,
								42,
								45
							]
						},
						{
							"title": "Provider-based Constructor",
							"children": [
								64
							]
						},
						{
							"title": "Truffle Contract-based Constructors",
							"children": [
								52,
								69,
								74,
								60
							]
						}
					]
				}
			],
			"sources": [
				{
					"fileName": "encoder/lib/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/encoder/lib/index.ts#L1"
				}
			]
		},
		{
			"id": 2,
			"name": "decoder/lib",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "# Truffle Decoder\n\nThis module provides an interface for decoding contract state, transaction\ncalldata, events, and return values and revert strings.  It's an interface to\nthe same low-level decoding functionality that Truffle Debugger uses.  However,\nit has additional functionality that the debugger does not need, and the\ndebugger has additional functionality that this decoder does not need.\n\nThe interface is split into three classes: The project decoder, the contract\ndecoder, and the contract instance decoder.  The project decoder is associated\nto the project as a whole and decodes transaction calldata and events.  The\ncontract decoder is associated to a specific contract class.  It has all the\ncapabilities of the project decoder, but it can also decode return values from\ncalls made by the given contract class.  The contract instance decoder is\nassociated to a specific contract instance; it again has all the capabilities\nof the project decoder and contract decoder, but it can also decode the state\nvariables for the specific instance.  (In addition, in the case that the\ncontract does not include a "
					},
					{
						"kind": "code",
						"text": "`deployedBytecode`"
					},
					{
						"kind": "text",
						"text": " field in its artifact, which can\nhinder decoding certain things, the contract instance decoder can sometimes\nwork around this where the other decoders cannot.)\n\nThis documentation describes the current state of the decoder, but further\nimprovements are planned.\n\n## Usage\n\n### Initialization\n\nCreate a decoder with one of the various constructor functions.\n\nFor a project decoder, use the [[forProject|"
					},
					{
						"kind": "code",
						"text": "`forProject`"
					},
					{
						"kind": "text",
						"text": "]] function.\n\nFor a contract decoder, use the [[forArtifact|"
					},
					{
						"kind": "code",
						"text": "`forArtifact`"
					},
					{
						"kind": "text",
						"text": "]] or\n[[forContract|"
					},
					{
						"kind": "code",
						"text": "`forContract`"
					},
					{
						"kind": "text",
						"text": "]] function.\n\nFor a contract instance decoder, use one of the following:\n* [[forDeployedArtifact|"
					},
					{
						"kind": "code",
						"text": "`forDeployedArtifact`"
					},
					{
						"kind": "text",
						"text": "]]\n* [[forDeployedContract|"
					},
					{
						"kind": "code",
						"text": "`forDeployedContract`"
					},
					{
						"kind": "text",
						"text": "]]\n* [[forArtifactAt|"
					},
					{
						"kind": "code",
						"text": "`forArtifactAt`"
					},
					{
						"kind": "text",
						"text": "]]\n* [[forContractAt|"
					},
					{
						"kind": "code",
						"text": "`forContractAt`"
					},
					{
						"kind": "text",
						"text": "]]\n* [[forContractInstance|"
					},
					{
						"kind": "code",
						"text": "`forContractInstance`"
					},
					{
						"kind": "text",
						"text": "]]\n* [[forAddress|"
					},
					{
						"kind": "code",
						"text": "`forAddress`"
					},
					{
						"kind": "text",
						"text": "]]\n\nSee the documentation of these functions for details, or below for usage\nexamples.\n\nAll of these functions take a final argument in which information about the\nproject is specified; currently only a few methods for specifying project\ninformation are allowed, but more are planned.\n\nOne can also spawn decoders from other decoders by supplying additional\ninformation.  See the documentation for the individual decoder classes for a\nmethod listing.\n\n### Decoder methods\n\nSee the documentation for the individual decoder classes for a method listing.\n\n### Output format information\n\nThe decoder outputs lossless, machine-readable [[Format.Values.Result]] objects\ncontaining individual decoded values. See the [[Format|format documentation]]\nfor an overview and complete module listing.\n\n### Decoding modes, abification, and caveats\n\nThe decoder runs in either of two modes: full mode or ABI mode. Full mode\nrequires some additional constraints but returns substantially more detailed\ninformation. Please see the notes on [decoding modes](../#decoding-modes) for\nmore about this distinction.\n\nSee also the notes about [decoding state variables](../#additional-notes-on-decoding-state-variables) for additional\ncaveats about what may or may not be fully decodable.\n\n### Basic usage examples\n\n#### Decoding a log with the project decoder\n\nThis usage example is for a project with two contracts, "
					},
					{
						"kind": "code",
						"text": "`Contract1`"
					},
					{
						"kind": "text",
						"text": " and\n"
					},
					{
						"kind": "code",
						"text": "`Contract2`"
					},
					{
						"kind": "text",
						"text": ".\n\n"
					},
					{
						"kind": "code",
						"text": "```typescript\nimport { forProject } from \"@truffle/decoder\";\nconst contract1 = artifacts.require(\"Contract1\");\nconst contract2 = artifacts.require(\"Contract2\");\nconst provider = web3.currentProvider;\nconst decoder = await Decoder.forProject(provider, [contract1, contract2]);\nconst decodings = await decoder.decodeLog(log);\n```"
					},
					{
						"kind": "text",
						"text": "\n\nThe usage of [[ProjectDecoder.decodeTransaction|decodeTransaction]] is similar.\n\nFor getting already-decoded logs meeting appropriate conditions, see\n[[ProjectDecoder.events]].\n\n#### Decoding state variables with the contract instance decoder\n\nThis usage example is for decoding the state variables of a contract "
					},
					{
						"kind": "code",
						"text": "`Contract`"
					},
					{
						"kind": "text",
						"text": "\nin a project that also contains a contract "
					},
					{
						"kind": "code",
						"text": "`OtherContract`"
					},
					{
						"kind": "text",
						"text": ".\n\n"
					},
					{
						"kind": "code",
						"text": "```typescript\nimport { forContract } from \"@truffle/decoder\";\nconst contract = artifacts.require(\"Contract\");\nconst otherContract = artifacts.require(\"OtherContract\");\nconst decoder = await Decoder.forContract(contract, [otherContract]);\nconst instanceDecoder = await decoder.forInstance();\nconst variables = await instanceDecoder.variables();\n```"
					},
					{
						"kind": "text",
						"text": "\n\nIn this example, we use the deployed version of "
					},
					{
						"kind": "code",
						"text": "`Contract`"
					},
					{
						"kind": "text",
						"text": ".  If we wanted an\ninstance at a different address, we could pass the address to "
					},
					{
						"kind": "code",
						"text": "`forInstance`"
					},
					{
						"kind": "text",
						"text": ".\n\nIn addition, rather than using "
					},
					{
						"kind": "code",
						"text": "`forContract`"
					},
					{
						"kind": "text",
						"text": " and then "
					},
					{
						"kind": "code",
						"text": "`forInstance`"
					},
					{
						"kind": "text",
						"text": ", we could\nalso use [[forDeployedContract|"
					},
					{
						"kind": "code",
						"text": "`forContractInstance`"
					},
					{
						"kind": "text",
						"text": "]] to perform both of these\nin one step.  If we wanted to do this with a specified address, we could use\n[[forContractAt|"
					},
					{
						"kind": "code",
						"text": "`forContractAt`"
					},
					{
						"kind": "text",
						"text": "]].\n\nYet another way would be:\n"
					},
					{
						"kind": "code",
						"text": "```typescript\nimport { forContractInstance } from \"@truffle/decoder\";\nconst contract = artifacts.require(\"Contract\");\nconst otherContract = artifacts.require(\"OtherContract\");\nconst deployedContract = await contract.deployed();\nconst instanceDecoder = await Decoder.forContractInstance(deployedContract, [otherContract]);\nconst variables = await instanceDecoder.variables();\n```"
					},
					{
						"kind": "text",
						"text": "\n\nThese examples are not exhaustive.\n\nOne can find more advanced decoding examples with\n[[ContractInstanceDecoder.variable|"
					},
					{
						"kind": "code",
						"text": "`variable`"
					},
					{
						"kind": "text",
						"text": "]] and\n[[ContractInstanceDecoder.watchMappingKey|"
					},
					{
						"kind": "code",
						"text": "`watchMappingKey`"
					},
					{
						"kind": "text",
						"text": "]] at the\ndocumentation for these individual functions.\n *\n *"
					}
				]
			},
			"children": [
				{
					"id": 2828,
					"name": "ExtrasAllowed",
					"variant": "reference",
					"kind": 8388608,
					"flags": {},
					"sources": [
						{
							"fileName": "decoder/lib/index.ts",
							"line": 163,
							"character": 2,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L163"
						}
					],
					"target": 1035
				},
				{
					"id": 2804,
					"name": "StateVariable",
					"variant": "reference",
					"kind": 8388608,
					"flags": {},
					"sources": [
						{
							"fileName": "decoder/lib/index.ts",
							"line": 158,
							"character": 2,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L158"
						}
					],
					"target": 1019
				},
				{
					"id": 2776,
					"name": "ContractAllocationFailedError",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This error indicates that something went wrong while attempting to determine the location\nof this contract's state variables.  This error will be thrown if you attempt to use\ndecoding functions after something went wrong during setup.  Unfortunately, we can't\nalways avoid this at the moment; we're hoping to make this more robust in the future\nwith Truffle DB.  In the meantime, it is at least worth noting that you should not encounter\nthis error if your entire project was written in Solidity and all compiled at once.  Sorry."
							}
						]
					},
					"children": [
						{
							"id": 2777,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 67,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L67"
								}
							],
							"signatures": [
								{
									"id": 2778,
									"name": "new ContractAllocationFailedError",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/errors.ts",
											"line": 67,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L67"
										}
									],
									"parameters": [
										{
											"id": 2779,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 2780,
											"name": "contractName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2781,
											"name": "compilationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2776,
										"name": "ContractAllocationFailedError",
										"package": "@truffle/decoder"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						},
						{
							"id": 2784,
							"name": "compilationId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 66,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L66"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2783,
							"name": "contractName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 65,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L65"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2782,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 64,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L64"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2777
							]
						},
						{
							"title": "Properties",
							"children": [
								2784,
								2783,
								2782
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/errors.ts",
							"line": 63,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L63"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Error"
							},
							"name": "Error",
							"package": "typescript"
						}
					]
				},
				{
					"id": 2758,
					"name": "ContractBeingDecodedHasNoNodeError",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This error indicates that the contract you are attempting to decode does not have AST\ninformation associated with it, or that the decoder cannot find it.  This error will\nbe thrown if you attempt to use functions that require AST information with such a contract."
							}
						]
					},
					"children": [
						{
							"id": 2759,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 13,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L13"
								}
							],
							"signatures": [
								{
									"id": 2760,
									"name": "new ContractBeingDecodedHasNoNodeError",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/errors.ts",
											"line": 13,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L13"
										}
									],
									"parameters": [
										{
											"id": 2761,
											"name": "contractName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2762,
											"name": "compilationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2758,
										"name": "ContractBeingDecodedHasNoNodeError",
										"package": "@truffle/decoder"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						},
						{
							"id": 2764,
							"name": "compilationId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 12,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2763,
							"name": "contractName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 11,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L11"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2759
							]
						},
						{
							"title": "Properties",
							"children": [
								2764,
								2763
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/errors.ts",
							"line": 10,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L10"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Error"
							},
							"name": "Error",
							"package": "typescript"
						}
					]
				},
				{
					"id": 2366,
					"name": "ContractDecoder",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ContractDecoder class.  Decodes return values, and spawns the\n[[ContractInstanceDecoder]] class.  Also, decodes transactions logs.  See\nbelow for a method listing."
							}
						]
					},
					"children": [
						{
							"id": 2367,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1487,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1487"
								}
							],
							"signatures": [
								{
									"id": 2368,
									"name": "new ContractDecoder",
									"variant": "signature",
									"kind": 16384,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1487,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1487"
										}
									],
									"parameters": [
										{
											"id": 2369,
											"name": "contract",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1832,
												"name": "Contract",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2370,
											"name": "compilation",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1817,
												"name": "Compilation",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2371,
											"name": "projectDecoder",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2556,
												"name": "ProjectDecoder",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2372,
											"name": "artifact",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../contract-schema/spec/index.d.ts",
													"qualifiedName": "ContractObject"
												},
												"name": "ContractObject",
												"package": "@truffle/contract-schema"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2366,
										"name": "ContractDecoder",
										"package": "@truffle/decoder"
									}
								}
							]
						},
						{
							"id": 2381,
							"name": "allocations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1473,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1473"
								}
							],
							"type": {
								"type": "reference",
								"target": 2076,
								"name": "AllocationInfo",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2377,
							"name": "artifact",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1468,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1468"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../contract-schema/spec/index.d.ts",
									"qualifiedName": "ContractObject"
								},
								"name": "ContractObject",
								"package": "@truffle/contract-schema"
							}
						},
						{
							"id": 2375,
							"name": "compilation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1466,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1466"
								}
							],
							"type": {
								"type": "reference",
								"target": 1817,
								"name": "Compilation",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2380,
							"name": "contextHash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1471,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1471"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2374,
							"name": "contexts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1464,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1464"
								}
							],
							"type": {
								"type": "reference",
								"target": 1889,
								"name": "Contexts",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2376,
							"name": "contract",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1467,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1467"
								}
							],
							"type": {
								"type": "reference",
								"target": 1832,
								"name": "Contract",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2379,
							"name": "contractNetwork",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1470,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1470"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2378,
							"name": "contractNode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1469,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1469"
								}
							],
							"type": {
								"type": "reference",
								"target": 1688,
								"name": "AstNode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2382,
							"name": "noBytecodeAllocations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1474,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1474"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2383,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1474,
											"character": 33,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1474"
										}
									],
									"indexSignature": {
										"id": 2384,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "decoder/lib/decoders.ts",
												"line": 1475,
												"character": 4,
												"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1475"
											}
										],
										"parameters": [
											{
												"id": 2385,
												"name": "selector",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": 1234,
											"name": "AbiData.Allocate.FunctionCalldataAndReturndataAllocation",
											"package": "@truffle/codec",
											"qualifiedName": "FunctionCalldataAndReturndataAllocation"
										}
									}
								}
							}
						},
						{
							"id": 2388,
							"name": "projectDecoder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1482,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1482"
								}
							],
							"type": {
								"type": "reference",
								"target": 2556,
								"name": "ProjectDecoder",
								"package": "@truffle/decoder"
							}
						},
						{
							"id": 2373,
							"name": "providerAdapter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1462,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1462"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../encoder/dist/adapter.d.ts",
									"qualifiedName": "ProviderAdapter"
								},
								"name": "ProviderAdapter",
								"package": "@truffle/encoder"
							}
						},
						{
							"id": 2387,
							"name": "stateVariableReferences",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1480,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1480"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1491,
									"name": "StateVariableAllocation",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 2386,
							"name": "userDefinedTypes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1479,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1479"
								}
							],
							"type": {
								"type": "reference",
								"target": 284,
								"name": "TypesById",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2391,
							"name": "context",
							"variant": "declaration",
							"kind": 262144,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1584,
									"character": 14,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1584"
								}
							],
							"getSignature": {
								"id": 2392,
								"name": "context",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"sources": [
									{
										"fileName": "decoder/lib/decoders.ts",
										"line": 1584,
										"character": 2,
										"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1584"
									}
								],
								"type": {
									"type": "reference",
									"target": 1892,
									"name": "Context",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 2427,
							"name": "abifyCalldataDecoding",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1762,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1762"
								}
							],
							"signatures": [
								{
									"id": 2428,
									"name": "abifyCalldataDecoding",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "See [[ProjectDecoder.abifyCalldataDecoding]]."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1762,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1762"
										}
									],
									"parameters": [
										{
											"id": 2429,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 896,
												"name": "CalldataDecoding",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 896,
										"name": "CalldataDecoding",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2430,
							"name": "abifyLogDecoding",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1769,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1769"
								}
							],
							"signatures": [
								{
									"id": 2431,
									"name": "abifyLogDecoding",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "See [[ProjectDecoder.abifyLogDecoding]]."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1769,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1769"
										}
									],
									"parameters": [
										{
											"id": 2432,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 897,
												"name": "LogDecoding",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 897,
										"name": "LogDecoding",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2433,
							"name": "abifyReturndataDecoding",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1776,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1776"
								}
							],
							"signatures": [
								{
									"id": 2434,
									"name": "abifyReturndataDecoding",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "See [[ProjectDecoder.abifyReturndataDecoding]]."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1776,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1776"
										}
									],
									"parameters": [
										{
											"id": 2435,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 898,
												"name": "ReturndataDecoding",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 898,
										"name": "ReturndataDecoding",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2420,
							"name": "decodeLog",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1739,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1739"
								}
							],
							"signatures": [
								{
									"id": 2421,
									"name": "decodeLog",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nSee [[ProjectDecoder.decodeLog]]."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1739,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1739"
										}
									],
									"parameters": [
										{
											"id": 2422,
											"name": "log",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The log to be decoded."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2844,
												"name": "Log",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2423,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2825,
												"name": "DecodeLogOptions",
												"package": "@truffle/decoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 897,
													"name": "LogDecoding",
													"package": "@truffle/codec"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2393,
							"name": "decodeReturnValue",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1620,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1620"
								}
							],
							"signatures": [
								{
									"id": 2394,
									"name": "decodeReturnValue",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nDecodes the return value of a call.  Return values can be ambiguous, so\nthis function returns an array of [[ReturndataDecoding|ReturndataDecodings]].\n\nNote that return values are decoded in strict mode, so none of the decodings should\ncontain errors; if a decoding would contain an error, instead it is simply excluded from the\nlist of possible decodings.\n\nIf there are multiple possible decodings, they will always be listed in the following order:\n1. The decoded return value from a successful call.\n2. The decoded revert message from a call that reverted with a message.\n3. A decoding indicating that the call reverted with no message.\n4. A decoding indicating that the call self-destructed.\n\nYou can check the kind and field to distinguish between these.\n\nIf no possible decodings are found, the returned array of decodings will be empty.\n\nNote that different decodings may use different decoding modes.\n\nDecoding creation calls with this method is not supported.  If you simply\nwant to decode a revert message from an arbitrary call that you know\nfailed, you may also want to see the [[decodeRevert]] function in\n"
											},
											{
												"kind": "code",
												"text": "`@truffle/codec`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1620,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1620"
										}
									],
									"parameters": [
										{
											"id": 2395,
											"name": "abi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The abi entry for the function call whose return value is being decoded."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../abi-utils/lib/types.ts",
													"qualifiedName": "FunctionEntry"
												},
												"name": "FunctionEntry",
												"package": "@truffle/abi-utils"
											}
										},
										{
											"id": 2396,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The data to be decoded, as a hex string (beginning with \"0x\")."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2397,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Additional options, such as the block the call occurred in.\n  See [[ReturnOptions]] for more information."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2822,
												"name": "ReturnOptions",
												"package": "@truffle/decoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 898,
													"name": "ReturndataDecoding",
													"package": "@truffle/codec"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2398,
							"name": "decodeReturnValueWithAdditionalContexts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1635,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1635"
								}
							],
							"signatures": [
								{
									"id": 2399,
									"name": "decodeReturnValueWithAdditionalContexts",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1635,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1635"
										}
									],
									"parameters": [
										{
											"id": 2400,
											"name": "abi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../abi-utils/lib/types.ts",
													"qualifiedName": "FunctionEntry"
												},
												"name": "FunctionEntry",
												"package": "@truffle/abi-utils"
											}
										},
										{
											"id": 2401,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2402,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2822,
												"name": "ReturnOptions",
												"package": "@truffle/decoder"
											},
											"defaultValue": "{}"
										},
										{
											"id": 2403,
											"name": "additionalContexts",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1889,
												"name": "Contexts",
												"package": "@truffle/codec"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 898,
													"name": "ReturndataDecoding",
													"package": "@truffle/codec"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2417,
							"name": "decodeTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1727,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1727"
								}
							],
							"signatures": [
								{
									"id": 2418,
									"name": "decodeTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nSee [[ProjectDecoder.decodeTransaction]]."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1727,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1727"
										}
									],
									"parameters": [
										{
											"id": 2419,
											"name": "transaction",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The transaction to be decoded."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2829,
												"name": "Transaction",
												"package": "@truffle/decoder"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 896,
												"name": "CalldataDecoding",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2424,
							"name": "events",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1753,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1753"
								}
							],
							"signatures": [
								{
									"id": 2425,
									"name": "events",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nSee [[ProjectDecoder.events]]."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1753,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1753"
										}
									],
									"parameters": [
										{
											"id": 2426,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Used to determine what events to fetch and how to decode them;\n  see the documentation on the EventOptions type for more."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2815,
												"name": "EventOptions",
												"package": "@truffle/decoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2805,
													"name": "DecodedLog",
													"package": "@truffle/decoder"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2404,
							"name": "forInstance",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1698,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1698"
								}
							],
							"signatures": [
								{
									"id": 2405,
									"name": "forInstance",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nConstructs a contract instance decoder for a given instance of this contract."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1698,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1698"
										}
									],
									"parameters": [
										{
											"id": 2406,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The address of the contract instance decode.  If left out, it will be autodetected.\n  If an invalid address is provided, this method will throw an exception."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2449,
												"name": "ContractInstanceDecoder",
												"package": "@truffle/decoder"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2436,
							"name": "getAllocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1787,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1787"
								}
							],
							"signatures": [
								{
									"id": 2437,
									"name": "getAllocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1787,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1787"
										}
									],
									"type": {
										"type": "reference",
										"target": 2076,
										"name": "AllocationInfo",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2407,
							"name": "getCode",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1704,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1704"
								}
							],
							"signatures": [
								{
									"id": 2408,
									"name": "getCode",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1704,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1704"
										}
									],
									"parameters": [
										{
											"id": 2409,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2410,
											"name": "block",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "lib/types.ts",
													"qualifiedName": "RegularizedBlockSpecifier"
												},
												"name": "RegularizedBlockSpecifier",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2447,
							"name": "getContractInfo",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1815,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1815"
								}
							],
							"signatures": [
								{
									"id": 2448,
									"name": "getContractInfo",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1815,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1815"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../decoder/lib/types.ts",
											"qualifiedName": "ContractInfo"
										},
										"name": "ContractInfo",
										"package": "@truffle/decoder"
									}
								}
							]
						},
						{
							"id": 2442,
							"name": "getNoBytecodeAllocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1808,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1808"
								}
							],
							"signatures": [
								{
									"id": 2443,
									"name": "getNoBytecodeAllocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1808,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1808"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2444,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "decoder/lib/decoders.ts",
													"line": 1474,
													"character": 33,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1474"
												}
											],
											"indexSignature": {
												"id": 2445,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"sources": [
													{
														"fileName": "decoder/lib/decoders.ts",
														"line": 1475,
														"character": 4,
														"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1475"
													}
												],
												"parameters": [
													{
														"id": 2446,
														"name": "selector",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"target": 1234,
													"name": "AbiData.Allocate.FunctionCalldataAndReturndataAllocation",
													"package": "@truffle/codec",
													"qualifiedName": "FunctionCalldataAndReturndataAllocation"
												}
											}
										}
									}
								}
							]
						},
						{
							"id": 2440,
							"name": "getProjectDecoder",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1801,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1801"
								}
							],
							"signatures": [
								{
									"id": 2441,
									"name": "getProjectDecoder",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1801,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1801"
										}
									],
									"type": {
										"type": "reference",
										"target": 2556,
										"name": "ProjectDecoder",
										"package": "@truffle/decoder"
									}
								}
							]
						},
						{
							"id": 2438,
							"name": "getStateVariableReferences",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1794,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1794"
								}
							],
							"signatures": [
								{
									"id": 2439,
									"name": "getStateVariableReferences",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1794,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1794"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 1491,
											"name": "StateVariableAllocation",
											"package": "@truffle/codec"
										}
									}
								}
							]
						},
						{
							"id": 2389,
							"name": "init",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1580,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1580"
								}
							],
							"signatures": [
								{
									"id": 2390,
									"name": "init",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1580,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1580"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2414,
							"name": "regularizeBlock",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1715,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1715"
								}
							],
							"signatures": [
								{
									"id": 2415,
									"name": "regularizeBlock",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1715,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1715"
										}
									],
									"parameters": [
										{
											"id": 2416,
											"name": "block",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1062,
												"name": "BlockSpecifier",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "lib/types.ts",
													"qualifiedName": "RegularizedBlockSpecifier"
												},
												"name": "RegularizedBlockSpecifier",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2411,
							"name": "reverseEnsResolve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1711,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1711"
								}
							],
							"signatures": [
								{
									"id": 2412,
									"name": "reverseEnsResolve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1711,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1711"
										}
									],
									"parameters": [
										{
											"id": 2413,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2367
							]
						},
						{
							"title": "Properties",
							"children": [
								2381,
								2377,
								2375,
								2380,
								2374,
								2376,
								2379,
								2378,
								2382,
								2388,
								2373,
								2387,
								2386
							]
						},
						{
							"title": "Accessors",
							"children": [
								2391
							]
						},
						{
							"title": "Methods",
							"children": [
								2427,
								2430,
								2433,
								2420,
								2393,
								2398,
								2417,
								2424,
								2404,
								2436,
								2407,
								2447,
								2442,
								2440,
								2438,
								2389,
								2414,
								2411
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/decoders.ts",
							"line": 1461,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1461"
						}
					]
				},
				{
					"id": 2449,
					"name": "ContractInstanceDecoder",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ContractInstanceDecoder class.  Decodes storage for a specified\ninstance.  Also, decodes transactions, logs, and return values.  See below\nfor a method listing.\n\nNote that when using this class to decode transactions, logs, and return\nvalues, it does have one advantage over using the ProjectDecoder or\nContractDecoder.  If the artifact for the class does not have a\ndeployedBytecode field, the ProjectDecoder (and therefore also the\nContractDecoder) will not be able to tell that this instance is of that\nclass, and so will fail to decode transactions sent to it or logs\noriginating from it, and will fall back to ABI mode when decoding return\nvalues received from it.  However, the ContractInstanceDecoder has that\ninformation and will make use of it, making it possible for it to decode\ntransactions sent to this instance, or logs originating from it, or decode\nreturn values received from it in full mode, even if the deployedBytecode\nfield is missing."
							}
						]
					},
					"children": [
						{
							"id": 2450,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1880,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1880"
								}
							],
							"signatures": [
								{
									"id": 2451,
									"name": "new ContractInstanceDecoder",
									"variant": "signature",
									"kind": 16384,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1880,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1880"
										}
									],
									"parameters": [
										{
											"id": 2452,
											"name": "contractDecoder",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2366,
												"name": "ContractDecoder",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2453,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2449,
										"name": "ContractInstanceDecoder",
										"package": "@truffle/decoder"
									}
								}
							]
						},
						{
							"id": 2464,
							"name": "additionalContexts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1859,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1859"
								}
							],
							"type": {
								"type": "reference",
								"target": 1889,
								"name": "Contexts",
								"package": "@truffle/codec"
							},
							"defaultValue": "{}"
						},
						{
							"id": 2470,
							"name": "allocations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1863,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1863"
								}
							],
							"type": {
								"type": "reference",
								"target": 2076,
								"name": "AllocationInfo",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2455,
							"name": "compilation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1849,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1849"
								}
							],
							"type": {
								"type": "reference",
								"target": 1817,
								"name": "Compilation",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2462,
							"name": "compiler",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1856,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1856"
								}
							],
							"type": {
								"type": "reference",
								"target": 1764,
								"name": "CompilerVersion",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2461,
							"name": "contextHash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1855,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1855"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2463,
							"name": "contexts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1858,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1858"
								}
							],
							"type": {
								"type": "reference",
								"target": 1889,
								"name": "Contexts",
								"package": "@truffle/codec"
							},
							"defaultValue": "{}"
						},
						{
							"id": 2456,
							"name": "contract",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1850,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1850"
								}
							],
							"type": {
								"type": "reference",
								"target": 1832,
								"name": "Contract",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2459,
							"name": "contractAddress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1853,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1853"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2460,
							"name": "contractCode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1854,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1854"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2476,
							"name": "contractDecoder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1873,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1873"
								}
							],
							"type": {
								"type": "reference",
								"target": 2366,
								"name": "ContractDecoder",
								"package": "@truffle/decoder"
							}
						},
						{
							"id": 2458,
							"name": "contractNetwork",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1852,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1852"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2457,
							"name": "contractNode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1851,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1851"
								}
							],
							"type": {
								"type": "reference",
								"target": 1688,
								"name": "AstNode",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2478,
							"name": "encoder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1875,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1875"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../encoder/dist/encoders.d.ts",
									"qualifiedName": "ProjectEncoder"
								},
								"name": "ProjectEncoder",
								"package": "@truffle/encoder"
							}
						},
						{
							"id": 2472,
							"name": "internalFunctionsTable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1866,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1866"
								}
							],
							"type": {
								"type": "reference",
								"target": 2084,
								"name": "InternalFunctions",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2473,
							"name": "internalFunctionsTableKind",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1867,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1867"
								}
							],
							"type": {
								"type": "reference",
								"target": 2075,
								"name": "InternalFunctionsTableKind",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2474,
							"name": "mappingKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1869,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1869"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1544,
									"name": "Slot",
									"package": "@truffle/codec"
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 2477,
							"name": "projectDecoder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1874,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1874"
								}
							],
							"type": {
								"type": "reference",
								"target": 2556,
								"name": "ProjectDecoder",
								"package": "@truffle/decoder"
							}
						},
						{
							"id": 2454,
							"name": "providerAdapter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1847,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1847"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../encoder/dist/adapter.d.ts",
									"qualifiedName": "ProviderAdapter"
								},
								"name": "ProviderAdapter",
								"package": "@truffle/encoder"
							}
						},
						{
							"id": 2465,
							"name": "referenceDeclarations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1861,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1861"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2466,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1861,
											"character": 33,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1861"
										}
									],
									"indexSignature": {
										"id": 2467,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "decoder/lib/decoders.ts",
												"line": 1861,
												"character": 35,
												"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1861"
											}
										],
										"parameters": [
											{
												"id": 2468,
												"name": "compilationId",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": 1743,
											"name": "Ast.AstNodes",
											"package": "@truffle/codec",
											"qualifiedName": "AstNodes"
										}
									}
								}
							}
						},
						{
							"id": 2471,
							"name": "stateVariableReferences",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1865,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1865"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1491,
									"name": "StateVariableAllocation",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 2475,
							"name": "storageCache",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1871,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1871"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../decoder/lib/types.ts",
									"qualifiedName": "StorageCache"
								},
								"name": "StorageCache",
								"package": "@truffle/decoder"
							},
							"defaultValue": "{}"
						},
						{
							"id": 2469,
							"name": "userDefinedTypes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1862,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1862"
								}
							],
							"type": {
								"type": "reference",
								"target": 284,
								"name": "TypesById",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2481,
							"name": "context",
							"variant": "declaration",
							"kind": 262144,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2097,
									"character": 14,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2097"
								}
							],
							"getSignature": {
								"id": 2482,
								"name": "context",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"sources": [
									{
										"fileName": "decoder/lib/decoders.ts",
										"line": 2097,
										"character": 2,
										"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2097"
									}
								],
								"type": {
									"type": "reference",
									"target": 1892,
									"name": "Context",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 2537,
							"name": "abifyCalldataDecoding",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2537,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2537"
								}
							],
							"signatures": [
								{
									"id": 2538,
									"name": "abifyCalldataDecoding",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "See [[ProjectDecoder.abifyCalldataDecoding]]."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2537,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2537"
										}
									],
									"parameters": [
										{
											"id": 2539,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 896,
												"name": "CalldataDecoding",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 896,
										"name": "CalldataDecoding",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2540,
							"name": "abifyLogDecoding",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2544,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2544"
								}
							],
							"signatures": [
								{
									"id": 2541,
									"name": "abifyLogDecoding",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "See [[ProjectDecoder.abifyLogDecoding]]."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2544,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2544"
										}
									],
									"parameters": [
										{
											"id": 2542,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 897,
												"name": "LogDecoding",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 897,
										"name": "LogDecoding",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2543,
							"name": "abifyReturndataDecoding",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2551,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2551"
								}
							],
							"signatures": [
								{
									"id": 2544,
									"name": "abifyReturndataDecoding",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "See [[ProjectDecoder.abifyReturndataDecoding]]."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2551,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2551"
										}
									],
									"parameters": [
										{
											"id": 2545,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 898,
												"name": "ReturndataDecoding",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 898,
										"name": "ReturndataDecoding",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2483,
							"name": "checkAllocationSuccess",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2101,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2101"
								}
							],
							"signatures": [
								{
									"id": 2484,
									"name": "checkAllocationSuccess",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2101,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2101"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						},
						{
							"id": 2549,
							"name": "constructSlot",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2585,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2585"
								}
							],
							"signatures": [
								{
									"id": 2550,
									"name": "constructSlot",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2585,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2585"
										}
									],
									"parameters": [
										{
											"id": 2551,
											"name": "variable",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 2552,
											"name": "indices",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 2553,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 2554,
															"name": "slot",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "decoder/lib/decoders.ts",
																	"line": 2588,
																	"character": 15,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2588"
																}
															],
															"type": {
																"type": "reference",
																"target": 1544,
																"name": "Slot",
																"package": "@truffle/codec"
															}
														},
														{
															"id": 2555,
															"name": "type",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "decoder/lib/decoders.ts",
																	"line": 2588,
																	"character": 36,
																	"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2588"
																}
															],
															"type": {
																"type": "reference",
																"target": 104,
																"name": "Type",
																"package": "@truffle/codec"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2554,
																2555
															]
														}
													],
													"sources": [
														{
															"fileName": "decoder/lib/decoders.ts",
															"line": 2588,
															"character": 13,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2588"
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2528,
							"name": "decodeLog",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2501,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2501"
								}
							],
							"signatures": [
								{
									"id": 2529,
									"name": "decodeLog",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nSee [[ProjectDecoder.decodeLog]]."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2501,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2501"
										}
									],
									"parameters": [
										{
											"id": 2530,
											"name": "log",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2844,
												"name": "Log",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2531,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2825,
												"name": "DecodeLogOptions",
												"package": "@truffle/decoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 897,
													"name": "LogDecoding",
													"package": "@truffle/codec"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2532,
							"name": "decodeReturnValue",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2521,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2521"
								}
							],
							"signatures": [
								{
									"id": 2533,
									"name": "decodeReturnValue",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nSee [[ContractDecoder.decodeReturnValue]].\n\nIf the contract artifact is missing its bytecode, using this method,\nrather than the one in [[ContractDecoder]], can sometimes provide\nadditional decoding information."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2521,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2521"
										}
									],
									"parameters": [
										{
											"id": 2534,
											"name": "abi",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../abi-utils/lib/types.ts",
													"qualifiedName": "FunctionEntry"
												},
												"name": "FunctionEntry",
												"package": "@truffle/abi-utils"
											}
										},
										{
											"id": 2535,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2536,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2822,
												"name": "ReturnOptions",
												"package": "@truffle/decoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 898,
													"name": "ReturndataDecoding",
													"package": "@truffle/codec"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2525,
							"name": "decodeTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2486,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2486"
								}
							],
							"signatures": [
								{
									"id": 2526,
									"name": "decodeTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nBehaves mostly as [[ProjectDecoder.decodeTransaction]].  However, it is\ncapable of more robustly decoding transactions that were sent to this\nparticular instance."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2486,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2486"
										}
									],
									"parameters": [
										{
											"id": 2527,
											"name": "transaction",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2829,
												"name": "Transaction",
												"package": "@truffle/decoder"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 896,
												"name": "CalldataDecoding",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2485,
							"name": "decodeVariable",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2117,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2117"
								}
							],
							"signatures": [
								{
									"id": 2486,
									"name": "decodeVariable",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2117,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2117"
										}
									],
									"parameters": [
										{
											"id": 2487,
											"name": "variable",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1491,
												"name": "StateVariableAllocation",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2488,
											"name": "block",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "lib/types.ts",
													"qualifiedName": "RegularizedBlockSpecifier"
												},
												"name": "RegularizedBlockSpecifier",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1019,
												"name": "StateVariable",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2546,
							"name": "events",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2566,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2566"
								}
							],
							"signatures": [
								{
									"id": 2547,
									"name": "events",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nThis mostly behaves as [[ProjectDecoder.events]].\nHowever, unlike other variants of this function, this one, by default, restricts to events originating from this instance's address.\nIf you don't want to restrict like that, you can explicitly use "
											},
											{
												"kind": "code",
												"text": "`address: undefined`"
											},
											{
												"kind": "text",
												"text": " in the options to disable this.\n(You can also of course set a different address to restrict to that.)"
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2566,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2566"
										}
									],
									"parameters": [
										{
											"id": 2548,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Used to determine what events to fetch; see the documentation on the [[EventOptions]] type for more."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2815,
												"name": "EventOptions",
												"package": "@truffle/decoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2805,
													"name": "DecodedLog",
													"package": "@truffle/decoder"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2499,
							"name": "findVariableByNameOrId",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2289,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2289"
								}
							],
							"signatures": [
								{
									"id": 2500,
									"name": "findVariableByNameOrId",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2289,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2289"
										}
									],
									"parameters": [
										{
											"id": 2501,
											"name": "nameOrId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 1491,
										"name": "StateVariableAllocation",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2507,
							"name": "getCode",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2355,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2355"
								}
							],
							"signatures": [
								{
									"id": 2508,
									"name": "getCode",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2355,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2355"
										}
									],
									"parameters": [
										{
											"id": 2509,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2510,
											"name": "block",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "lib/types.ts",
													"qualifiedName": "RegularizedBlockSpecifier"
												},
												"name": "RegularizedBlockSpecifier",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2502,
							"name": "getStorage",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2322,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2322"
								}
							],
							"signatures": [
								{
									"id": 2503,
									"name": "getStorage",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2322,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2322"
										}
									],
									"parameters": [
										{
											"id": 2504,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2505,
											"name": "slot",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
													"qualifiedName": "BN"
												},
												"name": "BN",
												"package": "@types/bn.js"
											}
										},
										{
											"id": 2506,
											"name": "block",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "lib/types.ts",
													"qualifiedName": "RegularizedBlockSpecifier"
												},
												"name": "RegularizedBlockSpecifier",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2479,
							"name": "init",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1920,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1920"
								}
							],
							"signatures": [
								{
									"id": 2480,
									"name": "init",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1920,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1920"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2514,
							"name": "regularizeBlock",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2366,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2366"
								}
							],
							"signatures": [
								{
									"id": 2515,
									"name": "regularizeBlock",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2366,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2366"
										}
									],
									"parameters": [
										{
											"id": 2516,
											"name": "block",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1062,
												"name": "BlockSpecifier",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "lib/types.ts",
													"qualifiedName": "RegularizedBlockSpecifier"
												},
												"name": "RegularizedBlockSpecifier",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2511,
							"name": "reverseEnsResolve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2362,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2362"
								}
							],
							"signatures": [
								{
									"id": 2512,
									"name": "reverseEnsResolve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2362,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2362"
										}
									],
									"parameters": [
										{
											"id": 2513,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2489,
							"name": "state",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2191,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2191"
								}
							],
							"signatures": [
								{
									"id": 2490,
									"name": "state",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nReturns information about the state of the contract, but does not include\ninformation about the storage or decoded variables.  See the documentation\nfor the [[ContractState]] type for more."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2191,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2191"
										}
									],
									"parameters": [
										{
											"id": 2491,
											"name": "block",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The block to inspect the contract's state at.  Defaults to latest.\n  See [[BlockSpecifier]] for legal values."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1062,
												"name": "BlockSpecifier",
												"package": "@truffle/codec"
											},
											"defaultValue": "\"latest\""
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2798,
												"name": "ContractState",
												"package": "@truffle/decoder"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2521,
							"name": "unwatchMappingKey",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2455,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2455"
								}
							],
							"signatures": [
								{
									"id": 2522,
									"name": "unwatchMappingKey",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nOpposite of [[watchMappingKey]]; unwatches the specified mapping key.  See\nwatchMappingKey for more on how watching mapping keys works, and on how\nthe parameters work.\n\nNote that unwatching a mapping key will also unwatch all its descendants.\nE.g., if "
											},
											{
												"kind": "code",
												"text": "`m`"
											},
											{
												"kind": "text",
												"text": " is of type "
											},
											{
												"kind": "code",
												"text": "`mapping(uint => mapping(uint => uint))`"
											},
											{
												"kind": "text",
												"text": ", then\nunwatching "
											},
											{
												"kind": "code",
												"text": "`m[0]`"
											},
											{
												"kind": "text",
												"text": " will also unwatch "
											},
											{
												"kind": "code",
												"text": "`m[0][0]`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`m[0][1]`"
											},
											{
												"kind": "text",
												"text": ", etc, if these\nare currently watched."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2455,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2455"
										}
									],
									"parameters": [
										{
											"id": 2523,
											"name": "variable",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 2524,
											"name": "indices",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2495,
							"name": "variable",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2271,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2271"
								}
							],
							"signatures": [
								{
									"id": 2496,
									"name": "variable",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nDecodes an individual contract variable; returns its value as a\n[[Format.Values.Result|Result]].  See the documentation for\n[[variables|variables()]] for various caveats that also apply here.\n\nIf the variable can't be located, throws an exception."
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nConsider a contract `Derived` inheriting from a contract `Base`.\n  Suppose `Derived` has a variable `x` and `Base` has variables `x` and\n  `y`.  One can access `Derived.x` as `variable(\"x\")` or\n  `variable(\"Derived.x\")`, can access `Base.x` as `variable(\"Base.x\")`,\n  and can access `Base.y` as `variable(\"y\")` or `variable(\"Base.y\")`.\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2271,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2271"
										}
									],
									"parameters": [
										{
											"id": 2497,
											"name": "nameOrId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name (or numeric ID, if you know that) of the\n  variable.  Can be given as a qualified name, allowing one to get at\n  shadowed variables from base contracts.  If given by ID, can be given as a\n  number or numeric string."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 2498,
											"name": "block",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The block to inspect the contract's state at.  Defaults to latest.\n  See [[BlockSpecifier]] for legal values."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1062,
												"name": "BlockSpecifier",
												"package": "@truffle/codec"
											},
											"defaultValue": "\"latest\""
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 294,
												"name": "Result",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2492,
							"name": "variables",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2231,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2231"
								}
							],
							"signatures": [
								{
									"id": 2493,
									"name": "variables",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nDecodes the contract's variables; returns an array of these decoded variables.\nSee the documentation of the [[DecodedVariable]] type for more.\n\nNote that variable decoding can only operate in full mode; if the decoder wasn't able to\nstart up in full mode, this method will throw a [[ContractAllocationFailedError]].\n\nNote that decoding mappings requires first watching mapping keys in order to get any results;\nsee the documentation for [[watchMappingKey]].\nAdditional methods to make mapping decoding a less manual affair are planned for the future.\n\nAlso, due to a technical limitation, it is not currently possible to\nusefully decode internal function pointers.  See the\n[[Format.Values.FunctionInternalValue|FunctionInternalValue]]\ndocumentation and the README for more on how these are handled."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2231,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2231"
										}
									],
									"parameters": [
										{
											"id": 2494,
											"name": "block",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The block to inspect the contract's state at.  Defaults to latest.\n  See [[BlockSpecifier]] for legal values."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1062,
												"name": "BlockSpecifier",
												"package": "@truffle/codec"
											},
											"defaultValue": "\"latest\""
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1019,
													"name": "StateVariable",
													"package": "@truffle/codec"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2517,
							"name": "watchMappingKey",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 2418,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2418"
								}
							],
							"signatures": [
								{
									"id": 2518,
									"name": "watchMappingKey",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nWatches a mapping key; adds it to the decoder's list of watched mapping\nkeys.  This affects the results of both [[variables|variables()]] and\n[[variable|variable()]].  When a mapping is decoded, only the values at\nits watched keys will be included in its value.\n\nNote that it is possible\nto watch mappings that are inside structs, arrays, other mappings, etc;\nsee below for more on how to do this.\n\nNote that watching mapping keys is\nonly possible in full mode; if the decoder wasn't able to start up in full\nmode, this method will throw an exception.\n\n(A bad variable name will cause an exception though; that input is checked.)"
											}
										],
										"blockTags": [
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nFirst, a simple example.  Say we have a mapping `m` of type\n  `mapping(uint => uint)`.  You could call `watchMappingKey(\"m\", 0)` to\n  watch `m[0]`.\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nNow for a slightly more complicated example.  Say `m` is of type\n  `mapping(uint => mapping(uint => uint))`, then to watch `m[3][5]`, you\n  can call `watchMappingKey(\"m\", 3, 5)`.  This will also automatically\n  watch `m[3]`; otherwise, watching `m[3][5]` wouldn't do much of\n  anything.\n```"
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nNow for a well more complicated example.  Say we have a struct\n  type `MapStruct` with a member called `map` which is a `mapping(string => string)`,\n  and say we have a variable `arr` of type `MapStruct[]`, then one could\n  watch `arr[3].map[\"hello\"]` by calling `watchMappingKey(\"arr\", 3, \"map\", \"hello\")`.\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 2418,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L2418"
										}
									],
									"parameters": [
										{
											"id": 2519,
											"name": "variable",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The variable that the mapping lives under; this works like\n  the nameOrId argument to [[variable|variable()]].  If the mapping is a\n  top-level state variable, put the mapping itself here.  Otherwise, put the\n  top-level state variable it lives under."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 2520,
											"name": "indices",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Further arguments to watchMappingKey, if given, will be\n  interpreted as indices into or members of the variable identified by the\n  variable argument; see the example.  Array indices and mapping\n  keys are specified by value; struct members are specified by name.\n\n  Values (for array indices and mapping keys) may be given in any format\n  understood by Truffle Encoder; see the documentation for\n  [[Encoder.ProjectEncoder.wrap|ProjectEncoder.wrap]] for details.\n\n  Note that if the path to a given mapping key\n  includes mapping keys above it, any ancestors will also be watched\n  automatically."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2450
							]
						},
						{
							"title": "Properties",
							"children": [
								2464,
								2470,
								2455,
								2462,
								2461,
								2463,
								2456,
								2459,
								2460,
								2476,
								2458,
								2457,
								2478,
								2472,
								2473,
								2474,
								2477,
								2454,
								2465,
								2471,
								2475,
								2469
							]
						},
						{
							"title": "Accessors",
							"children": [
								2481
							]
						},
						{
							"title": "Methods",
							"children": [
								2537,
								2540,
								2543,
								2483,
								2549,
								2528,
								2532,
								2525,
								2485,
								2546,
								2499,
								2507,
								2502,
								2479,
								2514,
								2511,
								2489,
								2521,
								2495,
								2492,
								2517
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/decoders.ts",
							"line": 1846,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1846"
						}
					]
				},
				{
					"id": 2765,
					"name": "ContractNotFoundError",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This error indicates that the contract you are attempting to decode could not be found in\nthe project info.  This error will be thrown if you attempt to spawn a contract decoder or\ncontract instance decoder for a contract not appearing in the project info."
							}
						]
					},
					"children": [
						{
							"id": 2766,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L33"
								}
							],
							"signatures": [
								{
									"id": 2767,
									"name": "new ContractNotFoundError",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/errors.ts",
											"line": 33,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L33"
										}
									],
									"parameters": [
										{
											"id": 2768,
											"name": "contractName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2769,
											"name": "bytecode",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2770,
											"name": "deployedBytecode",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2771,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2765,
										"name": "ContractNotFoundError",
										"package": "@truffle/decoder"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						},
						{
							"id": 2775,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 32,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L32"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2773,
							"name": "bytecode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 30,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L30"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2772,
							"name": "contractName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 29,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L29"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2774,
							"name": "deployedBytecode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 31,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L31"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2766
							]
						},
						{
							"title": "Properties",
							"children": [
								2775,
								2773,
								2772,
								2774
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/errors.ts",
							"line": 28,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L28"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Error"
							},
							"name": "Error",
							"package": "typescript"
						}
					]
				},
				{
					"id": 2785,
					"name": "InvalidAddressError",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This error indicates that an invalid address was passed to one of the\ncontract instance decoder spawners ([[forContractInstance]], etc).  Valid\naddresses are those that Web3 accepts; i.e., either those with correct\nchecksums, or those that are all-lowercase or all-uppercase to deliberately\ncircumvent the checksum."
							}
						]
					},
					"children": [
						{
							"id": 2786,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 88,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L88"
								}
							],
							"signatures": [
								{
									"id": 2787,
									"name": "new InvalidAddressError",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/errors.ts",
											"line": 88,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L88"
										}
									],
									"parameters": [
										{
											"id": 2788,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2785,
										"name": "InvalidAddressError",
										"package": "@truffle/decoder"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						},
						{
							"id": 2789,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 87,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L87"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2786
							]
						},
						{
							"title": "Properties",
							"children": [
								2789
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/errors.ts",
							"line": 86,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L86"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Error"
							},
							"name": "Error",
							"package": "typescript"
						}
					]
				},
				{
					"id": 2795,
					"name": "NoProviderError",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This error indicates that no provider was passed to the decoder."
							}
						]
					},
					"children": [
						{
							"id": 2796,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 172,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L172"
								}
							],
							"signatures": [
								{
									"id": 2797,
									"name": "new NoProviderError",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/errors.ts",
											"line": 172,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L172"
										}
									],
									"type": {
										"type": "reference",
										"target": 2795,
										"name": "NoProviderError",
										"package": "@truffle/decoder"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2796
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/errors.ts",
							"line": 171,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L171"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Error"
							},
							"name": "Error",
							"package": "typescript"
						}
					]
				},
				{
					"id": 2556,
					"name": "ProjectDecoder",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ProjectDecoder class.  Decodes transactions and logs.  See below for a method listing."
							}
						]
					},
					"children": [
						{
							"id": 2557,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 84,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L84"
								}
							],
							"signatures": [
								{
									"id": 2558,
									"name": "new ProjectDecoder",
									"variant": "signature",
									"kind": 16384,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 84,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L84"
										}
									],
									"parameters": [
										{
											"id": 2559,
											"name": "compilations",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1817,
													"name": "Compilation",
													"package": "@truffle/codec"
												}
											}
										},
										{
											"id": 2560,
											"name": "provider",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../encoder/dist/adapter.d.ts",
													"qualifiedName": "Provider"
												},
												"name": "Provider",
												"package": "@truffle/encoder"
											}
										},
										{
											"id": 2561,
											"name": "ensSettings",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 2853,
												"name": "EnsSettings",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2562,
											"name": "selectorDirectory",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../decoder/lib/types.ts",
													"qualifiedName": "SelectorDirectorySettings"
												},
												"name": "SelectorDirectorySettings",
												"package": "@truffle/decoder"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2556,
										"name": "ProjectDecoder",
										"package": "@truffle/decoder"
									}
								}
							]
						},
						{
							"id": 2583,
							"name": "addProjectInfoNonce",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 79,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L79"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 2574,
							"name": "allocations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 69,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L69"
								}
							],
							"type": {
								"type": "reference",
								"target": 2076,
								"name": "AllocationInfo",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2575,
							"name": "codeCache",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 71,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L71"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../decoder/lib/types.ts",
									"qualifiedName": "CodeCache"
								},
								"name": "CodeCache",
								"package": "@truffle/decoder"
							},
							"defaultValue": "{}"
						},
						{
							"id": 2564,
							"name": "compilations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 61,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L61"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1817,
									"name": "Compilation",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 2565,
							"name": "contexts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 62,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L62"
								}
							],
							"type": {
								"type": "reference",
								"target": 1889,
								"name": "Contexts",
								"package": "@truffle/codec"
							},
							"defaultValue": "{}"
						},
						{
							"id": 2567,
							"name": "contractsAndContexts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 64,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L64"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1245,
									"name": "ContractAndContexts",
									"package": "@truffle/codec"
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 2566,
							"name": "deployedContexts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 63,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L63"
								}
							],
							"type": {
								"type": "reference",
								"target": 1889,
								"name": "Contexts",
								"package": "@truffle/codec"
							},
							"defaultValue": "{}"
						},
						{
							"id": 2580,
							"name": "ens",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 74,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L74"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2576,
							"name": "ensCache",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 72,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L72"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2577,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 72,
											"character": 20,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L72"
										}
									],
									"indexSignature": {
										"id": 2578,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "decoder/lib/decoders.ts",
												"line": 72,
												"character": 22,
												"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L72"
											}
										],
										"parameters": [
											{
												"id": 2579,
												"name": "address",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Uint8Array"
													},
													"name": "Uint8Array",
													"package": "typescript"
												},
												{
													"type": "literal",
													"value": null
												}
											]
										}
									}
								}
							},
							"defaultValue": "{}"
						},
						{
							"id": 2581,
							"name": "ensSettings",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 75,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L75"
								}
							],
							"type": {
								"type": "reference",
								"target": 2853,
								"name": "EnsSettings",
								"package": "@truffle/decoder"
							}
						},
						{
							"id": 2563,
							"name": "providerAdapter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 59,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L59"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../encoder/dist/adapter.d.ts",
									"qualifiedName": "ProviderAdapter"
								},
								"name": "ProviderAdapter",
								"package": "@truffle/encoder"
							}
						},
						{
							"id": 2568,
							"name": "referenceDeclarations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 66,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L66"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2569,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 66,
											"character": 33,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L66"
										}
									],
									"indexSignature": {
										"id": 2570,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "decoder/lib/decoders.ts",
												"line": 66,
												"character": 35,
												"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L66"
											}
										],
										"parameters": [
											{
												"id": 2571,
												"name": "compilationId",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": 1743,
											"name": "Ast.AstNodes",
											"package": "@truffle/codec",
											"qualifiedName": "AstNodes"
										}
									}
								}
							}
						},
						{
							"id": 2582,
							"name": "selectorDirectory",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 77,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L77"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2573,
							"name": "userDefinedTypes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 68,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L68"
								}
							],
							"type": {
								"type": "reference",
								"target": 284,
								"name": "TypesById",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2572,
							"name": "userDefinedTypesByCompilation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 67,
									"character": 10,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L67"
								}
							],
							"type": {
								"type": "reference",
								"target": 287,
								"name": "TypesByCompilationAndId",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2631,
							"name": "abifyCalldataDecoding",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 728,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L728"
								}
							],
							"signatures": [
								{
									"id": 2632,
									"name": "abifyCalldataDecoding",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Takes a [[CalldataDecoding]], which may have been produced in full mode or ABI mode,\nand converts it to its ABI mode equivalent.  See the README for more information.\n\nPlease only use on decodings produced by this same decoder instance; use\non decodings produced by other instances may not work consistently."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 728,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L728"
										}
									],
									"parameters": [
										{
											"id": 2633,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The decoding to abify"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 896,
												"name": "CalldataDecoding",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 896,
										"name": "CalldataDecoding",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2634,
							"name": "abifyLogDecoding",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 740,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L740"
								}
							],
							"signatures": [
								{
									"id": 2635,
									"name": "abifyLogDecoding",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Takes a [[LogDecoding]], which may have been produced in full mode or ABI mode,\nand converts it to its ABI mode equivalent.  See the README for more information.\n\nPlease only use on decodings produced by this same decoder instance; use\non decodings produced by other instances may not work consistently."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 740,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L740"
										}
									],
									"parameters": [
										{
											"id": 2636,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The decoding to abify"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 897,
												"name": "LogDecoding",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 897,
										"name": "LogDecoding",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2637,
							"name": "abifyReturndataDecoding",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 753,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L753"
								}
							],
							"signatures": [
								{
									"id": 2638,
									"name": "abifyReturndataDecoding",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Takes a [[ReturndataDecoding]], which may have been produced in full mode\nor ABI mode, and converts it to its ABI mode equivalent.  See the README\nfor more information.\n\nPlease only use on decodings produced by this same decoder instance; use\non decodings produced by other instances may not work consistently."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 753,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L753"
										}
									],
									"parameters": [
										{
											"id": 2639,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The decoding to abify"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 898,
												"name": "ReturndataDecoding",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 898,
										"name": "ReturndataDecoding",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2589,
							"name": "addAdditionalProjectInfo",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 325,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L325"
								}
							],
							"signatures": [
								{
									"id": 2590,
									"name": "addAdditionalProjectInfo",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This function is asynchronous.**\n\nAdds additional compilations to the decoder like [[addCompilations]],\nbut allows it to be specified in more general forms."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 325,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L325"
										}
									],
									"parameters": [
										{
											"id": 2591,
											"name": "projectInfo",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Information about the additional compilations or\ncontracts to be decoded.  This may come in several forms; see the type\ndocumentation for more information.  If passing in "
													},
													{
														"kind": "code",
														"text": "`{ compilations: ... }`"
													},
													{
														"kind": "text",
														"text": ",\ntake care that the compilations have different IDs from others passed in\nso far, otherwise this will error.  If passed in in another form, an ID\nwill be assigned automatically, which should generally avoid any\ncollisions."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1855,
												"name": "ProjectInfo",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2586,
							"name": "addCompilations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 209,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L209"
								}
							],
							"signatures": [
								{
									"id": 2587,
									"name": "addCompilations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This function is asynchronous.**\n\nAdds compilations to the decoder after it has started.  Note it is\nonly presently possible to do this with a "
											},
											{
												"kind": "code",
												"text": "`ProjectDecoder`"
											},
											{
												"kind": "text",
												"text": " and not\nwith the other decoder classes."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 209,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L209"
										}
									],
									"parameters": [
										{
											"id": 2588,
											"name": "compilations",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The compilations to be added.  Take care that these\nhave IDs distinct from those the decoder already has."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1817,
													"name": "Compilation",
													"package": "@truffle/codec"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2615,
							"name": "decodeLog",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 604,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L604"
								}
							],
							"signatures": [
								{
									"id": 2616,
									"name": "decodeLog",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nTakes a [[Log]] object and decodes it.  Logs can be ambiguous, so\nthis function returns an array of [[LogDecoding|LogDecodings]].\n\nNote that logs are decoded in strict mode, so (with one exception) none of the decodings should\ncontain errors; if a decoding would contain an error, instead it is simply excluded from the\nlist of possible decodings.  The one exception to this is that indexed parameters of reference\ntype cannot meaningfully be decoded, so those will decode to an error.\n\nIf there are multiple possible decodings, they will always be listed in the following order:\n\n1. Non-anonymous events coming from the contract itself (these will moreover be ordered\n  from most derived to most base)\n2. Non-anonymous events coming from libraries\n3. Anonymous events coming from the contract itself (again, ordered from most derived\n  to most base)\n4. Anonymous events coming from libraries\n\nYou can check the kind and class.contractKind fields to distinguish between these.\n\nIf no possible decodings are found, the returned array of decodings will be empty.\n\nNote that different decodings may use different decoding modes.\n\nUsing "
											},
											{
												"kind": "code",
												"text": "`options.extras = \"on\"`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`options.extras = \"necessary\"`"
											},
											{
												"kind": "text",
												"text": " will change the\nabove behavior; see the documentation on [[ExtrasAllowed]] for more.\n\nIf absolutely necessary, you can also set "
											},
											{
												"kind": "code",
												"text": "`options.disableChecks = true`"
											},
											{
												"kind": "text",
												"text": " to allow\nlooser decoding.  Only use this option if you know what you are doing."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 604,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L604"
										}
									],
									"parameters": [
										{
											"id": 2617,
											"name": "log",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The log to be decoded."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2844,
												"name": "Log",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2618,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Options for controlling decoding."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2825,
												"name": "DecodeLogOptions",
												"package": "@truffle/decoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 897,
													"name": "LogDecoding",
													"package": "@truffle/codec"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2619,
							"name": "decodeLogWithAdditionalOptions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 614,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L614"
								}
							],
							"signatures": [
								{
									"id": 2620,
									"name": "decodeLogWithAdditionalOptions",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 614,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L614"
										}
									],
									"parameters": [
										{
											"id": 2621,
											"name": "log",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2844,
												"name": "Log",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2622,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2815,
												"name": "EventOptions",
												"package": "@truffle/decoder"
											},
											"defaultValue": "{}"
										},
										{
											"id": 2623,
											"name": "additionalContexts",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1889,
												"name": "Contexts",
												"package": "@truffle/codec"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 897,
													"name": "LogDecoding",
													"package": "@truffle/codec"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2599,
							"name": "decodeTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 393,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L393"
								}
							],
							"signatures": [
								{
									"id": 2600,
									"name": "decodeTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nTakes a [[Transaction]] object and decodes it.  The result is a\n[[CalldataDecoding]]; see the documentation on that interface for more.\n\nNote that decoding of transactions sent to libraries is presently not\nsupported and may have unreliable results.  Limited support for this is\nplanned for future versions."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 393,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L393"
										}
									],
									"parameters": [
										{
											"id": 2601,
											"name": "transaction",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The transaction to be decoded."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2829,
												"name": "Transaction",
												"package": "@truffle/decoder"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 896,
												"name": "CalldataDecoding",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2752,
							"name": "decodeTransactionBySelector",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1370,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1370"
								}
							],
							"signatures": [
								{
									"id": 2753,
									"name": "decodeTransactionBySelector",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1370,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1370"
										}
									],
									"parameters": [
										{
											"id": 2754,
											"name": "transaction",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2829,
												"name": "Transaction",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2755,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										},
										{
											"id": 2756,
											"name": "additionalContexts",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1889,
												"name": "Contexts",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2757,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1892,
												"name": "Context",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 899,
													"name": "FunctionDecoding",
													"package": "@truffle/codec"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2605,
							"name": "decodeTransactionWithAdditionalContexts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 447,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L447"
								}
							],
							"signatures": [
								{
									"id": 2606,
									"name": "decodeTransactionWithAdditionalContexts",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 447,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L447"
										}
									],
									"parameters": [
										{
											"id": 2607,
											"name": "transaction",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2829,
												"name": "Transaction",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2608,
											"name": "additionalContexts",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1889,
												"name": "Contexts",
												"package": "@truffle/codec"
											},
											"defaultValue": "{}"
										},
										{
											"id": 2609,
											"name": "additionalAllocations",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2610,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "decoder/lib/decoders.ts",
															"line": 450,
															"character": 28,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L450"
														}
													],
													"indexSignature": {
														"id": 2611,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"sources": [
															{
																"fileName": "decoder/lib/decoders.ts",
																"line": 451,
																"character": 6,
																"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L451"
															}
														],
														"parameters": [
															{
																"id": 2612,
																"name": "selector",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"target": 1234,
															"name": "AbiData.Allocate.FunctionCalldataAndReturndataAllocation",
															"package": "@truffle/codec",
															"qualifiedName": "FunctionCalldataAndReturndataAllocation"
														}
													}
												}
											}
										},
										{
											"id": 2613,
											"name": "overrideContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1892,
												"name": "Context",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2614,
											"name": "isForSelectorBasedDecoding",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 896,
												"name": "CalldataDecoding",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2624,
							"name": "events",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 669,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L669"
								}
							],
							"signatures": [
								{
									"id": 2625,
									"name": "events",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nGets all events meeting certain conditions and decodes them.\nThis function is fairly rudimentary at the moment but more functionality\nwill be added in the future."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An array of [[DecodedLog|DecodedLogs]].\n  These consist of a log together with its possible decodings; see that\n  type for more info.  And see [[decodeLog]] for more info on how log\n  decoding works in general."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n`events({name: \"TestEvent\"})` -- get events named \"TestEvent\"\n  from the most recent block\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 669,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L669"
										}
									],
									"parameters": [
										{
											"id": 2626,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Used to determine what events to fetch and how to decode\n  them; see the documentation on the [[EventOptions]] type for more."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 2815,
												"name": "EventOptions",
												"package": "@truffle/decoder"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2805,
													"name": "DecodedLog",
													"package": "@truffle/decoder"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2627,
							"name": "eventsWithAdditionalContexts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 678,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L678"
								}
							],
							"signatures": [
								{
									"id": 2628,
									"name": "eventsWithAdditionalContexts",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 678,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L678"
										}
									],
									"parameters": [
										{
											"id": 2629,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2815,
												"name": "EventOptions",
												"package": "@truffle/decoder"
											},
											"defaultValue": "{}"
										},
										{
											"id": 2630,
											"name": "additionalContexts",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1889,
												"name": "Contexts",
												"package": "@truffle/codec"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 2805,
													"name": "DecodedLog",
													"package": "@truffle/decoder"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2653,
							"name": "forAddress",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 854,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L854"
								}
							],
							"signatures": [
								{
									"id": 2654,
									"name": "forAddress",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nConstructs a contract instance decoder for a given instance of a contract in this\nproject.  Unlike [[forInstance]], this method doesn't require an artifact; it\nwill automatically detect the class of the given contract.  If it's not in\nthe project, or the decoder can't identify it, you'll get an exception."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 854,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L854"
										}
									],
									"parameters": [
										{
											"id": 2655,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The address of the contract instance to decode.\n  If an invalid address is provided, this method will throw an exception."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2656,
											"name": "block",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "You can include this argument to specify that this should be\n  based on the addresses content's at a specific block (if say the contract\n  has since self-destructed)."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 1062,
												"name": "BlockSpecifier",
												"package": "@truffle/codec"
											},
											"defaultValue": "\"latest\""
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2449,
												"name": "ContractInstanceDecoder",
												"package": "@truffle/decoder"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2646,
							"name": "forArtifact",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 795,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L795"
								}
							],
							"signatures": [
								{
									"id": 2647,
									"name": "forArtifact",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nConstructs a contract decoder for a given contract artifact."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 795,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L795"
										}
									],
									"parameters": [
										{
											"id": 2648,
											"name": "artifact",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The artifact for the contract.\n\n  A contract constructor object may be substituted for the artifact, so if\n  you're not sure which you're dealing with, it's OK.\n\n  Note: The artifact must be for a contract that the decoder knows about;\n  otherwise you will have problems."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../contract-schema/spec/index.d.ts",
													"qualifiedName": "ContractObject"
												},
												"name": "ContractObject",
												"package": "@truffle/contract-schema"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2366,
												"name": "ContractDecoder",
												"package": "@truffle/decoder"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2649,
							"name": "forInstance",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 833,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L833"
								}
							],
							"signatures": [
								{
									"id": 2650,
									"name": "forInstance",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "**This method is asynchronous.**\n\nConstructs a contract instance decoder for a given instance of a contract in this\nproject."
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 833,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L833"
										}
									],
									"parameters": [
										{
											"id": 2651,
											"name": "artifact",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The artifact for the contract.\n\n  A contract constructor object may be substituted for the artifact, so if\n  you're not sure which you're dealing with, it's OK.\n\n  Note: The artifact must be for a contract that the decoder knows about;\n  otherwise you will have problems."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../contract-schema/spec/index.d.ts",
													"qualifiedName": "ContractObject"
												},
												"name": "ContractObject",
												"package": "@truffle/contract-schema"
											}
										},
										{
											"id": 2652,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The address of the contract instance to decode.  If left out, it will be autodetected.\n  If an invalid address is provided, this method will throw an exception."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 2449,
												"name": "ContractInstanceDecoder",
												"package": "@truffle/decoder"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2664,
							"name": "getAllocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 909,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L909"
								}
							],
							"signatures": [
								{
									"id": 2665,
									"name": "getAllocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 909,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L909"
										}
									],
									"type": {
										"type": "reference",
										"target": 2076,
										"name": "AllocationInfo",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2592,
							"name": "getCode",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 339,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L339"
								}
							],
							"signatures": [
								{
									"id": 2593,
									"name": "getCode",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 339,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L339"
										}
									],
									"parameters": [
										{
											"id": 2594,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2595,
											"name": "block",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "lib/types.ts",
													"qualifiedName": "RegularizedBlockSpecifier"
												},
												"name": "RegularizedBlockSpecifier",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2640,
							"name": "getContextByAddress",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 763,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L763"
								}
							],
							"signatures": [
								{
									"id": 2641,
									"name": "getContextByAddress",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 763,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L763"
										}
									],
									"parameters": [
										{
											"id": 2642,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2643,
											"name": "block",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "lib/types.ts",
													"qualifiedName": "RegularizedBlockSpecifier"
												},
												"name": "RegularizedBlockSpecifier",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2644,
											"name": "constructorBinary",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 2645,
											"name": "additionalContexts",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1889,
												"name": "Contexts",
												"package": "@truffle/codec"
											},
											"defaultValue": "{}"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1892,
												"name": "Context",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2670,
							"name": "getDeployedContexts",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 930,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L930"
								}
							],
							"signatures": [
								{
									"id": 2671,
									"name": "getDeployedContexts",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 930,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L930"
										}
									],
									"type": {
										"type": "reference",
										"target": 1889,
										"name": "Contexts",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2668,
							"name": "getEnsSettings",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 923,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L923"
								}
							],
							"signatures": [
								{
									"id": 2669,
									"name": "getEnsSettings",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 923,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L923"
										}
									],
									"type": {
										"type": "reference",
										"target": 2853,
										"name": "EnsSettings",
										"package": "@truffle/decoder"
									}
								}
							]
						},
						{
							"id": 2666,
							"name": "getProviderAdapter",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 916,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L916"
								}
							],
							"signatures": [
								{
									"id": 2667,
									"name": "getProviderAdapter",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 916,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L916"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../encoder/dist/adapter.d.ts",
											"qualifiedName": "ProviderAdapter"
										},
										"name": "ProviderAdapter",
										"package": "@truffle/encoder"
									}
								}
							]
						},
						{
							"id": 2657,
							"name": "getReferenceDeclarations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 895,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L895"
								}
							],
							"signatures": [
								{
									"id": 2658,
									"name": "getReferenceDeclarations",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 895,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L895"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2659,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "decoder/lib/decoders.ts",
													"line": 895,
													"character": 37,
													"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L895"
												}
											],
											"indexSignature": {
												"id": 2660,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"sources": [
													{
														"fileName": "decoder/lib/decoders.ts",
														"line": 895,
														"character": 39,
														"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L895"
													}
												],
												"parameters": [
													{
														"id": 2661,
														"name": "compilationId",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reference",
													"target": 1743,
													"name": "Ast.AstNodes",
													"package": "@truffle/codec",
													"qualifiedName": "AstNodes"
												}
											}
										}
									}
								}
							]
						},
						{
							"id": 2662,
							"name": "getUserDefinedTypes",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 902,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L902"
								}
							],
							"signatures": [
								{
									"id": 2663,
									"name": "getUserDefinedTypes",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 902,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L902"
										}
									],
									"type": {
										"type": "reference",
										"target": 284,
										"name": "TypesById",
										"package": "@truffle/codec"
									}
								}
							]
						},
						{
							"id": 2584,
							"name": "init",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 165,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L165"
								}
							],
							"signatures": [
								{
									"id": 2585,
									"name": "init",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "WARNING: this code is copypasted (w/slight modifications) from encoder!!"
											}
										]
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 165,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L165"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2702,
							"name": "interpretAggregate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1060,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1060"
								}
							],
							"signatures": [
								{
									"id": 2703,
									"name": "interpretAggregate",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1060,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1060"
										}
									],
									"parameters": [
										{
											"id": 2704,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 896,
												"name": "CalldataDecoding",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2705,
											"name": "transaction",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2829,
												"name": "Transaction",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2706,
											"name": "additionalContexts",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1889,
												"name": "Contexts",
												"package": "@truffle/codec"
											},
											"defaultValue": "{}"
										},
										{
											"id": 2707,
											"name": "additionalAllocations",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2708,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "decoder/lib/decoders.ts",
															"line": 1064,
															"character": 28,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1064"
														}
													],
													"indexSignature": {
														"id": 2709,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"sources": [
															{
																"fileName": "decoder/lib/decoders.ts",
																"line": 1065,
																"character": 6,
																"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1065"
															}
														],
														"parameters": [
															{
																"id": 2710,
																"name": "selector",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"target": 1234,
															"name": "AbiData.Allocate.FunctionCalldataAndReturndataAllocation",
															"package": "@truffle/codec",
															"qualifiedName": "FunctionCalldataAndReturndataAllocation"
														}
													}
												}
											}
										},
										{
											"id": 2711,
											"name": "overrideContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1892,
												"name": "Context",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 1064,
													"name": "CallInterpretationInfo",
													"package": "@truffle/codec"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2742,
							"name": "interpretBlockhashedMulticall",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1326,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1326"
								}
							],
							"signatures": [
								{
									"id": 2743,
									"name": "interpretBlockhashedMulticall",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1326,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1326"
										}
									],
									"parameters": [
										{
											"id": 2744,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 896,
												"name": "CalldataDecoding",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2745,
											"name": "transaction",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2829,
												"name": "Transaction",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2746,
											"name": "additionalContexts",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1889,
												"name": "Contexts",
												"package": "@truffle/codec"
											},
											"defaultValue": "{}"
										},
										{
											"id": 2747,
											"name": "additionalAllocations",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2748,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "decoder/lib/decoders.ts",
															"line": 1330,
															"character": 28,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1330"
														}
													],
													"indexSignature": {
														"id": 2749,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"sources": [
															{
																"fileName": "decoder/lib/decoders.ts",
																"line": 1331,
																"character": 6,
																"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1331"
															}
														],
														"parameters": [
															{
																"id": 2750,
																"name": "selector",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"target": 1234,
															"name": "AbiData.Allocate.FunctionCalldataAndReturndataAllocation",
															"package": "@truffle/codec",
															"qualifiedName": "FunctionCalldataAndReturndataAllocation"
														}
													}
												}
											}
										},
										{
											"id": 2751,
											"name": "overrideContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1892,
												"name": "Context",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1075,
												"name": "BlockhashedMulticallInfo",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2712,
							"name": "interpretCallInAggregate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1161,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1161"
								}
							],
							"signatures": [
								{
									"id": 2713,
									"name": "interpretCallInAggregate",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1161,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1161"
										}
									],
									"parameters": [
										{
											"id": 2714,
											"name": "callResult",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 330,
														"name": "StructResult",
														"package": "@truffle/codec"
													},
													{
														"type": "reference",
														"target": 341,
														"name": "TupleResult",
														"package": "@truffle/codec"
													}
												]
											}
										},
										{
											"id": 2715,
											"name": "transaction",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2829,
												"name": "Transaction",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2716,
											"name": "additionalContexts",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1889,
												"name": "Contexts",
												"package": "@truffle/codec"
											},
											"defaultValue": "{}"
										},
										{
											"id": 2717,
											"name": "additionalAllocations",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2718,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "decoder/lib/decoders.ts",
															"line": 1165,
															"character": 28,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1165"
														}
													],
													"indexSignature": {
														"id": 2719,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"sources": [
															{
																"fileName": "decoder/lib/decoders.ts",
																"line": 1166,
																"character": 6,
																"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1166"
															}
														],
														"parameters": [
															{
																"id": 2720,
																"name": "selector",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"target": 1234,
															"name": "AbiData.Allocate.FunctionCalldataAndReturndataAllocation",
															"package": "@truffle/codec",
															"qualifiedName": "FunctionCalldataAndReturndataAllocation"
														}
													}
												}
											}
										},
										{
											"id": 2721,
											"name": "overrideContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1892,
												"name": "Context",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1064,
												"name": "CallInterpretationInfo",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2692,
							"name": "interpretCallInMulti",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1036,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1036"
								}
							],
							"signatures": [
								{
									"id": 2693,
									"name": "interpretCallInMulti",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1036,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1036"
										}
									],
									"parameters": [
										{
											"id": 2694,
											"name": "callResult",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 299,
												"name": "BytesResult",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2695,
											"name": "transaction",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2829,
												"name": "Transaction",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2696,
											"name": "additionalContexts",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1889,
												"name": "Contexts",
												"package": "@truffle/codec"
											},
											"defaultValue": "{}"
										},
										{
											"id": 2697,
											"name": "additionalAllocations",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2698,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "decoder/lib/decoders.ts",
															"line": 1040,
															"character": 28,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1040"
														}
													],
													"indexSignature": {
														"id": 2699,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"sources": [
															{
																"fileName": "decoder/lib/decoders.ts",
																"line": 1041,
																"character": 6,
																"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1041"
															}
														],
														"parameters": [
															{
																"id": 2700,
																"name": "selector",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"target": 1234,
															"name": "AbiData.Allocate.FunctionCalldataAndReturndataAllocation",
															"package": "@truffle/codec",
															"qualifiedName": "FunctionCalldataAndReturndataAllocation"
														}
													}
												}
											}
										},
										{
											"id": 2701,
											"name": "overrideContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1892,
												"name": "Context",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 896,
												"name": "CalldataDecoding",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2732,
							"name": "interpretDeadlinedMulticall",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1282,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1282"
								}
							],
							"signatures": [
								{
									"id": 2733,
									"name": "interpretDeadlinedMulticall",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1282,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1282"
										}
									],
									"parameters": [
										{
											"id": 2734,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 896,
												"name": "CalldataDecoding",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2735,
											"name": "transaction",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2829,
												"name": "Transaction",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2736,
											"name": "additionalContexts",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1889,
												"name": "Contexts",
												"package": "@truffle/codec"
											},
											"defaultValue": "{}"
										},
										{
											"id": 2737,
											"name": "additionalAllocations",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2738,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "decoder/lib/decoders.ts",
															"line": 1286,
															"character": 28,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1286"
														}
													],
													"indexSignature": {
														"id": 2739,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"sources": [
															{
																"fileName": "decoder/lib/decoders.ts",
																"line": 1287,
																"character": 6,
																"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1287"
															}
														],
														"parameters": [
															{
																"id": 2740,
																"name": "selector",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"target": 1234,
															"name": "AbiData.Allocate.FunctionCalldataAndReturndataAllocation",
															"package": "@truffle/codec",
															"qualifiedName": "FunctionCalldataAndReturndataAllocation"
														}
													}
												}
											}
										},
										{
											"id": 2741,
											"name": "overrideContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1892,
												"name": "Context",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1072,
												"name": "DeadlinedMulticallInfo",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2682,
							"name": "interpretMulticall",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 998,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L998"
								}
							],
							"signatures": [
								{
									"id": 2683,
									"name": "interpretMulticall",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 998,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L998"
										}
									],
									"parameters": [
										{
											"id": 2684,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 896,
												"name": "CalldataDecoding",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2685,
											"name": "transaction",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2829,
												"name": "Transaction",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2686,
											"name": "additionalContexts",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1889,
												"name": "Contexts",
												"package": "@truffle/codec"
											},
											"defaultValue": "{}"
										},
										{
											"id": 2687,
											"name": "additionalAllocations",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2688,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "decoder/lib/decoders.ts",
															"line": 1002,
															"character": 28,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1002"
														}
													],
													"indexSignature": {
														"id": 2689,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"sources": [
															{
																"fileName": "decoder/lib/decoders.ts",
																"line": 1003,
																"character": 6,
																"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1003"
															}
														],
														"parameters": [
															{
																"id": 2690,
																"name": "selector",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"target": 1234,
															"name": "AbiData.Allocate.FunctionCalldataAndReturndataAllocation",
															"package": "@truffle/codec",
															"qualifiedName": "FunctionCalldataAndReturndataAllocation"
														}
													}
												}
											}
										},
										{
											"id": 2691,
											"name": "overrideContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1892,
												"name": "Context",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 896,
													"name": "CalldataDecoding",
													"package": "@truffle/codec"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2722,
							"name": "interpretTryAggregate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 1230,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1230"
								}
							],
							"signatures": [
								{
									"id": 2723,
									"name": "interpretTryAggregate",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 1230,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1230"
										}
									],
									"parameters": [
										{
											"id": 2724,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 896,
												"name": "CalldataDecoding",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2725,
											"name": "transaction",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2829,
												"name": "Transaction",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2726,
											"name": "additionalContexts",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1889,
												"name": "Contexts",
												"package": "@truffle/codec"
											},
											"defaultValue": "{}"
										},
										{
											"id": 2727,
											"name": "additionalAllocations",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2728,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "decoder/lib/decoders.ts",
															"line": 1234,
															"character": 28,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1234"
														}
													],
													"indexSignature": {
														"id": 2729,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"sources": [
															{
																"fileName": "decoder/lib/decoders.ts",
																"line": 1235,
																"character": 6,
																"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L1235"
															}
														],
														"parameters": [
															{
																"id": 2730,
																"name": "selector",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"target": 1234,
															"name": "AbiData.Allocate.FunctionCalldataAndReturndataAllocation",
															"package": "@truffle/codec",
															"qualifiedName": "FunctionCalldataAndReturndataAllocation"
														}
													}
												}
											}
										},
										{
											"id": 2731,
											"name": "overrideContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1892,
												"name": "Context",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 1069,
												"name": "TryAggregateInfo",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2596,
							"name": "regularizeBlock",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 369,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L369"
								}
							],
							"signatures": [
								{
									"id": 2597,
									"name": "regularizeBlock",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 369,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L369"
										}
									],
									"parameters": [
										{
											"id": 2598,
											"name": "block",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1062,
												"name": "BlockSpecifier",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "lib/types.ts",
													"qualifiedName": "RegularizedBlockSpecifier"
												},
												"name": "RegularizedBlockSpecifier",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2602,
							"name": "reverseEnsResolve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isProtected": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 402,
									"character": 15,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L402"
								}
							],
							"signatures": [
								{
									"id": 2603,
									"name": "reverseEnsResolve",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isProtected": true
									},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 402,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L402"
										}
									],
									"parameters": [
										{
											"id": 2604,
											"name": "address",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Uint8Array"
												},
												"name": "Uint8Array",
												"package": "typescript"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 2672,
							"name": "withMulticallInterpretations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isPrivate": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/decoders.ts",
									"line": 936,
									"character": 16,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L936"
								}
							],
							"signatures": [
								{
									"id": 2673,
									"name": "withMulticallInterpretations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/decoders.ts",
											"line": 936,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L936"
										}
									],
									"parameters": [
										{
											"id": 2674,
											"name": "decoding",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 899,
												"name": "FunctionDecoding",
												"package": "@truffle/codec"
											}
										},
										{
											"id": 2675,
											"name": "transaction",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 2829,
												"name": "Transaction",
												"package": "@truffle/decoder"
											}
										},
										{
											"id": 2676,
											"name": "additionalContexts",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 1889,
												"name": "Contexts",
												"package": "@truffle/codec"
											},
											"defaultValue": "{}"
										},
										{
											"id": 2677,
											"name": "additionalAllocations",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2678,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "decoder/lib/decoders.ts",
															"line": 940,
															"character": 28,
															"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L940"
														}
													],
													"indexSignature": {
														"id": 2679,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"sources": [
															{
																"fileName": "decoder/lib/decoders.ts",
																"line": 941,
																"character": 6,
																"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L941"
															}
														],
														"parameters": [
															{
																"id": 2680,
																"name": "selector",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "reference",
															"target": 1234,
															"name": "AbiData.Allocate.FunctionCalldataAndReturndataAllocation",
															"package": "@truffle/codec",
															"qualifiedName": "FunctionCalldataAndReturndataAllocation"
														}
													}
												}
											}
										},
										{
											"id": 2681,
											"name": "overrideContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 1892,
												"name": "Context",
												"package": "@truffle/codec"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 896,
												"name": "CalldataDecoding",
												"package": "@truffle/codec"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2557
							]
						},
						{
							"title": "Properties",
							"children": [
								2583,
								2574,
								2575,
								2564,
								2565,
								2567,
								2566,
								2580,
								2576,
								2581,
								2563,
								2568,
								2582,
								2573,
								2572
							]
						},
						{
							"title": "Methods",
							"children": [
								2631,
								2634,
								2637,
								2589,
								2586,
								2615,
								2619,
								2599,
								2752,
								2605,
								2624,
								2627,
								2653,
								2646,
								2649,
								2664,
								2592,
								2640,
								2670,
								2668,
								2666,
								2657,
								2662,
								2584,
								2702,
								2742,
								2712,
								2692,
								2732,
								2682,
								2722,
								2596,
								2602,
								2672
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/decoders.ts",
							"line": 58,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/decoders.ts#L58"
						}
					]
				},
				{
					"id": 2790,
					"name": "VariableNotFoundError",
					"variant": "declaration",
					"kind": 128,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This error indicates that the user requested a variable that does not exist."
							}
						]
					},
					"children": [
						{
							"id": 2791,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 101,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L101"
								}
							],
							"signatures": [
								{
									"id": 2792,
									"name": "new VariableNotFoundError",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"sources": [
										{
											"fileName": "decoder/lib/errors.ts",
											"line": 101,
											"character": 2,
											"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L101"
										}
									],
									"parameters": [
										{
											"id": 2793,
											"name": "nameOrId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 2790,
										"name": "VariableNotFoundError",
										"package": "@truffle/decoder"
									},
									"overwrites": {
										"type": "reference",
										"target": -1,
										"name": "Error.constructor"
									}
								}
							],
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						},
						{
							"id": 2794,
							"name": "nameOrId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isPublic": true
							},
							"sources": [
								{
									"fileName": "decoder/lib/errors.ts",
									"line": 100,
									"character": 9,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L100"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								2791
							]
						},
						{
							"title": "Properties",
							"children": [
								2794
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/errors.ts",
							"line": 99,
							"character": 13,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/errors.ts#L99"
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Error"
							},
							"name": "Error",
							"package": "typescript"
						}
					]
				},
				{
					"id": 2798,
					"name": "ContractState",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents the state of a contract aside from its storage."
							}
						]
					},
					"children": [
						{
							"id": 2800,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The contract's address, as a checksummed hex string."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 111,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L111"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2801,
							"name": "balanceAsBN",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The contract's balance, in Wei, as a BN."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 115,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L115"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
									"qualifiedName": "BN"
								},
								"name": "BN",
								"package": "@types/bn.js"
							}
						},
						{
							"id": 2799,
							"name": "class",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The contract's class, as a Format.Types.ContractType."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 107,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L107"
								}
							],
							"type": {
								"type": "reference",
								"target": 236,
								"name": "ContractType",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2803,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The contract's code, as a hexidecimal string."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 123,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L123"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2802,
							"name": "nonceAsBN",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The contract's nonce, as a BN."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L119"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/bn.js/index.d.ts",
									"qualifiedName": "BN"
								},
								"name": "BN",
								"package": "@types/bn.js"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2800,
								2801,
								2799,
								2803,
								2802
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/types.ts",
							"line": 103,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L103"
						}
					]
				},
				{
					"id": 2825,
					"name": "DecodeLogOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the options parameter to [[WireDecoder.decodeLog|decodeLog()]].\nThis type may be expanded in the future."
							}
						]
					},
					"children": [
						{
							"id": 2827,
							"name": "disableChecks",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allows decodings that don't pass the re-encoding test.  Don't turn\nthis on unless you know what you're doing!"
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 258,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L258"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2826,
							"name": "extras",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used to indicate whether \"extra\" event decodings -- event decodings from\nnon-library contracts other than the one that appears to have emitted\nthe event -- should be returned.  Defaults to "
									},
									{
										"kind": "code",
										"text": "`\"off\"`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 253,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L253"
								}
							],
							"type": {
								"type": "reference",
								"target": 1035,
								"name": "ExtrasAllowed",
								"package": "@truffle/codec"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2827,
								2826
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/types.ts",
							"line": 247,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L247"
						}
					]
				},
				{
					"id": 2805,
					"name": "DecodedLog",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type represents a web3 Log object that has been decoded.\nNote that it has the same fields the Log type.   The differences are:\n\n  1. It adds an additional field with the decodings;\n  2. Some fields that in Log are allowed to be strings,\n    here are specified as numbers.  (Because this type is\n    for output and that type is for input.)"
							}
						]
					},
					"children": [
						{
							"id": 2806,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address of the emitter (as checksummed hex string)."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 140,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L140"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2812,
							"name": "blockHash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The block hash (as hex string).  Null if pending."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 165,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L165"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2813,
							"name": "blockNumber",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The block number.  Null if pending."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 169,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L169"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2807,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The log's data section (as hex string)."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 144,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L144"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2814,
							"name": "decodings",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of possible decodings of the given log -- it's an array because logs can be ambiguous.\n\nThis field works just like the output of [[WireDecoder.decodeLog]], so see that for more\ninformation."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 176,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L176"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 897,
									"name": "LogDecoding",
									"package": "@truffle/codec"
								}
							}
						},
						{
							"id": 2809,
							"name": "logIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Index of the log within the block."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 152,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L152"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2808,
							"name": "topics",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The log's topics; each is a hex string representing 32 bytes."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 148,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L148"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2811,
							"name": "transactionHash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The emitting transaction's hash (as hex string)."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 161,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L161"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2810,
							"name": "transactionIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Index within the block of the emitting transaction; null if\nblock is pending."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 157,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L157"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2806,
								2812,
								2813,
								2807,
								2814,
								2809,
								2808,
								2811,
								2810
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/types.ts",
							"line": 136,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L136"
						}
					]
				},
				{
					"id": 2856,
					"name": "DecoderSettings",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type contains information needed to initialize the decoder."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Inputs"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2859,
							"name": "ens",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This field can be included to enable or disable ENS resolution (and, in\nthe future, reverse resolution) and specify how it should be performed.\nIf absent, ENS resolution will be performed using the decoder's usual\nprovider."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L51"
								}
							],
							"type": {
								"type": "reference",
								"target": 2853,
								"name": "EnsSettings",
								"package": "@truffle/decoder"
							}
						},
						{
							"id": 2857,
							"name": "projectInfo",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Information about the project or contracts being decoded.\nThis may come in several forms; see the type documentation for\nmore information.  The simplest way to use this to set it to\n"
									},
									{
										"kind": "code",
										"text": "`{ artifacts: <array of artifacts in project> }`"
									},
									{
										"kind": "text",
										"text": ".\n\nThis may be left out if an artifact or contract has been passed\nin by some other means, in which case the decoder will be made\nbased purely on that single contract, but it's recommended to pass in\nproject info for all your contracts to get the decoder's full power."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L36"
								}
							],
							"type": {
								"type": "reference",
								"target": 1855,
								"name": "ProjectInfo",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2858,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The provider for the decoder to use.  This is required when using a\nprovider-based constructor; otherwise an exception will be thrown.\nIf the decoder is initialized with a Truffle Contract-based constructor,\nthis is not expected to be passed.  If it is passed, it will override\nthe use of the given contract's provider."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L44"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../encoder/dist/adapter.d.ts",
									"qualifiedName": "Provider"
								},
								"name": "Provider",
								"package": "@truffle/encoder"
							}
						},
						{
							"id": 2860,
							"name": "selectorDirectory",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This field can be included to enable selector-based decoding, using a\nselector directory (such as 4byte.directory) when other\ndecoding methods fail."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 57,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L57"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../decoder/lib/types.ts",
									"qualifiedName": "SelectorDirectorySettings"
								},
								"name": "SelectorDirectorySettings",
								"package": "@truffle/decoder"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2859,
								2857,
								2858,
								2860
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/types.ts",
							"line": 24,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L24"
						}
					]
				},
				{
					"id": 2853,
					"name": "EnsSettings",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This type indicates settings to be used for ENS resolution (and, in the\nfuture, reverse resolution)."
							}
						],
						"blockTags": [
							{
								"tag": "@Category",
								"content": [
									{
										"kind": "text",
										"text": "Inputs"
									}
								]
							}
						]
					},
					"children": [
						{
							"id": 2854,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The provider to use for ENS resolution; set this to "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " to disable\nENS resolution.  If absent, will default to the decoder's provider,\nand ENS resolution will be enabled."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 72,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L72"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../encoder/dist/adapter.d.ts",
									"qualifiedName": "Provider"
								},
								"name": "Provider",
								"package": "@truffle/encoder"
							}
						},
						{
							"id": 2855,
							"name": "registryAddress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ENS registry address to use; if absent, will use the default one\nfor the current network.  If there is no default registry for the\ncurrent network, ENS resolution will be disabled."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 78,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L78"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2854,
								2855
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/types.ts",
							"line": 66,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L66"
						}
					]
				},
				{
					"id": 2815,
					"name": "EventOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the options parameter to [[WireDecoder.events|events()]].  This type will be expanded in the future\nas more filtering options are added."
							}
						]
					},
					"children": [
						{
							"id": 2819,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If included, will restrict to events emitted by the given address.\n\nNOTE: In the contract instance decoder, if omitted, defaults to the\naddress of the contract instance being decoded, rather than not filtering\nby address.  However, this behavior can be turned off by explicitly specifying\naddress as undefined."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 228,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L228"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2821,
							"name": "disableChecks",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allows decodings that don't pass the re-encoding test.  Don't turn\nthis on unless you know what you're doing!"
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 239,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L239"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 2820,
							"name": "extras",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used to indicate whether \"extra\" event decodings -- event decodings from\nnon-library contracts other than the one that appears to have emitted\nthe event -- should be returned.  Defaults to "
									},
									{
										"kind": "code",
										"text": "`\"off\"`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 234,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L234"
								}
							],
							"type": {
								"type": "reference",
								"target": 1035,
								"name": "ExtrasAllowed",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2817,
							"name": "fromBlock",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The earliest block to include events from.  Defaults to \"latest\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 215,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L215"
								}
							],
							"type": {
								"type": "reference",
								"target": 1062,
								"name": "BlockSpecifier",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2816,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If included, the name parameter will restrict to events with the given name."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 211,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L211"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2818,
							"name": "toBlock",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The latest block to include events from.  Defaults to \"latest\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 219,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L219"
								}
							],
							"type": {
								"type": "reference",
								"target": 1062,
								"name": "BlockSpecifier",
								"package": "@truffle/codec"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2819,
								2821,
								2820,
								2817,
								2816,
								2818
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/types.ts",
							"line": 207,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L207"
						}
					]
				},
				{
					"id": 2844,
					"name": "Log",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Contains information about a transaction.  Most of the fields have\nbeen made optional; only those needed by the decoder have been made\nmandatory.\n\nIntended to work like Web3's\n[Log](https://web3js.readthedocs.io/en/v1.2.1/web3-eth.html#eth-getpastlogs-return)\ntype, but with strings allowed where it requires numbers."
							}
						]
					},
					"children": [
						{
							"id": 2845,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address of the emitter (as checksummed hex string)."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 364,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L364"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2851,
							"name": "blockHash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The block hash (as hex string).  Null if pending."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 389,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L389"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2852,
							"name": "blockNumber",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The block number.  Null if pending."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 393,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L393"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "bigint"
									}
								]
							}
						},
						{
							"id": 2846,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The log's data section (as hex string)."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 368,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L368"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2848,
							"name": "logIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Index of the log within the block."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 376,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L376"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "bigint"
									}
								]
							}
						},
						{
							"id": 2847,
							"name": "topics",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The log's topics; each is a hex string representing 32 bytes."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 372,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L372"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 2850,
							"name": "transactionHash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The emitting transaction's hash (as hex string)."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 385,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L385"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2849,
							"name": "transactionIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Index within the block of the emitting transaction; null if\nblock is pending."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 381,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L381"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "bigint"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2845,
								2851,
								2852,
								2846,
								2848,
								2847,
								2850,
								2849
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/types.ts",
							"line": 360,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L360"
						}
					]
				},
				{
					"id": 2822,
					"name": "ReturnOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the options parameter to [[ContractDecoder.decodeReturnValue|decodeReturnValue()]]."
							}
						]
					},
					"children": [
						{
							"id": 2823,
							"name": "block",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The block in which the call was made.  Defaults to \"latest\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 269,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L269"
								}
							],
							"type": {
								"type": "reference",
								"target": 1062,
								"name": "BlockSpecifier",
								"package": "@truffle/codec"
							}
						},
						{
							"id": 2824,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If included, tells the decoder to interpret the return data as\nthe return data from a successful call (if "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " is passed) or\nas the return data from a failed call (if "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " is passed). If\nomitted or set to "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": ", the decoder will account for both\npossibilities."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 277,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L277"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2823,
								2824
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/types.ts",
							"line": 265,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L265"
						}
					]
				},
				{
					"id": 2829,
					"name": "Transaction",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Contains information about a transaction.  Most of the fields have\nbeen made optional; only those needed by the decoder have been made\nmandatory.\n\nIntended to work like Web3's\n[Transaction](https://web3js.readthedocs.io/en/v1.2.1/web3-eth.html#eth-gettransaction-return)\ntype, but with strings allowed where it requires numbers."
							}
						]
					},
					"children": [
						{
							"id": 2832,
							"name": "blockHash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hash of this transaction's block as hex string; null if pending."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 302,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L302"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2833,
							"name": "blockNumber",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This transaction's block number; null if pending."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 306,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L306"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "bigint"
									}
								]
							}
						},
						{
							"id": 2835,
							"name": "from",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address of the sender (as checksummed hex string)."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 314,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L314"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2839,
							"name": "gas",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gas provided by the sender, as numeric string."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 331,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L331"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2838,
							"name": "gasPrice",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gas price for this transaction, as numeric string."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 327,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L327"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2830,
							"name": "hash",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The transaction hash as hex string."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 294,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L294"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2840,
							"name": "input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Data sent with the transaction, as hex string."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 335,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L335"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2842,
							"name": "maxFeePerGas",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum fee per gas that the transaction is willing to pay in total."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 343,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L343"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2843,
							"name": "maxPriorityFeePerGas",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum fee per gas to give miners to incentivize them to include the transaction (Priority fee)."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 347,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L347"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2831,
							"name": "nonce",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The nonce of the sender before this transaction was sent."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 298,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L298"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "bigint"
									}
								]
							}
						},
						{
							"id": 2836,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address of the recipient (as checksummed hex string), or null for a\ncontract creation."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 319,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L319"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2834,
							"name": "transactionIndex",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Index of transaction in block; null if block is pending."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 310,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L310"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "bigint"
									}
								]
							}
						},
						{
							"id": 2841,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A positive unsigned 8-bit number between 0 and 0x7f that represents the type of the transaction."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 339,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L339"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "bigint"
									}
								]
							}
						},
						{
							"id": 2837,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wei sent with this transaction, as numeric string."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/types.ts",
									"line": 323,
									"character": 2,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L323"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2832,
								2833,
								2835,
								2839,
								2838,
								2830,
								2840,
								2842,
								2843,
								2831,
								2836,
								2834,
								2841,
								2837
							]
						}
					],
					"sources": [
						{
							"fileName": "decoder/lib/types.ts",
							"line": 290,
							"character": 17,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/types.ts#L290"
						}
					]
				},
				{
					"id": 40,
					"name": "ProjectInfo",
					"variant": "declaration",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "decoder/lib/index.ts",
							"line": 178,
							"character": 5,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L178"
						}
					],
					"type": {
						"type": "reference",
						"target": 1855,
						"name": "Compilations.ProjectInfo",
						"package": "@truffle/codec",
						"qualifiedName": "ProjectInfo"
					}
				},
				{
					"id": 36,
					"name": "forAddress",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "decoder/lib/index.ts",
							"line": 376,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L376"
						}
					],
					"signatures": [
						{
							"id": 37,
							"name": "forAddress",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a contract instance decoder for a given instance of a contract in this\nproject.  Unlike the other functions, this method doesn't require giving an\nartifact for the address itself; however, the address had better correspond to\na contract of a type given in the project info, or you'll get an exception."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/index.ts",
									"line": 376,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L376"
								}
							],
							"parameters": [
								{
									"id": 38,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the contract instance to decode.\n  If an invalid address is provided, this method will throw an exception."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 39,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [[DecoderSettings]] to use, including the provider;\n  see the documentation for that type for more information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 2856,
										"name": "DecoderSettings",
										"package": "@truffle/decoder"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2449,
										"name": "ContractInstanceDecoder",
										"package": "@truffle/decoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6,
					"name": "forArtifact",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "decoder/lib/index.ts",
							"line": 217,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L217"
						}
					],
					"signatures": [
						{
							"id": 7,
							"name": "forArtifact",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a contract decoder for a given contract artifact."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/index.ts",
									"line": 217,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L217"
								}
							],
							"parameters": [
								{
									"id": 8,
									"name": "artifact",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The artifact for the contract.\n\n  A contract constructor object may be substituted for the artifact, so if\n  you're not sure which you're dealing with, it's OK."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../contract-schema/spec/index.d.ts",
											"qualifiedName": "ContractObject"
										},
										"name": "ContractObject",
										"package": "@truffle/contract-schema"
									}
								},
								{
									"id": 9,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [[DecoderSettings]] to use, including the provider;\n  see the documentation for that type for more information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 2856,
										"name": "DecoderSettings",
										"package": "@truffle/decoder"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2366,
										"name": "ContractDecoder",
										"package": "@truffle/decoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 22,
					"name": "forArtifactAt",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "decoder/lib/index.ts",
							"line": 310,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L310"
						}
					],
					"signatures": [
						{
							"id": 23,
							"name": "forArtifactAt",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a contract instance decoder for a contract instance at a given address."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/index.ts",
									"line": 310,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L310"
								}
							],
							"parameters": [
								{
									"id": 24,
									"name": "artifact",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The artifact corresponding to the type of the contract.\n\n  A contract constructor object may be substituted for the artifact, so if\n  you're not sure which you're dealing with, it's OK."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../contract-schema/spec/index.d.ts",
											"qualifiedName": "ContractObject"
										},
										"name": "ContractObject",
										"package": "@truffle/contract-schema"
									}
								},
								{
									"id": 25,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the contract instance to decode.\n\n  Address must either be checksummed, or in all one case to circumvent the checksum.\n  Mixed-case with bad checksum will cause this function to throw an exception."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 26,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [[DecoderSettings]] to use, including the provider;\n  see the documentation for that type for more information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 2856,
										"name": "DecoderSettings",
										"package": "@truffle/decoder"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2449,
										"name": "ContractInstanceDecoder",
										"package": "@truffle/decoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10,
					"name": "forContract",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "decoder/lib/index.ts",
							"line": 243,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L243"
						}
					],
					"signatures": [
						{
							"id": 11,
							"name": "forContract",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a contract decoder for a given contract."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/index.ts",
									"line": 243,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L243"
								}
							],
							"parameters": [
								{
									"id": 12,
									"name": "contract",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract constructor object corresponding to the type of\n  the contract."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../decoder/lib/types.ts",
											"qualifiedName": "ContractConstructorObject"
										},
										"name": "ContractConstructorObject",
										"package": "@truffle/decoder"
									}
								},
								{
									"id": 13,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [[DecoderSettings]] to use; see the documentation for\n  that type for more information.  If absent, the decoder will be based on\n  just the single contract provided; it is recommended to pass more\n  information to get the decoder's full power."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 2856,
										"name": "DecoderSettings",
										"package": "@truffle/decoder"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2366,
										"name": "ContractDecoder",
										"package": "@truffle/decoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 27,
					"name": "forContractAt",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "decoder/lib/index.ts",
							"line": 335,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L335"
						}
					],
					"signatures": [
						{
							"id": 28,
							"name": "forContractAt",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a contract instance decoder for a contract instance at a given address."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/index.ts",
									"line": 335,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L335"
								}
							],
							"parameters": [
								{
									"id": 29,
									"name": "contract",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract constructor object corresponding to the type of the contract."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../decoder/lib/types.ts",
											"qualifiedName": "ContractConstructorObject"
										},
										"name": "ContractConstructorObject",
										"package": "@truffle/decoder"
									}
								},
								{
									"id": 30,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the contract instance to decode.\n\n  Address must either be checksummed, or in all one case to circumvent the checksum.\n  Mixed-case with bad checksum will cause this function to throw an exception."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [[DecoderSettings]] to use; see the documentation for\n  that type for more information.  If absent, the decoder will be based on just the\n  single contract provided; it is recommended to pass more information to get the\n  decoder's full power."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 2856,
										"name": "DecoderSettings",
										"package": "@truffle/decoder"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2449,
										"name": "ContractInstanceDecoder",
										"package": "@truffle/decoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 32,
					"name": "forContractInstance",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "decoder/lib/index.ts",
							"line": 356,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L356"
						}
					],
					"signatures": [
						{
							"id": 33,
							"name": "forContractInstance",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a contract instance decoder for a given contract instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/index.ts",
									"line": 356,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L356"
								}
							],
							"parameters": [
								{
									"id": 34,
									"name": "contract",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract abstraction object corresponding to the contract instance."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../decoder/lib/types.ts",
											"qualifiedName": "ContractInstanceObject"
										},
										"name": "ContractInstanceObject",
										"package": "@truffle/decoder"
									}
								},
								{
									"id": 35,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [[DecoderSettings]] to use; see the documentation for\n  that type for more information.  If absent, the decoder will be based on just the\n  single contract provided; it is recommended to pass more information to get the\n  decoder's full power."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 2856,
										"name": "DecoderSettings",
										"package": "@truffle/decoder"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2449,
										"name": "ContractInstanceDecoder",
										"package": "@truffle/decoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14,
					"name": "forDeployedArtifact",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "decoder/lib/index.ts",
							"line": 265,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L265"
						}
					],
					"signatures": [
						{
							"id": 15,
							"name": "forDeployedArtifact",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a contract instance decoder for a deployed contract instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/index.ts",
									"line": 265,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L265"
								}
							],
							"parameters": [
								{
									"id": 16,
									"name": "artifact",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The artifact corresponding to the type of the contract.\n\n  A contract constructor object may be substituted for the artifact, so if\n  you're not sure which you're dealing with, it's OK."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../contract-schema/spec/index.d.ts",
											"qualifiedName": "ContractObject"
										},
										"name": "ContractObject",
										"package": "@truffle/contract-schema"
									}
								},
								{
									"id": 17,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [[DecoderSettings]] to use, including the provider;\n  see the documentation for that type for more information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 2856,
										"name": "DecoderSettings",
										"package": "@truffle/decoder"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2449,
										"name": "ContractInstanceDecoder",
										"package": "@truffle/decoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 18,
					"name": "forDeployedContract",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "decoder/lib/index.ts",
							"line": 285,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L285"
						}
					],
					"signatures": [
						{
							"id": 19,
							"name": "forDeployedContract",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a contract instance decoder for a deployed contract instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/index.ts",
									"line": 285,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L285"
								}
							],
							"parameters": [
								{
									"id": 20,
									"name": "contract",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The contract constructor object corresponding to the type of the contract."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../decoder/lib/types.ts",
											"qualifiedName": "ContractConstructorObject"
										},
										"name": "ContractConstructorObject",
										"package": "@truffle/decoder"
									}
								},
								{
									"id": 21,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [[DecoderSettings]] to use; see the documentation for\n  that type for more information.  If absent, the decoder will be based on just the\n  single contract provided; it is recommended to pass more information to get the\n  decoder's full power."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 2856,
										"name": "DecoderSettings",
										"package": "@truffle/decoder"
									},
									"defaultValue": "{}"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2449,
										"name": "ContractInstanceDecoder",
										"package": "@truffle/decoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3,
					"name": "forProject",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "decoder/lib/index.ts",
							"line": 188,
							"character": 22,
							"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L188"
						}
					],
					"signatures": [
						{
							"id": 4,
							"name": "forProject",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "**This function is asynchronous.**\n\nConstructs a project decoder for the project.\nSee the [[DecoderSettings]] documentation for further information."
									}
								]
							},
							"sources": [
								{
									"fileName": "decoder/lib/index.ts",
									"line": 188,
									"character": 0,
									"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L188"
								}
							],
							"parameters": [
								{
									"id": 5,
									"name": "settings",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2856,
										"name": "DecoderSettings",
										"package": "@truffle/decoder"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2556,
										"name": "ProjectDecoder",
										"package": "@truffle/decoder"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						2828,
						2804
					]
				},
				{
					"title": "Classes",
					"children": [
						2776,
						2758,
						2366,
						2449,
						2765,
						2785,
						2795,
						2556,
						2790
					],
					"categories": [
						{
							"title": "Decoder",
							"children": [
								2366,
								2449,
								2556
							]
						},
						{
							"title": "Exception",
							"children": [
								2776,
								2758,
								2765,
								2785,
								2790
							]
						},
						{
							"title": "Other",
							"children": [
								2795
							]
						}
					]
				},
				{
					"title": "Interfaces",
					"children": [
						2798,
						2825,
						2805,
						2856,
						2853,
						2815,
						2844,
						2822,
						2829
					],
					"categories": [
						{
							"title": "Inputs",
							"children": [
								2825,
								2815,
								2844,
								2822,
								2829
							]
						},
						{
							"title": "Results",
							"children": [
								2798,
								2805
							]
						},
						{
							"title": "Other",
							"children": [
								2856,
								2853
							]
						}
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						40
					]
				},
				{
					"title": "Functions",
					"children": [
						36,
						6,
						22,
						10,
						27,
						32,
						14,
						18,
						3
					],
					"categories": [
						{
							"title": "Provider-based Constructor",
							"children": [
								36,
								6,
								22,
								14,
								3
							]
						},
						{
							"title": "Truffle Contract-based Constructor",
							"children": [
								10,
								27,
								32,
								18
							]
						}
					]
				}
			],
			"sources": [
				{
					"fileName": "decoder/lib/index.ts",
					"line": 1,
					"character": 0,
					"url": "https://github.com/trufflesuite/truffle/blob/8c81e30a6/packages/decoder/lib/index.ts#L1"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				1,
				41,
				2
			]
		}
	],
	"readme": [
		{
			"kind": "text",
			"text": "# Truffle Decoding and Encoding\n\nThis documentation provides information and complete interface listings for two\npackages: **@truffle/decoder**, a high-level library for decoding, and\n**@truffle/codec**, a low-level package for encoding, decoding, and data\nrepresentation.\n\n## Contents\n\n### High-level interface (for common use)\n\n[[@truffle/decoder]] provides a high-level interface for **decoding\ntransactions, events, and state variables for Ethereum smart contracts.** This\npackage accepts Truffle's\n[contract abstractions](https://www.trufflesuite.com/docs/truffle/reference/contract-abstractions)\nas input (or Truffle's artifact files and a provider) and connects to the\nblockchain to retrieve raw values for decoding.\n\n### Low-level interface (for special-case purposes)\n\n[[@truffle/codec]] provides the underlying low-level interfaces for performing\nthis decoding, as well as interfaces for encoding these values and for decoding\nof local Solidity variables and other data observable in a debugging trace.\n\nThis library is meant to be **self-contained**, makes **no network connections**\nof its own, and **seeks to restrict its dependencies** to those which provide\ndata structures for high-precision numbers and other special-purpose data\nutilities.\n\n_Although most use cases will not require invoking the codec directly, a few key\nparts of this library are directly relevant to decoder use. See notes below._\n\n## ℹ️ Important notes\n\n### Output format\n\nBoth the decoder and the codec return results as objects containing both type\ninformation and either high-precision values or accurate errors in place of\nvalues. We recommend familiarizing yourself with the [[Format]] documentation in\norder to use these packages.\n\n### Decoding modes\n\nThe decoder operates in either of two modes:\n\n1. Full mode ("
		},
		{
			"kind": "code",
			"text": "`\"decodingMode\": \"full\"`"
		},
		{
			"kind": "text",
			"text": "), which uses source code information to\n   return types and values to match the original Solidity.\n2. ABI mode ("
		},
		{
			"kind": "code",
			"text": "`\"decodingMode\": \"abi\"`"
		},
		{
			"kind": "text",
			"text": "), which uses only information from the\n   contract ABI and returns less information, e.g. returning\n   [[Format.Values.UintResult|"
		},
		{
			"kind": "code",
			"text": "`UintResult`"
		},
		{
			"kind": "text",
			"text": "]]s in place of\n   [[Format.Values.EnumResult|"
		},
		{
			"kind": "code",
			"text": "`EnumResult`"
		},
		{
			"kind": "text",
			"text": "]]s and\n   [[Format.Values.AddressResult|"
		},
		{
			"kind": "code",
			"text": "`AddressResult`"
		},
		{
			"kind": "text",
			"text": "]]s instead of\n   [[Format.Values.ContractResult|"
		},
		{
			"kind": "code",
			"text": "`ContractResult`"
		},
		{
			"kind": "text",
			"text": "]]s\n\nBy default, the decoder uses **full mode**, but for technical reasons, this may\nnot be reliable. If decoding fails in full mode, it **falls back to ABI mode.**\n\nReturned decodings (i.e. [[CalldataDecoding]] and [[LogDecoding]]) indicate\nwhich mode was used via the "
		},
		{
			"kind": "code",
			"text": "`\"decodingMode\"`"
		},
		{
			"kind": "text",
			"text": " field.\n\nTo ensure full mode works:\n\n- Use Solidity v0.4.12 or higher;\n- Ensure all contracts in your projects have distinct names;\n- Compile all your contracts at the same time;\n- Ensure all custom data types are declared in a file with at least one\n  contract.\n\n(Our apologies for these technical limitations, but we are working to address\nthese last three problems.)\n\nIf you can't use full mode or don't want to deal with the distinction, the\ndecoder provides\n[[ProjectDecoder.abifyCalldataDecoding|"
		},
		{
			"kind": "code",
			"text": "`decoder.abifyCalldataDecoding`"
		},
		{
			"kind": "text",
			"text": "]] and\n[[ProjectDecoder.abifyLogDecoding|"
		},
		{
			"kind": "code",
			"text": "`decoder.abifyLogDecoding`"
		},
		{
			"kind": "text",
			"text": "]] methods, which\naccept decodings in either mode and always return ABI mode.\n\n#### Additional notes on decoding modes\n\n- Full mode may reject certain decodings (e.g. out of range enums) that are fine\n  in ABI mode.\n\n- ABI-fied full mode decodings may contain extra information that regular ABI\n  mode results do not.\n\n- Decoding mode applies to the entire decoding, but objects that contain\n  multiple decodings (e.g. [[DecodedLog]]) may contain decodings in different\n  modes.\n\n- You can only decode state variables in full mode. If full mode fails while\n  decoding a state variable, it will throw an exception.\n\n- If a contract "
		},
		{
			"kind": "code",
			"text": "`Base`"
		},
		{
			"kind": "text",
			"text": " declares an event "
		},
		{
			"kind": "code",
			"text": "`Event`"
		},
		{
			"kind": "text",
			"text": " and a contract "
		},
		{
			"kind": "code",
			"text": "`Derived`"
		},
		{
			"kind": "text",
			"text": "\n  inheriting from "
		},
		{
			"kind": "code",
			"text": "`Base`"
		},
		{
			"kind": "text",
			"text": " overrides "
		},
		{
			"kind": "code",
			"text": "`Event`"
		},
		{
			"kind": "text",
			"text": ", if "
		},
		{
			"kind": "code",
			"text": "`Derived`"
		},
		{
			"kind": "text",
			"text": " then emits\n  "
		},
		{
			"kind": "code",
			"text": "`Base.Event`"
		},
		{
			"kind": "text",
			"text": ", ABI mode may not be able to decode it.\n\n#### Additional notes on decoding state variables\n\n- While internal function pointers can only be decoded in full mode, full mode\n  still may not be able to determine all the information about them. Thus, for\n  internal function pointers, you may get a bare-bones decoding, or you may get\n  a decoding with more information.\n\n- Solidity 0.6.5 contains a bug that may cause some state variables to decode\n  incorrectly if there is an immutable state variable which is written to but\n  never read from.\n\n- In any version of Solidity, it is impossible to decode an immutable state\n  variable which is written to but never read from; these will decode to an\n  error.\n\n- Not all constant state variables can presently be decoded; some of these may\n  simply decode to an error.\n\n---\n\n<p align=\"center\">\n⚡\n</p>\n\n---"
		}
	],
	"symbolIdMap": {
		"1": {
			"sourceFileName": "lib/index.ts",
			"qualifiedName": ""
		},
		"2": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": ""
		},
		"3": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forProject"
		},
		"4": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forProject"
		},
		"5": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"6": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forArtifact"
		},
		"7": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forArtifact"
		},
		"8": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "artifact"
		},
		"9": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"10": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forContract"
		},
		"11": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forContract"
		},
		"12": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "contract"
		},
		"13": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"14": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forDeployedArtifact"
		},
		"15": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forDeployedArtifact"
		},
		"16": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "artifact"
		},
		"17": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"18": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forDeployedContract"
		},
		"19": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forDeployedContract"
		},
		"20": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "contract"
		},
		"21": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"22": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forArtifactAt"
		},
		"23": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forArtifactAt"
		},
		"24": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "artifact"
		},
		"25": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "address"
		},
		"26": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"27": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forContractAt"
		},
		"28": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forContractAt"
		},
		"29": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "contract"
		},
		"30": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "address"
		},
		"31": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"32": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forContractInstance"
		},
		"33": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forContractInstance"
		},
		"34": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "contract"
		},
		"35": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"36": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forAddress"
		},
		"37": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "forAddress"
		},
		"38": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "address"
		},
		"39": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"40": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "ProjectInfo"
		},
		"41": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": ""
		},
		"42": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forProject"
		},
		"43": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forProject"
		},
		"44": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"45": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forProjectInternal"
		},
		"46": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forProjectInternal"
		},
		"47": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "info"
		},
		"48": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forArtifact"
		},
		"49": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forArtifact"
		},
		"50": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "artifact"
		},
		"51": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"52": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forContract"
		},
		"53": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forContract"
		},
		"54": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "contract"
		},
		"55": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"56": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forDeployedArtifact"
		},
		"57": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forDeployedArtifact"
		},
		"58": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "artifact"
		},
		"59": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"60": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forDeployedContract"
		},
		"61": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forDeployedContract"
		},
		"62": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "contract"
		},
		"63": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"64": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forArtifactAt"
		},
		"65": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forArtifactAt"
		},
		"66": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "artifact"
		},
		"67": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "address"
		},
		"68": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"69": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forContractAt"
		},
		"70": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forContractAt"
		},
		"71": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "contract"
		},
		"72": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "address"
		},
		"73": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"74": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forContractInstance"
		},
		"75": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "forContractInstance"
		},
		"76": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "contract"
		},
		"77": {
			"sourceFileName": "../encoder/lib/index.ts",
			"qualifiedName": "settings"
		},
		"79": {
			"sourceFileName": "lib/format/index.ts",
			"qualifiedName": ""
		},
		"80": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": ""
		},
		"81": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "forgetCompilations"
		},
		"82": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "forgetCompilations"
		},
		"83": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "typesByCompilation"
		},
		"84": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "isReferenceType"
		},
		"85": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "isReferenceType"
		},
		"86": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "anyType"
		},
		"87": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "fullType"
		},
		"88": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "fullType"
		},
		"89": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "basicType"
		},
		"90": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "userDefinedTypes"
		},
		"91": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "specifyLocation"
		},
		"92": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "specifyLocation"
		},
		"93": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "dataType"
		},
		"94": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "location"
		},
		"95": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "typeString"
		},
		"96": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "typeString"
		},
		"97": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "dataType"
		},
		"98": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "typeStringWithoutLocation"
		},
		"99": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "typeStringWithoutLocation"
		},
		"100": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "dataType"
		},
		"101": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "isContractDefinedType"
		},
		"102": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "isContractDefinedType"
		},
		"103": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "anyType"
		},
		"104": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "Type"
		},
		"105": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UintType"
		},
		"106": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UintType.typeClass"
		},
		"107": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UintType.bits"
		},
		"108": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UintType.typeHint"
		},
		"109": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "IntType"
		},
		"110": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "IntType.typeClass"
		},
		"111": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "IntType.bits"
		},
		"112": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "IntType.typeHint"
		},
		"113": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "BoolType"
		},
		"114": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "BoolType.typeClass"
		},
		"115": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "BoolType.typeHint"
		},
		"116": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "BytesType"
		},
		"117": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "BytesTypeStatic"
		},
		"118": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "BytesTypeStatic.typeClass"
		},
		"119": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "BytesTypeStatic.kind"
		},
		"120": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "BytesTypeStatic.length"
		},
		"121": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "BytesTypeStatic.typeHint"
		},
		"122": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "BytesTypeDynamic"
		},
		"123": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "BytesTypeDynamic.typeClass"
		},
		"124": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "BytesTypeDynamic.kind"
		},
		"125": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "BytesTypeDynamic.location"
		},
		"126": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "BytesTypeDynamic.typeHint"
		},
		"127": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "AddressType"
		},
		"128": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "AddressTypeSpecific"
		},
		"129": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "AddressTypeSpecific.typeClass"
		},
		"130": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "AddressTypeSpecific.kind"
		},
		"131": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "AddressTypeSpecific.payable"
		},
		"132": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "AddressTypeGeneral"
		},
		"133": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "AddressTypeGeneral.typeClass"
		},
		"134": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "AddressTypeGeneral.kind"
		},
		"135": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "AddressTypeGeneral.typeHint"
		},
		"136": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StringType"
		},
		"137": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StringType.typeClass"
		},
		"138": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StringType.location"
		},
		"139": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StringType.typeHint"
		},
		"140": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FixedType"
		},
		"141": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FixedType.typeClass"
		},
		"142": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FixedType.bits"
		},
		"143": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FixedType.places"
		},
		"144": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FixedType.typeHint"
		},
		"145": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UfixedType"
		},
		"146": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UfixedType.typeClass"
		},
		"147": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UfixedType.bits"
		},
		"148": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UfixedType.places"
		},
		"149": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UfixedType.typeHint"
		},
		"150": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ArrayType"
		},
		"151": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ArrayTypeStatic"
		},
		"152": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ArrayTypeStatic.typeClass"
		},
		"153": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ArrayTypeStatic.kind"
		},
		"154": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ArrayTypeStatic.baseType"
		},
		"155": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ArrayTypeStatic.length"
		},
		"156": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ArrayTypeStatic.location"
		},
		"157": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ArrayTypeStatic.typeHint"
		},
		"158": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ArrayTypeDynamic"
		},
		"159": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ArrayTypeDynamic.typeClass"
		},
		"160": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ArrayTypeDynamic.kind"
		},
		"161": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ArrayTypeDynamic.baseType"
		},
		"162": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ArrayTypeDynamic.location"
		},
		"163": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ArrayTypeDynamic.typeHint"
		},
		"164": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ElementaryType"
		},
		"165": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "BuiltInValueType"
		},
		"166": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "AbiType"
		},
		"167": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "MappingType"
		},
		"168": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "MappingType.typeClass"
		},
		"169": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "MappingType.keyType"
		},
		"170": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "MappingType.valueType"
		},
		"171": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "MappingType.location"
		},
		"172": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionType"
		},
		"173": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionInternalType"
		},
		"174": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionInternalType.typeClass"
		},
		"175": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionInternalType.visibility"
		},
		"176": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionInternalType.mutability"
		},
		"177": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionInternalType.inputParameterTypes"
		},
		"178": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionInternalType.outputParameterTypes"
		},
		"179": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionExternalType"
		},
		"180": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionExternalTypeSpecific"
		},
		"181": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionExternalTypeSpecific.typeClass"
		},
		"182": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionExternalTypeSpecific.visibility"
		},
		"183": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionExternalTypeSpecific.kind"
		},
		"184": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionExternalTypeSpecific.mutability"
		},
		"185": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionExternalTypeSpecific.inputParameterTypes"
		},
		"186": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionExternalTypeSpecific.outputParameterTypes"
		},
		"187": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionExternalTypeGeneral"
		},
		"188": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionExternalTypeGeneral.typeClass"
		},
		"189": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionExternalTypeGeneral.visibility"
		},
		"190": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionExternalTypeGeneral.kind"
		},
		"191": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "FunctionExternalTypeGeneral.typeHint"
		},
		"192": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ContractDefinedType"
		},
		"193": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UserDefinedType"
		},
		"194": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructType"
		},
		"195": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "NameTypePair"
		},
		"196": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "NameTypePair.name"
		},
		"197": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "NameTypePair.type"
		},
		"198": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructTypeLocal"
		},
		"199": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructTypeLocal.typeClass"
		},
		"200": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructTypeLocal.kind"
		},
		"201": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructTypeLocal.id"
		},
		"202": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructTypeLocal.typeName"
		},
		"203": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructTypeLocal.definingContractName"
		},
		"204": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructTypeLocal.definingContract"
		},
		"205": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructTypeLocal.memberTypes"
		},
		"206": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructTypeLocal.location"
		},
		"207": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructTypeGlobal"
		},
		"208": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructTypeGlobal.typeClass"
		},
		"209": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructTypeGlobal.kind"
		},
		"210": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructTypeGlobal.id"
		},
		"211": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructTypeGlobal.typeName"
		},
		"212": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructTypeGlobal.memberTypes"
		},
		"213": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "StructTypeGlobal.location"
		},
		"214": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "OptionallyNamedType"
		},
		"215": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "OptionallyNamedType.name"
		},
		"216": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "OptionallyNamedType.type"
		},
		"217": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "TupleType"
		},
		"218": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "TupleType.typeClass"
		},
		"219": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "TupleType.memberTypes"
		},
		"220": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "TupleType.typeHint"
		},
		"221": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "EnumType"
		},
		"222": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "EnumTypeLocal"
		},
		"223": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "EnumTypeLocal.typeClass"
		},
		"224": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "EnumTypeLocal.kind"
		},
		"225": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "EnumTypeLocal.id"
		},
		"226": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "EnumTypeLocal.typeName"
		},
		"227": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "EnumTypeLocal.definingContractName"
		},
		"228": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "EnumTypeLocal.definingContract"
		},
		"229": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "EnumTypeLocal.options"
		},
		"230": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "EnumTypeGlobal"
		},
		"231": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "EnumTypeGlobal.typeClass"
		},
		"232": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "EnumTypeGlobal.kind"
		},
		"233": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "EnumTypeGlobal.id"
		},
		"234": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "EnumTypeGlobal.typeName"
		},
		"235": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "EnumTypeGlobal.options"
		},
		"236": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ContractType"
		},
		"237": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ContractTypeNative"
		},
		"238": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ContractTypeNative.typeClass"
		},
		"239": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ContractTypeNative.kind"
		},
		"240": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ContractTypeNative.id"
		},
		"241": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ContractTypeNative.typeName"
		},
		"242": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ContractTypeNative.contractKind"
		},
		"243": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ContractTypeNative.payable"
		},
		"244": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ContractTypeForeign"
		},
		"245": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ContractTypeForeign.typeClass"
		},
		"246": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ContractTypeForeign.kind"
		},
		"247": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ContractTypeForeign.typeName"
		},
		"248": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ContractTypeForeign.contractKind"
		},
		"249": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ContractTypeForeign.payable"
		},
		"250": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UserDefinedValueTypeType"
		},
		"251": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UserDefinedValueTypeTypeLocal"
		},
		"252": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UserDefinedValueTypeTypeLocal.typeClass"
		},
		"253": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UserDefinedValueTypeTypeLocal.kind"
		},
		"254": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UserDefinedValueTypeTypeLocal.id"
		},
		"255": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UserDefinedValueTypeTypeLocal.typeName"
		},
		"256": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UserDefinedValueTypeTypeLocal.definingContractName"
		},
		"257": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UserDefinedValueTypeTypeLocal.definingContract"
		},
		"258": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UserDefinedValueTypeTypeLocal.underlyingType"
		},
		"259": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UserDefinedValueTypeTypeGlobal"
		},
		"260": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UserDefinedValueTypeTypeGlobal.typeClass"
		},
		"261": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UserDefinedValueTypeTypeGlobal.kind"
		},
		"262": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UserDefinedValueTypeTypeGlobal.id"
		},
		"263": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UserDefinedValueTypeTypeGlobal.typeName"
		},
		"264": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "UserDefinedValueTypeTypeGlobal.underlyingType"
		},
		"265": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "MagicVariableName"
		},
		"266": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "MagicType"
		},
		"267": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "MagicType.typeClass"
		},
		"268": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "MagicType.variable"
		},
		"269": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "MagicType.memberTypes"
		},
		"270": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "__type"
		},
		"271": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "__type.__index"
		},
		"273": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "TypeType"
		},
		"274": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "TypeTypeContract"
		},
		"275": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "TypeTypeContract.typeClass"
		},
		"276": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "TypeTypeContract.type"
		},
		"277": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "TypeTypeContract.stateVariableTypes"
		},
		"278": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "TypeTypeEnum"
		},
		"279": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "TypeTypeEnum.typeClass"
		},
		"280": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "TypeTypeEnum.type"
		},
		"281": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "OptionsType"
		},
		"282": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "OptionsType.typeClass"
		},
		"283": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "ReferenceType"
		},
		"284": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "TypesById"
		},
		"285": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "TypesById.__index"
		},
		"287": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "TypesByCompilationAndId"
		},
		"288": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "TypesByCompilationAndId.__index"
		},
		"290": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "__type"
		},
		"291": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "__type.compiler"
		},
		"292": {
			"sourceFileName": "lib/format/types.ts",
			"qualifiedName": "__type.types"
		},
		"293": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": ""
		},
		"294": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "Result"
		},
		"295": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "Value"
		},
		"296": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "AbiValue"
		},
		"297": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "AbiResult"
		},
		"298": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "ElementaryResult"
		},
		"299": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "BytesResult"
		},
		"300": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "UintResult"
		},
		"301": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "IntResult"
		},
		"302": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "BoolResult"
		},
		"303": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "BytesStaticResult"
		},
		"304": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "BytesDynamicResult"
		},
		"305": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "AddressResult"
		},
		"306": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "StringResult"
		},
		"307": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FixedResult"
		},
		"308": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "UfixedResult"
		},
		"309": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "EnumResult"
		},
		"310": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "UserDefinedValueTypeResult"
		},
		"311": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "ContractResult"
		},
		"312": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "ArrayResult"
		},
		"313": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "ArrayValue"
		},
		"314": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "ArrayValue.type"
		},
		"315": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "ArrayValue.kind"
		},
		"316": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "ArrayValue.reference"
		},
		"317": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "ArrayValue.value"
		},
		"318": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "ArrayValue.interpretations"
		},
		"319": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"320": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "MappingResult"
		},
		"321": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "MappingValue"
		},
		"322": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "MappingValue.type"
		},
		"323": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "MappingValue.kind"
		},
		"324": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "MappingValue.value"
		},
		"325": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "MappingValue.interpretations"
		},
		"326": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"327": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "KeyValuePair"
		},
		"328": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "KeyValuePair.key"
		},
		"329": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "KeyValuePair.value"
		},
		"330": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "StructResult"
		},
		"331": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "StructValue"
		},
		"332": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "StructValue.type"
		},
		"333": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "StructValue.kind"
		},
		"334": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "StructValue.reference"
		},
		"335": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "StructValue.value"
		},
		"336": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "StructValue.interpretations"
		},
		"337": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"338": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "NameValuePair"
		},
		"339": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "NameValuePair.name"
		},
		"340": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "NameValuePair.value"
		},
		"341": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TupleResult"
		},
		"342": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TupleValue"
		},
		"343": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TupleValue.type"
		},
		"344": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TupleValue.kind"
		},
		"345": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TupleValue.value"
		},
		"346": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TupleValue.interpretations"
		},
		"347": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"348": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "OptionallyNamedValue"
		},
		"349": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "OptionallyNamedValue.name"
		},
		"350": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "OptionallyNamedValue.value"
		},
		"351": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "MagicResult"
		},
		"352": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "MagicValue"
		},
		"353": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "MagicValue.type"
		},
		"354": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "MagicValue.kind"
		},
		"355": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "MagicValue.value"
		},
		"356": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "__type"
		},
		"357": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "__type.__index"
		},
		"359": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "MagicValue.interpretations"
		},
		"360": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"361": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TypeResult"
		},
		"362": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TypeValue"
		},
		"363": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TypeValueContract"
		},
		"364": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TypeValueContract.type"
		},
		"365": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TypeValueContract.kind"
		},
		"366": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TypeValueContract.value"
		},
		"367": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TypeValueContract.interpretations"
		},
		"368": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"369": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TypeValueEnum"
		},
		"370": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TypeValueEnum.type"
		},
		"371": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TypeValueEnum.kind"
		},
		"372": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TypeValueEnum.value"
		},
		"373": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "TypeValueEnum.interpretations"
		},
		"374": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"375": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalResult"
		},
		"376": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValue"
		},
		"377": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValue.type"
		},
		"378": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValue.kind"
		},
		"379": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValue.value"
		},
		"380": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValue.interpretations"
		},
		"381": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "__type"
		},
		"382": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "__type.contractEnsName"
		},
		"383": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValueInfo"
		},
		"384": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValueInfoKnown"
		},
		"385": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValueInfoKnown.kind"
		},
		"386": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValueInfoKnown.contract"
		},
		"387": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValueInfoKnown.selector"
		},
		"388": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValueInfoKnown.abi"
		},
		"389": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValueInfoInvalid"
		},
		"390": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValueInfoInvalid.kind"
		},
		"391": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValueInfoInvalid.contract"
		},
		"392": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValueInfoInvalid.selector"
		},
		"393": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValueInfoUnknown"
		},
		"394": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValueInfoUnknown.kind"
		},
		"395": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValueInfoUnknown.contract"
		},
		"396": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionExternalValueInfoUnknown.selector"
		},
		"397": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalResult"
		},
		"398": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValue"
		},
		"399": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValue.type"
		},
		"400": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValue.kind"
		},
		"401": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValue.value"
		},
		"402": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValue.interpretations"
		},
		"403": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"404": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfo"
		},
		"405": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfoKnown"
		},
		"406": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfoKnown.kind"
		},
		"407": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfoKnown.context"
		},
		"408": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfoKnown.rawInformation"
		},
		"409": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfoKnown.name"
		},
		"410": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfoKnown.definedIn"
		},
		"411": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfoKnown.id"
		},
		"412": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfoKnown.mutability"
		},
		"413": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfoException"
		},
		"414": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfoException.kind"
		},
		"415": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfoException.context"
		},
		"416": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfoException.rawInformation"
		},
		"417": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfoUnknown"
		},
		"418": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfoUnknown.kind"
		},
		"419": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfoUnknown.context"
		},
		"420": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "FunctionInternalValueInfoUnknown.rawInformation"
		},
		"421": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "OptionsResult"
		},
		"422": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "OptionsValue"
		},
		"423": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "OptionsValue.type"
		},
		"424": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "OptionsValue.kind"
		},
		"425": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "OptionsValue.value"
		},
		"426": {
			"sourceFileName": "lib/format/values.ts",
			"qualifiedName": "OptionsValue.interpretations"
		},
		"427": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"428": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "ElementaryValue"
		},
		"429": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BuiltInValueValue"
		},
		"430": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BytesValue"
		},
		"431": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "UintValue"
		},
		"432": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "UintValue.type"
		},
		"433": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "UintValue.kind"
		},
		"434": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "UintValue.value"
		},
		"435": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type"
		},
		"436": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.asBN"
		},
		"437": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.rawAsBN"
		},
		"438": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "UintValue.interpretations"
		},
		"439": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"440": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "IntValue"
		},
		"441": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "IntValue.type"
		},
		"442": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "IntValue.kind"
		},
		"443": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "IntValue.value"
		},
		"444": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type"
		},
		"445": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.asBN"
		},
		"446": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.rawAsBN"
		},
		"447": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "IntValue.interpretations"
		},
		"448": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"449": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BoolValue"
		},
		"450": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BoolValue.type"
		},
		"451": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BoolValue.kind"
		},
		"452": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BoolValue.value"
		},
		"453": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type"
		},
		"454": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.asBoolean"
		},
		"455": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BoolValue.interpretations"
		},
		"456": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"457": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BytesStaticValue"
		},
		"458": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BytesStaticValue.type"
		},
		"459": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BytesStaticValue.kind"
		},
		"460": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BytesStaticValue.value"
		},
		"461": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type"
		},
		"462": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.asHex"
		},
		"463": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.rawAsHex"
		},
		"464": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BytesStaticValue.interpretations"
		},
		"465": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"466": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BytesDynamicValue"
		},
		"467": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BytesDynamicValue.type"
		},
		"468": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BytesDynamicValue.kind"
		},
		"469": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BytesDynamicValue.value"
		},
		"470": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type"
		},
		"471": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.asHex"
		},
		"472": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "BytesDynamicValue.interpretations"
		},
		"473": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"474": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "AddressValue"
		},
		"475": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "AddressValue.type"
		},
		"476": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "AddressValue.kind"
		},
		"477": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "AddressValue.value"
		},
		"478": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type"
		},
		"479": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.asAddress"
		},
		"480": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.rawAsHex"
		},
		"481": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "AddressValue.interpretations"
		},
		"482": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type"
		},
		"483": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.ensName"
		},
		"484": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.contractClass"
		},
		"485": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "StringValue"
		},
		"486": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "StringValue.type"
		},
		"487": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "StringValue.kind"
		},
		"488": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "StringValue.value"
		},
		"489": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "StringValue.interpretations"
		},
		"490": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"491": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "StringValueInfo"
		},
		"492": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "StringValueInfoValid"
		},
		"493": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "StringValueInfoValid.kind"
		},
		"494": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "StringValueInfoValid.asString"
		},
		"495": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "StringValueInfoMalformed"
		},
		"496": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "StringValueInfoMalformed.kind"
		},
		"497": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "StringValueInfoMalformed.asHex"
		},
		"498": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "FixedValue"
		},
		"499": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "FixedValue.type"
		},
		"500": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "FixedValue.kind"
		},
		"501": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "FixedValue.value"
		},
		"502": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type"
		},
		"503": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.asBig"
		},
		"504": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.rawAsBig"
		},
		"505": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "FixedValue.interpretations"
		},
		"506": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"507": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "UfixedValue"
		},
		"508": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "UfixedValue.type"
		},
		"509": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "UfixedValue.kind"
		},
		"510": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "UfixedValue.value"
		},
		"511": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type"
		},
		"512": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.asBig"
		},
		"513": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.rawAsBig"
		},
		"514": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "UfixedValue.interpretations"
		},
		"515": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"516": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "EnumValue"
		},
		"517": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "EnumValue.type"
		},
		"518": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "EnumValue.kind"
		},
		"519": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "EnumValue.value"
		},
		"520": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type"
		},
		"521": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.name"
		},
		"522": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.numericAsBN"
		},
		"523": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "EnumValue.interpretations"
		},
		"524": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"525": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "UserDefinedValueTypeValue"
		},
		"526": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "UserDefinedValueTypeValue.type"
		},
		"527": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "UserDefinedValueTypeValue.kind"
		},
		"528": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "UserDefinedValueTypeValue.value"
		},
		"529": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "UserDefinedValueTypeValue.interpretations"
		},
		"530": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"531": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "ContractValue"
		},
		"532": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "ContractValue.type"
		},
		"533": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "ContractValue.kind"
		},
		"534": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "ContractValue.value"
		},
		"535": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "ContractValue.interpretations"
		},
		"536": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type"
		},
		"537": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "__type.ensName"
		},
		"538": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "ContractValueInfo"
		},
		"539": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "ContractValueInfoKnown"
		},
		"540": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "ContractValueInfoKnown.kind"
		},
		"541": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "ContractValueInfoKnown.address"
		},
		"542": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "ContractValueInfoKnown.rawAddress"
		},
		"543": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "ContractValueInfoKnown.class"
		},
		"544": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "ContractValueInfoUnknown"
		},
		"545": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "ContractValueInfoUnknown.kind"
		},
		"546": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "ContractValueInfoUnknown.address"
		},
		"547": {
			"sourceFileName": "lib/format/elementary.ts",
			"qualifiedName": "ContractValueInfoUnknown.rawAddress"
		},
		"548": {
			"sourceFileName": "lib/format/internal.ts",
			"qualifiedName": "FunctionInternalRawInfo"
		},
		"549": {
			"sourceFileName": "lib/format/internal.ts",
			"qualifiedName": "FunctionInternalRawInfoPcPair"
		},
		"550": {
			"sourceFileName": "lib/format/internal.ts",
			"qualifiedName": "FunctionInternalRawInfoPcPair.kind"
		},
		"551": {
			"sourceFileName": "lib/format/internal.ts",
			"qualifiedName": "FunctionInternalRawInfoPcPair.deployedProgramCounter"
		},
		"552": {
			"sourceFileName": "lib/format/internal.ts",
			"qualifiedName": "FunctionInternalRawInfoPcPair.constructorProgramCounter"
		},
		"553": {
			"sourceFileName": "lib/format/internal.ts",
			"qualifiedName": "FunctionInternalRawInfoIndex"
		},
		"554": {
			"sourceFileName": "lib/format/internal.ts",
			"qualifiedName": "FunctionInternalRawInfoIndex.kind"
		},
		"555": {
			"sourceFileName": "lib/format/internal.ts",
			"qualifiedName": "FunctionInternalRawInfoIndex.functionIndex"
		},
		"556": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": ""
		},
		"557": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ErrorResult"
		},
		"558": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "AbiErrorResult"
		},
		"559": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "DecoderError"
		},
		"560": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ElementaryErrorResult"
		},
		"561": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BuiltInValueErrorResult"
		},
		"562": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BytesErrorResult"
		},
		"563": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UintErrorResult"
		},
		"564": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UintErrorResult.type"
		},
		"565": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UintErrorResult.kind"
		},
		"566": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UintErrorResult.error"
		},
		"567": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UintError"
		},
		"568": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UintPaddingError"
		},
		"569": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UintPaddingError.raw"
		},
		"570": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UintPaddingError.kind"
		},
		"571": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UintPaddingError.paddingType"
		},
		"572": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "IntErrorResult"
		},
		"573": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "IntErrorResult.type"
		},
		"574": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "IntErrorResult.kind"
		},
		"575": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "IntErrorResult.error"
		},
		"576": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "IntError"
		},
		"577": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "IntPaddingError"
		},
		"578": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "IntPaddingError.raw"
		},
		"579": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "IntPaddingError.kind"
		},
		"580": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "IntPaddingError.paddingType"
		},
		"581": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BoolErrorResult"
		},
		"582": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BoolErrorResult.type"
		},
		"583": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BoolErrorResult.kind"
		},
		"584": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BoolErrorResult.error"
		},
		"585": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BoolError"
		},
		"586": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BoolOutOfRangeError"
		},
		"587": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BoolOutOfRangeError.rawAsBN"
		},
		"588": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BoolOutOfRangeError.kind"
		},
		"589": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BoolPaddingError"
		},
		"590": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BoolPaddingError.raw"
		},
		"591": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BoolPaddingError.kind"
		},
		"592": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BoolPaddingError.paddingType"
		},
		"593": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BytesStaticErrorResult"
		},
		"594": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BytesStaticErrorResult.type"
		},
		"595": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BytesStaticErrorResult.kind"
		},
		"596": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BytesStaticErrorResult.error"
		},
		"597": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BytesStaticError"
		},
		"598": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BytesPaddingError"
		},
		"599": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BytesPaddingError.raw"
		},
		"600": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BytesPaddingError.kind"
		},
		"601": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BytesPaddingError.paddingType"
		},
		"602": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BytesDynamicErrorResult"
		},
		"603": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BytesDynamicErrorResult.type"
		},
		"604": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BytesDynamicErrorResult.kind"
		},
		"605": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BytesDynamicErrorResult.error"
		},
		"606": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BytesDynamicError"
		},
		"607": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "AddressErrorResult"
		},
		"608": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "AddressErrorResult.type"
		},
		"609": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "AddressErrorResult.kind"
		},
		"610": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "AddressErrorResult.error"
		},
		"611": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "AddressError"
		},
		"612": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "AddressPaddingError"
		},
		"613": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "AddressPaddingError.raw"
		},
		"614": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "AddressPaddingError.kind"
		},
		"615": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "AddressPaddingError.paddingType"
		},
		"616": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "StringErrorResult"
		},
		"617": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "StringErrorResult.type"
		},
		"618": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "StringErrorResult.kind"
		},
		"619": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "StringErrorResult.error"
		},
		"620": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "StringError"
		},
		"621": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FixedErrorResult"
		},
		"622": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FixedErrorResult.type"
		},
		"623": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FixedErrorResult.kind"
		},
		"624": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FixedErrorResult.error"
		},
		"625": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UfixedErrorResult"
		},
		"626": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UfixedErrorResult.type"
		},
		"627": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UfixedErrorResult.kind"
		},
		"628": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UfixedErrorResult.error"
		},
		"629": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FixedError"
		},
		"630": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FixedPaddingError"
		},
		"631": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FixedPaddingError.raw"
		},
		"632": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FixedPaddingError.kind"
		},
		"633": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FixedPaddingError.paddingType"
		},
		"634": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UfixedError"
		},
		"635": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UfixedPaddingError"
		},
		"636": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UfixedPaddingError.raw"
		},
		"637": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UfixedPaddingError.kind"
		},
		"638": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UfixedPaddingError.paddingType"
		},
		"639": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumErrorResult"
		},
		"640": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumErrorResult.type"
		},
		"641": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumErrorResult.kind"
		},
		"642": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumErrorResult.error"
		},
		"643": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumError"
		},
		"644": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumOutOfRangeError"
		},
		"645": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumOutOfRangeError.kind"
		},
		"646": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumOutOfRangeError.type"
		},
		"647": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumOutOfRangeError.rawAsBN"
		},
		"648": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumPaddingError"
		},
		"649": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumPaddingError.raw"
		},
		"650": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumPaddingError.type"
		},
		"651": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumPaddingError.kind"
		},
		"652": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumPaddingError.paddingType"
		},
		"653": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumNotFoundDecodingError"
		},
		"654": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumNotFoundDecodingError.kind"
		},
		"655": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumNotFoundDecodingError.type"
		},
		"656": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "EnumNotFoundDecodingError.rawAsBN"
		},
		"657": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UserDefinedValueTypeErrorResult"
		},
		"658": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UserDefinedValueTypeErrorResult.type"
		},
		"659": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UserDefinedValueTypeErrorResult.kind"
		},
		"660": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UserDefinedValueTypeErrorResult.error"
		},
		"661": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UserDefinedValueTypeError"
		},
		"662": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "WrappedError"
		},
		"663": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "WrappedError.kind"
		},
		"664": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "WrappedError.error"
		},
		"665": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ContractErrorResult"
		},
		"666": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ContractErrorResult.type"
		},
		"667": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ContractErrorResult.kind"
		},
		"668": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ContractErrorResult.error"
		},
		"669": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ContractError"
		},
		"670": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ContractPaddingError"
		},
		"671": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ContractPaddingError.raw"
		},
		"672": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ContractPaddingError.kind"
		},
		"673": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ContractPaddingError.paddingType"
		},
		"674": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ArrayErrorResult"
		},
		"675": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ArrayErrorResult.type"
		},
		"676": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ArrayErrorResult.kind"
		},
		"677": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ArrayErrorResult.error"
		},
		"678": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ArrayError"
		},
		"679": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "MappingErrorResult"
		},
		"680": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "MappingErrorResult.type"
		},
		"681": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "MappingErrorResult.kind"
		},
		"682": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "MappingErrorResult.error"
		},
		"683": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "MappingError"
		},
		"684": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "StructErrorResult"
		},
		"685": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "StructErrorResult.type"
		},
		"686": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "StructErrorResult.kind"
		},
		"687": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "StructErrorResult.error"
		},
		"688": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "StructError"
		},
		"689": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "TupleErrorResult"
		},
		"690": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "TupleErrorResult.type"
		},
		"691": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "TupleErrorResult.kind"
		},
		"692": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "TupleErrorResult.error"
		},
		"693": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "TupleError"
		},
		"694": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "MagicErrorResult"
		},
		"695": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "MagicErrorResult.type"
		},
		"696": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "MagicErrorResult.kind"
		},
		"697": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "MagicErrorResult.error"
		},
		"698": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "MagicError"
		},
		"699": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "TypeErrorResult"
		},
		"700": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "TypeErrorResult.type"
		},
		"701": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "TypeErrorResult.kind"
		},
		"702": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "TypeErrorResult.error"
		},
		"703": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "TypeErrorUnion"
		},
		"704": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionExternalErrorResult"
		},
		"705": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionExternalErrorResult.type"
		},
		"706": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionExternalErrorResult.kind"
		},
		"707": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionExternalErrorResult.error"
		},
		"708": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionExternalError"
		},
		"709": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionExternalNonStackPaddingError"
		},
		"710": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionExternalNonStackPaddingError.raw"
		},
		"711": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionExternalNonStackPaddingError.kind"
		},
		"712": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionExternalNonStackPaddingError.paddingType"
		},
		"713": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionExternalStackPaddingError"
		},
		"714": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionExternalStackPaddingError.rawAddress"
		},
		"715": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionExternalStackPaddingError.rawSelector"
		},
		"716": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionExternalStackPaddingError.kind"
		},
		"717": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionInternalErrorResult"
		},
		"718": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionInternalErrorResult.type"
		},
		"719": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionInternalErrorResult.kind"
		},
		"720": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionInternalErrorResult.error"
		},
		"721": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionInternalError"
		},
		"722": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionInternalPaddingError"
		},
		"723": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionInternalPaddingError.raw"
		},
		"724": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionInternalPaddingError.kind"
		},
		"725": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "FunctionInternalPaddingError.paddingType"
		},
		"726": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "NoSuchInternalFunctionError"
		},
		"727": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "NoSuchInternalFunctionError.kind"
		},
		"728": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "NoSuchInternalFunctionError.context"
		},
		"729": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "NoSuchInternalFunctionError.rawInformation"
		},
		"730": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "DeployedFunctionInConstructorError"
		},
		"731": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "DeployedFunctionInConstructorError.kind"
		},
		"732": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "DeployedFunctionInConstructorError.context"
		},
		"733": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "DeployedFunctionInConstructorError.rawInformation"
		},
		"734": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "MalformedInternalFunctionError"
		},
		"735": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "MalformedInternalFunctionError.kind"
		},
		"736": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "MalformedInternalFunctionError.context"
		},
		"737": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "MalformedInternalFunctionError.rawInformation"
		},
		"738": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "OptionsErrorResult"
		},
		"739": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "OptionsErrorResult.type"
		},
		"740": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "OptionsErrorResult.kind"
		},
		"741": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "OptionsErrorResult.error"
		},
		"742": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "OptionsError"
		},
		"743": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "GenericError"
		},
		"744": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReadError"
		},
		"745": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "DynamicDataImplementationError"
		},
		"746": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ErrorForThrowing"
		},
		"747": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "IndexedReferenceTypeError"
		},
		"748": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "IndexedReferenceTypeError.kind"
		},
		"749": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "IndexedReferenceTypeError.type"
		},
		"750": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "IndexedReferenceTypeError.raw"
		},
		"751": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UserDefinedTypeNotFoundError"
		},
		"752": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UserDefinedTypeNotFoundError.kind"
		},
		"753": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UserDefinedTypeNotFoundError.type"
		},
		"754": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UnsupportedConstantError"
		},
		"755": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UnsupportedConstantError.kind"
		},
		"756": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UnsupportedConstantError.definition"
		},
		"757": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReadErrorStack"
		},
		"758": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReadErrorStack.kind"
		},
		"759": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReadErrorStack.from"
		},
		"760": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReadErrorStack.to"
		},
		"761": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "BytesLocation"
		},
		"762": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReadErrorBytes"
		},
		"763": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReadErrorBytes.kind"
		},
		"764": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReadErrorBytes.location"
		},
		"765": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReadErrorBytes.start"
		},
		"766": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReadErrorBytes.length"
		},
		"767": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReadErrorStorage"
		},
		"768": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReadErrorStorage.kind"
		},
		"769": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReadErrorStorage.range"
		},
		"770": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "StorageNotSuppliedError"
		},
		"771": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "StorageNotSuppliedError.kind"
		},
		"772": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "StorageNotSuppliedError.slot"
		},
		"773": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UnusedImmutableError"
		},
		"774": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "UnusedImmutableError.kind"
		},
		"775": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "CodeNotSuppliedError"
		},
		"776": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "CodeNotSuppliedError.kind"
		},
		"777": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "CodeNotSuppliedError.address"
		},
		"778": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "OverlongArraysAndStringsNotImplementedError"
		},
		"779": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "OverlongArraysAndStringsNotImplementedError.kind"
		},
		"780": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "OverlongArraysAndStringsNotImplementedError.lengthAsBN"
		},
		"781": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "OverlongArraysAndStringsNotImplementedError.dataLength"
		},
		"782": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "OverlargePointersNotImplementedError"
		},
		"783": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "OverlargePointersNotImplementedError.kind"
		},
		"784": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "OverlargePointersNotImplementedError.pointerAsBN"
		},
		"785": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "InternalUseError"
		},
		"786": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "OverlongArrayOrStringStrictModeError"
		},
		"787": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "OverlongArrayOrStringStrictModeError.kind"
		},
		"788": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "OverlongArrayOrStringStrictModeError.lengthAsBN"
		},
		"789": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "OverlongArrayOrStringStrictModeError.dataLength"
		},
		"790": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "InternalFunctionInABIError"
		},
		"791": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "InternalFunctionInABIError.kind"
		},
		"792": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReEncodingMismatchError"
		},
		"793": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReEncodingMismatchError.kind"
		},
		"794": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReEncodingMismatchError.data"
		},
		"795": {
			"sourceFileName": "lib/format/errors.ts",
			"qualifiedName": "ReEncodingMismatchError.reEncodedData"
		},
		"796": {
			"sourceFileName": "lib/format/utils/index.ts",
			"qualifiedName": ""
		},
		"797": {
			"sourceFileName": "lib/format/utils/exception.ts",
			"qualifiedName": ""
		},
		"798": {
			"sourceFileName": "lib/format/utils/exception.ts",
			"qualifiedName": "message"
		},
		"799": {
			"sourceFileName": "lib/format/utils/exception.ts",
			"qualifiedName": "message"
		},
		"800": {
			"sourceFileName": "lib/format/utils/exception.ts",
			"qualifiedName": "error"
		},
		"801": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": ""
		},
		"802": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "unsafeNativizeVariables"
		},
		"803": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "unsafeNativizeVariables"
		},
		"804": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "variables"
		},
		"805": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "__type"
		},
		"806": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "__type.__index"
		},
		"808": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "__type"
		},
		"809": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "__type.__index"
		},
		"811": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "unsafeNativize"
		},
		"812": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "unsafeNativize"
		},
		"813": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "result"
		},
		"814": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "nativizeAccessList"
		},
		"815": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "nativizeAccessList"
		},
		"816": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "wrappedAccessList"
		},
		"817": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "stringValueInfoToStringLossy"
		},
		"818": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "stringValueInfoToStringLossy"
		},
		"819": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "info"
		},
		"820": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "InspectOptions"
		},
		"821": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "InspectOptions.stylize"
		},
		"822": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "__type"
		},
		"823": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "__type"
		},
		"824": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "toMaybeColor"
		},
		"825": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "style"
		},
		"826": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "InspectOptions.colors"
		},
		"827": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "InspectOptions.breakLength"
		},
		"828": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "ResultInspectorOptions"
		},
		"829": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "ResultInspectorOptions.noHideAddress"
		},
		"830": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "ResultInspectorOptions.renderMappingsViaObjects"
		},
		"831": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "ResultInspector"
		},
		"832": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "ResultInspector.__constructor"
		},
		"833": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "ResultInspector"
		},
		"834": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "result"
		},
		"835": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "options"
		},
		"836": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "ResultInspector.result"
		},
		"837": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "ResultInspector.options"
		},
		"838": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "ResultInspector.inspect"
		},
		"839": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "ResultInspector.inspect"
		},
		"840": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "depth"
		},
		"841": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "options"
		},
		"842": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "ResultInspector.[custom]"
		},
		"843": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "ResultInspector.[custom]"
		},
		"844": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "depth"
		},
		"845": {
			"sourceFileName": "lib/format/utils/inspect.ts",
			"qualifiedName": "options"
		},
		"846": {
			"sourceFileName": "lib/format/utils/circularity.ts",
			"qualifiedName": ""
		},
		"847": {
			"sourceFileName": "lib/format/utils/circularity.ts",
			"qualifiedName": "tie"
		},
		"848": {
			"sourceFileName": "lib/format/utils/circularity.ts",
			"qualifiedName": "tie"
		},
		"849": {
			"sourceFileName": "lib/format/utils/circularity.ts",
			"qualifiedName": "untied"
		},
		"850": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "decodeVariable"
		},
		"851": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "decodeVariable"
		},
		"852": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "definition"
		},
		"853": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "pointer"
		},
		"854": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "info"
		},
		"855": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "compilationId"
		},
		"856": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "decodeEvent"
		},
		"857": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "decodeEvent"
		},
		"858": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "info"
		},
		"859": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "address"
		},
		"860": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "options"
		},
		"861": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "decodeCalldata"
		},
		"862": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "decodeCalldata"
		},
		"863": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "info"
		},
		"864": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "isConstructor"
		},
		"865": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "strictAbiMode"
		},
		"866": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "decodeReturndata"
		},
		"867": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "decodeReturndata"
		},
		"868": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "info"
		},
		"869": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "successAllocation"
		},
		"870": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "status"
		},
		"871": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "id"
		},
		"872": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "decodeRevert"
		},
		"873": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "decodeRevert"
		},
		"874": {
			"sourceFileName": "lib/core.ts",
			"qualifiedName": "returndata"
		},
		"887": {
			"sourceFileName": "lib/errors.ts",
			"qualifiedName": "NoProjectInfoError"
		},
		"888": {
			"sourceFileName": "lib/errors.ts",
			"qualifiedName": "NoProjectInfoError.__constructor"
		},
		"889": {
			"sourceFileName": "lib/errors.ts",
			"qualifiedName": "NoProjectInfoError"
		},
		"890": {
			"sourceFileName": "lib/errors.ts",
			"qualifiedName": "RepeatCompilationIdError"
		},
		"891": {
			"sourceFileName": "lib/errors.ts",
			"qualifiedName": "RepeatCompilationIdError.__constructor"
		},
		"892": {
			"sourceFileName": "lib/errors.ts",
			"qualifiedName": "RepeatCompilationIdError"
		},
		"893": {
			"sourceFileName": "lib/errors.ts",
			"qualifiedName": "ids"
		},
		"894": {
			"sourceFileName": "lib/errors.ts",
			"qualifiedName": "RepeatCompilationIdError.ids"
		},
		"895": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "DecodingMode"
		},
		"896": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "CalldataDecoding"
		},
		"897": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "LogDecoding"
		},
		"898": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "ReturndataDecoding"
		},
		"899": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "FunctionDecoding"
		},
		"900": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "FunctionDecoding.kind"
		},
		"901": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "FunctionDecoding.class"
		},
		"902": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "FunctionDecoding.arguments"
		},
		"903": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "FunctionDecoding.abi"
		},
		"904": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "FunctionDecoding.selector"
		},
		"905": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "FunctionDecoding.decodingMode"
		},
		"906": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "FunctionDecoding.interpretations"
		},
		"907": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "__type"
		},
		"908": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "__type.multicall"
		},
		"909": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "__type.aggregate"
		},
		"910": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "__type.tryAggregate"
		},
		"911": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "__type.deadlinedMulticall"
		},
		"912": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "__type.specifiedBlockhashMulticall"
		},
		"913": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "ConstructorDecoding"
		},
		"914": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "ConstructorDecoding.kind"
		},
		"915": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "ConstructorDecoding.class"
		},
		"916": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "ConstructorDecoding.arguments"
		},
		"917": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "ConstructorDecoding.abi"
		},
		"918": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "ConstructorDecoding.bytecode"
		},
		"919": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "ConstructorDecoding.decodingMode"
		},
		"920": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "ConstructorDecoding.interpretations"
		},
		"921": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"922": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "MessageDecoding"
		},
		"923": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "MessageDecoding.kind"
		},
		"924": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "MessageDecoding.class"
		},
		"925": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "MessageDecoding.abi"
		},
		"926": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "MessageDecoding.data"
		},
		"927": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "MessageDecoding.decodingMode"
		},
		"928": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "MessageDecoding.interpretations"
		},
		"929": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "__type"
		},
		"930": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "__type.selectorBasedDecodings"
		},
		"931": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "UnknownCallDecoding"
		},
		"932": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "UnknownCallDecoding.kind"
		},
		"933": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "UnknownCallDecoding.decodingMode"
		},
		"934": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "UnknownCallDecoding.data"
		},
		"935": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "UnknownCallDecoding.interpretations"
		},
		"936": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "__type"
		},
		"937": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "__type.selectorBasedDecodings"
		},
		"938": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "UnknownCreationDecoding"
		},
		"939": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "UnknownCreationDecoding.kind"
		},
		"940": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "UnknownCreationDecoding.decodingMode"
		},
		"941": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "UnknownCreationDecoding.bytecode"
		},
		"942": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "UnknownCreationDecoding.interpretations"
		},
		"943": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"944": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "EventDecoding"
		},
		"945": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "EventDecoding.kind"
		},
		"946": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "EventDecoding.class"
		},
		"947": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "EventDecoding.definedIn"
		},
		"948": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "EventDecoding.arguments"
		},
		"949": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "EventDecoding.abi"
		},
		"950": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "EventDecoding.selector"
		},
		"951": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "EventDecoding.decodingMode"
		},
		"952": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "EventDecoding.interpretations"
		},
		"953": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"954": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AnonymousDecoding"
		},
		"955": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AnonymousDecoding.kind"
		},
		"956": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AnonymousDecoding.class"
		},
		"957": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AnonymousDecoding.definedIn"
		},
		"958": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AnonymousDecoding.arguments"
		},
		"959": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AnonymousDecoding.abi"
		},
		"960": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AnonymousDecoding.decodingMode"
		},
		"961": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AnonymousDecoding.interpretations"
		},
		"962": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"963": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "ReturnDecoding"
		},
		"964": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "ReturnDecoding.kind"
		},
		"965": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "ReturnDecoding.status"
		},
		"966": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "ReturnDecoding.arguments"
		},
		"967": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "ReturnDecoding.decodingMode"
		},
		"968": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "ReturnDecoding.interpretations"
		},
		"969": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"970": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "RawReturnDecoding"
		},
		"971": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "RawReturnDecoding.kind"
		},
		"972": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "RawReturnDecoding.status"
		},
		"973": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "RawReturnDecoding.data"
		},
		"974": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "RawReturnDecoding.decodingMode"
		},
		"975": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "RawReturnDecoding.interpretations"
		},
		"976": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"977": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "BytecodeDecoding"
		},
		"978": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "BytecodeDecoding.kind"
		},
		"979": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "BytecodeDecoding.status"
		},
		"980": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "BytecodeDecoding.decodingMode"
		},
		"981": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "BytecodeDecoding.class"
		},
		"982": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "BytecodeDecoding.immutables"
		},
		"983": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "BytecodeDecoding.bytecode"
		},
		"984": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "BytecodeDecoding.address"
		},
		"985": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "BytecodeDecoding.interpretations"
		},
		"986": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"987": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "UnknownBytecodeDecoding"
		},
		"988": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "UnknownBytecodeDecoding.kind"
		},
		"989": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "UnknownBytecodeDecoding.status"
		},
		"990": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "UnknownBytecodeDecoding.decodingMode"
		},
		"991": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "UnknownBytecodeDecoding.bytecode"
		},
		"992": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "UnknownBytecodeDecoding.interpretations"
		},
		"993": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"994": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "SelfDestructDecoding"
		},
		"995": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "SelfDestructDecoding.kind"
		},
		"996": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "SelfDestructDecoding.status"
		},
		"997": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "SelfDestructDecoding.decodingMode"
		},
		"998": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "SelfDestructDecoding.interpretations"
		},
		"999": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"1000": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "RevertMessageDecoding"
		},
		"1001": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "RevertMessageDecoding.kind"
		},
		"1002": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "RevertMessageDecoding.abi"
		},
		"1003": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "RevertMessageDecoding.definedIn"
		},
		"1004": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "RevertMessageDecoding.status"
		},
		"1005": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "RevertMessageDecoding.arguments"
		},
		"1006": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "RevertMessageDecoding.decodingMode"
		},
		"1007": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "RevertMessageDecoding.interpretations"
		},
		"1008": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"1009": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "EmptyFailureDecoding"
		},
		"1010": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "EmptyFailureDecoding.kind"
		},
		"1011": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "EmptyFailureDecoding.status"
		},
		"1012": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "EmptyFailureDecoding.decodingMode"
		},
		"1013": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "EmptyFailureDecoding.interpretations"
		},
		"1014": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"1015": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AbiArgument"
		},
		"1016": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AbiArgument.name"
		},
		"1017": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AbiArgument.indexed"
		},
		"1018": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AbiArgument.value"
		},
		"1019": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "StateVariable"
		},
		"1020": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "StateVariable.name"
		},
		"1021": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "StateVariable.class"
		},
		"1022": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "StateVariable.value"
		},
		"1023": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "DecoderRequest"
		},
		"1024": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "StorageRequest"
		},
		"1025": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "StorageRequest.type"
		},
		"1026": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "StorageRequest.slot"
		},
		"1027": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "CodeRequest"
		},
		"1028": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "CodeRequest.type"
		},
		"1029": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "CodeRequest.address"
		},
		"1030": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "LogOptions"
		},
		"1031": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "LogOptions.name"
		},
		"1032": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "LogOptions.extras"
		},
		"1033": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "LogOptions.id"
		},
		"1034": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "LogOptions.disableChecks"
		},
		"1035": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "ExtrasAllowed"
		},
		"1036": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "WrapRequest"
		},
		"1037": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "IntegerWrapRequest"
		},
		"1038": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "IntegerWrapRequest.kind"
		},
		"1039": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "IntegerWrapRequest.input"
		},
		"1040": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "DecimalWrapRequest"
		},
		"1041": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "DecimalWrapRequest.kind"
		},
		"1042": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "DecimalWrapRequest.input"
		},
		"1043": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AddressWrapRequest"
		},
		"1044": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AddressWrapRequest.kind"
		},
		"1045": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AddressWrapRequest.name"
		},
		"1046": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "WrapResponse"
		},
		"1047": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "IntegerWrapResponse"
		},
		"1048": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "IntegerWrapResponse.kind"
		},
		"1049": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "IntegerWrapResponse.value"
		},
		"1050": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "IntegerWrapResponse.reason"
		},
		"1051": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "IntegerWrapResponse.partiallyRecognized"
		},
		"1052": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "DecimalWrapResponse"
		},
		"1053": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "DecimalWrapResponse.kind"
		},
		"1054": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "DecimalWrapResponse.value"
		},
		"1055": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "DecimalWrapResponse.reason"
		},
		"1056": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "DecimalWrapResponse.partiallyRecognized"
		},
		"1057": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AddressWrapResponse"
		},
		"1058": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AddressWrapResponse.kind"
		},
		"1059": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AddressWrapResponse.address"
		},
		"1060": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AddressWrapResponse.reason"
		},
		"1061": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "AddressWrapResponse.partiallyRecognized"
		},
		"1062": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "BlockSpecifier"
		},
		"1064": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "CallInterpretationInfo"
		},
		"1065": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "CallInterpretationInfo.address"
		},
		"1066": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "CallInterpretationInfo.decoding"
		},
		"1067": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "CallInterpretationInfo.allowFailure"
		},
		"1068": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "CallInterpretationInfo.value"
		},
		"1069": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "TryAggregateInfo"
		},
		"1070": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "TryAggregateInfo.requireSuccess"
		},
		"1071": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "TryAggregateInfo.calls"
		},
		"1072": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "DeadlinedMulticallInfo"
		},
		"1073": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "DeadlinedMulticallInfo.deadline"
		},
		"1074": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "DeadlinedMulticallInfo.calls"
		},
		"1075": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "BlockhashedMulticallInfo"
		},
		"1076": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "BlockhashedMulticallInfo.specifiedBlockhash"
		},
		"1077": {
			"sourceFileName": "lib/types.ts",
			"qualifiedName": "BlockhashedMulticallInfo.calls"
		},
		"1078": {
			"sourceFileName": "lib/abify.ts",
			"qualifiedName": "abifyCalldataDecoding"
		},
		"1079": {
			"sourceFileName": "lib/abify.ts",
			"qualifiedName": "abifyCalldataDecoding"
		},
		"1080": {
			"sourceFileName": "lib/abify.ts",
			"qualifiedName": "decoding"
		},
		"1081": {
			"sourceFileName": "lib/abify.ts",
			"qualifiedName": "userDefinedTypes"
		},
		"1082": {
			"sourceFileName": "lib/abify.ts",
			"qualifiedName": "abifyLogDecoding"
		},
		"1083": {
			"sourceFileName": "lib/abify.ts",
			"qualifiedName": "abifyLogDecoding"
		},
		"1084": {
			"sourceFileName": "lib/abify.ts",
			"qualifiedName": "decoding"
		},
		"1085": {
			"sourceFileName": "lib/abify.ts",
			"qualifiedName": "userDefinedTypes"
		},
		"1086": {
			"sourceFileName": "lib/abify.ts",
			"qualifiedName": "abifyReturndataDecoding"
		},
		"1087": {
			"sourceFileName": "lib/abify.ts",
			"qualifiedName": "abifyReturndataDecoding"
		},
		"1088": {
			"sourceFileName": "lib/abify.ts",
			"qualifiedName": "decoding"
		},
		"1089": {
			"sourceFileName": "lib/abify.ts",
			"qualifiedName": "userDefinedTypes"
		},
		"1090": {
			"sourceFileName": "lib/basic/index.ts",
			"qualifiedName": ""
		},
		"1091": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": ""
		},
		"1092": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "decodeBasic"
		},
		"1093": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "decodeBasic"
		},
		"1094": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "dataType"
		},
		"1095": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "pointer"
		},
		"1096": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "info"
		},
		"1097": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "options"
		},
		"1098": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "decodeContract"
		},
		"1099": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "decodeContract"
		},
		"1100": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "addressBytes"
		},
		"1101": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "info"
		},
		"1102": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "decodeExternalFunction"
		},
		"1103": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "decodeExternalFunction"
		},
		"1104": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "addressBytes"
		},
		"1105": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "selectorBytes"
		},
		"1106": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "info"
		},
		"1107": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "checkPaddingLeft"
		},
		"1108": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "checkPaddingLeft"
		},
		"1109": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "bytes"
		},
		"1110": {
			"sourceFileName": "lib/basic/decode/index.ts",
			"qualifiedName": "length"
		},
		"1114": {
			"sourceFileName": "lib/basic/encode/index.ts",
			"qualifiedName": ""
		},
		"1115": {
			"sourceFileName": "lib/basic/encode/index.ts",
			"qualifiedName": "encodeBasic"
		},
		"1116": {
			"sourceFileName": "lib/basic/encode/index.ts",
			"qualifiedName": "encodeBasic"
		},
		"1117": {
			"sourceFileName": "lib/basic/encode/index.ts",
			"qualifiedName": "input"
		},
		"1118": {
			"sourceFileName": "lib/basic/allocate/index.ts",
			"qualifiedName": ""
		},
		"1119": {
			"sourceFileName": "lib/basic/allocate/index.ts",
			"qualifiedName": "byteLength"
		},
		"1120": {
			"sourceFileName": "lib/basic/allocate/index.ts",
			"qualifiedName": "byteLength"
		},
		"1121": {
			"sourceFileName": "lib/basic/allocate/index.ts",
			"qualifiedName": "dataType"
		},
		"1122": {
			"sourceFileName": "lib/basic/allocate/index.ts",
			"qualifiedName": "userDefinedTypes"
		},
		"1123": {
			"sourceFileName": "lib/bytes/index.ts",
			"qualifiedName": ""
		},
		"1124": {
			"sourceFileName": "lib/bytes/read/index.ts",
			"qualifiedName": ""
		},
		"1125": {
			"sourceFileName": "lib/bytes/read/index.ts",
			"qualifiedName": "readCode"
		},
		"1126": {
			"sourceFileName": "lib/bytes/read/index.ts",
			"qualifiedName": "readCode"
		},
		"1127": {
			"sourceFileName": "lib/bytes/read/index.ts",
			"qualifiedName": "pointer"
		},
		"1128": {
			"sourceFileName": "lib/bytes/read/index.ts",
			"qualifiedName": "state"
		},
		"1129": {
			"sourceFileName": "lib/bytes/read/index.ts",
			"qualifiedName": "readBytes"
		},
		"1130": {
			"sourceFileName": "lib/bytes/read/index.ts",
			"qualifiedName": "readBytes"
		},
		"1131": {
			"sourceFileName": "lib/bytes/read/index.ts",
			"qualifiedName": "pointer"
		},
		"1132": {
			"sourceFileName": "lib/bytes/read/index.ts",
			"qualifiedName": "state"
		},
		"1133": {
			"sourceFileName": "lib/bytes/decode/index.ts",
			"qualifiedName": ""
		},
		"1134": {
			"sourceFileName": "lib/bytes/decode/index.ts",
			"qualifiedName": "decodeBytes"
		},
		"1135": {
			"sourceFileName": "lib/bytes/decode/index.ts",
			"qualifiedName": "decodeBytes"
		},
		"1136": {
			"sourceFileName": "lib/bytes/decode/index.ts",
			"qualifiedName": "dataType"
		},
		"1137": {
			"sourceFileName": "lib/bytes/decode/index.ts",
			"qualifiedName": "pointer"
		},
		"1138": {
			"sourceFileName": "lib/bytes/decode/index.ts",
			"qualifiedName": "info"
		},
		"1139": {
			"sourceFileName": "lib/bytes/decode/index.ts",
			"qualifiedName": "options"
		},
		"1140": {
			"sourceFileName": "lib/bytes/decode/index.ts",
			"qualifiedName": "decodeString"
		},
		"1141": {
			"sourceFileName": "lib/bytes/decode/index.ts",
			"qualifiedName": "decodeString"
		},
		"1142": {
			"sourceFileName": "lib/bytes/decode/index.ts",
			"qualifiedName": "bytes"
		},
		"1143": {
			"sourceFileName": "lib/bytes/encode/index.ts",
			"qualifiedName": ""
		},
		"1144": {
			"sourceFileName": "lib/bytes/encode/index.ts",
			"qualifiedName": "encodeBytes"
		},
		"1145": {
			"sourceFileName": "lib/bytes/encode/index.ts",
			"qualifiedName": "encodeBytes"
		},
		"1146": {
			"sourceFileName": "lib/bytes/encode/index.ts",
			"qualifiedName": "input"
		},
		"1147": {
			"sourceFileName": "lib/abi-data/index.ts",
			"qualifiedName": ""
		},
		"1148": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": ""
		},
		"1149": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "getAbiAllocations"
		},
		"1150": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "getAbiAllocations"
		},
		"1151": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "userDefinedTypes"
		},
		"1152": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "abiSizeInfo"
		},
		"1153": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "abiSizeInfo"
		},
		"1154": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "dataType"
		},
		"1155": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "allocations"
		},
		"1156": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "getCalldataAllocations"
		},
		"1157": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "getCalldataAllocations"
		},
		"1158": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "contracts"
		},
		"1159": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "referenceDeclarations"
		},
		"1160": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "__type"
		},
		"1161": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "__type.__index"
		},
		"1163": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "userDefinedTypes"
		},
		"1164": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "abiAllocations"
		},
		"1165": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "getReturndataAllocations"
		},
		"1166": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "getReturndataAllocations"
		},
		"1167": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "contracts"
		},
		"1168": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "referenceDeclarations"
		},
		"1169": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "__type"
		},
		"1170": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "__type.__index"
		},
		"1172": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "userDefinedTypes"
		},
		"1173": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "abiAllocations"
		},
		"1174": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "getEventAllocations"
		},
		"1175": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "getEventAllocations"
		},
		"1176": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "contracts"
		},
		"1177": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "referenceDeclarations"
		},
		"1178": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "__type"
		},
		"1179": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "__type.__index"
		},
		"1181": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "userDefinedTypes"
		},
		"1182": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "abiAllocations"
		},
		"1183": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "allowConstructorEvents"
		},
		"1184": {
			"sourceFileName": "lib/abi-data/allocate/utils.ts",
			"qualifiedName": ""
		},
		"1185": {
			"sourceFileName": "lib/abi-data/allocate/utils.ts",
			"qualifiedName": "collectAllocationInfo"
		},
		"1186": {
			"sourceFileName": "lib/abi-data/allocate/utils.ts",
			"qualifiedName": "collectAllocationInfo"
		},
		"1187": {
			"sourceFileName": "lib/abi-data/allocate/utils.ts",
			"qualifiedName": "compilations"
		},
		"1188": {
			"sourceFileName": "lib/abi-data/allocate/utils.ts",
			"qualifiedName": "ContextAndAllocationInfo"
		},
		"1189": {
			"sourceFileName": "lib/abi-data/allocate/utils.ts",
			"qualifiedName": "ContextAndAllocationInfo.contexts"
		},
		"1190": {
			"sourceFileName": "lib/abi-data/allocate/utils.ts",
			"qualifiedName": "ContextAndAllocationInfo.deployedContexts"
		},
		"1191": {
			"sourceFileName": "lib/abi-data/allocate/utils.ts",
			"qualifiedName": "ContextAndAllocationInfo.contractsAndContexts"
		},
		"1192": {
			"sourceFileName": "lib/abi-data/allocate/utils.ts",
			"qualifiedName": "ContextAndAllocationInfo.allocationInfo"
		},
		"1193": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "AbiAllocations"
		},
		"1194": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "AbiAllocations.__index"
		},
		"1196": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "AbiSizeInfo"
		},
		"1197": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "AbiSizeInfo.size"
		},
		"1198": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "AbiSizeInfo.dynamic"
		},
		"1199": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "CalldataAllocation"
		},
		"1200": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "CalldataAllocation.abi"
		},
		"1201": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "CalldataAllocation.offset"
		},
		"1202": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "CalldataAllocation.arguments"
		},
		"1203": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "CalldataAllocation.allocationMode"
		},
		"1204": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ReturndataAllocation"
		},
		"1205": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ReturnValueReturndataAllocation"
		},
		"1206": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ReturnValueReturndataAllocation.kind"
		},
		"1207": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ReturnValueReturndataAllocation.selector"
		},
		"1208": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ReturnValueReturndataAllocation.arguments"
		},
		"1209": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ReturnValueReturndataAllocation.allocationMode"
		},
		"1210": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "RevertReturndataAllocation"
		},
		"1211": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "RevertReturndataAllocation.kind"
		},
		"1212": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "RevertReturndataAllocation.selector"
		},
		"1213": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "RevertReturndataAllocation.abi"
		},
		"1214": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "RevertReturndataAllocation.id"
		},
		"1215": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "RevertReturndataAllocation.definedIn"
		},
		"1216": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "RevertReturndataAllocation.arguments"
		},
		"1217": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "RevertReturndataAllocation.allocationMode"
		},
		"1218": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ConstructorReturndataAllocation"
		},
		"1219": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ConstructorReturndataAllocation.kind"
		},
		"1220": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ConstructorReturndataAllocation.selector"
		},
		"1221": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ConstructorReturndataAllocation.immutables"
		},
		"1222": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ConstructorReturndataAllocation.delegatecallGuard"
		},
		"1223": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ConstructorReturndataAllocation.allocationMode"
		},
		"1224": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "MessageReturndataAllocation"
		},
		"1225": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "MessageReturndataAllocation.kind"
		},
		"1226": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "MessageReturndataAllocation.selector"
		},
		"1227": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "MessageReturndataAllocation.allocationMode"
		},
		"1228": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "BlankReturndataAllocation"
		},
		"1229": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "BlankReturndataAllocation.kind"
		},
		"1230": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "BlankReturndataAllocation.selector"
		},
		"1231": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "BlankReturndataAllocation.arguments"
		},
		"1232": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "BlankReturndataAllocation.allocationMode"
		},
		"1233": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "CalldataAndReturndataAllocation"
		},
		"1234": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "FunctionCalldataAndReturndataAllocation"
		},
		"1235": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "FunctionCalldataAndReturndataAllocation.input"
		},
		"1236": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "FunctionCalldataAndReturndataAllocation.output"
		},
		"1237": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ContractAllocationInfo"
		},
		"1238": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ContractAllocationInfo.abi"
		},
		"1239": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ContractAllocationInfo.contractNode"
		},
		"1240": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ContractAllocationInfo.deployedContext"
		},
		"1241": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ContractAllocationInfo.constructorContext"
		},
		"1242": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ContractAllocationInfo.immutableReferences"
		},
		"1243": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ContractAllocationInfo.compiler"
		},
		"1244": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ContractAllocationInfo.compilationId"
		},
		"1245": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ContractAndContexts"
		},
		"1246": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ContractAndContexts.compilationId"
		},
		"1247": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ContractAndContexts.contract"
		},
		"1248": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ContractAndContexts.node"
		},
		"1249": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ContractAndContexts.deployedContext"
		},
		"1250": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ContractAndContexts.constructorContext"
		},
		"1251": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "EventAllocation"
		},
		"1252": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "EventAllocation.abi"
		},
		"1253": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "EventAllocation.contextHash"
		},
		"1254": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "EventAllocation.definedIn"
		},
		"1255": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "EventAllocation.id"
		},
		"1256": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "EventAllocation.anonymous"
		},
		"1257": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "EventAllocation.arguments"
		},
		"1258": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "EventAllocation.allocationMode"
		},
		"1259": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ReturndataAllocations"
		},
		"1260": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "ReturndataAllocations.__index"
		},
		"1262": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "__type"
		},
		"1263": {
			"sourceFileName": "lib/abi-data/allocate/types.ts",
			"qualifiedName": "__type.__index"
		},
		"1265": {
			"sourceFileName": "lib/abi-data/allocate/index.ts",
			"qualifiedName": "FallbackOutputAllocation"
		},
		"1266": {
			"sourceFileName": "lib/abi-data/encode/index.ts",
			"qualifiedName": ""
		},
		"1267": {
			"sourceFileName": "lib/abi-data/encode/index.ts",
			"qualifiedName": "encodeAbi"
		},
		"1268": {
			"sourceFileName": "lib/abi-data/encode/index.ts",
			"qualifiedName": "encodeAbi"
		},
		"1269": {
			"sourceFileName": "lib/abi-data/encode/index.ts",
			"qualifiedName": "input"
		},
		"1270": {
			"sourceFileName": "lib/abi-data/encode/index.ts",
			"qualifiedName": "allocations"
		},
		"1271": {
			"sourceFileName": "lib/abi-data/encode/index.ts",
			"qualifiedName": "encodeTupleAbi"
		},
		"1272": {
			"sourceFileName": "lib/abi-data/encode/index.ts",
			"qualifiedName": "encodeTupleAbi"
		},
		"1273": {
			"sourceFileName": "lib/abi-data/encode/index.ts",
			"qualifiedName": "tuple"
		},
		"1274": {
			"sourceFileName": "lib/abi-data/encode/index.ts",
			"qualifiedName": "allocations"
		},
		"1275": {
			"sourceFileName": "lib/abi-data/encode/index.ts",
			"qualifiedName": "encodeTupleAbiWithSelector"
		},
		"1276": {
			"sourceFileName": "lib/abi-data/encode/index.ts",
			"qualifiedName": "encodeTupleAbiWithSelector"
		},
		"1277": {
			"sourceFileName": "lib/abi-data/encode/index.ts",
			"qualifiedName": "tuple"
		},
		"1278": {
			"sourceFileName": "lib/abi-data/encode/index.ts",
			"qualifiedName": "selector"
		},
		"1279": {
			"sourceFileName": "lib/abi-data/encode/index.ts",
			"qualifiedName": "allocations"
		},
		"1280": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": ""
		},
		"1281": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "decodeAbi"
		},
		"1282": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "decodeAbi"
		},
		"1283": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "dataType"
		},
		"1284": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "pointer"
		},
		"1285": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "info"
		},
		"1286": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "options"
		},
		"1287": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "decodeAbiReferenceByAddress"
		},
		"1288": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "decodeAbiReferenceByAddress"
		},
		"1289": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "dataType"
		},
		"1290": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "pointer"
		},
		"1291": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "info"
		},
		"1292": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "options"
		},
		"1293": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "decodeAbiReferenceStatic"
		},
		"1294": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "decodeAbiReferenceStatic"
		},
		"1295": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "dataType"
		},
		"1296": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "pointer"
		},
		"1297": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "info"
		},
		"1298": {
			"sourceFileName": "lib/abi-data/decode/index.ts",
			"qualifiedName": "options"
		},
		"1299": {
			"sourceFileName": "lib/abi-data/import/index.ts",
			"qualifiedName": ""
		},
		"1300": {
			"sourceFileName": "lib/abi-data/import/index.ts",
			"qualifiedName": "abiParameterToType"
		},
		"1301": {
			"sourceFileName": "lib/abi-data/import/index.ts",
			"qualifiedName": "abiParameterToType"
		},
		"1302": {
			"sourceFileName": "lib/abi-data/import/index.ts",
			"qualifiedName": "abi"
		},
		"1303": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": ""
		},
		"1304": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "computeSelectors"
		},
		"1305": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "computeSelectors"
		},
		"1306": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "abi"
		},
		"1307": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "abiHasPayableFallback"
		},
		"1308": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "abiHasPayableFallback"
		},
		"1309": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "abi"
		},
		"1310": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "abisMatch"
		},
		"1311": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "abisMatch"
		},
		"1312": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "entry1"
		},
		"1313": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "entry2"
		},
		"1314": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "definitionMatchesAbi"
		},
		"1315": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "definitionMatchesAbi"
		},
		"1316": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "abiEntry"
		},
		"1317": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "definition"
		},
		"1318": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "referenceDeclarations"
		},
		"1319": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "topicsCount"
		},
		"1320": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "topicsCount"
		},
		"1321": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "abiEntry"
		},
		"1322": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "abiEntryIsObviouslyIllTyped"
		},
		"1323": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "abiEntryIsObviouslyIllTyped"
		},
		"1324": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "abiEntry"
		},
		"1325": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "abiEntryHasStorageParameters"
		},
		"1326": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "abiEntryHasStorageParameters"
		},
		"1327": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "abiEntry"
		},
		"1328": {
			"sourceFileName": "../abi-utils/lib/signature.ts",
			"qualifiedName": "abiSignature"
		},
		"1329": {
			"sourceFileName": "../abi-utils/lib/signature.ts",
			"qualifiedName": "abiSignature"
		},
		"1330": {
			"sourceFileName": "../abi-utils/lib/signature.ts",
			"qualifiedName": "abiEntry"
		},
		"1331": {
			"sourceFileName": "../abi-utils/lib/signature.ts",
			"qualifiedName": "abiTypeSignature"
		},
		"1332": {
			"sourceFileName": "../abi-utils/lib/signature.ts",
			"qualifiedName": "abiTypeSignature"
		},
		"1333": {
			"sourceFileName": "../abi-utils/lib/signature.ts",
			"qualifiedName": "parameter"
		},
		"1334": {
			"sourceFileName": "../abi-utils/lib/signature.ts",
			"qualifiedName": "abiTupleSignature"
		},
		"1335": {
			"sourceFileName": "../abi-utils/lib/signature.ts",
			"qualifiedName": "abiTupleSignature"
		},
		"1336": {
			"sourceFileName": "../abi-utils/lib/signature.ts",
			"qualifiedName": "parameters"
		},
		"1337": {
			"sourceFileName": "../abi-utils/lib/signature.ts",
			"qualifiedName": "abiSelector"
		},
		"1338": {
			"sourceFileName": "../abi-utils/lib/signature.ts",
			"qualifiedName": "abiSelector"
		},
		"1339": {
			"sourceFileName": "../abi-utils/lib/signature.ts",
			"qualifiedName": "abiEntry"
		},
		"1340": {
			"sourceFileName": "lib/abi-data/utils.ts",
			"qualifiedName": "DEFAULT_CONSTRUCTOR_ABI"
		},
		"1341": {
			"sourceFileName": "lib/abi-data/types.ts",
			"qualifiedName": "FunctionAbiBySelectors"
		},
		"1342": {
			"sourceFileName": "lib/abi-data/types.ts",
			"qualifiedName": "FunctionAbiBySelectors.__index"
		},
		"1344": {
			"sourceFileName": "lib/topic/index.ts",
			"qualifiedName": ""
		},
		"1345": {
			"sourceFileName": "lib/topic/decode/index.ts",
			"qualifiedName": ""
		},
		"1346": {
			"sourceFileName": "lib/topic/decode/index.ts",
			"qualifiedName": "decodeTopic"
		},
		"1347": {
			"sourceFileName": "lib/topic/decode/index.ts",
			"qualifiedName": "decodeTopic"
		},
		"1348": {
			"sourceFileName": "lib/topic/decode/index.ts",
			"qualifiedName": "dataType"
		},
		"1349": {
			"sourceFileName": "lib/topic/decode/index.ts",
			"qualifiedName": "pointer"
		},
		"1350": {
			"sourceFileName": "lib/topic/decode/index.ts",
			"qualifiedName": "info"
		},
		"1351": {
			"sourceFileName": "lib/topic/decode/index.ts",
			"qualifiedName": "options"
		},
		"1352": {
			"sourceFileName": "lib/topic/encode/index.ts",
			"qualifiedName": ""
		},
		"1353": {
			"sourceFileName": "lib/topic/encode/index.ts",
			"qualifiedName": "encodeTopic"
		},
		"1354": {
			"sourceFileName": "lib/topic/encode/index.ts",
			"qualifiedName": "encodeTopic"
		},
		"1355": {
			"sourceFileName": "lib/topic/encode/index.ts",
			"qualifiedName": "input"
		},
		"1356": {
			"sourceFileName": "lib/topic/read/index.ts",
			"qualifiedName": ""
		},
		"1357": {
			"sourceFileName": "lib/topic/read/index.ts",
			"qualifiedName": "readTopic"
		},
		"1358": {
			"sourceFileName": "lib/topic/read/index.ts",
			"qualifiedName": "readTopic"
		},
		"1359": {
			"sourceFileName": "lib/topic/read/index.ts",
			"qualifiedName": "pointer"
		},
		"1360": {
			"sourceFileName": "lib/topic/read/index.ts",
			"qualifiedName": "state"
		},
		"1361": {
			"sourceFileName": "lib/mapping-key/index.ts",
			"qualifiedName": ""
		},
		"1362": {
			"sourceFileName": "lib/mapping-key/encode/index.ts",
			"qualifiedName": ""
		},
		"1363": {
			"sourceFileName": "lib/mapping-key/encode/index.ts",
			"qualifiedName": "encodeMappingKey"
		},
		"1364": {
			"sourceFileName": "lib/mapping-key/encode/index.ts",
			"qualifiedName": "encodeMappingKey"
		},
		"1365": {
			"sourceFileName": "lib/mapping-key/encode/index.ts",
			"qualifiedName": "input"
		},
		"1366": {
			"sourceFileName": "lib/mapping-key/encode/index.ts",
			"qualifiedName": "mappingKeyAsHex"
		},
		"1367": {
			"sourceFileName": "lib/mapping-key/encode/index.ts",
			"qualifiedName": "mappingKeyAsHex"
		},
		"1368": {
			"sourceFileName": "lib/mapping-key/encode/index.ts",
			"qualifiedName": "input"
		},
		"1369": {
			"sourceFileName": "lib/memory/index.ts",
			"qualifiedName": ""
		},
		"1370": {
			"sourceFileName": "lib/memory/allocate/index.ts",
			"qualifiedName": ""
		},
		"1371": {
			"sourceFileName": "lib/memory/allocate/index.ts",
			"qualifiedName": "getMemoryAllocations"
		},
		"1372": {
			"sourceFileName": "lib/memory/allocate/index.ts",
			"qualifiedName": "getMemoryAllocations"
		},
		"1373": {
			"sourceFileName": "lib/memory/allocate/index.ts",
			"qualifiedName": "userDefinedTypes"
		},
		"1374": {
			"sourceFileName": "lib/memory/allocate/index.ts",
			"qualifiedName": "isSkippedInMemoryStructs"
		},
		"1375": {
			"sourceFileName": "lib/memory/allocate/index.ts",
			"qualifiedName": "isSkippedInMemoryStructs"
		},
		"1376": {
			"sourceFileName": "lib/memory/allocate/index.ts",
			"qualifiedName": "dataType"
		},
		"1377": {
			"sourceFileName": "lib/memory/allocate/types.ts",
			"qualifiedName": "MemoryAllocations"
		},
		"1378": {
			"sourceFileName": "lib/memory/allocate/types.ts",
			"qualifiedName": "MemoryAllocations.__index"
		},
		"1380": {
			"sourceFileName": "lib/memory/allocate/types.ts",
			"qualifiedName": "MemoryAllocation"
		},
		"1381": {
			"sourceFileName": "lib/memory/allocate/types.ts",
			"qualifiedName": "MemoryAllocation.members"
		},
		"1382": {
			"sourceFileName": "lib/memory/allocate/types.ts",
			"qualifiedName": "MemoryMemberAllocation"
		},
		"1383": {
			"sourceFileName": "lib/memory/allocate/types.ts",
			"qualifiedName": "MemoryMemberAllocation.name"
		},
		"1384": {
			"sourceFileName": "lib/memory/allocate/types.ts",
			"qualifiedName": "MemoryMemberAllocation.type"
		},
		"1385": {
			"sourceFileName": "lib/memory/allocate/types.ts",
			"qualifiedName": "MemoryMemberAllocation.pointer"
		},
		"1386": {
			"sourceFileName": "lib/memory/decode/index.ts",
			"qualifiedName": ""
		},
		"1387": {
			"sourceFileName": "lib/memory/decode/index.ts",
			"qualifiedName": "decodeMemory"
		},
		"1388": {
			"sourceFileName": "lib/memory/decode/index.ts",
			"qualifiedName": "decodeMemory"
		},
		"1389": {
			"sourceFileName": "lib/memory/decode/index.ts",
			"qualifiedName": "dataType"
		},
		"1390": {
			"sourceFileName": "lib/memory/decode/index.ts",
			"qualifiedName": "pointer"
		},
		"1391": {
			"sourceFileName": "lib/memory/decode/index.ts",
			"qualifiedName": "info"
		},
		"1392": {
			"sourceFileName": "lib/memory/decode/index.ts",
			"qualifiedName": "options"
		},
		"1393": {
			"sourceFileName": "lib/memory/decode/index.ts",
			"qualifiedName": "decodeMemoryReferenceByAddress"
		},
		"1394": {
			"sourceFileName": "lib/memory/decode/index.ts",
			"qualifiedName": "decodeMemoryReferenceByAddress"
		},
		"1395": {
			"sourceFileName": "lib/memory/decode/index.ts",
			"qualifiedName": "dataType"
		},
		"1396": {
			"sourceFileName": "lib/memory/decode/index.ts",
			"qualifiedName": "pointer"
		},
		"1397": {
			"sourceFileName": "lib/memory/decode/index.ts",
			"qualifiedName": "info"
		},
		"1398": {
			"sourceFileName": "lib/memory/decode/index.ts",
			"qualifiedName": "options"
		},
		"1399": {
			"sourceFileName": "lib/special/index.ts",
			"qualifiedName": ""
		},
		"1400": {
			"sourceFileName": "lib/special/decode/index.ts",
			"qualifiedName": ""
		},
		"1401": {
			"sourceFileName": "lib/special/decode/index.ts",
			"qualifiedName": "decodeSpecial"
		},
		"1402": {
			"sourceFileName": "lib/special/decode/index.ts",
			"qualifiedName": "decodeSpecial"
		},
		"1403": {
			"sourceFileName": "lib/special/decode/index.ts",
			"qualifiedName": "dataType"
		},
		"1404": {
			"sourceFileName": "lib/special/decode/index.ts",
			"qualifiedName": "pointer"
		},
		"1405": {
			"sourceFileName": "lib/special/decode/index.ts",
			"qualifiedName": "info"
		},
		"1406": {
			"sourceFileName": "lib/special/decode/index.ts",
			"qualifiedName": "decodeMagic"
		},
		"1407": {
			"sourceFileName": "lib/special/decode/index.ts",
			"qualifiedName": "decodeMagic"
		},
		"1408": {
			"sourceFileName": "lib/special/decode/index.ts",
			"qualifiedName": "dataType"
		},
		"1409": {
			"sourceFileName": "lib/special/decode/index.ts",
			"qualifiedName": "pointer"
		},
		"1410": {
			"sourceFileName": "lib/special/decode/index.ts",
			"qualifiedName": "info"
		},
		"1411": {
			"sourceFileName": "lib/special/read/index.ts",
			"qualifiedName": ""
		},
		"1412": {
			"sourceFileName": "lib/special/read/index.ts",
			"qualifiedName": "readSpecial"
		},
		"1413": {
			"sourceFileName": "lib/special/read/index.ts",
			"qualifiedName": "readSpecial"
		},
		"1414": {
			"sourceFileName": "lib/special/read/index.ts",
			"qualifiedName": "pointer"
		},
		"1415": {
			"sourceFileName": "lib/special/read/index.ts",
			"qualifiedName": "state"
		},
		"1416": {
			"sourceFileName": "lib/stack/index.ts",
			"qualifiedName": ""
		},
		"1417": {
			"sourceFileName": "lib/stack/decode/index.ts",
			"qualifiedName": ""
		},
		"1418": {
			"sourceFileName": "lib/stack/decode/index.ts",
			"qualifiedName": "decodeStack"
		},
		"1419": {
			"sourceFileName": "lib/stack/decode/index.ts",
			"qualifiedName": "decodeStack"
		},
		"1420": {
			"sourceFileName": "lib/stack/decode/index.ts",
			"qualifiedName": "dataType"
		},
		"1421": {
			"sourceFileName": "lib/stack/decode/index.ts",
			"qualifiedName": "pointer"
		},
		"1422": {
			"sourceFileName": "lib/stack/decode/index.ts",
			"qualifiedName": "info"
		},
		"1423": {
			"sourceFileName": "lib/stack/decode/index.ts",
			"qualifiedName": "decodeLiteral"
		},
		"1424": {
			"sourceFileName": "lib/stack/decode/index.ts",
			"qualifiedName": "decodeLiteral"
		},
		"1425": {
			"sourceFileName": "lib/stack/decode/index.ts",
			"qualifiedName": "dataType"
		},
		"1426": {
			"sourceFileName": "lib/stack/decode/index.ts",
			"qualifiedName": "pointer"
		},
		"1427": {
			"sourceFileName": "lib/stack/decode/index.ts",
			"qualifiedName": "info"
		},
		"1428": {
			"sourceFileName": "lib/stack/read/index.ts",
			"qualifiedName": ""
		},
		"1429": {
			"sourceFileName": "lib/stack/read/index.ts",
			"qualifiedName": "readStack"
		},
		"1430": {
			"sourceFileName": "lib/stack/read/index.ts",
			"qualifiedName": "readStack"
		},
		"1431": {
			"sourceFileName": "lib/stack/read/index.ts",
			"qualifiedName": "pointer"
		},
		"1432": {
			"sourceFileName": "lib/stack/read/index.ts",
			"qualifiedName": "state"
		},
		"1433": {
			"sourceFileName": "lib/stack/read/index.ts",
			"qualifiedName": "readStackLiteral"
		},
		"1434": {
			"sourceFileName": "lib/stack/read/index.ts",
			"qualifiedName": "readStackLiteral"
		},
		"1435": {
			"sourceFileName": "lib/stack/read/index.ts",
			"qualifiedName": "pointer"
		},
		"1436": {
			"sourceFileName": "lib/storage/index.ts",
			"qualifiedName": ""
		},
		"1437": {
			"sourceFileName": "lib/storage/utils.ts",
			"qualifiedName": ""
		},
		"1438": {
			"sourceFileName": "lib/storage/utils.ts",
			"qualifiedName": "isWordsLength"
		},
		"1439": {
			"sourceFileName": "lib/storage/utils.ts",
			"qualifiedName": "isWordsLength"
		},
		"1440": {
			"sourceFileName": "lib/storage/utils.ts",
			"qualifiedName": "size"
		},
		"1441": {
			"sourceFileName": "lib/storage/utils.ts",
			"qualifiedName": "__type"
		},
		"1442": {
			"sourceFileName": "lib/storage/utils.ts",
			"qualifiedName": "__type.words"
		},
		"1443": {
			"sourceFileName": "lib/storage/utils.ts",
			"qualifiedName": "storageLengthToBytes"
		},
		"1444": {
			"sourceFileName": "lib/storage/utils.ts",
			"qualifiedName": "storageLengthToBytes"
		},
		"1445": {
			"sourceFileName": "lib/storage/utils.ts",
			"qualifiedName": "size"
		},
		"1446": {
			"sourceFileName": "lib/storage/utils.ts",
			"qualifiedName": "slotAddress"
		},
		"1447": {
			"sourceFileName": "lib/storage/utils.ts",
			"qualifiedName": "slotAddress"
		},
		"1448": {
			"sourceFileName": "lib/storage/utils.ts",
			"qualifiedName": "slot"
		},
		"1449": {
			"sourceFileName": "lib/storage/utils.ts",
			"qualifiedName": "equalSlots"
		},
		"1450": {
			"sourceFileName": "lib/storage/utils.ts",
			"qualifiedName": "equalSlots"
		},
		"1451": {
			"sourceFileName": "lib/storage/utils.ts",
			"qualifiedName": "slot1"
		},
		"1452": {
			"sourceFileName": "lib/storage/utils.ts",
			"qualifiedName": "slot2"
		},
		"1453": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": ""
		},
		"1454": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "getStorageAllocations"
		},
		"1455": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "getStorageAllocations"
		},
		"1456": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "userDefinedTypesByCompilation"
		},
		"1457": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "getStateAllocations"
		},
		"1458": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "getStateAllocations"
		},
		"1459": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "contracts"
		},
		"1460": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "referenceDeclarations"
		},
		"1461": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "__type"
		},
		"1462": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "__type.__index"
		},
		"1464": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "userDefinedTypes"
		},
		"1465": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "storageAllocations"
		},
		"1466": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "existingAllocations"
		},
		"1467": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "storageSize"
		},
		"1468": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "storageSize"
		},
		"1469": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "dataType"
		},
		"1470": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "userDefinedTypes"
		},
		"1471": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "allocations"
		},
		"1472": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "compiler"
		},
		"1473": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StorageAllocation"
		},
		"1474": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StorageAllocation.size"
		},
		"1475": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StorageAllocation.members"
		},
		"1476": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StorageAllocations"
		},
		"1477": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StorageAllocations.__index"
		},
		"1479": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StorageMemberAllocation"
		},
		"1480": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StorageMemberAllocation.name"
		},
		"1481": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StorageMemberAllocation.type"
		},
		"1482": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StorageMemberAllocation.pointer"
		},
		"1483": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StateAllocation"
		},
		"1484": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StateAllocation.members"
		},
		"1485": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StateAllocations"
		},
		"1486": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StateAllocations.__index"
		},
		"1488": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "__type"
		},
		"1489": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "__type.__index"
		},
		"1491": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StateVariableAllocation"
		},
		"1492": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StateVariableAllocation.definition"
		},
		"1493": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StateVariableAllocation.definedIn"
		},
		"1494": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StateVariableAllocation.compilationId"
		},
		"1495": {
			"sourceFileName": "lib/storage/allocate/types.ts",
			"qualifiedName": "StateVariableAllocation.pointer"
		},
		"1496": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "UnknownBaseContractIdError"
		},
		"1497": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "UnknownBaseContractIdError.__constructor"
		},
		"1498": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "UnknownBaseContractIdError"
		},
		"1499": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "derivedId"
		},
		"1500": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "derivedName"
		},
		"1501": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "derivedKind"
		},
		"1502": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "baseId"
		},
		"1503": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "UnknownBaseContractIdError.derivedId"
		},
		"1504": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "UnknownBaseContractIdError.derivedName"
		},
		"1505": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "UnknownBaseContractIdError.derivedKind"
		},
		"1506": {
			"sourceFileName": "lib/storage/allocate/index.ts",
			"qualifiedName": "UnknownBaseContractIdError.baseId"
		},
		"1507": {
			"sourceFileName": "lib/storage/decode/index.ts",
			"qualifiedName": ""
		},
		"1508": {
			"sourceFileName": "lib/storage/decode/index.ts",
			"qualifiedName": "decodeStorage"
		},
		"1509": {
			"sourceFileName": "lib/storage/decode/index.ts",
			"qualifiedName": "decodeStorage"
		},
		"1510": {
			"sourceFileName": "lib/storage/decode/index.ts",
			"qualifiedName": "dataType"
		},
		"1511": {
			"sourceFileName": "lib/storage/decode/index.ts",
			"qualifiedName": "pointer"
		},
		"1512": {
			"sourceFileName": "lib/storage/decode/index.ts",
			"qualifiedName": "info"
		},
		"1513": {
			"sourceFileName": "lib/storage/decode/index.ts",
			"qualifiedName": "decodeStorageReferenceByAddress"
		},
		"1514": {
			"sourceFileName": "lib/storage/decode/index.ts",
			"qualifiedName": "decodeStorageReferenceByAddress"
		},
		"1515": {
			"sourceFileName": "lib/storage/decode/index.ts",
			"qualifiedName": "dataType"
		},
		"1516": {
			"sourceFileName": "lib/storage/decode/index.ts",
			"qualifiedName": "pointer"
		},
		"1517": {
			"sourceFileName": "lib/storage/decode/index.ts",
			"qualifiedName": "info"
		},
		"1518": {
			"sourceFileName": "lib/storage/decode/index.ts",
			"qualifiedName": "decodeStorageReference"
		},
		"1519": {
			"sourceFileName": "lib/storage/decode/index.ts",
			"qualifiedName": "decodeStorageReference"
		},
		"1520": {
			"sourceFileName": "lib/storage/decode/index.ts",
			"qualifiedName": "dataType"
		},
		"1521": {
			"sourceFileName": "lib/storage/decode/index.ts",
			"qualifiedName": "pointer"
		},
		"1522": {
			"sourceFileName": "lib/storage/decode/index.ts",
			"qualifiedName": "info"
		},
		"1523": {
			"sourceFileName": "lib/storage/read/index.ts",
			"qualifiedName": ""
		},
		"1524": {
			"sourceFileName": "lib/storage/read/index.ts",
			"qualifiedName": "readSlot"
		},
		"1525": {
			"sourceFileName": "lib/storage/read/index.ts",
			"qualifiedName": "readSlot"
		},
		"1526": {
			"sourceFileName": "lib/storage/read/index.ts",
			"qualifiedName": "storage"
		},
		"1527": {
			"sourceFileName": "lib/storage/read/index.ts",
			"qualifiedName": "slot"
		},
		"1528": {
			"sourceFileName": "lib/storage/read/index.ts",
			"qualifiedName": "readStorage"
		},
		"1529": {
			"sourceFileName": "lib/storage/read/index.ts",
			"qualifiedName": "readStorage"
		},
		"1530": {
			"sourceFileName": "lib/storage/read/index.ts",
			"qualifiedName": "pointer"
		},
		"1531": {
			"sourceFileName": "lib/storage/read/index.ts",
			"qualifiedName": "state"
		},
		"1532": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "StorageLength"
		},
		"1533": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "__type"
		},
		"1534": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "__type.bytes"
		},
		"1535": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "__type"
		},
		"1536": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "__type.words"
		},
		"1537": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "Range"
		},
		"1538": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "Range.from"
		},
		"1539": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "Range.to"
		},
		"1540": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "Range.length"
		},
		"1541": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "StoragePosition"
		},
		"1542": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "StoragePosition.slot"
		},
		"1543": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "StoragePosition.index"
		},
		"1544": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "Slot"
		},
		"1545": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "Slot.key"
		},
		"1546": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "Slot.path"
		},
		"1547": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "Slot.hashPath"
		},
		"1548": {
			"sourceFileName": "lib/storage/types.ts",
			"qualifiedName": "Slot.offset"
		},
		"1549": {
			"sourceFileName": "lib/ast-constant/index.ts",
			"qualifiedName": ""
		},
		"1550": {
			"sourceFileName": "lib/ast-constant/read/index.ts",
			"qualifiedName": ""
		},
		"1551": {
			"sourceFileName": "lib/ast-constant/read/index.ts",
			"qualifiedName": "readDefinition"
		},
		"1552": {
			"sourceFileName": "lib/ast-constant/read/index.ts",
			"qualifiedName": "readDefinition"
		},
		"1553": {
			"sourceFileName": "lib/ast-constant/read/index.ts",
			"qualifiedName": "pointer"
		},
		"1554": {
			"sourceFileName": "lib/ast-constant/decode/index.ts",
			"qualifiedName": ""
		},
		"1555": {
			"sourceFileName": "lib/ast-constant/decode/index.ts",
			"qualifiedName": "decodeConstant"
		},
		"1556": {
			"sourceFileName": "lib/ast-constant/decode/index.ts",
			"qualifiedName": "decodeConstant"
		},
		"1557": {
			"sourceFileName": "lib/ast-constant/decode/index.ts",
			"qualifiedName": "dataType"
		},
		"1558": {
			"sourceFileName": "lib/ast-constant/decode/index.ts",
			"qualifiedName": "pointer"
		},
		"1559": {
			"sourceFileName": "lib/ast-constant/decode/index.ts",
			"qualifiedName": "info"
		},
		"1560": {
			"sourceFileName": "lib/ast/index.ts",
			"qualifiedName": ""
		},
		"1561": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": ""
		},
		"1562": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "typeIdentifier"
		},
		"1563": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "typeIdentifier"
		},
		"1564": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1565": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "typeString"
		},
		"1566": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "typeString"
		},
		"1567": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1568": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "typeStringWithoutLocation"
		},
		"1569": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "typeStringWithoutLocation"
		},
		"1570": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1571": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "typeClass"
		},
		"1572": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "typeClass"
		},
		"1573": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1574": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "typeClassLongForm"
		},
		"1575": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "typeClassLongForm"
		},
		"1576": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1577": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "typeId"
		},
		"1578": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "typeId"
		},
		"1579": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1580": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "visibility"
		},
		"1581": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "visibility"
		},
		"1582": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1583": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "specifiedSize"
		},
		"1584": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "specifiedSize"
		},
		"1585": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1586": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "decimalPlaces"
		},
		"1587": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "decimalPlaces"
		},
		"1588": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1589": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "isArray"
		},
		"1590": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "isArray"
		},
		"1591": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1592": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "isDynamicArray"
		},
		"1593": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "isDynamicArray"
		},
		"1594": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1595": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "staticLength"
		},
		"1596": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "staticLength"
		},
		"1597": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1598": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "staticLengthAsString"
		},
		"1599": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "staticLengthAsString"
		},
		"1600": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1601": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "isStruct"
		},
		"1602": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "isStruct"
		},
		"1603": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1604": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "isMapping"
		},
		"1605": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "isMapping"
		},
		"1606": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1607": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "isEnum"
		},
		"1608": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "isEnum"
		},
		"1609": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1610": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "isReference"
		},
		"1611": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "isReference"
		},
		"1612": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1613": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "referenceType"
		},
		"1614": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "referenceType"
		},
		"1615": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1616": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "contractKind"
		},
		"1617": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "contractKind"
		},
		"1618": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1619": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "stackSize"
		},
		"1620": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "stackSize"
		},
		"1621": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1622": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "isSimpleConstant"
		},
		"1623": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "isSimpleConstant"
		},
		"1624": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1625": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "spliceLocation"
		},
		"1626": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "spliceLocation"
		},
		"1627": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1628": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "location"
		},
		"1629": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "regularizeTypeIdentifier"
		},
		"1630": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "regularizeTypeIdentifier"
		},
		"1631": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "identifier"
		},
		"1632": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "rationalValue"
		},
		"1633": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "rationalValue"
		},
		"1634": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1635": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "baseDefinition"
		},
		"1636": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "baseDefinition"
		},
		"1637": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1638": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "keyDefinition"
		},
		"1639": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "keyDefinition"
		},
		"1640": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1641": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "scopes"
		},
		"1642": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "valueDefinition"
		},
		"1643": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "valueDefinition"
		},
		"1644": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1645": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "scopes"
		},
		"1646": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "parameters"
		},
		"1647": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "parameters"
		},
		"1648": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1649": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "functionKind"
		},
		"1650": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "functionKind"
		},
		"1651": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "node"
		},
		"1652": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "functionClass"
		},
		"1653": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "functionClass"
		},
		"1654": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "node"
		},
		"1655": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "mutability"
		},
		"1656": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "mutability"
		},
		"1657": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "node"
		},
		"1658": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "isContractPayable"
		},
		"1659": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "isContractPayable"
		},
		"1660": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definition"
		},
		"1661": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definitionToAbi"
		},
		"1662": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "definitionToAbi"
		},
		"1663": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "node"
		},
		"1664": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "referenceDeclarations"
		},
		"1665": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "getterParameters"
		},
		"1666": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "getterParameters"
		},
		"1667": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "node"
		},
		"1668": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "referenceDeclarations"
		},
		"1669": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "__type"
		},
		"1670": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "__type.inputs"
		},
		"1671": {
			"sourceFileName": "lib/ast/utils.ts",
			"qualifiedName": "__type.outputs"
		},
		"1672": {
			"sourceFileName": "lib/ast/import/index.ts",
			"qualifiedName": ""
		},
		"1673": {
			"sourceFileName": "lib/ast/import/index.ts",
			"qualifiedName": "definitionToType"
		},
		"1674": {
			"sourceFileName": "lib/ast/import/index.ts",
			"qualifiedName": "definitionToType"
		},
		"1675": {
			"sourceFileName": "lib/ast/import/index.ts",
			"qualifiedName": "definition"
		},
		"1676": {
			"sourceFileName": "lib/ast/import/index.ts",
			"qualifiedName": "compilationId"
		},
		"1677": {
			"sourceFileName": "lib/ast/import/index.ts",
			"qualifiedName": "compiler"
		},
		"1678": {
			"sourceFileName": "lib/ast/import/index.ts",
			"qualifiedName": "forceLocation"
		},
		"1679": {
			"sourceFileName": "lib/ast/import/index.ts",
			"qualifiedName": "definitionToStoredType"
		},
		"1680": {
			"sourceFileName": "lib/ast/import/index.ts",
			"qualifiedName": "definitionToStoredType"
		},
		"1681": {
			"sourceFileName": "lib/ast/import/index.ts",
			"qualifiedName": "definition"
		},
		"1682": {
			"sourceFileName": "lib/ast/import/index.ts",
			"qualifiedName": "compilationId"
		},
		"1683": {
			"sourceFileName": "lib/ast/import/index.ts",
			"qualifiedName": "compiler"
		},
		"1684": {
			"sourceFileName": "lib/ast/import/index.ts",
			"qualifiedName": "referenceDeclarations"
		},
		"1685": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "TypeDescriptions"
		},
		"1686": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "TypeDescriptions.typeIdentifier"
		},
		"1687": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "TypeDescriptions.typeString"
		},
		"1688": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode"
		},
		"1689": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.constant"
		},
		"1690": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.mutability"
		},
		"1691": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.id"
		},
		"1692": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.name"
		},
		"1693": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.canonicalName"
		},
		"1694": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.linearizedBaseContracts"
		},
		"1695": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.internalFunctionIDs"
		},
		"1696": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type"
		},
		"1697": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type.__index"
		},
		"1699": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.members"
		},
		"1700": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.underlyingType"
		},
		"1701": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.nodes"
		},
		"1702": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.nodeType"
		},
		"1703": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.ast_type"
		},
		"1704": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.scope"
		},
		"1705": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.src"
		},
		"1706": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.stateVariable"
		},
		"1707": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.storageLocation"
		},
		"1708": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.typeDescriptions"
		},
		"1709": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.typeName"
		},
		"1710": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.expression"
		},
		"1711": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type"
		},
		"1712": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type.referencedDeclaration"
		},
		"1713": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.value"
		},
		"1714": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.visibility"
		},
		"1715": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.stateMutability"
		},
		"1716": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.kind"
		},
		"1717": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.hexValue"
		},
		"1718": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.referencedDeclaration"
		},
		"1719": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.parameters"
		},
		"1720": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type"
		},
		"1721": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type.parameters"
		},
		"1722": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.returnParameters"
		},
		"1723": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type"
		},
		"1724": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type.parameters"
		},
		"1725": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.parameterTypes"
		},
		"1726": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type"
		},
		"1727": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type.parameters"
		},
		"1728": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.returnParameterTypes"
		},
		"1729": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type"
		},
		"1730": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type.parameters"
		},
		"1731": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.baseType"
		},
		"1732": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.keyType"
		},
		"1733": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.valueType"
		},
		"1734": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.payable"
		},
		"1735": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.indexed"
		},
		"1736": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.anonymous"
		},
		"1737": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.contractKind"
		},
		"1738": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.isConstructor"
		},
		"1739": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.usedErrors"
		},
		"1740": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.usedEvents"
		},
		"1741": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.code"
		},
		"1742": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNode.block"
		},
		"1743": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNodes"
		},
		"1744": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "AstNodes.__index"
		},
		"1746": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "Scopes"
		},
		"1747": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "Scopes.__index"
		},
		"1749": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type"
		},
		"1750": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type.id"
		},
		"1751": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type.sourceId"
		},
		"1752": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type.parentId"
		},
		"1753": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type.pointer"
		},
		"1754": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type.variables"
		},
		"1755": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type"
		},
		"1756": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type.name"
		},
		"1757": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type.id"
		},
		"1758": {
			"sourceFileName": "lib/ast/types.ts",
			"qualifiedName": "__type.definition"
		},
		"1759": {
			"sourceFileName": "lib/compiler/index.ts",
			"qualifiedName": ""
		},
		"1760": {
			"sourceFileName": "lib/compiler/utils.ts",
			"qualifiedName": ""
		},
		"1761": {
			"sourceFileName": "lib/compiler/utils.ts",
			"qualifiedName": "solidityFamily"
		},
		"1762": {
			"sourceFileName": "lib/compiler/utils.ts",
			"qualifiedName": "solidityFamily"
		},
		"1763": {
			"sourceFileName": "lib/compiler/utils.ts",
			"qualifiedName": "compiler"
		},
		"1764": {
			"sourceFileName": "lib/compiler/types.ts",
			"qualifiedName": "CompilerVersion"
		},
		"1765": {
			"sourceFileName": "lib/compiler/types.ts",
			"qualifiedName": "CompilerVersion.name"
		},
		"1766": {
			"sourceFileName": "lib/compiler/types.ts",
			"qualifiedName": "CompilerVersion.version"
		},
		"1767": {
			"sourceFileName": "lib/compiler/types.ts",
			"qualifiedName": "SolidityFamily"
		},
		"1768": {
			"sourceFileName": "lib/compiler/types.ts",
			"qualifiedName": "Settings"
		},
		"1769": {
			"sourceFileName": "lib/compiler/types.ts",
			"qualifiedName": "Settings.viaIR"
		},
		"1770": {
			"sourceFileName": "lib/compilations/index.ts",
			"qualifiedName": ""
		},
		"1771": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": ""
		},
		"1772": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "shimCompilations"
		},
		"1773": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "shimCompilations"
		},
		"1774": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "inputCompilations"
		},
		"1775": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "shimmedCompilationIdPrefix"
		},
		"1776": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "shimCompilation"
		},
		"1777": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "shimCompilation"
		},
		"1778": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "inputCompilation"
		},
		"1779": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "shimmedCompilationId"
		},
		"1780": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "shimArtifacts"
		},
		"1781": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "shimArtifacts"
		},
		"1782": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "artifacts"
		},
		"1783": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "files"
		},
		"1784": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "shimmedCompilationId"
		},
		"1785": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "shimContracts"
		},
		"1786": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "shimContracts"
		},
		"1787": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "artifacts"
		},
		"1788": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "options"
		},
		"1789": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "getContractNode"
		},
		"1790": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "getContractNode"
		},
		"1791": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "contract"
		},
		"1792": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "compilation"
		},
		"1793": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "simpleShimSourceMap"
		},
		"1794": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "simpleShimSourceMap"
		},
		"1795": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "sourceMap"
		},
		"1796": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "collectUserDefinedTypesAndTaggedOutputs"
		},
		"1797": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "collectUserDefinedTypesAndTaggedOutputs"
		},
		"1798": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "compilations"
		},
		"1799": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "__type"
		},
		"1800": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "__type.definitions"
		},
		"1801": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "__type"
		},
		"1802": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"1804": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "__type.typesByCompilation"
		},
		"1805": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "__type.types"
		},
		"1806": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "findCompilationAndContract"
		},
		"1807": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "findCompilationAndContract"
		},
		"1808": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "compilations"
		},
		"1809": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "artifact"
		},
		"1810": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "infoToCompilations"
		},
		"1811": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "infoToCompilations"
		},
		"1812": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "projectInfo"
		},
		"1813": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "nonceString"
		},
		"1814": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "findRepeatCompilationIds"
		},
		"1815": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "findRepeatCompilationIds"
		},
		"1816": {
			"sourceFileName": "lib/compilations/utils.ts",
			"qualifiedName": "compilations"
		},
		"1817": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Compilation"
		},
		"1818": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Compilation.id"
		},
		"1819": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Compilation.unreliableSourceOrder"
		},
		"1820": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Compilation.sources"
		},
		"1821": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Compilation.contracts"
		},
		"1822": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Compilation.compiler"
		},
		"1823": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Compilation.settings"
		},
		"1824": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Source"
		},
		"1825": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Source.id"
		},
		"1826": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Source.sourcePath"
		},
		"1827": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Source.source"
		},
		"1828": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Source.language"
		},
		"1829": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Source.ast"
		},
		"1830": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Source.compiler"
		},
		"1831": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Source.settings"
		},
		"1832": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Contract"
		},
		"1833": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Contract.contractName"
		},
		"1834": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Contract.bytecode"
		},
		"1835": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Contract.deployedBytecode"
		},
		"1836": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Contract.sourceMap"
		},
		"1837": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Contract.deployedSourceMap"
		},
		"1838": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Contract.abi"
		},
		"1839": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Contract.immutableReferences"
		},
		"1840": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Contract.compiler"
		},
		"1841": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Contract.settings"
		},
		"1842": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Contract.primarySourceId"
		},
		"1843": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Contract.generatedSources"
		},
		"1844": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "Contract.deployedGeneratedSources"
		},
		"1845": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "VyperSourceMap"
		},
		"1846": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "VyperSourceMap.pc_jump_map"
		},
		"1847": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "__type"
		},
		"1848": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "__type.__index"
		},
		"1850": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "VyperSourceMap.pc_pos_map"
		},
		"1851": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "__type"
		},
		"1852": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "__type.__index"
		},
		"1854": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "VyperSourceMap.pc_pos_map_compressed"
		},
		"1855": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "ProjectInfo"
		},
		"1856": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "ProjectInfoCompilations"
		},
		"1857": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "ProjectInfoCompilations.compilations"
		},
		"1858": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "ProjectInfoCommon"
		},
		"1859": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "ProjectInfoCommon.commonCompilations"
		},
		"1860": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "ProjectInfoArtifacts"
		},
		"1861": {
			"sourceFileName": "lib/compilations/types.ts",
			"qualifiedName": "ProjectInfoArtifacts.artifacts"
		},
		"1862": {
			"sourceFileName": "lib/contexts/index.ts",
			"qualifiedName": ""
		},
		"1863": {
			"sourceFileName": "lib/contexts/import/index.ts",
			"qualifiedName": ""
		},
		"1864": {
			"sourceFileName": "lib/contexts/import/index.ts",
			"qualifiedName": "contextToType"
		},
		"1865": {
			"sourceFileName": "lib/contexts/import/index.ts",
			"qualifiedName": "contextToType"
		},
		"1866": {
			"sourceFileName": "lib/contexts/import/index.ts",
			"qualifiedName": "context"
		},
		"1867": {
			"sourceFileName": "lib/contexts/import/index.ts",
			"qualifiedName": "makeTypeId"
		},
		"1868": {
			"sourceFileName": "lib/contexts/import/index.ts",
			"qualifiedName": "makeTypeId"
		},
		"1869": {
			"sourceFileName": "lib/contexts/import/index.ts",
			"qualifiedName": "astId"
		},
		"1870": {
			"sourceFileName": "lib/contexts/import/index.ts",
			"qualifiedName": "compilationId"
		},
		"1871": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": ""
		},
		"1872": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "findContext"
		},
		"1873": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "findContext"
		},
		"1874": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "contexts"
		},
		"1875": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "binary"
		},
		"1876": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "matchContext"
		},
		"1877": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "matchContext"
		},
		"1878": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "context"
		},
		"1879": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "givenBinary"
		},
		"1880": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "normalizeContexts"
		},
		"1881": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "normalizeContexts"
		},
		"1882": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "contexts"
		},
		"1883": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "makeContext"
		},
		"1884": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "makeContext"
		},
		"1885": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "contract"
		},
		"1886": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "node"
		},
		"1887": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "compilation"
		},
		"1888": {
			"sourceFileName": "lib/contexts/utils.ts",
			"qualifiedName": "isConstructor"
		},
		"1889": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "Contexts"
		},
		"1890": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "Contexts.__index"
		},
		"1892": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "Context"
		},
		"1893": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "Context.context"
		},
		"1894": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "Context.binary"
		},
		"1895": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "Context.isConstructor"
		},
		"1896": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "Context.immutableReferences"
		},
		"1897": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "Context.contractName"
		},
		"1898": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "Context.contractId"
		},
		"1899": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "Context.linearizedBaseContracts"
		},
		"1900": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "Context.contractKind"
		},
		"1901": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "Context.abi"
		},
		"1902": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "Context.payable"
		},
		"1903": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "Context.fallbackAbi"
		},
		"1904": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "__type"
		},
		"1905": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "__type.fallback"
		},
		"1906": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "__type.receive"
		},
		"1907": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "Context.compiler"
		},
		"1908": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "Context.compilationId"
		},
		"1909": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "ContractAndContexts"
		},
		"1910": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "ContractAndContexts.compilationId"
		},
		"1911": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "ContractAndContexts.contract"
		},
		"1912": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "ContractAndContexts.node"
		},
		"1913": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "ContractAndContexts.deployedContext"
		},
		"1914": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "ContractAndContexts.constructorContext"
		},
		"1915": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "DebuggerContext"
		},
		"1916": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "DebuggerContext.context"
		},
		"1917": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "DebuggerContext.binary"
		},
		"1918": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "DebuggerContext.isConstructor"
		},
		"1919": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "DebuggerContext.immutableReferences"
		},
		"1920": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "DebuggerContext.contractName"
		},
		"1921": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "DebuggerContext.contractId"
		},
		"1922": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "DebuggerContext.linearizedBaseContracts"
		},
		"1923": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "DebuggerContext.contractKind"
		},
		"1924": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "DebuggerContext.abi"
		},
		"1925": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "DebuggerContext.sourceMap"
		},
		"1926": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "DebuggerContext.primarySource"
		},
		"1927": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "DebuggerContext.primaryLanguage"
		},
		"1928": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "DebuggerContext.compiler"
		},
		"1929": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "DebuggerContext.compilationId"
		},
		"1930": {
			"sourceFileName": "lib/contexts/types.ts",
			"qualifiedName": "DebuggerContext.payable"
		},
		"1931": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": ""
		},
		"1932": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "toBN"
		},
		"1933": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "toBN"
		},
		"1934": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "bytes"
		},
		"1935": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "isBig"
		},
		"1936": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "isBig"
		},
		"1937": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "input"
		},
		"1938": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "toSignedBN"
		},
		"1939": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "toSignedBN"
		},
		"1940": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "bytes"
		},
		"1941": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "toBigInt"
		},
		"1942": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "toBigInt"
		},
		"1943": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "value"
		},
		"1944": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "toBig"
		},
		"1945": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "toBig"
		},
		"1946": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "value"
		},
		"1947": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "toHexString"
		},
		"1948": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "toHexString"
		},
		"1949": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "bytes"
		},
		"1950": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "padLength"
		},
		"1951": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "padRight"
		},
		"1952": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "toBytes"
		},
		"1953": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "toBytes"
		},
		"1954": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "data"
		},
		"1955": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "length"
		},
		"1956": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "stringToBytes"
		},
		"1957": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "stringToBytes"
		},
		"1958": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "input"
		},
		"1959": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "shiftBigUp"
		},
		"1960": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "shiftBigUp"
		},
		"1961": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "value"
		},
		"1962": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "decimalPlaces"
		},
		"1963": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "shiftBigDown"
		},
		"1964": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "shiftBigDown"
		},
		"1965": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "value"
		},
		"1966": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "decimalPlaces"
		},
		"1967": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "countDecimalPlaces"
		},
		"1968": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "countDecimalPlaces"
		},
		"1969": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "value"
		},
		"1970": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "cleanBool"
		},
		"1971": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "cleanBool"
		},
		"1972": {
			"sourceFileName": "lib/conversion.ts",
			"qualifiedName": "result"
		},
		"1973": {
			"sourceFileName": "lib/pointer/index.ts",
			"qualifiedName": ""
		},
		"1974": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "DataPointer"
		},
		"1975": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "StackFormPointer"
		},
		"1976": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "AbiPointer"
		},
		"1977": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "AbiDataPointer"
		},
		"1978": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "BytesPointer"
		},
		"1979": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "CodeFormPointer"
		},
		"1980": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "StackPointer"
		},
		"1981": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "StackPointer.location"
		},
		"1982": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "StackPointer.from"
		},
		"1983": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "StackPointer.to"
		},
		"1984": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "MemoryPointer"
		},
		"1985": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "MemoryPointer.location"
		},
		"1986": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "MemoryPointer.start"
		},
		"1987": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "MemoryPointer.length"
		},
		"1988": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "CalldataPointer"
		},
		"1989": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "CalldataPointer.location"
		},
		"1990": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "CalldataPointer.start"
		},
		"1991": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "CalldataPointer.length"
		},
		"1992": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "ReturndataPointer"
		},
		"1993": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "ReturndataPointer.location"
		},
		"1994": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "ReturndataPointer.start"
		},
		"1995": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "ReturndataPointer.length"
		},
		"1996": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "EventDataPointer"
		},
		"1997": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "EventDataPointer.location"
		},
		"1998": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "EventDataPointer.start"
		},
		"1999": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "EventDataPointer.length"
		},
		"2000": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "EventTopicPointer"
		},
		"2001": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "EventTopicPointer.location"
		},
		"2002": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "EventTopicPointer.topic"
		},
		"2003": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "GenericAbiPointer"
		},
		"2004": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "GenericAbiPointer.location"
		},
		"2005": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "GenericAbiPointer.start"
		},
		"2006": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "GenericAbiPointer.length"
		},
		"2007": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "CodePointer"
		},
		"2008": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "CodePointer.location"
		},
		"2009": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "CodePointer.start"
		},
		"2010": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "CodePointer.length"
		},
		"2011": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "StoragePointer"
		},
		"2012": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "StoragePointer.location"
		},
		"2013": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "StoragePointer.range"
		},
		"2014": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "StackLiteralPointer"
		},
		"2015": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "StackLiteralPointer.location"
		},
		"2016": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "StackLiteralPointer.literal"
		},
		"2017": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "ConstantDefinitionPointer"
		},
		"2018": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "ConstantDefinitionPointer.location"
		},
		"2019": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "ConstantDefinitionPointer.definition"
		},
		"2020": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "SpecialPointer"
		},
		"2021": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "SpecialPointer.location"
		},
		"2022": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "SpecialPointer.special"
		},
		"2023": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "UnreadablePointer"
		},
		"2024": {
			"sourceFileName": "lib/pointer/types.ts",
			"qualifiedName": "UnreadablePointer.location"
		},
		"2025": {
			"sourceFileName": "lib/evm/index.ts",
			"qualifiedName": ""
		},
		"2026": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": ""
		},
		"2027": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": "keccak256"
		},
		"2028": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": "keccak256"
		},
		"2029": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": "args"
		},
		"2030": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": "equalData"
		},
		"2031": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": "equalData"
		},
		"2032": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": "bytes1"
		},
		"2033": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": "bytes2"
		},
		"2034": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": "toAddress"
		},
		"2035": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": "toAddress"
		},
		"2036": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": "bytes"
		},
		"2037": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": "WORD_SIZE"
		},
		"2038": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": "ADDRESS_SIZE"
		},
		"2039": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": "SELECTOR_SIZE"
		},
		"2040": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": "PC_SIZE"
		},
		"2041": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": "MAX_WORD"
		},
		"2042": {
			"sourceFileName": "lib/evm/utils.ts",
			"qualifiedName": "ZERO_ADDRESS"
		},
		"2043": {
			"sourceFileName": "lib/evm/import/index.ts",
			"qualifiedName": ""
		},
		"2044": {
			"sourceFileName": "lib/evm/import/index.ts",
			"qualifiedName": "functionTableEntryToType"
		},
		"2045": {
			"sourceFileName": "lib/evm/import/index.ts",
			"qualifiedName": "functionTableEntryToType"
		},
		"2046": {
			"sourceFileName": "lib/evm/import/index.ts",
			"qualifiedName": "functionEntry"
		},
		"2047": {
			"sourceFileName": "lib/evm/import/index.ts",
			"qualifiedName": "makeInternalFunctionId"
		},
		"2048": {
			"sourceFileName": "lib/evm/import/index.ts",
			"qualifiedName": "makeInternalFunctionId"
		},
		"2049": {
			"sourceFileName": "lib/evm/import/index.ts",
			"qualifiedName": "functionEntry"
		},
		"2050": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmState"
		},
		"2051": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmState.storage"
		},
		"2052": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmState.stack"
		},
		"2053": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmState.memory"
		},
		"2054": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmState.calldata"
		},
		"2055": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmState.code"
		},
		"2056": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmState.specials"
		},
		"2057": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "__type"
		},
		"2058": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "__type.__index"
		},
		"2060": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmState.eventdata"
		},
		"2061": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmState.eventtopics"
		},
		"2062": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmState.returndata"
		},
		"2063": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "WordMapping"
		},
		"2064": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "WordMapping.__index"
		},
		"2066": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmInfo"
		},
		"2067": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmInfo.state"
		},
		"2068": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmInfo.mappingKeys"
		},
		"2069": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmInfo.userDefinedTypes"
		},
		"2070": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmInfo.allocations"
		},
		"2071": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmInfo.contexts"
		},
		"2072": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmInfo.currentContext"
		},
		"2073": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmInfo.internalFunctionsTable"
		},
		"2074": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "EvmInfo.internalFunctionsTableKind"
		},
		"2075": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunctionsTableKind"
		},
		"2076": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "AllocationInfo"
		},
		"2077": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "AllocationInfo.storage"
		},
		"2078": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "AllocationInfo.memory"
		},
		"2079": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "AllocationInfo.abi"
		},
		"2080": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "AllocationInfo.calldata"
		},
		"2081": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "AllocationInfo.returndata"
		},
		"2082": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "AllocationInfo.event"
		},
		"2083": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "AllocationInfo.state"
		},
		"2084": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunctions"
		},
		"2085": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunctions.__index"
		},
		"2087": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunction"
		},
		"2088": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunction.sourceIndex"
		},
		"2089": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunction.compilationId"
		},
		"2090": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunction.pointer"
		},
		"2091": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunction.node"
		},
		"2092": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunction.name"
		},
		"2093": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunction.id"
		},
		"2094": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunction.mutability"
		},
		"2095": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunction.contractPointer"
		},
		"2096": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunction.contractNode"
		},
		"2097": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunction.contractName"
		},
		"2098": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunction.contractId"
		},
		"2099": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunction.contractKind"
		},
		"2100": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunction.contractPayable"
		},
		"2101": {
			"sourceFileName": "lib/evm/types.ts",
			"qualifiedName": "InternalFunction.isDesignatedInvalid"
		},
		"2102": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": ""
		},
		"2103": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "nativize"
		},
		"2104": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "nativize"
		},
		"2105": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "result"
		},
		"2106": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "options"
		},
		"2107": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "nativizeReturn"
		},
		"2108": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "nativizeReturn"
		},
		"2109": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "decoding"
		},
		"2110": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "options"
		},
		"2111": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "nativizeEventArgs"
		},
		"2112": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "nativizeEventArgs"
		},
		"2113": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "decoding"
		},
		"2114": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "options"
		},
		"2115": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "containsDeliberateReadError"
		},
		"2116": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "containsDeliberateReadError"
		},
		"2117": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "result"
		},
		"2126": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "ResultInspector"
		},
		"2127": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "ResultInspectorOptions"
		},
		"2128": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "unsafeNativize"
		},
		"2129": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "unsafeNativizeVariables"
		},
		"2130": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "nativizeAccessList"
		},
		"2131": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "stringValueInfoToStringLossy"
		},
		"2132": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "NativizeOptions"
		},
		"2133": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "NativizeOptions.numberFormatter"
		},
		"2134": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "NativizeOptions.format"
		},
		"2135": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "CalldataDecodingInspector"
		},
		"2136": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "CalldataDecodingInspector.__constructor"
		},
		"2137": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "CalldataDecodingInspector"
		},
		"2138": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "decoding"
		},
		"2139": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "options"
		},
		"2140": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "CalldataDecodingInspector.decoding"
		},
		"2141": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "CalldataDecodingInspector.options"
		},
		"2142": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "CalldataDecodingInspector.inspect"
		},
		"2143": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "CalldataDecodingInspector.inspect"
		},
		"2144": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "depth"
		},
		"2145": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "options"
		},
		"2146": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "CalldataDecodingInspector.[custom]"
		},
		"2147": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "CalldataDecodingInspector.[custom]"
		},
		"2148": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "depth"
		},
		"2149": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "options"
		},
		"2150": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "LogDecodingInspector"
		},
		"2151": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "LogDecodingInspector.__constructor"
		},
		"2152": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "LogDecodingInspector"
		},
		"2153": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "decoding"
		},
		"2154": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "options"
		},
		"2155": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "LogDecodingInspector.decoding"
		},
		"2156": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "LogDecodingInspector.options"
		},
		"2157": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "LogDecodingInspector.inspect"
		},
		"2158": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "LogDecodingInspector.inspect"
		},
		"2159": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "depth"
		},
		"2160": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "options"
		},
		"2161": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "LogDecodingInspector.[custom]"
		},
		"2162": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "LogDecodingInspector.[custom]"
		},
		"2163": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "depth"
		},
		"2164": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "options"
		},
		"2165": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "ReturndataDecodingInspector"
		},
		"2166": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "ReturndataDecodingInspector.__constructor"
		},
		"2167": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "ReturndataDecodingInspector"
		},
		"2168": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "decoding"
		},
		"2169": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "options"
		},
		"2170": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "ReturndataDecodingInspector.decoding"
		},
		"2171": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "ReturndataDecodingInspector.options"
		},
		"2172": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "ReturndataDecodingInspector.inspect"
		},
		"2173": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "ReturndataDecodingInspector.inspect"
		},
		"2174": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "depth"
		},
		"2175": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "options"
		},
		"2176": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "ReturndataDecodingInspector.[custom]"
		},
		"2177": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "ReturndataDecodingInspector.[custom]"
		},
		"2178": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "depth"
		},
		"2179": {
			"sourceFileName": "lib/export.ts",
			"qualifiedName": "options"
		},
		"2180": {
			"sourceFileName": "lib/wrap/index.ts",
			"qualifiedName": ""
		},
		"2181": {
			"sourceFileName": "lib/wrap/index.ts",
			"qualifiedName": "wrapMultiple"
		},
		"2182": {
			"sourceFileName": "lib/wrap/index.ts",
			"qualifiedName": "wrapMultiple"
		},
		"2183": {
			"sourceFileName": "lib/wrap/index.ts",
			"qualifiedName": "types"
		},
		"2184": {
			"sourceFileName": "lib/wrap/index.ts",
			"qualifiedName": "inputs"
		},
		"2185": {
			"sourceFileName": "lib/wrap/index.ts",
			"qualifiedName": "wrapOptions"
		},
		"2186": {
			"sourceFileName": "lib/wrap/index.ts",
			"qualifiedName": "wrapForMethod"
		},
		"2187": {
			"sourceFileName": "lib/wrap/index.ts",
			"qualifiedName": "wrapForMethod"
		},
		"2188": {
			"sourceFileName": "lib/wrap/index.ts",
			"qualifiedName": "method"
		},
		"2189": {
			"sourceFileName": "lib/wrap/index.ts",
			"qualifiedName": "inputs"
		},
		"2190": {
			"sourceFileName": "lib/wrap/index.ts",
			"qualifiedName": "resolveOptions"
		},
		"2191": {
			"sourceFileName": "lib/wrap/index.ts",
			"qualifiedName": "resolveAndWrap"
		},
		"2192": {
			"sourceFileName": "lib/wrap/index.ts",
			"qualifiedName": "resolveAndWrap"
		},
		"2193": {
			"sourceFileName": "lib/wrap/index.ts",
			"qualifiedName": "methods"
		},
		"2194": {
			"sourceFileName": "lib/wrap/index.ts",
			"qualifiedName": "inputs"
		},
		"2195": {
			"sourceFileName": "lib/wrap/index.ts",
			"qualifiedName": "__2"
		},
		"2196": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "NoOverloadsMatchedError"
		},
		"2197": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "NoOverloadsMatchedError.__constructor"
		},
		"2198": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "NoOverloadsMatchedError"
		},
		"2199": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "methods"
		},
		"2200": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "inputs"
		},
		"2201": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "userDefinedTypes"
		},
		"2202": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "NoOverloadsMatchedError.methods"
		},
		"2203": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "NoOverloadsMatchedError.inputs"
		},
		"2204": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "NoOverloadsMatchedError.userDefinedTypes"
		},
		"2205": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "NoUniqueBestOverloadError"
		},
		"2206": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "NoUniqueBestOverloadError.__constructor"
		},
		"2207": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "NoUniqueBestOverloadError"
		},
		"2208": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "resolutions"
		},
		"2209": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "NoUniqueBestOverloadError.resolutions"
		},
		"2210": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "TypeMismatchError"
		},
		"2211": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "TypeMismatchError.__constructor"
		},
		"2212": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "TypeMismatchError"
		},
		"2213": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "dataType"
		},
		"2214": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "input"
		},
		"2215": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "variableName"
		},
		"2216": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "specificity"
		},
		"2217": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "reason"
		},
		"2218": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "TypeMismatchError.variableName"
		},
		"2219": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "TypeMismatchError.reason"
		},
		"2220": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "TypeMismatchError.dataType"
		},
		"2221": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "TypeMismatchError.input"
		},
		"2222": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "TypeMismatchError.specificity"
		},
		"2223": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "BadResponseTypeError"
		},
		"2224": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "BadResponseTypeError.__constructor"
		},
		"2225": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "BadResponseTypeError"
		},
		"2226": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "request"
		},
		"2227": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "response"
		},
		"2228": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "BadResponseTypeError.request"
		},
		"2229": {
			"sourceFileName": "lib/wrap/errors.ts",
			"qualifiedName": "BadResponseTypeError.response"
		},
		"2230": {
			"sourceFileName": "lib/wrap/wrap.ts",
			"qualifiedName": "wrap"
		},
		"2231": {
			"sourceFileName": "lib/wrap/wrap.ts",
			"qualifiedName": "wrap"
		},
		"2232": {
			"sourceFileName": "lib/wrap/wrap.ts",
			"qualifiedName": "dataType"
		},
		"2233": {
			"sourceFileName": "lib/wrap/wrap.ts",
			"qualifiedName": "input"
		},
		"2234": {
			"sourceFileName": "lib/wrap/wrap.ts",
			"qualifiedName": "wrapOptions"
		},
		"2235": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": ""
		},
		"2236": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "wrongArrayLengthMessage"
		},
		"2237": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "wrongArrayLengthMessage"
		},
		"2238": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "expected"
		},
		"2239": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "got"
		},
		"2240": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "wrappedTypeMessage"
		},
		"2241": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "wrappedTypeMessage"
		},
		"2242": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "dataType"
		},
		"2243": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "specifiedTypeMessage"
		},
		"2244": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "specifiedTypeMessage"
		},
		"2245": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "dataType"
		},
		"2246": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "overlongMessage"
		},
		"2247": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "overlongMessage"
		},
		"2248": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "expected"
		},
		"2249": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "got"
		},
		"2250": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "tooPreciseMessage"
		},
		"2251": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "tooPreciseMessage"
		},
		"2252": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "expected"
		},
		"2253": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "got"
		},
		"2254": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "notABytestringMessage"
		},
		"2255": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "notABytestringMessage"
		},
		"2256": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "what"
		},
		"2257": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "wrongLengthMessage"
		},
		"2258": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "wrongLengthMessage"
		},
		"2259": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "what"
		},
		"2260": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "expected"
		},
		"2261": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "got"
		},
		"2262": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "unrecognizedNumberMessage"
		},
		"2263": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "unrecognizedNumberMessage"
		},
		"2264": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "dataType"
		},
		"2265": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "errorResultMessage"
		},
		"2266": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "notAStringMessage"
		},
		"2267": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "nonIntegerMessage"
		},
		"2268": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "nonNumericMessage"
		},
		"2269": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "nonSafeMessage"
		},
		"2270": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "badEnumMessage"
		},
		"2271": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "outOfRangeMessage"
		},
		"2272": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "outOfRangeEnumMessage"
		},
		"2273": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "checksumFailedMessage"
		},
		"2274": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "invalidUtf16Message"
		},
		"2275": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "looseModeOnlyMessage"
		},
		"2276": {
			"sourceFileName": "lib/wrap/messages.ts",
			"qualifiedName": "negativeBytesMessage"
		},
		"2277": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "Resolution"
		},
		"2278": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "Resolution.method"
		},
		"2279": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "Resolution.arguments"
		},
		"2280": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "Resolution.options"
		},
		"2281": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "Method"
		},
		"2282": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "Method.name"
		},
		"2283": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "Method.selector"
		},
		"2284": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "Method.inputs"
		},
		"2285": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "Method.abi"
		},
		"2286": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "WrapOptions"
		},
		"2287": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "WrapOptions.userDefinedTypes"
		},
		"2288": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "WrapOptions.name"
		},
		"2289": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "WrapOptions.loose"
		},
		"2290": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "WrapOptions.oldOptionsBehavior"
		},
		"2291": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "WrapOptions.specificityFloor"
		},
		"2292": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "WrapOptions.allowJson"
		},
		"2293": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "WrapOptions.strictBooleans"
		},
		"2294": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "ResolveOptions"
		},
		"2295": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "ResolveOptions.userDefinedTypes"
		},
		"2296": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "ResolveOptions.allowOptions"
		},
		"2297": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "ResolveOptions.allowJson"
		},
		"2298": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "ResolveOptions.strictBooleans"
		},
		"2299": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "Case"
		},
		"2300": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "__type"
		},
		"2301": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "__type"
		},
		"2302": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "dataType"
		},
		"2303": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "input"
		},
		"2304": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "options"
		},
		"2305": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "TypeType"
		},
		"2306": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "ValueType"
		},
		"2307": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "RequestType"
		},
		"2308": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "ContractInput"
		},
		"2309": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "ContractInput.address"
		},
		"2310": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "ContractInput.selector"
		},
		"2311": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "FunctionExternalInput"
		},
		"2312": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "FunctionExternalInput.address"
		},
		"2313": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "FunctionExternalInput.selector"
		},
		"2314": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "TypeValueInput"
		},
		"2315": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "TypeValueInput.type"
		},
		"2316": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "TypeValueInput.value"
		},
		"2317": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "EncodingTextInput"
		},
		"2318": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "EncodingTextInput.encoding"
		},
		"2319": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "EncodingTextInput.text"
		},
		"2320": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "Uint8ArrayLike"
		},
		"2321": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "Uint8ArrayLike.length"
		},
		"2322": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "Uint8ArrayLike.__index"
		},
		"2324": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "AddressLikeType"
		},
		"2325": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "AddressLikeValue"
		},
		"2326": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "IntegerType"
		},
		"2327": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "IntegerOrEnumType"
		},
		"2328": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "DecimalType"
		},
		"2329": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "NumericType"
		},
		"2330": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "IntegerValue"
		},
		"2331": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "IntegerOrEnumValue"
		},
		"2332": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "DecimalValue"
		},
		"2333": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "TupleLikeType"
		},
		"2334": {
			"sourceFileName": "lib/wrap/types.ts",
			"qualifiedName": "TupleLikeValue"
		},
		"2335": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Location"
		},
		"2336": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Visibility"
		},
		"2337": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Mutability"
		},
		"2338": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "ContractKind"
		},
		"2339": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "PaddingMode"
		},
		"2340": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "PaddingType"
		},
		"2341": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "UnknownUserDefinedTypeError"
		},
		"2342": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "UnknownUserDefinedTypeError.__constructor"
		},
		"2343": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "UnknownUserDefinedTypeError"
		},
		"2344": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "id"
		},
		"2345": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "typeString"
		},
		"2346": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "UnknownUserDefinedTypeError.typeString"
		},
		"2347": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "UnknownUserDefinedTypeError.id"
		},
		"2348": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Options"
		},
		"2349": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Options.from"
		},
		"2350": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Options.to"
		},
		"2351": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Options.gas"
		},
		"2352": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Options.gasPrice"
		},
		"2353": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Options.maxFeePerGas"
		},
		"2354": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Options.maxPriorityFeePerGas"
		},
		"2355": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Options.value"
		},
		"2356": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Options.data"
		},
		"2357": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Options.nonce"
		},
		"2358": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Options.type"
		},
		"2359": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Options.accessList"
		},
		"2360": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Options.privateFor"
		},
		"2361": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "Options.overwrite"
		},
		"2362": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "AccessList"
		},
		"2363": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "AccessListForAddress"
		},
		"2364": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "AccessListForAddress.address"
		},
		"2365": {
			"sourceFileName": "lib/common/types.ts",
			"qualifiedName": "AccessListForAddress.storageKeys"
		},
		"2366": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder"
		},
		"2367": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.__constructor"
		},
		"2368": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder"
		},
		"2369": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "contract"
		},
		"2370": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "compilation"
		},
		"2371": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "projectDecoder"
		},
		"2372": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "artifact"
		},
		"2373": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.providerAdapter"
		},
		"2374": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.contexts"
		},
		"2375": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.compilation"
		},
		"2376": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.contract"
		},
		"2377": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.artifact"
		},
		"2378": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.contractNode"
		},
		"2379": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.contractNetwork"
		},
		"2380": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.contextHash"
		},
		"2381": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.allocations"
		},
		"2382": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.noBytecodeAllocations"
		},
		"2383": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type"
		},
		"2384": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2386": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.userDefinedTypes"
		},
		"2387": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.stateVariableReferences"
		},
		"2388": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.projectDecoder"
		},
		"2389": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.init"
		},
		"2390": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.init"
		},
		"2391": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.context"
		},
		"2392": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.context"
		},
		"2393": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.decodeReturnValue"
		},
		"2394": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.decodeReturnValue"
		},
		"2395": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "abi"
		},
		"2396": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "data"
		},
		"2397": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "options"
		},
		"2398": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.decodeReturnValueWithAdditionalContexts"
		},
		"2399": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.decodeReturnValueWithAdditionalContexts"
		},
		"2400": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "abi"
		},
		"2401": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "data"
		},
		"2402": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "options"
		},
		"2403": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalContexts"
		},
		"2404": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.forInstance"
		},
		"2405": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.forInstance"
		},
		"2406": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "address"
		},
		"2407": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.getCode"
		},
		"2408": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.getCode"
		},
		"2409": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "address"
		},
		"2410": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "block"
		},
		"2411": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.reverseEnsResolve"
		},
		"2412": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.reverseEnsResolve"
		},
		"2413": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "address"
		},
		"2414": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.regularizeBlock"
		},
		"2415": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.regularizeBlock"
		},
		"2416": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "block"
		},
		"2417": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.decodeTransaction"
		},
		"2418": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.decodeTransaction"
		},
		"2419": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "transaction"
		},
		"2420": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.decodeLog"
		},
		"2421": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.decodeLog"
		},
		"2422": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "log"
		},
		"2423": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "options"
		},
		"2424": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.events"
		},
		"2425": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.events"
		},
		"2426": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "options"
		},
		"2427": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.abifyCalldataDecoding"
		},
		"2428": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.abifyCalldataDecoding"
		},
		"2429": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "decoding"
		},
		"2430": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.abifyLogDecoding"
		},
		"2431": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.abifyLogDecoding"
		},
		"2432": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "decoding"
		},
		"2433": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.abifyReturndataDecoding"
		},
		"2434": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.abifyReturndataDecoding"
		},
		"2435": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "decoding"
		},
		"2436": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.getAllocations"
		},
		"2437": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.getAllocations"
		},
		"2438": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.getStateVariableReferences"
		},
		"2439": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.getStateVariableReferences"
		},
		"2440": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.getProjectDecoder"
		},
		"2441": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.getProjectDecoder"
		},
		"2442": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.getNoBytecodeAllocations"
		},
		"2443": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.getNoBytecodeAllocations"
		},
		"2444": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type"
		},
		"2445": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2447": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.getContractInfo"
		},
		"2448": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractDecoder.getContractInfo"
		},
		"2449": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder"
		},
		"2450": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.__constructor"
		},
		"2451": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder"
		},
		"2452": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "contractDecoder"
		},
		"2453": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "address"
		},
		"2454": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.providerAdapter"
		},
		"2455": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.compilation"
		},
		"2456": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.contract"
		},
		"2457": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.contractNode"
		},
		"2458": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.contractNetwork"
		},
		"2459": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.contractAddress"
		},
		"2460": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.contractCode"
		},
		"2461": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.contextHash"
		},
		"2462": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.compiler"
		},
		"2463": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.contexts"
		},
		"2464": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.additionalContexts"
		},
		"2465": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.referenceDeclarations"
		},
		"2466": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type"
		},
		"2467": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2469": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.userDefinedTypes"
		},
		"2470": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.allocations"
		},
		"2471": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.stateVariableReferences"
		},
		"2472": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.internalFunctionsTable"
		},
		"2473": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.internalFunctionsTableKind"
		},
		"2474": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.mappingKeys"
		},
		"2475": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.storageCache"
		},
		"2476": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.contractDecoder"
		},
		"2477": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.projectDecoder"
		},
		"2478": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.encoder"
		},
		"2479": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.init"
		},
		"2480": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.init"
		},
		"2481": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.context"
		},
		"2482": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.context"
		},
		"2483": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.checkAllocationSuccess"
		},
		"2484": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.checkAllocationSuccess"
		},
		"2485": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.decodeVariable"
		},
		"2486": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.decodeVariable"
		},
		"2487": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "variable"
		},
		"2488": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "block"
		},
		"2489": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.state"
		},
		"2490": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.state"
		},
		"2491": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "block"
		},
		"2492": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.variables"
		},
		"2493": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.variables"
		},
		"2494": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "block"
		},
		"2495": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.variable"
		},
		"2496": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.variable"
		},
		"2497": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "nameOrId"
		},
		"2498": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "block"
		},
		"2499": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.findVariableByNameOrId"
		},
		"2500": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.findVariableByNameOrId"
		},
		"2501": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "nameOrId"
		},
		"2502": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.getStorage"
		},
		"2503": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.getStorage"
		},
		"2504": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "address"
		},
		"2505": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "slot"
		},
		"2506": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "block"
		},
		"2507": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.getCode"
		},
		"2508": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.getCode"
		},
		"2509": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "address"
		},
		"2510": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "block"
		},
		"2511": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.reverseEnsResolve"
		},
		"2512": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.reverseEnsResolve"
		},
		"2513": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "address"
		},
		"2514": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.regularizeBlock"
		},
		"2515": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.regularizeBlock"
		},
		"2516": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "block"
		},
		"2517": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.watchMappingKey"
		},
		"2518": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.watchMappingKey"
		},
		"2519": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "variable"
		},
		"2520": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "indices"
		},
		"2521": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.unwatchMappingKey"
		},
		"2522": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.unwatchMappingKey"
		},
		"2523": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "variable"
		},
		"2524": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "indices"
		},
		"2525": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.decodeTransaction"
		},
		"2526": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.decodeTransaction"
		},
		"2527": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "transaction"
		},
		"2528": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.decodeLog"
		},
		"2529": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.decodeLog"
		},
		"2530": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "log"
		},
		"2531": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "options"
		},
		"2532": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.decodeReturnValue"
		},
		"2533": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.decodeReturnValue"
		},
		"2534": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "abi"
		},
		"2535": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "data"
		},
		"2536": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "options"
		},
		"2537": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.abifyCalldataDecoding"
		},
		"2538": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.abifyCalldataDecoding"
		},
		"2539": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "decoding"
		},
		"2540": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.abifyLogDecoding"
		},
		"2541": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.abifyLogDecoding"
		},
		"2542": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "decoding"
		},
		"2543": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.abifyReturndataDecoding"
		},
		"2544": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.abifyReturndataDecoding"
		},
		"2545": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "decoding"
		},
		"2546": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.events"
		},
		"2547": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.events"
		},
		"2548": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "options"
		},
		"2549": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.constructSlot"
		},
		"2550": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ContractInstanceDecoder.constructSlot"
		},
		"2551": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "variable"
		},
		"2552": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "indices"
		},
		"2553": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type"
		},
		"2554": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.slot"
		},
		"2555": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.type"
		},
		"2556": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder"
		},
		"2557": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.__constructor"
		},
		"2558": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder"
		},
		"2559": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "compilations"
		},
		"2560": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "provider"
		},
		"2561": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ensSettings"
		},
		"2562": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "selectorDirectory"
		},
		"2563": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.providerAdapter"
		},
		"2564": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.compilations"
		},
		"2565": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.contexts"
		},
		"2566": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.deployedContexts"
		},
		"2567": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.contractsAndContexts"
		},
		"2568": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.referenceDeclarations"
		},
		"2569": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type"
		},
		"2570": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2572": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.userDefinedTypesByCompilation"
		},
		"2573": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.userDefinedTypes"
		},
		"2574": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.allocations"
		},
		"2575": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.codeCache"
		},
		"2576": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.ensCache"
		},
		"2577": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type"
		},
		"2578": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2580": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.ens"
		},
		"2581": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.ensSettings"
		},
		"2582": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.selectorDirectory"
		},
		"2583": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.addProjectInfoNonce"
		},
		"2584": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.init"
		},
		"2585": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.init"
		},
		"2586": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.addCompilations"
		},
		"2587": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.addCompilations"
		},
		"2588": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "compilations"
		},
		"2589": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.addAdditionalProjectInfo"
		},
		"2590": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.addAdditionalProjectInfo"
		},
		"2591": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "projectInfo"
		},
		"2592": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.getCode"
		},
		"2593": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.getCode"
		},
		"2594": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "address"
		},
		"2595": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "block"
		},
		"2596": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.regularizeBlock"
		},
		"2597": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.regularizeBlock"
		},
		"2598": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "block"
		},
		"2599": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.decodeTransaction"
		},
		"2600": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.decodeTransaction"
		},
		"2601": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "transaction"
		},
		"2602": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.reverseEnsResolve"
		},
		"2603": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.reverseEnsResolve"
		},
		"2604": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "address"
		},
		"2605": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.decodeTransactionWithAdditionalContexts"
		},
		"2606": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.decodeTransactionWithAdditionalContexts"
		},
		"2607": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "transaction"
		},
		"2608": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalContexts"
		},
		"2609": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalAllocations"
		},
		"2610": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type"
		},
		"2611": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2613": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "overrideContext"
		},
		"2614": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "isForSelectorBasedDecoding"
		},
		"2615": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.decodeLog"
		},
		"2616": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.decodeLog"
		},
		"2617": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "log"
		},
		"2618": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "options"
		},
		"2619": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.decodeLogWithAdditionalOptions"
		},
		"2620": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.decodeLogWithAdditionalOptions"
		},
		"2621": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "log"
		},
		"2622": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "options"
		},
		"2623": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalContexts"
		},
		"2624": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.events"
		},
		"2625": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.events"
		},
		"2626": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "options"
		},
		"2627": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.eventsWithAdditionalContexts"
		},
		"2628": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.eventsWithAdditionalContexts"
		},
		"2629": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "options"
		},
		"2630": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalContexts"
		},
		"2631": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.abifyCalldataDecoding"
		},
		"2632": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.abifyCalldataDecoding"
		},
		"2633": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "decoding"
		},
		"2634": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.abifyLogDecoding"
		},
		"2635": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.abifyLogDecoding"
		},
		"2636": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "decoding"
		},
		"2637": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.abifyReturndataDecoding"
		},
		"2638": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.abifyReturndataDecoding"
		},
		"2639": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "decoding"
		},
		"2640": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.getContextByAddress"
		},
		"2641": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.getContextByAddress"
		},
		"2642": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "address"
		},
		"2643": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "block"
		},
		"2644": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "constructorBinary"
		},
		"2645": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalContexts"
		},
		"2646": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.forArtifact"
		},
		"2647": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.forArtifact"
		},
		"2648": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "artifact"
		},
		"2649": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.forInstance"
		},
		"2650": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.forInstance"
		},
		"2651": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "artifact"
		},
		"2652": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "address"
		},
		"2653": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.forAddress"
		},
		"2654": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.forAddress"
		},
		"2655": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "address"
		},
		"2656": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "block"
		},
		"2657": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.getReferenceDeclarations"
		},
		"2658": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.getReferenceDeclarations"
		},
		"2659": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type"
		},
		"2660": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2662": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.getUserDefinedTypes"
		},
		"2663": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.getUserDefinedTypes"
		},
		"2664": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.getAllocations"
		},
		"2665": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.getAllocations"
		},
		"2666": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.getProviderAdapter"
		},
		"2667": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.getProviderAdapter"
		},
		"2668": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.getEnsSettings"
		},
		"2669": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.getEnsSettings"
		},
		"2670": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.getDeployedContexts"
		},
		"2671": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.getDeployedContexts"
		},
		"2672": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.withMulticallInterpretations"
		},
		"2673": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.withMulticallInterpretations"
		},
		"2674": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "decoding"
		},
		"2675": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "transaction"
		},
		"2676": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalContexts"
		},
		"2677": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalAllocations"
		},
		"2678": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type"
		},
		"2679": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2681": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "overrideContext"
		},
		"2682": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.interpretMulticall"
		},
		"2683": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.interpretMulticall"
		},
		"2684": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "decoding"
		},
		"2685": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "transaction"
		},
		"2686": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalContexts"
		},
		"2687": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalAllocations"
		},
		"2688": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type"
		},
		"2689": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2691": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "overrideContext"
		},
		"2692": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.interpretCallInMulti"
		},
		"2693": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.interpretCallInMulti"
		},
		"2694": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "callResult"
		},
		"2695": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "transaction"
		},
		"2696": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalContexts"
		},
		"2697": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalAllocations"
		},
		"2698": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type"
		},
		"2699": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2701": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "overrideContext"
		},
		"2702": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.interpretAggregate"
		},
		"2703": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.interpretAggregate"
		},
		"2704": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "decoding"
		},
		"2705": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "transaction"
		},
		"2706": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalContexts"
		},
		"2707": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalAllocations"
		},
		"2708": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type"
		},
		"2709": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2711": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "overrideContext"
		},
		"2712": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.interpretCallInAggregate"
		},
		"2713": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.interpretCallInAggregate"
		},
		"2714": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "callResult"
		},
		"2715": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "transaction"
		},
		"2716": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalContexts"
		},
		"2717": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalAllocations"
		},
		"2718": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type"
		},
		"2719": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2721": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "overrideContext"
		},
		"2722": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.interpretTryAggregate"
		},
		"2723": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.interpretTryAggregate"
		},
		"2724": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "decoding"
		},
		"2725": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "transaction"
		},
		"2726": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalContexts"
		},
		"2727": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalAllocations"
		},
		"2728": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type"
		},
		"2729": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2731": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "overrideContext"
		},
		"2732": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.interpretDeadlinedMulticall"
		},
		"2733": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.interpretDeadlinedMulticall"
		},
		"2734": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "decoding"
		},
		"2735": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "transaction"
		},
		"2736": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalContexts"
		},
		"2737": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalAllocations"
		},
		"2738": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type"
		},
		"2739": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2741": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "overrideContext"
		},
		"2742": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.interpretBlockhashedMulticall"
		},
		"2743": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.interpretBlockhashedMulticall"
		},
		"2744": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "decoding"
		},
		"2745": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "transaction"
		},
		"2746": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalContexts"
		},
		"2747": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalAllocations"
		},
		"2748": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type"
		},
		"2749": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2751": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "overrideContext"
		},
		"2752": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.decodeTransactionBySelector"
		},
		"2753": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "ProjectDecoder.decodeTransactionBySelector"
		},
		"2754": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "transaction"
		},
		"2755": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "data"
		},
		"2756": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "additionalContexts"
		},
		"2757": {
			"sourceFileName": "../decoder/lib/decoders.ts",
			"qualifiedName": "context"
		},
		"2758": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractBeingDecodedHasNoNodeError"
		},
		"2759": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractBeingDecodedHasNoNodeError.__constructor"
		},
		"2760": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractBeingDecodedHasNoNodeError"
		},
		"2761": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "contractName"
		},
		"2762": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "compilationId"
		},
		"2763": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractBeingDecodedHasNoNodeError.contractName"
		},
		"2764": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractBeingDecodedHasNoNodeError.compilationId"
		},
		"2765": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractNotFoundError"
		},
		"2766": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractNotFoundError.__constructor"
		},
		"2767": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractNotFoundError"
		},
		"2768": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "contractName"
		},
		"2769": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "bytecode"
		},
		"2770": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "deployedBytecode"
		},
		"2771": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "address"
		},
		"2772": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractNotFoundError.contractName"
		},
		"2773": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractNotFoundError.bytecode"
		},
		"2774": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractNotFoundError.deployedBytecode"
		},
		"2775": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractNotFoundError.address"
		},
		"2776": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractAllocationFailedError"
		},
		"2777": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractAllocationFailedError.__constructor"
		},
		"2778": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractAllocationFailedError"
		},
		"2779": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "id"
		},
		"2780": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "contractName"
		},
		"2781": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "compilationId"
		},
		"2782": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractAllocationFailedError.id"
		},
		"2783": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractAllocationFailedError.contractName"
		},
		"2784": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "ContractAllocationFailedError.compilationId"
		},
		"2785": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "InvalidAddressError"
		},
		"2786": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "InvalidAddressError.__constructor"
		},
		"2787": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "InvalidAddressError"
		},
		"2788": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "address"
		},
		"2789": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "InvalidAddressError.address"
		},
		"2790": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "VariableNotFoundError"
		},
		"2791": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "VariableNotFoundError.__constructor"
		},
		"2792": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "VariableNotFoundError"
		},
		"2793": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "nameOrId"
		},
		"2794": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "VariableNotFoundError.nameOrId"
		},
		"2795": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "NoProviderError"
		},
		"2796": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "NoProviderError.__constructor"
		},
		"2797": {
			"sourceFileName": "../decoder/lib/errors.ts",
			"qualifiedName": "NoProviderError"
		},
		"2798": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "ContractState"
		},
		"2799": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "ContractState.class"
		},
		"2800": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "ContractState.address"
		},
		"2801": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "ContractState.balanceAsBN"
		},
		"2802": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "ContractState.nonceAsBN"
		},
		"2803": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "ContractState.code"
		},
		"2804": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "StateVariable"
		},
		"2805": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecodedLog"
		},
		"2806": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecodedLog.address"
		},
		"2807": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecodedLog.data"
		},
		"2808": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecodedLog.topics"
		},
		"2809": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecodedLog.logIndex"
		},
		"2810": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecodedLog.transactionIndex"
		},
		"2811": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecodedLog.transactionHash"
		},
		"2812": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecodedLog.blockHash"
		},
		"2813": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecodedLog.blockNumber"
		},
		"2814": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecodedLog.decodings"
		},
		"2815": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "EventOptions"
		},
		"2816": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "EventOptions.name"
		},
		"2817": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "EventOptions.fromBlock"
		},
		"2818": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "EventOptions.toBlock"
		},
		"2819": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "EventOptions.address"
		},
		"2820": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "EventOptions.extras"
		},
		"2821": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "EventOptions.disableChecks"
		},
		"2822": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "ReturnOptions"
		},
		"2823": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "ReturnOptions.block"
		},
		"2824": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "ReturnOptions.status"
		},
		"2825": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecodeLogOptions"
		},
		"2826": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecodeLogOptions.extras"
		},
		"2827": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecodeLogOptions.disableChecks"
		},
		"2828": {
			"sourceFileName": "../decoder/lib/index.ts",
			"qualifiedName": "ExtrasAllowed"
		},
		"2829": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Transaction"
		},
		"2830": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Transaction.hash"
		},
		"2831": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Transaction.nonce"
		},
		"2832": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Transaction.blockHash"
		},
		"2833": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Transaction.blockNumber"
		},
		"2834": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Transaction.transactionIndex"
		},
		"2835": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Transaction.from"
		},
		"2836": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Transaction.to"
		},
		"2837": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Transaction.value"
		},
		"2838": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Transaction.gasPrice"
		},
		"2839": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Transaction.gas"
		},
		"2840": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Transaction.input"
		},
		"2841": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Transaction.type"
		},
		"2842": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Transaction.maxFeePerGas"
		},
		"2843": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Transaction.maxPriorityFeePerGas"
		},
		"2844": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Log"
		},
		"2845": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Log.address"
		},
		"2846": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Log.data"
		},
		"2847": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Log.topics"
		},
		"2848": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Log.logIndex"
		},
		"2849": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Log.transactionIndex"
		},
		"2850": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Log.transactionHash"
		},
		"2851": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Log.blockHash"
		},
		"2852": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "Log.blockNumber"
		},
		"2853": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "EnsSettings"
		},
		"2854": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "EnsSettings.provider"
		},
		"2855": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "EnsSettings.registryAddress"
		},
		"2856": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecoderSettings"
		},
		"2857": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecoderSettings.projectInfo"
		},
		"2858": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecoderSettings.provider"
		},
		"2859": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecoderSettings.ens"
		},
		"2860": {
			"sourceFileName": "../decoder/lib/types.ts",
			"qualifiedName": "DecoderSettings.selectorDirectory"
		},
		"2861": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder"
		},
		"2862": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.__constructor"
		},
		"2863": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder"
		},
		"2864": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "info"
		},
		"2865": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.provider"
		},
		"2866": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.ens"
		},
		"2867": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.registryAddress"
		},
		"2868": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.ensCache"
		},
		"2869": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.allocations"
		},
		"2870": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.userDefinedTypes"
		},
		"2871": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.networkId"
		},
		"2872": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.referenceDeclarations"
		},
		"2873": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "__type"
		},
		"2874": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2876": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.compilations"
		},
		"2877": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.contractsAndContexts"
		},
		"2878": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.getAllocations"
		},
		"2879": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.getAllocations"
		},
		"2880": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.getUserDefinedTypes"
		},
		"2881": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.getUserDefinedTypes"
		},
		"2882": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.getNetworkId"
		},
		"2883": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.getNetworkId"
		},
		"2884": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.getReferenceDeclarations"
		},
		"2885": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.getReferenceDeclarations"
		},
		"2886": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "__type"
		},
		"2887": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2889": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.init"
		},
		"2890": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.init"
		},
		"2891": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.wrapElementaryValue"
		},
		"2892": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.wrapElementaryValue"
		},
		"2893": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "dataType"
		},
		"2894": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "input"
		},
		"2895": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.wrap"
		},
		"2896": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.wrap"
		},
		"2897": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "dataType"
		},
		"2898": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "input"
		},
		"2899": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.wrapForTransaction"
		},
		"2900": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.wrapForTransaction"
		},
		"2901": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "method"
		},
		"2902": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "inputs"
		},
		"2903": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "options"
		},
		"2904": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.resolveAndWrap"
		},
		"2905": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.resolveAndWrap"
		},
		"2906": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "methods"
		},
		"2907": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "inputs"
		},
		"2908": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "options"
		},
		"2909": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.driveGenerator"
		},
		"2910": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.driveGenerator"
		},
		"2911": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "T"
		},
		"2912": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "generator"
		},
		"2913": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.respond"
		},
		"2914": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.respond"
		},
		"2915": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "request"
		},
		"2916": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.encodeTxNoResolution"
		},
		"2917": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.encodeTxNoResolution"
		},
		"2918": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "method"
		},
		"2919": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "inputs"
		},
		"2920": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "options"
		},
		"2921": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.encodeTransaction"
		},
		"2922": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.encodeTransaction"
		},
		"2923": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "methods"
		},
		"2924": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "inputs"
		},
		"2925": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "options"
		},
		"2926": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.recognizeInteger"
		},
		"2927": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.recognizeInteger"
		},
		"2928": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "input"
		},
		"2929": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.recognizeDecimal"
		},
		"2930": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.recognizeDecimal"
		},
		"2931": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "input"
		},
		"2932": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.recognizeAddress"
		},
		"2933": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.recognizeAddress"
		},
		"2934": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "input"
		},
		"2935": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.resolveEnsName"
		},
		"2936": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.resolveEnsName"
		},
		"2937": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "input"
		},
		"2938": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.forArtifact"
		},
		"2939": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.forArtifact"
		},
		"2940": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "artifact"
		},
		"2941": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.forContract"
		},
		"2942": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.forContract"
		},
		"2943": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "contract"
		},
		"2944": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.forInstance"
		},
		"2945": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.forInstance"
		},
		"2946": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "artifact"
		},
		"2947": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "address"
		},
		"2948": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.forAddress"
		},
		"2949": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ProjectEncoder.forAddress"
		},
		"2950": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "address"
		},
		"2951": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "block"
		},
		"2952": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder"
		},
		"2953": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.__constructor"
		},
		"2954": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder"
		},
		"2955": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "projectEncoder"
		},
		"2956": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "compilation"
		},
		"2957": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "contract"
		},
		"2958": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "artifact"
		},
		"2959": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.projectEncoder"
		},
		"2960": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.contract"
		},
		"2961": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.abi"
		},
		"2962": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.artifact"
		},
		"2963": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.constructorBinary"
		},
		"2964": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.constructorContextHash"
		},
		"2965": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.deployedContextHash"
		},
		"2966": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.noBytecodeAllocations"
		},
		"2967": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "__type"
		},
		"2968": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "__type.__index"
		},
		"2970": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.contractNode"
		},
		"2971": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.compilation"
		},
		"2972": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.getProjectEncoder"
		},
		"2973": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.getProjectEncoder"
		},
		"2974": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.wrapElementaryValue"
		},
		"2975": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.wrapElementaryValue"
		},
		"2976": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "dataType"
		},
		"2977": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "input"
		},
		"2978": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.wrap"
		},
		"2979": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.wrap"
		},
		"2980": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "dataType"
		},
		"2981": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "input"
		},
		"2982": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.wrapForTransaction"
		},
		"2983": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.wrapForTransaction"
		},
		"2984": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "abi"
		},
		"2985": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "inputs"
		},
		"2986": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "options"
		},
		"2987": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.resolveAndWrap"
		},
		"2988": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.resolveAndWrap"
		},
		"2989": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "abisOrNameOrSig"
		},
		"2990": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "inputs"
		},
		"2991": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "options"
		},
		"2992": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.encodeTxNoResolution"
		},
		"2993": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.encodeTxNoResolution"
		},
		"2994": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "abi"
		},
		"2995": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "inputs"
		},
		"2996": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "options"
		},
		"2997": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.encodeTransaction"
		},
		"2998": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.encodeTransaction"
		},
		"2999": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "abisOrNameOrSig"
		},
		"3000": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "inputs"
		},
		"3001": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "options"
		},
		"3002": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.encodeCreation"
		},
		"3003": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.encodeCreation"
		},
		"3004": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "inputs"
		},
		"3005": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "options"
		},
		"3006": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.forInstance"
		},
		"3007": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.forInstance"
		},
		"3008": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "address"
		},
		"3009": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.getAbis"
		},
		"3010": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.getAbis"
		},
		"3011": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "abisOrNameOrSig"
		},
		"3012": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.getMethod"
		},
		"3013": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.getMethod"
		},
		"3014": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "abi"
		},
		"3015": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.getConstructorMethod"
		},
		"3016": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.getConstructorMethod"
		},
		"3017": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "abi"
		},
		"3018": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.getConstructorAbi"
		},
		"3019": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractEncoder.getConstructorAbi"
		},
		"3020": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder"
		},
		"3021": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.__constructor"
		},
		"3022": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder"
		},
		"3023": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "contractEncoder"
		},
		"3024": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "toAddress"
		},
		"3025": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.contractEncoder"
		},
		"3026": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.toAddress"
		},
		"3027": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.wrapElementaryValue"
		},
		"3028": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.wrapElementaryValue"
		},
		"3029": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "dataType"
		},
		"3030": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "input"
		},
		"3031": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.wrap"
		},
		"3032": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.wrap"
		},
		"3033": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "dataType"
		},
		"3034": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "input"
		},
		"3035": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.wrapForTransaction"
		},
		"3036": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.wrapForTransaction"
		},
		"3037": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "abi"
		},
		"3038": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "inputs"
		},
		"3039": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "options"
		},
		"3040": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.resolveAndWrap"
		},
		"3041": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.resolveAndWrap"
		},
		"3042": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "abis"
		},
		"3043": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "inputs"
		},
		"3044": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "options"
		},
		"3045": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.encodeTxNoResolution"
		},
		"3046": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.encodeTxNoResolution"
		},
		"3047": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "abi"
		},
		"3048": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "inputs"
		},
		"3049": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "options"
		},
		"3050": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.encodeTransaction"
		},
		"3051": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.encodeTransaction"
		},
		"3052": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "abisOrNameOrSig"
		},
		"3053": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "inputs"
		},
		"3054": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "options"
		},
		"3055": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.encodeCreation"
		},
		"3056": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "ContractInstanceEncoder.encodeCreation"
		},
		"3057": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "inputs"
		},
		"3058": {
			"sourceFileName": "../encoder/lib/encoders.ts",
			"qualifiedName": "options"
		},
		"3059": {
			"sourceFileName": "../encoder/lib/types.ts",
			"qualifiedName": "EncoderSettings"
		},
		"3060": {
			"sourceFileName": "../encoder/lib/types.ts",
			"qualifiedName": "EncoderSettings.projectInfo"
		},
		"3061": {
			"sourceFileName": "../encoder/lib/types.ts",
			"qualifiedName": "EncoderSettings.provider"
		},
		"3062": {
			"sourceFileName": "../encoder/lib/types.ts",
			"qualifiedName": "EncoderSettings.networkId"
		},
		"3063": {
			"sourceFileName": "../encoder/lib/types.ts",
			"qualifiedName": "EncoderSettings.ens"
		},
		"3064": {
			"sourceFileName": "../encoder/lib/types.ts",
			"qualifiedName": "EnsSettings"
		},
		"3065": {
			"sourceFileName": "../encoder/lib/types.ts",
			"qualifiedName": "EnsSettings.provider"
		},
		"3066": {
			"sourceFileName": "../encoder/lib/types.ts",
			"qualifiedName": "EnsSettings.registryAddress"
		},
		"3067": {
			"sourceFileName": "../encoder/lib/types.ts",
			"qualifiedName": "TxAndAbi"
		},
		"3068": {
			"sourceFileName": "../encoder/lib/types.ts",
			"qualifiedName": "TxAndAbi.tx"
		},
		"3069": {
			"sourceFileName": "../encoder/lib/types.ts",
			"qualifiedName": "TxAndAbi.abi"
		},
		"3077": {
			"sourceFileName": "../encoder/lib/types.ts",
			"qualifiedName": "ResolveOptions"
		},
		"3078": {
			"sourceFileName": "../encoder/lib/types.ts",
			"qualifiedName": "ResolveOptions.allowOptions"
		},
		"3079": {
			"sourceFileName": "../encoder/lib/types.ts",
			"qualifiedName": "ResolveOptions.allowJson"
		},
		"3080": {
			"sourceFileName": "../encoder/lib/types.ts",
			"qualifiedName": "ResolveOptions.strictBooleans"
		},
		"3081": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "InvalidAddressError"
		},
		"3082": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "InvalidAddressError.__constructor"
		},
		"3083": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "InvalidAddressError"
		},
		"3084": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "address"
		},
		"3085": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "InvalidAddressError.address"
		},
		"3086": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "NoInternalInfoError"
		},
		"3087": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "NoInternalInfoError.__constructor"
		},
		"3088": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "NoInternalInfoError"
		},
		"3089": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "UnlinkedContractError"
		},
		"3090": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "UnlinkedContractError.__constructor"
		},
		"3091": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "UnlinkedContractError"
		},
		"3092": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "contractName"
		},
		"3093": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "bytecode"
		},
		"3094": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "UnlinkedContractError.contractName"
		},
		"3095": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "UnlinkedContractError.bytecode"
		},
		"3096": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "ContractNotFoundError"
		},
		"3097": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "ContractNotFoundError.__constructor"
		},
		"3098": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "ContractNotFoundError"
		},
		"3099": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "contractName"
		},
		"3100": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "bytecode"
		},
		"3101": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "deployedBytecode"
		},
		"3102": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "address"
		},
		"3103": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "ContractNotFoundError.contractName"
		},
		"3104": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "ContractNotFoundError.bytecode"
		},
		"3105": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "ContractNotFoundError.deployedBytecode"
		},
		"3106": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "ContractNotFoundError.address"
		},
		"3107": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "ContractNotDeployedError"
		},
		"3108": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "ContractNotDeployedError.__constructor"
		},
		"3109": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "ContractNotDeployedError"
		},
		"3110": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "contractName"
		},
		"3111": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "networkId"
		},
		"3112": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "ContractNotDeployedError.contractName"
		},
		"3113": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "ContractNotDeployedError.networkId"
		},
		"3114": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "NoFunctionByThatNameError"
		},
		"3115": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "NoFunctionByThatNameError.__constructor"
		},
		"3116": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "NoFunctionByThatNameError"
		},
		"3117": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "functionNameOrSig"
		},
		"3118": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "contractName"
		},
		"3119": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "NoFunctionByThatNameError.functionNameOrSig"
		},
		"3120": {
			"sourceFileName": "../encoder/lib/errors.ts",
			"qualifiedName": "NoFunctionByThatNameError.contractName"
		}
	}
}