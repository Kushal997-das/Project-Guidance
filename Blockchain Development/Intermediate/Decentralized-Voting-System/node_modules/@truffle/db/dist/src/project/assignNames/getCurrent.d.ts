import type { Resource } from "../../resources";
import * as Batch from "./batch";
export declare const process: <I extends Batch.Input<{
    assignment: {
        name: string;
        type: string;
    };
    properties: {
        current: Resource<"nameRecords"> | undefined;
    };
    entry: {
        name: string;
        type: string;
    };
    result: Resource<"nameRecords"> | undefined;
}>, O extends Batch.Output<{
    assignment: {
        name: string;
        type: string;
    };
    properties: {
        current: Resource<"nameRecords"> | undefined;
    };
    entry: {
        name: string;
        type: string;
    };
    result: Resource<"nameRecords"> | undefined;
}>>(options: {
    project: import("../../resources").IdObject<"projects">;
    assignments: {
        [collectionName: string]: I[];
    };
}) => Generator<import("../../meta/process/types").GraphQlRequest | import("../../meta/process/types").Web3Request, {
    project: import("../../resources").IdObject<"projects">;
    assignments: {
        [collectionName: string]: (I & O)[];
    };
}, any>;
