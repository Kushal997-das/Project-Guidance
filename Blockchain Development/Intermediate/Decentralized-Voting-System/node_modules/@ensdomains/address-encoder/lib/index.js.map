{"version":3,"file":"index.js","sources":["../node_modules/bech32/index.js","../node_modules/big-integer/BigInteger.js","../node_modules/blakejs/util.js","../node_modules/blakejs/blake2b.js","../node_modules/blakejs/blake2s.js","../node_modules/base64-js/index.js","../node_modules/blakejs/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/safe-buffer/index.js","../node_modules/base-x/src/index.js","../node_modules/bs58/index.js","../node_modules/sha3/node_modules/buffer/index.js","../node_modules/sha3/sponge/permute/copy/index.js","../node_modules/sha3/sponge/permute/chi/index.js","../node_modules/sha3/sponge/permute/iota/round-constants/index.js","../node_modules/sha3/sponge/permute/iota/index.js","../node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js","../node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js","../node_modules/sha3/sponge/permute/rho-pi/index.js","../node_modules/sha3/sponge/permute/theta/index.js","../node_modules/sha3/sponge/permute/index.js","../node_modules/sha3/sponge/index.js","../node_modules/sha3/index.js","../node_modules/ripemd160-min/dist-esm/index.js","../node_modules/crypto-addr-codec/dist/index.js","../node_modules/nano-base32/index.js","../src/leb128/unsigned.ts","../src/filecoin/address.ts","../src/filecoin/index.ts","../src/index.ts"],"sourcesContent":["'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) throw new Error('Invalid prefix (' + prefix + ')')\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) throw new TypeError(str + ' too short')\n  if (str.length > LIMIT) throw new TypeError('Exceeds length limit')\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) throw new Error('Mixed-case string ' + str)\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) throw new Error('No separator character for ' + str)\n  if (split === 0) throw new Error('Missing prefix for ' + str)\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) throw new Error('Data too short')\n\n  var chk = prefixChk(prefix)\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) throw new Error('Unknown character ' + c)\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) throw new Error('Invalid checksum for ' + str)\n  return { prefix: prefix, words: words }\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) throw new Error('Excess padding')\n    if ((value << (outBits - bits)) & maxV) throw new Error('Non-zero padding')\n  }\n\n  return result\n}\n\nfunction toWords (bytes) {\n  return convert(bytes, 8, 5, true)\n}\n\nfunction fromWords (words) {\n  return convert(words, 5, 8, false)\n}\n\nmodule.exports = {\n  decode: decode,\n  encode: encode,\n  toWords: toWords,\n  fromWords: fromWords\n}\n","var bigInt = (function (undefined) {\r\n    \"use strict\";\r\n\r\n    var BASE = 1e7,\r\n        LOG_BASE = 7,\r\n        MAX_INT = 9007199254740992,\r\n        MAX_INT_ARR = smallToArray(MAX_INT),\r\n        LOG_MAX_INT = Math.log(MAX_INT);\r\n\r\n    function Integer(v, radix) {\r\n        if (typeof v === \"undefined\") return Integer[0];\r\n        if (typeof radix !== \"undefined\") return +radix === 10 ? parseValue(v) : parseBase(v, radix);\r\n        return parseValue(v);\r\n    }\r\n\r\n    function BigInteger(value, sign) {\r\n        this.value = value;\r\n        this.sign = sign;\r\n        this.isSmall = false;\r\n    }\r\n    BigInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function SmallInteger(value) {\r\n        this.value = value;\r\n        this.sign = value < 0;\r\n        this.isSmall = true;\r\n    }\r\n    SmallInteger.prototype = Object.create(Integer.prototype);\r\n\r\n    function isPrecise(n) {\r\n        return -MAX_INT < n && n < MAX_INT;\r\n    }\r\n\r\n    function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes\r\n        if (n < 1e7)\r\n            return [n];\r\n        if (n < 1e14)\r\n            return [n % 1e7, Math.floor(n / 1e7)];\r\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\r\n    }\r\n\r\n    function arrayToSmall(arr) { // If BASE changes this function may need to change\r\n        trim(arr);\r\n        var length = arr.length;\r\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\r\n            switch (length) {\r\n                case 0: return 0;\r\n                case 1: return arr[0];\r\n                case 2: return arr[0] + arr[1] * BASE;\r\n                default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function trim(v) {\r\n        var i = v.length;\r\n        while (v[--i] === 0);\r\n        v.length = i + 1;\r\n    }\r\n\r\n    function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger\r\n        var x = new Array(length);\r\n        var i = -1;\r\n        while (++i < length) {\r\n            x[i] = 0;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    function truncate(n) {\r\n        if (n > 0) return Math.floor(n);\r\n        return Math.ceil(n);\r\n    }\r\n\r\n    function add(a, b) { // assumes a and b are arrays with a.length >= b.length\r\n        var l_a = a.length,\r\n            l_b = b.length,\r\n            r = new Array(l_a),\r\n            carry = 0,\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l_b; i++) {\r\n            sum = a[i] + b[i] + carry;\r\n            carry = sum >= base ? 1 : 0;\r\n            r[i] = sum - carry * base;\r\n        }\r\n        while (i < l_a) {\r\n            sum = a[i] + carry;\r\n            carry = sum === base ? 1 : 0;\r\n            r[i++] = sum - carry * base;\r\n        }\r\n        if (carry > 0) r.push(carry);\r\n        return r;\r\n    }\r\n\r\n    function addAny(a, b) {\r\n        if (a.length >= b.length) return add(a, b);\r\n        return add(b, a);\r\n    }\r\n\r\n    function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            sum, i;\r\n        for (i = 0; i < l; i++) {\r\n            sum = a[i] - base + carry;\r\n            carry = Math.floor(sum / base);\r\n            r[i] = sum - carry * base;\r\n            carry += 1;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall) {\r\n            return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\r\n        }\r\n        return new BigInteger(addAny(a, b), this.sign);\r\n    };\r\n    BigInteger.prototype.plus = BigInteger.prototype.add;\r\n\r\n    SmallInteger.prototype.add = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.subtract(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            if (isPrecise(a + b)) return new SmallInteger(a + b);\r\n            b = smallToArray(Math.abs(b));\r\n        }\r\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\r\n    };\r\n    SmallInteger.prototype.plus = SmallInteger.prototype.add;\r\n\r\n    function subtract(a, b) { // assumes a and b are arrays with a >= b\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            r = new Array(a_l),\r\n            borrow = 0,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < b_l; i++) {\r\n            difference = a[i] - borrow - b[i];\r\n            if (difference < 0) {\r\n                difference += base;\r\n                borrow = 1;\r\n            } else borrow = 0;\r\n            r[i] = difference;\r\n        }\r\n        for (i = b_l; i < a_l; i++) {\r\n            difference = a[i] - borrow;\r\n            if (difference < 0) difference += base;\r\n            else {\r\n                r[i++] = difference;\r\n                break;\r\n            }\r\n            r[i] = difference;\r\n        }\r\n        for (; i < a_l; i++) {\r\n            r[i] = a[i];\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function subtractAny(a, b, sign) {\r\n        var value;\r\n        if (compareAbs(a, b) >= 0) {\r\n            value = subtract(a, b);\r\n        } else {\r\n            value = subtract(b, a);\r\n            sign = !sign;\r\n        }\r\n        value = arrayToSmall(value);\r\n        if (typeof value === \"number\") {\r\n            if (sign) value = -value;\r\n            return new SmallInteger(value);\r\n        }\r\n        return new BigInteger(value, sign);\r\n    }\r\n\r\n    function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            carry = -b,\r\n            base = BASE,\r\n            i, difference;\r\n        for (i = 0; i < l; i++) {\r\n            difference = a[i] + carry;\r\n            carry = Math.floor(difference / base);\r\n            difference %= base;\r\n            r[i] = difference < 0 ? difference + base : difference;\r\n        }\r\n        r = arrayToSmall(r);\r\n        if (typeof r === \"number\") {\r\n            if (sign) r = -r;\r\n            return new SmallInteger(r);\r\n        } return new BigInteger(r, sign);\r\n    }\r\n\r\n    BigInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        if (this.sign !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var a = this.value, b = n.value;\r\n        if (n.isSmall)\r\n            return subtractSmall(a, Math.abs(b), this.sign);\r\n        return subtractAny(a, b, this.sign);\r\n    };\r\n    BigInteger.prototype.minus = BigInteger.prototype.subtract;\r\n\r\n    SmallInteger.prototype.subtract = function (v) {\r\n        var n = parseValue(v);\r\n        var a = this.value;\r\n        if (a < 0 !== n.sign) {\r\n            return this.add(n.negate());\r\n        }\r\n        var b = n.value;\r\n        if (n.isSmall) {\r\n            return new SmallInteger(a - b);\r\n        }\r\n        return subtractSmall(b, Math.abs(a), a >= 0);\r\n    };\r\n    SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\r\n\r\n    BigInteger.prototype.negate = function () {\r\n        return new BigInteger(this.value, !this.sign);\r\n    };\r\n    SmallInteger.prototype.negate = function () {\r\n        var sign = this.sign;\r\n        var small = new SmallInteger(-this.value);\r\n        small.sign = !sign;\r\n        return small;\r\n    };\r\n\r\n    BigInteger.prototype.abs = function () {\r\n        return new BigInteger(this.value, false);\r\n    };\r\n    SmallInteger.prototype.abs = function () {\r\n        return new SmallInteger(Math.abs(this.value));\r\n    };\r\n\r\n    function multiplyLong(a, b) {\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            l = a_l + b_l,\r\n            r = createArray(l),\r\n            base = BASE,\r\n            product, carry, i, a_i, b_j;\r\n        for (i = 0; i < a_l; ++i) {\r\n            a_i = a[i];\r\n            for (var j = 0; j < b_l; ++j) {\r\n                b_j = b[j];\r\n                product = a_i * b_j + r[i + j];\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n                r[i + j + 1] += carry;\r\n            }\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE\r\n        var l = a.length,\r\n            r = new Array(l),\r\n            base = BASE,\r\n            carry = 0,\r\n            product, i;\r\n        for (i = 0; i < l; i++) {\r\n            product = a[i] * b + carry;\r\n            carry = Math.floor(product / base);\r\n            r[i] = product - carry * base;\r\n        }\r\n        while (carry > 0) {\r\n            r[i++] = carry % base;\r\n            carry = Math.floor(carry / base);\r\n        }\r\n        return r;\r\n    }\r\n\r\n    function shiftLeft(x, n) {\r\n        var r = [];\r\n        while (n-- > 0) r.push(0);\r\n        return r.concat(x);\r\n    }\r\n\r\n    function multiplyKaratsuba(x, y) {\r\n        var n = Math.max(x.length, y.length);\r\n\r\n        if (n <= 30) return multiplyLong(x, y);\r\n        n = Math.ceil(n / 2);\r\n\r\n        var b = x.slice(n),\r\n            a = x.slice(0, n),\r\n            d = y.slice(n),\r\n            c = y.slice(0, n);\r\n\r\n        var ac = multiplyKaratsuba(a, c),\r\n            bd = multiplyKaratsuba(b, d),\r\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\r\n\r\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\r\n        trim(product);\r\n        return product;\r\n    }\r\n\r\n    // The following function is derived from a surface fit of a graph plotting the performance difference\r\n    // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.\r\n    function useKaratsuba(l1, l2) {\r\n        return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;\r\n    }\r\n\r\n    BigInteger.prototype.multiply = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value, b = n.value,\r\n            sign = this.sign !== n.sign,\r\n            abs;\r\n        if (n.isSmall) {\r\n            if (b === 0) return Integer[0];\r\n            if (b === 1) return this;\r\n            if (b === -1) return this.negate();\r\n            abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                return new BigInteger(multiplySmall(a, abs), sign);\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes\r\n            return new BigInteger(multiplyKaratsuba(a, b), sign);\r\n        return new BigInteger(multiplyLong(a, b), sign);\r\n    };\r\n\r\n    BigInteger.prototype.times = BigInteger.prototype.multiply;\r\n\r\n    function multiplySmallAndArray(a, b, sign) { // a >= 0\r\n        if (a < BASE) {\r\n            return new BigInteger(multiplySmall(b, a), sign);\r\n        }\r\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\r\n    }\r\n    SmallInteger.prototype._multiplyBySmall = function (a) {\r\n        if (isPrecise(a.value * this.value)) {\r\n            return new SmallInteger(a.value * this.value);\r\n        }\r\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\r\n    };\r\n    BigInteger.prototype._multiplyBySmall = function (a) {\r\n        if (a.value === 0) return Integer[0];\r\n        if (a.value === 1) return this;\r\n        if (a.value === -1) return this.negate();\r\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\r\n    };\r\n    SmallInteger.prototype.multiply = function (v) {\r\n        return parseValue(v)._multiplyBySmall(this);\r\n    };\r\n    SmallInteger.prototype.times = SmallInteger.prototype.multiply;\r\n\r\n    function square(a) {\r\n        //console.assert(2 * BASE * BASE < MAX_INT);\r\n        var l = a.length,\r\n            r = createArray(l + l),\r\n            base = BASE,\r\n            product, carry, i, a_i, a_j;\r\n        for (i = 0; i < l; i++) {\r\n            a_i = a[i];\r\n            carry = 0 - a_i * a_i;\r\n            for (var j = i; j < l; j++) {\r\n                a_j = a[j];\r\n                product = 2 * (a_i * a_j) + r[i + j] + carry;\r\n                carry = Math.floor(product / base);\r\n                r[i + j] = product - carry * base;\r\n            }\r\n            r[i + l] = carry;\r\n        }\r\n        trim(r);\r\n        return r;\r\n    }\r\n\r\n    BigInteger.prototype.square = function () {\r\n        return new BigInteger(square(this.value), false);\r\n    };\r\n\r\n    SmallInteger.prototype.square = function () {\r\n        var value = this.value * this.value;\r\n        if (isPrecise(value)) return new SmallInteger(value);\r\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\r\n    };\r\n\r\n    function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            base = BASE,\r\n            result = createArray(b.length),\r\n            divisorMostSignificantDigit = b[b_l - 1],\r\n            // normalization\r\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\r\n            remainder = multiplySmall(a, lambda),\r\n            divisor = multiplySmall(b, lambda),\r\n            quotientDigit, shift, carry, borrow, i, l, q;\r\n        if (remainder.length <= a_l) remainder.push(0);\r\n        divisor.push(0);\r\n        divisorMostSignificantDigit = divisor[b_l - 1];\r\n        for (shift = a_l - b_l; shift >= 0; shift--) {\r\n            quotientDigit = base - 1;\r\n            if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\r\n                quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\r\n            }\r\n            // quotientDigit <= base - 1\r\n            carry = 0;\r\n            borrow = 0;\r\n            l = divisor.length;\r\n            for (i = 0; i < l; i++) {\r\n                carry += quotientDigit * divisor[i];\r\n                q = Math.floor(carry / base);\r\n                borrow += remainder[shift + i] - (carry - q * base);\r\n                carry = q;\r\n                if (borrow < 0) {\r\n                    remainder[shift + i] = borrow + base;\r\n                    borrow = -1;\r\n                } else {\r\n                    remainder[shift + i] = borrow;\r\n                    borrow = 0;\r\n                }\r\n            }\r\n            while (borrow !== 0) {\r\n                quotientDigit -= 1;\r\n                carry = 0;\r\n                for (i = 0; i < l; i++) {\r\n                    carry += remainder[shift + i] - base + divisor[i];\r\n                    if (carry < 0) {\r\n                        remainder[shift + i] = carry + base;\r\n                        carry = 0;\r\n                    } else {\r\n                        remainder[shift + i] = carry;\r\n                        carry = 1;\r\n                    }\r\n                }\r\n                borrow += carry;\r\n            }\r\n            result[shift] = quotientDigit;\r\n        }\r\n        // denormalization\r\n        remainder = divModSmall(remainder, lambda)[0];\r\n        return [arrayToSmall(result), arrayToSmall(remainder)];\r\n    }\r\n\r\n    function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/\r\n        // Performs faster than divMod1 on larger input sizes.\r\n        var a_l = a.length,\r\n            b_l = b.length,\r\n            result = [],\r\n            part = [],\r\n            base = BASE,\r\n            guess, xlen, highx, highy, check;\r\n        while (a_l) {\r\n            part.unshift(a[--a_l]);\r\n            trim(part);\r\n            if (compareAbs(part, b) < 0) {\r\n                result.push(0);\r\n                continue;\r\n            }\r\n            xlen = part.length;\r\n            highx = part[xlen - 1] * base + part[xlen - 2];\r\n            highy = b[b_l - 1] * base + b[b_l - 2];\r\n            if (xlen > b_l) {\r\n                highx = (highx + 1) * base;\r\n            }\r\n            guess = Math.ceil(highx / highy);\r\n            do {\r\n                check = multiplySmall(b, guess);\r\n                if (compareAbs(check, part) <= 0) break;\r\n                guess--;\r\n            } while (guess);\r\n            result.push(guess);\r\n            part = subtract(part, check);\r\n        }\r\n        result.reverse();\r\n        return [arrayToSmall(result), arrayToSmall(part)];\r\n    }\r\n\r\n    function divModSmall(value, lambda) {\r\n        var length = value.length,\r\n            quotient = createArray(length),\r\n            base = BASE,\r\n            i, q, remainder, divisor;\r\n        remainder = 0;\r\n        for (i = length - 1; i >= 0; --i) {\r\n            divisor = remainder * base + value[i];\r\n            q = truncate(divisor / lambda);\r\n            remainder = divisor - q * lambda;\r\n            quotient[i] = q | 0;\r\n        }\r\n        return [quotient, remainder | 0];\r\n    }\r\n\r\n    function divModAny(self, v) {\r\n        var value, n = parseValue(v);\r\n        var a = self.value, b = n.value;\r\n        var quotient;\r\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\r\n        if (self.isSmall) {\r\n            if (n.isSmall) {\r\n                return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\r\n            }\r\n            return [Integer[0], self];\r\n        }\r\n        if (n.isSmall) {\r\n            if (b === 1) return [self, Integer[0]];\r\n            if (b == -1) return [self.negate(), Integer[0]];\r\n            var abs = Math.abs(b);\r\n            if (abs < BASE) {\r\n                value = divModSmall(a, abs);\r\n                quotient = arrayToSmall(value[0]);\r\n                var remainder = value[1];\r\n                if (self.sign) remainder = -remainder;\r\n                if (typeof quotient === \"number\") {\r\n                    if (self.sign !== n.sign) quotient = -quotient;\r\n                    return [new SmallInteger(quotient), new SmallInteger(remainder)];\r\n                }\r\n                return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\r\n            }\r\n            b = smallToArray(abs);\r\n        }\r\n        var comparison = compareAbs(a, b);\r\n        if (comparison === -1) return [Integer[0], self];\r\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\r\n\r\n        // divMod1 is faster on smaller input sizes\r\n        if (a.length + b.length <= 200)\r\n            value = divMod1(a, b);\r\n        else value = divMod2(a, b);\r\n\r\n        quotient = value[0];\r\n        var qSign = self.sign !== n.sign,\r\n            mod = value[1],\r\n            mSign = self.sign;\r\n        if (typeof quotient === \"number\") {\r\n            if (qSign) quotient = -quotient;\r\n            quotient = new SmallInteger(quotient);\r\n        } else quotient = new BigInteger(quotient, qSign);\r\n        if (typeof mod === \"number\") {\r\n            if (mSign) mod = -mod;\r\n            mod = new SmallInteger(mod);\r\n        } else mod = new BigInteger(mod, mSign);\r\n        return [quotient, mod];\r\n    }\r\n\r\n    BigInteger.prototype.divmod = function (v) {\r\n        var result = divModAny(this, v);\r\n        return {\r\n            quotient: result[0],\r\n            remainder: result[1]\r\n        };\r\n    };\r\n    SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\r\n\r\n    BigInteger.prototype.divide = function (v) {\r\n        return divModAny(this, v)[0];\r\n    };\r\n    SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\r\n\r\n    BigInteger.prototype.mod = function (v) {\r\n        return divModAny(this, v)[1];\r\n    };\r\n    SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\r\n\r\n    BigInteger.prototype.pow = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value,\r\n            value, x, y;\r\n        if (b === 0) return Integer[1];\r\n        if (a === 0) return Integer[0];\r\n        if (a === 1) return Integer[1];\r\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\r\n        if (n.sign) {\r\n            return Integer[0];\r\n        }\r\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\r\n        if (this.isSmall) {\r\n            if (isPrecise(value = Math.pow(a, b)))\r\n                return new SmallInteger(truncate(value));\r\n        }\r\n        x = this;\r\n        y = Integer[1];\r\n        while (true) {\r\n            if (b & 1 === 1) {\r\n                y = y.times(x);\r\n                --b;\r\n            }\r\n            if (b === 0) break;\r\n            b /= 2;\r\n            x = x.square();\r\n        }\r\n        return y;\r\n    };\r\n    SmallInteger.prototype.pow = BigInteger.prototype.pow;\r\n\r\n    BigInteger.prototype.modPow = function (exp, mod) {\r\n        exp = parseValue(exp);\r\n        mod = parseValue(mod);\r\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\r\n        var r = Integer[1],\r\n            base = this.mod(mod);\r\n        while (exp.isPositive()) {\r\n            if (base.isZero()) return Integer[0];\r\n            if (exp.isOdd()) r = r.multiply(base).mod(mod);\r\n            exp = exp.divide(2);\r\n            base = base.square().mod(mod);\r\n        }\r\n        return r;\r\n    };\r\n    SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\r\n\r\n    function compareAbs(a, b) {\r\n        if (a.length !== b.length) {\r\n            return a.length > b.length ? 1 : -1;\r\n        }\r\n        for (var i = a.length - 1; i >= 0; i--) {\r\n            if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    BigInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) return 1;\r\n        return compareAbs(a, b);\r\n    };\r\n    SmallInteger.prototype.compareAbs = function (v) {\r\n        var n = parseValue(v),\r\n            a = Math.abs(this.value),\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            b = Math.abs(b);\r\n            return a === b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        return -1;\r\n    };\r\n\r\n    BigInteger.prototype.compare = function (v) {\r\n        // See discussion about comparison with Infinity:\r\n        // https://github.com/peterolson/BigInteger.js/issues/61\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (this.sign !== n.sign) {\r\n            return n.sign ? 1 : -1;\r\n        }\r\n        if (n.isSmall) {\r\n            return this.sign ? -1 : 1;\r\n        }\r\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\r\n    };\r\n    BigInteger.prototype.compareTo = BigInteger.prototype.compare;\r\n\r\n    SmallInteger.prototype.compare = function (v) {\r\n        if (v === Infinity) {\r\n            return -1;\r\n        }\r\n        if (v === -Infinity) {\r\n            return 1;\r\n        }\r\n\r\n        var n = parseValue(v),\r\n            a = this.value,\r\n            b = n.value;\r\n        if (n.isSmall) {\r\n            return a == b ? 0 : a > b ? 1 : -1;\r\n        }\r\n        if (a < 0 !== n.sign) {\r\n            return a < 0 ? -1 : 1;\r\n        }\r\n        return a < 0 ? 1 : -1;\r\n    };\r\n    SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\r\n\r\n    BigInteger.prototype.equals = function (v) {\r\n        return this.compare(v) === 0;\r\n    };\r\n    SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\r\n\r\n    BigInteger.prototype.notEquals = function (v) {\r\n        return this.compare(v) !== 0;\r\n    };\r\n    SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\r\n\r\n    BigInteger.prototype.greater = function (v) {\r\n        return this.compare(v) > 0;\r\n    };\r\n    SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\r\n\r\n    BigInteger.prototype.lesser = function (v) {\r\n        return this.compare(v) < 0;\r\n    };\r\n    SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\r\n\r\n    BigInteger.prototype.greaterOrEquals = function (v) {\r\n        return this.compare(v) >= 0;\r\n    };\r\n    SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\r\n\r\n    BigInteger.prototype.lesserOrEquals = function (v) {\r\n        return this.compare(v) <= 0;\r\n    };\r\n    SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\r\n\r\n    BigInteger.prototype.isEven = function () {\r\n        return (this.value[0] & 1) === 0;\r\n    };\r\n    SmallInteger.prototype.isEven = function () {\r\n        return (this.value & 1) === 0;\r\n    };\r\n\r\n    BigInteger.prototype.isOdd = function () {\r\n        return (this.value[0] & 1) === 1;\r\n    };\r\n    SmallInteger.prototype.isOdd = function () {\r\n        return (this.value & 1) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isPositive = function () {\r\n        return !this.sign;\r\n    };\r\n    SmallInteger.prototype.isPositive = function () {\r\n        return this.value > 0;\r\n    };\r\n\r\n    BigInteger.prototype.isNegative = function () {\r\n        return this.sign;\r\n    };\r\n    SmallInteger.prototype.isNegative = function () {\r\n        return this.value < 0;\r\n    };\r\n\r\n    BigInteger.prototype.isUnit = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isUnit = function () {\r\n        return Math.abs(this.value) === 1;\r\n    };\r\n\r\n    BigInteger.prototype.isZero = function () {\r\n        return false;\r\n    };\r\n    SmallInteger.prototype.isZero = function () {\r\n        return this.value === 0;\r\n    };\r\n    BigInteger.prototype.isDivisibleBy = function (v) {\r\n        var n = parseValue(v);\r\n        var value = n.value;\r\n        if (value === 0) return false;\r\n        if (value === 1) return true;\r\n        if (value === 2) return this.isEven();\r\n        return this.mod(n).equals(Integer[0]);\r\n    };\r\n    SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\r\n\r\n    function isBasicPrime(v) {\r\n        var n = v.abs();\r\n        if (n.isUnit()) return false;\r\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\r\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\r\n        if (n.lesser(49)) return true;\r\n        // we don't know if it's prime: let the other functions figure it out\r\n    }\r\n    \r\n    function millerRabinTest(n, a) {\r\n        var nPrev = n.prev(),\r\n            b = nPrev,\r\n            r = 0,\r\n            d, t, i, x;\r\n        while (b.isEven()) b = b.divide(2), r++;\r\n        next : for (i = 0; i < a.length; i++) {\r\n            if (n.lesser(a[i])) continue;\r\n            x = bigInt(a[i]).modPow(b, n);\r\n            if (x.equals(Integer[1]) || x.equals(nPrev)) continue;\r\n            for (d = r - 1; d != 0; d--) {\r\n                x = x.square().mod(n);\r\n                if (x.isUnit()) return false;    \r\n                if (x.equals(nPrev)) continue next;\r\n            }\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n// Set \"strict\" to true to force GRH-supported lower bound of 2*log(N)^2\r\n    BigInteger.prototype.isPrime = function (strict) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var bits = n.bitLength();\r\n        if(bits <= 64)\r\n            return millerRabinTest(n, [2, 325, 9375, 28178, 450775, 9780504, 1795265022]);\r\n        var logN = Math.log(2) * bits;\r\n        var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt(i + 2));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\r\n\r\n    BigInteger.prototype.isProbablePrime = function (iterations) {\r\n        var isPrime = isBasicPrime(this);\r\n        if (isPrime !== undefined) return isPrime;\r\n        var n = this.abs();\r\n        var t = iterations === undefined ? 5 : iterations;\r\n        for (var a = [], i = 0; i < t; i++) {\r\n            a.push(bigInt.randBetween(2, n.minus(2)));\r\n        }\r\n        return millerRabinTest(n, a);\r\n    };\r\n    SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\r\n\r\n    BigInteger.prototype.modInv = function (n) {\r\n        var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;\r\n        while (!newR.equals(bigInt.zero)) {\r\n            q = r.divide(newR);\r\n            lastT = t;\r\n            lastR = r;\r\n            t = newT;\r\n            r = newR;\r\n            newT = lastT.subtract(q.multiply(newT));\r\n            newR = lastR.subtract(q.multiply(newR));\r\n        }\r\n        if (!r.equals(1)) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\r\n        if (t.compare(0) === -1) {\r\n            t = t.add(n);\r\n        }\r\n        if (this.isNegative()) {\r\n            return t.negate();\r\n        }\r\n        return t;\r\n    };\r\n\r\n    SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\r\n\r\n    BigInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return subtractSmall(value, 1, this.sign);\r\n        }\r\n        return new BigInteger(addSmall(value, 1), this.sign);\r\n    };\r\n    SmallInteger.prototype.next = function () {\r\n        var value = this.value;\r\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\r\n        return new BigInteger(MAX_INT_ARR, false);\r\n    };\r\n\r\n    BigInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (this.sign) {\r\n            return new BigInteger(addSmall(value, 1), true);\r\n        }\r\n        return subtractSmall(value, 1, this.sign);\r\n    };\r\n    SmallInteger.prototype.prev = function () {\r\n        var value = this.value;\r\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\r\n        return new BigInteger(MAX_INT_ARR, true);\r\n    };\r\n\r\n    var powersOfTwo = [1];\r\n    while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\r\n    var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];\r\n\r\n    function shift_isSmall(n) {\r\n        return ((typeof n === \"number\" || typeof n === \"string\") && +Math.abs(n) <= BASE) ||\r\n            (n instanceof BigInteger && n.value.length <= 1);\r\n    }\r\n\r\n    BigInteger.prototype.shiftLeft = function (n) {\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftRight(-n);\r\n        var result = this;\r\n        if (result.isZero()) return result;\r\n        while (n >= powers2Length) {\r\n            result = result.multiply(highestPower2);\r\n            n -= powers2Length - 1;\r\n        }\r\n        return result.multiply(powersOfTwo[n]);\r\n    };\r\n    SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\r\n\r\n    BigInteger.prototype.shiftRight = function (n) {\r\n        var remQuo;\r\n        if (!shift_isSmall(n)) {\r\n            throw new Error(String(n) + \" is too large for shifting.\");\r\n        }\r\n        n = +n;\r\n        if (n < 0) return this.shiftLeft(-n);\r\n        var result = this;\r\n        while (n >= powers2Length) {\r\n            if (result.isZero() || (result.isNegative() && result.isUnit())) return result;\r\n            remQuo = divModAny(result, highestPower2);\r\n            result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n            n -= powers2Length - 1;\r\n        }\r\n        remQuo = divModAny(result, powersOfTwo[n]);\r\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\r\n    };\r\n    SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\r\n\r\n    function bitwise(x, y, fn) {\r\n        y = parseValue(y);\r\n        var xSign = x.isNegative(), ySign = y.isNegative();\r\n        var xRem = xSign ? x.not() : x,\r\n            yRem = ySign ? y.not() : y;\r\n        var xDigit = 0, yDigit = 0;\r\n        var xDivMod = null, yDivMod = null;\r\n        var result = [];\r\n        while (!xRem.isZero() || !yRem.isZero()) {\r\n            xDivMod = divModAny(xRem, highestPower2);\r\n            xDigit = xDivMod[1].toJSNumber();\r\n            if (xSign) {\r\n                xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            yDivMod = divModAny(yRem, highestPower2);\r\n            yDigit = yDivMod[1].toJSNumber();\r\n            if (ySign) {\r\n                yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers\r\n            }\r\n\r\n            xRem = xDivMod[0];\r\n            yRem = yDivMod[0];\r\n            result.push(fn(xDigit, yDigit));\r\n        }\r\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\r\n        for (var i = result.length - 1; i >= 0; i -= 1) {\r\n            sum = sum.multiply(highestPower2).add(bigInt(result[i]));\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    BigInteger.prototype.not = function () {\r\n        return this.negate().prev();\r\n    };\r\n    SmallInteger.prototype.not = BigInteger.prototype.not;\r\n\r\n    BigInteger.prototype.and = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a & b; });\r\n    };\r\n    SmallInteger.prototype.and = BigInteger.prototype.and;\r\n\r\n    BigInteger.prototype.or = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a | b; });\r\n    };\r\n    SmallInteger.prototype.or = BigInteger.prototype.or;\r\n\r\n    BigInteger.prototype.xor = function (n) {\r\n        return bitwise(this, n, function (a, b) { return a ^ b; });\r\n    };\r\n    SmallInteger.prototype.xor = BigInteger.prototype.xor;\r\n\r\n    var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\r\n    function roughLOB(n) { // get lowestOneBit (rough)\r\n        // SmallInteger: return Min(lowestOneBit(n), 1 << 30)\r\n        // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]\r\n        var v = n.value, x = typeof v === \"number\" ? v | LOBMASK_I : v[0] + v[1] * BASE | LOBMASK_BI;\r\n        return x & -x;\r\n    }\r\n\r\n    function integerLogarithm(value, base) {\r\n        if (base.compareTo(value) <= 0) {\r\n            var tmp = integerLogarithm(value, base.square(base));\r\n            var p = tmp.p;\r\n            var e = tmp.e;\r\n            var t = p.multiply(base);\r\n            return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };\r\n        }\r\n        return { p: bigInt(1), e: 0 };\r\n    }\r\n\r\n    BigInteger.prototype.bitLength = function () {\r\n        var n = this;\r\n        if (n.compareTo(bigInt(0)) < 0) {\r\n            n = n.negate().subtract(bigInt(1));\r\n        }\r\n        if (n.compareTo(bigInt(0)) === 0) {\r\n            return bigInt(0);\r\n        }\r\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\r\n    }\r\n    SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\r\n\r\n    function max(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.greater(b) ? a : b;\r\n    }\r\n    function min(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        return a.lesser(b) ? a : b;\r\n    }\r\n    function gcd(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        if (a.equals(b)) return a;\r\n        if (a.isZero()) return b;\r\n        if (b.isZero()) return a;\r\n        var c = Integer[1], d, t;\r\n        while (a.isEven() && b.isEven()) {\r\n            d = Math.min(roughLOB(a), roughLOB(b));\r\n            a = a.divide(d);\r\n            b = b.divide(d);\r\n            c = c.multiply(d);\r\n        }\r\n        while (a.isEven()) {\r\n            a = a.divide(roughLOB(a));\r\n        }\r\n        do {\r\n            while (b.isEven()) {\r\n                b = b.divide(roughLOB(b));\r\n            }\r\n            if (a.greater(b)) {\r\n                t = b; b = a; a = t;\r\n            }\r\n            b = b.subtract(a);\r\n        } while (!b.isZero());\r\n        return c.isUnit() ? a : a.multiply(c);\r\n    }\r\n    function lcm(a, b) {\r\n        a = parseValue(a).abs();\r\n        b = parseValue(b).abs();\r\n        return a.divide(gcd(a, b)).multiply(b);\r\n    }\r\n    function randBetween(a, b) {\r\n        a = parseValue(a);\r\n        b = parseValue(b);\r\n        var low = min(a, b), high = max(a, b);\r\n        var range = high.subtract(low).add(1);\r\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\r\n        var length = range.value.length - 1;\r\n        var result = [], restricted = true;\r\n        for (var i = length; i >= 0; i--) {\r\n            var top = restricted ? range.value[i] : BASE;\r\n            var digit = truncate(Math.random() * top);\r\n            result.unshift(digit);\r\n            if (digit < top) restricted = false;\r\n        }\r\n        result = arrayToSmall(result);\r\n        return low.add(typeof result === \"number\" ? new SmallInteger(result) : new BigInteger(result, false));\r\n    }\r\n    var parseBase = function (text, base) {\r\n        var length = text.length;\r\n        var i;\r\n        var absBase = Math.abs(base);\r\n        for (var i = 0; i < length; i++) {\r\n            var c = text[i].toLowerCase();\r\n            if (c === \"-\") continue;\r\n            if (/[a-z0-9]/.test(c)) {\r\n                if (/[0-9]/.test(c) && +c >= absBase) {\r\n                    if (c === \"1\" && absBase === 1) continue;\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                } else if (c.charCodeAt(0) - 87 >= absBase) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n            }\r\n        }\r\n        if (2 <= base && base <= 36) {\r\n            if (length <= LOG_MAX_INT / Math.log(base)) {\r\n                var result = parseInt(text, base);\r\n                if (isNaN(result)) {\r\n                    throw new Error(c + \" is not a valid digit in base \" + base + \".\");\r\n                }\r\n                return new SmallInteger(parseInt(text, base));\r\n            }\r\n        }\r\n        base = parseValue(base);\r\n        var digits = [];\r\n        var isNegative = text[0] === \"-\";\r\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\r\n            var c = text[i].toLowerCase(),\r\n                charCode = c.charCodeAt(0);\r\n            if (48 <= charCode && charCode <= 57) digits.push(parseValue(c));\r\n            else if (97 <= charCode && charCode <= 122) digits.push(parseValue(c.charCodeAt(0) - 87));\r\n            else if (c === \"<\") {\r\n                var start = i;\r\n                do { i++; } while (text[i] !== \">\");\r\n                digits.push(parseValue(text.slice(start + 1, i)));\r\n            }\r\n            else throw new Error(c + \" is not a valid character\");\r\n        }\r\n        return parseBaseFromArray(digits, base, isNegative);\r\n    };\r\n\r\n    function parseBaseFromArray(digits, base, isNegative) {\r\n        var val = Integer[0], pow = Integer[1], i;\r\n        for (i = digits.length - 1; i >= 0; i--) {\r\n            val = val.add(digits[i].times(pow));\r\n            pow = pow.times(base);\r\n        }\r\n        return isNegative ? val.negate() : val;\r\n    }\r\n\r\n    function stringify(digit) {\r\n        if (digit <= 35) {\r\n            return \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit);\r\n        }\r\n        return \"<\" + digit + \">\";\r\n    }\r\n\r\n    function toBase(n, base) {\r\n        base = bigInt(base);\r\n        if (base.isZero()) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            throw new Error(\"Cannot convert nonzero numbers to base 0.\");\r\n        }\r\n        if (base.equals(-1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n            if (n.isNegative())\r\n                return {\r\n                    value: [].concat.apply([], Array.apply(null, Array(-n))\r\n                        .map(Array.prototype.valueOf, [1, 0])\r\n                    ),\r\n                    isNegative: false\r\n                };\r\n\r\n            var arr = Array.apply(null, Array(+n - 1))\r\n                .map(Array.prototype.valueOf, [0, 1]);\r\n            arr.unshift([1]);\r\n            return {\r\n                value: [].concat.apply([], arr),\r\n                isNegative: false\r\n            };\r\n        }\r\n\r\n        var neg = false;\r\n        if (n.isNegative() && base.isPositive()) {\r\n            neg = true;\r\n            n = n.abs();\r\n        }\r\n        if (base.equals(1)) {\r\n            if (n.isZero()) return { value: [0], isNegative: false };\r\n\r\n            return {\r\n                value: Array.apply(null, Array(+n))\r\n                    .map(Number.prototype.valueOf, 1),\r\n                isNegative: neg\r\n            };\r\n        }\r\n        var out = [];\r\n        var left = n, divmod;\r\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\r\n            divmod = left.divmod(base);\r\n            left = divmod.quotient;\r\n            var digit = divmod.remainder;\r\n            if (digit.isNegative()) {\r\n                digit = base.minus(digit).abs();\r\n                left = left.next();\r\n            }\r\n            out.push(digit.toJSNumber());\r\n        }\r\n        out.push(left.toJSNumber());\r\n        return { value: out.reverse(), isNegative: neg };\r\n    }\r\n\r\n    function toBaseString(n, base) {\r\n        var arr = toBase(n, base);\r\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(stringify).join('');\r\n    }\r\n\r\n    BigInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    SmallInteger.prototype.toArray = function (radix) {\r\n        return toBase(this, radix);\r\n    };\r\n\r\n    BigInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix !== 10) return toBaseString(this, radix);\r\n        var v = this.value, l = v.length, str = String(v[--l]), zeros = \"0000000\", digit;\r\n        while (--l >= 0) {\r\n            digit = String(v[l]);\r\n            str += zeros.slice(digit.length) + digit;\r\n        }\r\n        var sign = this.sign ? \"-\" : \"\";\r\n        return sign + str;\r\n    };\r\n\r\n    SmallInteger.prototype.toString = function (radix) {\r\n        if (radix === undefined) radix = 10;\r\n        if (radix != 10) return toBaseString(this, radix);\r\n        return String(this.value);\r\n    };\r\n    BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); }\r\n\r\n    BigInteger.prototype.valueOf = function () {\r\n        return parseInt(this.toString(), 10);\r\n    };\r\n    BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\r\n\r\n    SmallInteger.prototype.valueOf = function () {\r\n        return this.value;\r\n    };\r\n    SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\r\n\r\n    function parseStringValue(v) {\r\n        if (isPrecise(+v)) {\r\n            var x = +v;\r\n            if (x === truncate(x))\r\n                return new SmallInteger(x);\r\n            throw new Error(\"Invalid integer: \" + v);\r\n        }\r\n        var sign = v[0] === \"-\";\r\n        if (sign) v = v.slice(1);\r\n        var split = v.split(/e/i);\r\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\r\n        if (split.length === 2) {\r\n            var exp = split[1];\r\n            if (exp[0] === \"+\") exp = exp.slice(1);\r\n            exp = +exp;\r\n            if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\r\n            var text = split[0];\r\n            var decimalPlace = text.indexOf(\".\");\r\n            if (decimalPlace >= 0) {\r\n                exp -= text.length - decimalPlace - 1;\r\n                text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\r\n            }\r\n            if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\r\n            text += (new Array(exp + 1)).join(\"0\");\r\n            v = text;\r\n        }\r\n        var isValid = /^([0-9][0-9]*)$/.test(v);\r\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\r\n        var r = [], max = v.length, l = LOG_BASE, min = max - l;\r\n        while (max > 0) {\r\n            r.push(+v.slice(min, max));\r\n            min -= l;\r\n            if (min < 0) min = 0;\r\n            max -= l;\r\n        }\r\n        trim(r);\r\n        return new BigInteger(r, sign);\r\n    }\r\n\r\n    function parseNumberValue(v) {\r\n        if (isPrecise(v)) {\r\n            if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\r\n            return new SmallInteger(v);\r\n        }\r\n        return parseStringValue(v.toString());\r\n    }\r\n\r\n    function parseValue(v) {\r\n        if (typeof v === \"number\") {\r\n            return parseNumberValue(v);\r\n        }\r\n        if (typeof v === \"string\") {\r\n            return parseStringValue(v);\r\n        }\r\n        return v;\r\n    }\r\n    // Pre-define numbers in range [-999,999]\r\n    for (var i = 0; i < 1000; i++) {\r\n        Integer[i] = new SmallInteger(i);\r\n        if (i > 0) Integer[-i] = new SmallInteger(-i);\r\n    }\r\n    // Backwards compatibility\r\n    Integer.one = Integer[1];\r\n    Integer.zero = Integer[0];\r\n    Integer.minusOne = Integer[-1];\r\n    Integer.max = max;\r\n    Integer.min = min;\r\n    Integer.gcd = gcd;\r\n    Integer.lcm = lcm;\r\n    Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger; };\r\n    Integer.randBetween = randBetween;\r\n\r\n    Integer.fromArray = function (digits, base, isNegative) {\r\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\r\n    };\r\n\r\n    return Integer;\r\n})();\r\n\r\n// Node.js check\r\nif (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\r\n    module.exports = bigInt;\r\n}\r\n\r\n//amd check\r\nif (typeof define === \"function\" && define.amd) {\r\n    define(\"big-integer\", [], function () {\r\n        return bigInt;\r\n    });\r\n}\r\n","var ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  var ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (input instanceof Buffer) {\n    ret = new Uint8Array(input)\n  } else if (typeof (input) === 'string') {\n    ret = new Uint8Array(Buffer.from(input, 'utf8'))\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map.call(bytes, function (n) {\n    return (n < 16 ? '0' : '') + n.toString(16)\n  }).join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  var msg = '\\n' + label + ' = '\n  for (var i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  var startMs = new Date().getTime()\n\n  var input = new Uint8Array(N)\n  for (var i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  var genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (i = 0; i < M; i++) {\n    var hashHex = hashFn(input)\n    var hashMs = new Date().getTime()\n    var ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(Math.round(N / (1 << 20) / (ms / 1000) * 100) / 100 + ' MB PER SECOND')\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction blake2bInit (outlen, key) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n\n  // state, 'param block'\n  var ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i]\n  }\n  var keylen = key ? key.length : 0\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2b (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2bInit(outlen, key)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2bHex (input, key, outlen) {\n  var output = blake2b(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","// BLAKE2s hash function in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// Little-endian byte access.\n// Expects a Uint8Array and an index\n// Returns the little-endian uint32 at v[i..i+3]\nfunction B2S_GET32 (v, i) {\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\n}\n\n// Mixing function G.\nfunction B2S_G (a, b, c, d, x, y) {\n  v[a] = v[a] + v[b] + x\n  v[d] = ROTR32(v[d] ^ v[a], 16)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 12)\n  v[a] = v[a] + v[b] + y\n  v[d] = ROTR32(v[d] ^ v[a], 8)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 7)\n}\n\n// 32-bit right rotation\n// x should be a uint32\n// y must be between 1 and 31, inclusive\nfunction ROTR32 (x, y) {\n  return (x >>> y) ^ (x << (32 - y))\n}\n\n// Initialization Vector.\nvar BLAKE2S_IV = new Uint32Array([\n  0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\n  0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19])\n\nvar SIGMA = new Uint8Array([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0])\n\n// Compression function. \"last\" flag indicates last block\nvar v = new Uint32Array(16)\nvar m = new Uint32Array(16)\nfunction blake2sCompress (ctx, last) {\n  var i = 0\n  for (i = 0; i < 8; i++) { // init work variables\n    v[i] = ctx.h[i]\n    v[i + 8] = BLAKE2S_IV[i]\n  }\n\n  v[12] ^= ctx.t // low 32 bits of offset\n  v[13] ^= (ctx.t / 0x100000000) // high 32 bits\n  if (last) { // last block flag set ?\n    v[14] = ~v[14]\n  }\n\n  for (i = 0; i < 16; i++) { // get little-endian words\n    m[i] = B2S_GET32(ctx.b, 4 * i)\n  }\n\n  // ten rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 32)\n  for (i = 0; i < 10; i++) {\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\n  }\n  // util.debugPrint('   (i=10) v[16]', v, 32)\n\n  for (i = 0; i < 8; i++) {\n    ctx.h[i] ^= v[i] ^ v[i + 8]\n  }\n  // util.debugPrint('h[8]', ctx.h, 32)\n}\n\n// Creates a BLAKE2s hashing context\n// Requires an output length between 1 and 32 bytes\n// Takes an optional Uint8Array key\nfunction blake2sInit (outlen, key) {\n  if (!(outlen > 0 && outlen <= 32)) {\n    throw new Error('Incorrect output length, should be in [1, 32]')\n  }\n  var keylen = key ? key.length : 0\n  if (key && !(keylen > 0 && keylen <= 32)) {\n    throw new Error('Incorrect key length, should be in [1, 32]')\n  }\n\n  var ctx = {\n    h: new Uint32Array(BLAKE2S_IV), // hash state\n    b: new Uint32Array(64), // input block\n    c: 0, // pointer within block\n    t: 0, // input count\n    outlen: outlen // output length in bytes\n  }\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  if (keylen > 0) {\n    blake2sUpdate(ctx, key)\n    ctx.c = 64 // at the end\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2s streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2sUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 64) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2sCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2s streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2sFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n  while (ctx.c < 64) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2sCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xFF\n  }\n  return out\n}\n\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2s (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 32\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2sInit(outlen, key)\n  blake2sUpdate(ctx, input)\n  return blake2sFinal(ctx)\n}\n\n// Computes the BLAKE2S hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2sHex (input, key, outlen) {\n  var output = blake2s(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2s: blake2s,\n  blake2sHex: blake2sHex,\n  blake2sInit: blake2sInit,\n  blake2sUpdate: blake2sUpdate,\n  blake2sFinal: blake2sFinal\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","var b2b = require('./blake2b')\nvar b2s = require('./blake2s')\n\nmodule.exports = {\n  blake2b: b2b.blake2b,\n  blake2bHex: b2b.blake2bHex,\n  blake2bInit: b2b.blake2bInit,\n  blake2bUpdate: b2b.blake2bUpdate,\n  blake2bFinal: b2b.blake2bFinal,\n  blake2s: b2s.blake2s,\n  blake2sHex: b2s.blake2sHex,\n  blake2sInit: b2s.blake2sInit,\n  blake2sUpdate: b2s.blake2sUpdate,\n  blake2sFinal: b2s.blake2sFinal\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('nodejs.util.inspect.custom')\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\n// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\nif (typeof Symbol !== 'undefined' && Symbol.species != null &&\n    Buffer[Symbol.species] === Buffer) {\n  Object.defineProperty(Buffer, Symbol.species, {\n    value: null,\n    configurable: true,\n    enumerable: false,\n    writable: false\n  })\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol.for === 'function')\n    ? Symbol.for('nodejs.util.inspect.custom')\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nvar K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    var arr = new Uint8Array(1)\n    var proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  var buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayLike(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  var valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  var b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(\n      value[Symbol.toPrimitive]('string'), encodingOrOffset, length\n    )\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  var length = byteLength(string, encoding) | 0\n  var buf = createBuffer(length)\n\n  var actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  var buf = createBuffer(length)\n  for (var i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  var buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    var buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      buf = Buffer.from(buf)\n    }\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  var len = string.length\n  var mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  var strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n        : (firstByte > 0xBF) ? 2\n          : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    var limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (var i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    var len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nvar hexSliceLookupTable = (function () {\n  var alphabet = '0123456789abcdef'\n  var table = new Array(256)\n  for (var i = 0; i < 16; ++i) {\n    var i16 = i * 16\n    for (var j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n","\"use strict\";var copy=function copy(I,i){return function(O,o){var oi=o*2;var ii=i*2;O[oi]=I[ii];O[oi+1]=I[ii+1]}};module.exports=copy;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var chi=function chi(_ref){var A=_ref.A,C=_ref.C;for(var y=0;y<25;y+=5){for(var x=0;x<5;x++){(0,_copy[\"default\"])(A,y+x)(C,x)}for(var _x=0;_x<5;_x++){var xy=(y+_x)*2;var x1=(_x+1)%5*2;var x2=(_x+2)%5*2;A[xy]^=~C[x1]&C[x2];A[xy+1]^=~C[x1+1]&C[x2+1]}}};var _default=chi;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var ROUND_CONSTANTS=new Uint32Array([0,1,0,32898,2147483648,32906,2147483648,2147516416,0,32907,0,2147483649,2147483648,2147516545,2147483648,32777,0,138,0,136,0,2147516425,0,2147483658,0,2147516555,2147483648,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,0,32778,2147483648,2147483658,2147483648,2147516545,2147483648,32896,0,2147483649,2147483648,2147516424]);var _default=ROUND_CONSTANTS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _roundConstants=_interopRequireDefault(require(\"./round-constants\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var iota=function iota(_ref){var A=_ref.A,roundIndex=_ref.roundIndex;var i=roundIndex*2;A[0]^=_roundConstants[\"default\"][i];A[1]^=_roundConstants[\"default\"][i+1]};var _default=iota;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var PI_SHUFFLES=[10,7,11,17,18,3,5,16,8,21,24,4,15,23,19,13,12,2,20,14,22,9,6,1];var _default=PI_SHUFFLES;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var RHO_OFFSETS=[1,3,6,10,15,21,28,36,45,55,2,14,27,41,56,8,25,43,62,18,39,61,20,44];var _default=RHO_OFFSETS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _piShuffles=_interopRequireDefault(require(\"./pi-shuffles\"));var _rhoOffsets=_interopRequireDefault(require(\"./rho-offsets\"));var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var rhoPi=function rhoPi(_ref){var A=_ref.A,C=_ref.C,W=_ref.W;(0,_copy[\"default\"])(A,1)(W,0);var H=0;var L=0;var Wi=0;var ri=32;for(var i=0;i<24;i++){var j=_piShuffles[\"default\"][i];var r=_rhoOffsets[\"default\"][i];(0,_copy[\"default\"])(A,j)(C,0);H=W[0];L=W[1];ri=32-r;Wi=r<32?0:1;W[Wi]=H<<r|L>>>ri;W[(Wi+1)%2]=L<<r|H>>>ri;(0,_copy[\"default\"])(W,0)(A,j);(0,_copy[\"default\"])(C,0)(W,0)}};var _default=rhoPi;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var theta=function theta(_ref){var A=_ref.A,C=_ref.C,D=_ref.D,W=_ref.W;var H=0;var L=0;for(var x=0;x<5;x++){var x20=x*2;var x21=(x+5)*2;var x22=(x+10)*2;var x23=(x+15)*2;var x24=(x+20)*2;C[x20]=A[x20]^A[x21]^A[x22]^A[x23]^A[x24];C[x20+1]=A[x20+1]^A[x21+1]^A[x22+1]^A[x23+1]^A[x24+1]}for(var _x=0;_x<5;_x++){(0,_copy[\"default\"])(C,(_x+1)%5)(W,0);H=W[0];L=W[1];W[0]=H<<1|L>>>31;W[1]=L<<1|H>>>31;D[_x*2]=C[(_x+4)%5*2]^W[0];D[_x*2+1]=C[(_x+4)%5*2+1]^W[1];for(var y=0;y<25;y+=5){A[(y+_x)*2]^=D[_x*2];A[(y+_x)*2+1]^=D[_x*2+1]}}};var _default=theta;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _chi=_interopRequireDefault(require(\"./chi\"));var _iota=_interopRequireDefault(require(\"./iota\"));var _rhoPi=_interopRequireDefault(require(\"./rho-pi\"));var _theta=_interopRequireDefault(require(\"./theta\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var permute=function permute(){var C=new Uint32Array(10);var D=new Uint32Array(10);var W=new Uint32Array(2);return function(A){for(var roundIndex=0;roundIndex<24;roundIndex++){(0,_theta[\"default\"])({A:A,C:C,D:D,W:W});(0,_rhoPi[\"default\"])({A:A,C:C,W:W});(0,_chi[\"default\"])({A:A,C:C});(0,_iota[\"default\"])({A:A,roundIndex:roundIndex})}C.fill(0);D.fill(0);W.fill(0)}};var _default=permute;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _buffer=require(\"buffer\");var _permute=_interopRequireDefault(require(\"./permute\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var xorWords=function xorWords(I,O){for(var i=0;i<I.length;i+=8){var o=i/4;O[o]^=I[i+7]<<24|I[i+6]<<16|I[i+5]<<8|I[i+4];O[o+1]^=I[i+3]<<24|I[i+2]<<16|I[i+1]<<8|I[i]}return O};var readWords=function readWords(I,O){for(var o=0;o<O.length;o+=8){var i=o/4;O[o]=I[i+1];O[o+1]=I[i+1]>>>8;O[o+2]=I[i+1]>>>16;O[o+3]=I[i+1]>>>24;O[o+4]=I[i];O[o+5]=I[i]>>>8;O[o+6]=I[i]>>>16;O[o+7]=I[i]>>>24}return O};var Sponge=function Sponge(_ref){var _this=this;var capacity=_ref.capacity,padding=_ref.padding;var keccak=(0,_permute[\"default\"])();var stateSize=200;var blockSize=capacity/8;var queueSize=stateSize-capacity/4;var queueOffset=0;var state=new Uint32Array(stateSize/4);var queue=_buffer.Buffer.allocUnsafe(queueSize);this.absorb=function(buffer){for(var i=0;i<buffer.length;i++){queue[queueOffset]=buffer[i];queueOffset+=1;if(queueOffset>=queueSize){xorWords(queue,state);keccak(state);queueOffset=0}}return _this};this.squeeze=function(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var output={buffer:options.buffer||_buffer.Buffer.allocUnsafe(blockSize),padding:options.padding||padding,queue:_buffer.Buffer.allocUnsafe(queue.length),state:new Uint32Array(state.length)};queue.copy(output.queue);for(var i=0;i<state.length;i++){output.state[i]=state[i]}output.queue.fill(0,queueOffset);output.queue[queueOffset]|=output.padding;output.queue[queueSize-1]|=128;xorWords(output.queue,output.state);for(var offset=0;offset<output.buffer.length;offset+=queueSize){keccak(output.state);readWords(output.state,output.buffer.slice(offset,offset+queueSize))}return output.buffer};this.reset=function(){queue.fill(0);state.fill(0);queueOffset=0;return _this};return this};var _default=Sponge;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=exports.SHAKE=exports.SHA3Hash=exports.SHA3=exports.Keccak=void 0;var _buffer=require(\"buffer\");var _sponge=_interopRequireDefault(require(\"./sponge\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var createHash=function createHash(_ref){var allowedSizes=_ref.allowedSizes,padding=_ref.padding;return function Hash(){var _this=this;var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:512;if(!this||this.constructor!==Hash){return new Hash(size)}if(allowedSizes&&!allowedSizes.includes(size)){throw new Error(\"Unsupported hash length\")}var sponge=new _sponge[\"default\"]({capacity:size});this.update=function(input){var encoding=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"utf8\";if(_buffer.Buffer.isBuffer(input)){sponge.absorb(input);return _this}if(typeof input===\"string\"){return _this.update(_buffer.Buffer.from(input,encoding))}throw new TypeError(\"Not a string or buffer\")};this.digest=function(){var formatOrOptions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"binary\";var options=typeof formatOrOptions===\"string\"?{format:formatOrOptions}:formatOrOptions;var buffer=sponge.squeeze({buffer:options.buffer,padding:options.padding||padding});if(options.format&&options.format!==\"binary\"){return buffer.toString(options.format)}return buffer};this.reset=function(){sponge.reset();return _this};return this}};var Keccak=createHash({allowedSizes:[224,256,384,512],padding:1});exports.Keccak=Keccak;var SHA3=createHash({allowedSizes:[224,256,384,512],padding:6});exports.SHA3=SHA3;var SHAKE=createHash({allowedSizes:[128,256],padding:31});exports.SHAKE=SHAKE;var SHA3Hash=Keccak;exports.SHA3Hash=SHA3Hash;SHA3.SHA3Hash=SHA3Hash;var _default=SHA3;exports[\"default\"]=_default;","// Extracted from https://github.com/crypto-browserify/ripemd160\nconst ARRAY16 = new Array(16);\nconst zl = initU8Array([\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n    3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n    1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n    4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]);\nconst zr = initU8Array([\n    5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n    6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n    15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n    8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n    12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]);\nconst sl = initU8Array([\n    11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n    7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n    11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n    11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n    9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]);\nconst sr = initU8Array([\n    8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n    9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n    9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n    15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n    8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]);\nconst hl = initU32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst hr = initU32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\nfunction rotl(x, n) {\n    return (x << n) | (x >>> (32 - n));\n}\nfunction fn1(a, b, c, d, e, m, k, s) {\n    return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0;\n}\nfunction fn2(a, b, c, d, e, m, k, s) {\n    return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0;\n}\nfunction fn3(a, b, c, d, e, m, k, s) {\n    return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0;\n}\nfunction fn4(a, b, c, d, e, m, k, s) {\n    return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0;\n}\nfunction fn5(a, b, c, d, e, m, k, s) {\n    return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0;\n}\nfunction readInt32LE(buffer, offset) {\n    offset >>>= 0;\n    return (buffer[offset])\n        | (buffer[offset + 1] << 8)\n        | (buffer[offset + 2] << 16)\n        | (buffer[offset + 3] << 24);\n}\nfunction writeUInt32LE(buffer, value, offset) {\n    value = +value;\n    offset >>>= 0;\n    buffer[offset + 3] = (value >>> 24);\n    buffer[offset + 2] = (value >>> 16);\n    buffer[offset + 1] = (value >>> 8);\n    buffer[offset] = (value & 0xff);\n    return offset + 4;\n}\nfunction writeInt32LE(buffer, value, offset) {\n    value = +value;\n    offset >>>= 0;\n    buffer[offset] = (value & 0xff);\n    buffer[offset + 1] = (value >>> 8);\n    buffer[offset + 2] = (value >>> 16);\n    buffer[offset + 3] = (value >>> 24);\n    return offset + 4;\n}\nfunction initU32Array(data) {\n    if (typeof Uint32Array !== 'undefined') {\n        return new Uint32Array(data);\n    }\n    else {\n        return data;\n    }\n}\nfunction initU8Array(data) {\n    if (typeof Uint8Array !== 'undefined') {\n        return new Uint8Array(data);\n    }\n    else {\n        return data;\n    }\n}\nfunction createU8Array(size) {\n    if (typeof Uint8Array !== 'undefined') {\n        return new Uint8Array(size);\n    }\n    else {\n        return new Array(size);\n    }\n}\nexport class RIPEMD160 {\n    constructor() {\n        this._block = createU8Array(64);\n        this._blockSize = 64;\n        this._blockOffset = 0;\n        this._length = [0, 0, 0, 0];\n        this._finalized = false;\n        this._a = 0x67452301;\n        this._b = 0xefcdab89;\n        this._c = 0x98badcfe;\n        this._d = 0x10325476;\n        this._e = 0xc3d2e1f0;\n    }\n    update(data) {\n        if (this._finalized)\n            throw new Error('Digest already called');\n        // consume data\n        const block = this._block;\n        let offset = 0;\n        while (this._blockOffset + data.length - offset >= this._blockSize) {\n            for (let i = this._blockOffset; i < this._blockSize;)\n                block[i++] = data[offset++];\n            this._update();\n            this._blockOffset = 0;\n        }\n        while (offset < data.length)\n            block[this._blockOffset++] = data[offset++];\n        // update length\n        for (let j = 0, carry = data.length * 8; carry > 0; ++j) {\n            this._length[j] += carry;\n            carry = (this._length[j] / 0x0100000000) | 0;\n            if (carry > 0)\n                this._length[j] -= 0x0100000000 * carry;\n        }\n        return this;\n    }\n    _update() {\n        const words = ARRAY16;\n        for (let j = 0; j < 16; ++j) {\n            words[j] = readInt32LE(this._block, j * 4);\n        }\n        let al = this._a | 0;\n        let bl = this._b | 0;\n        let cl = this._c | 0;\n        let dl = this._d | 0;\n        let el = this._e | 0;\n        let ar = this._a | 0;\n        let br = this._b | 0;\n        let cr = this._c | 0;\n        let dr = this._d | 0;\n        let er = this._e | 0;\n        // computation\n        for (let i = 0; i < 80; i += 1) {\n            let tl;\n            let tr;\n            if (i < 16) {\n                tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i]);\n                tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i]);\n            }\n            else if (i < 32) {\n                tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i]);\n                tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i]);\n            }\n            else if (i < 48) {\n                tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i]);\n                tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i]);\n            }\n            else if (i < 64) {\n                tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i]);\n                tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i]);\n            }\n            else { // if (i<80) {\n                tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i]);\n                tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i]);\n            }\n            al = el;\n            el = dl;\n            dl = rotl(cl, 10);\n            cl = bl;\n            bl = tl;\n            ar = er;\n            er = dr;\n            dr = rotl(cr, 10);\n            cr = br;\n            br = tr;\n        }\n        // update state\n        const t = (this._b + cl + dr) | 0;\n        this._b = (this._c + dl + er) | 0;\n        this._c = (this._d + el + ar) | 0;\n        this._d = (this._e + al + br) | 0;\n        this._e = (this._a + bl + cr) | 0;\n        this._a = t;\n    }\n    digest() {\n        if (this._finalized) {\n            throw new Error('Digest already called');\n        }\n        this._finalized = true;\n        // create padding and handle blocks\n        this._block[this._blockOffset++] = 0x80;\n        if (this._blockOffset > 56) {\n            this._block.fill(0, this._blockOffset, 64);\n            this._update();\n            this._blockOffset = 0;\n        }\n        this._block.fill(0, this._blockOffset, 56);\n        writeUInt32LE(this._block, this._length[0], 56);\n        writeUInt32LE(this._block, this._length[1], 60);\n        this._update();\n        // produce result\n        const buffer = createU8Array(20);\n        writeInt32LE(buffer, this._a, 0);\n        writeInt32LE(buffer, this._b, 4);\n        writeInt32LE(buffer, this._c, 8);\n        writeInt32LE(buffer, this._d, 12);\n        writeInt32LE(buffer, this._e, 16);\n        // reset state\n        this._block.fill(0);\n        this._blockOffset = 0;\n        for (let i = 0; i < 4; ++i) {\n            this._length[i] = 0;\n        }\n        return buffer;\n    }\n}\nexport default RIPEMD160;\n","function t(t){return t&&\"object\"==typeof t&&\"default\"in t?t.default:t}var r=require(\"sha3\"),e=t(require(\"base-x\")),n=require(\"safe-buffer\"),i=t(require(\"big-integer\")),o=t(require(\"bs58\")),f=require(\"ripemd160-min\"),u=require(\"blakejs/blake2b\"),s=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\",a=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"],h=function(t){for(var r=new ArrayBuffer(5*t.length/8),e=new Uint8Array(r),n=0;n<t.length/8;n++){for(var i=[0,0,0,0,0,0,0,0],o=0;o<8;++o)i[o]=s.indexOf(t[8*n+o]);e[5*n+0]=i[0]<<3|i[1]>>2,e[5*n+1]=(3&i[1])<<6|i[2]<<1|i[3]>>4,e[5*n+2]=(15&i[3])<<4|i[4]>>1,e[5*n+3]=(1&i[4])<<7|i[5]<<2|i[6]>>3,e[5*n+4]=(7&i[6])<<5|i[7]}return Buffer.from(e)};function c(t,r){this._block=n.Buffer.alloc(t),this._finalSize=r,this._blockSize=t,this._len=0}c.prototype.update=function(t,r){\"string\"==typeof t&&(t=n.Buffer.from(t,r=r||\"utf8\"));for(var e=this._block,i=this._blockSize,o=t.length,f=this._len,u=0;u<o;){for(var s=f%i,a=Math.min(o-u,i-s),h=0;h<a;h++)e[s+h]=t[u+h];u+=a,(f+=a)%i==0&&this._update(e)}return this._len+=o,this},c.prototype.digest=function(t){var r=this._len%this._blockSize;this._block[r]=128,this._block.fill(0,r+1),r>=this._finalSize&&(this._update(this._block),this._block.fill(0));var e=8*this._len;if(e<=4294967295)this._block.writeUInt32BE(e,this._blockSize-4);else{var n=(4294967295&e)>>>0;this._block.writeUInt32BE((e-n)/4294967296,this._blockSize-8),this._block.writeUInt32BE(n,this._blockSize-4)}this._update(this._block);var i=this._hash();return t?i.toString(t):i},c.prototype._update=function(){throw new Error(\"_update must be implemented by subclass\")};var l,d,p=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],v=new Array(64);function y(){this.init(),this._w=v,c.call(this,64,56)}function g(t,r,e){return e^t&(r^e)}function w(t,r,e){return t&r|e&(t|r)}function m(t){return(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10)}function b(t){return(t>>>6|t<<26)^(t>>>11|t<<21)^(t>>>25|t<<7)}function _(t){return(t>>>7|t<<25)^(t>>>18|t<<14)^t>>>3}function x(t){return void 0!==t.length}l=y,(d=c)&&(l.super_=d,l.prototype=Object.create(d.prototype,{constructor:{value:l,enumerable:!1,writable:!0,configurable:!0}})),y.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},y.prototype._update=function(t){for(var r,e=this._w,n=0|this._a,i=0|this._b,o=0|this._c,f=0|this._d,u=0|this._e,s=0|this._f,a=0|this._g,h=0|this._h,c=0;c<16;++c)e[c]=t.readInt32BE(4*c);for(;c<64;++c)e[c]=0|(((r=e[c-2])>>>17|r<<15)^(r>>>19|r<<13)^r>>>10)+e[c-7]+_(e[c-15])+e[c-16];for(var l=0;l<64;++l){var d=h+b(u)+g(u,s,a)+p[l]+e[l]|0,v=m(n)+w(n,i,o)|0;h=a,a=s,s=u,u=f+d|0,f=o,o=i,i=n,n=d+v|0}this._a=n+this._a|0,this._b=i+this._b|0,this._c=o+this._c|0,this._d=f+this._d|0,this._e=u+this._e|0,this._f=s+this._f|0,this._g=a+this._g|0,this._h=h+this._h|0},y.prototype._hash=function(){var t=n.Buffer.allocUnsafe(32);return t.writeInt32BE(this._a,0),t.writeInt32BE(this._b,4),t.writeInt32BE(this._c,8),t.writeInt32BE(this._d,12),t.writeInt32BE(this._e,16),t.writeInt32BE(this._f,20),t.writeInt32BE(this._g,24),t.writeInt32BE(this._h,28),t};var E=new(function(){function t(t){this.sha256=t.sha256,this.alphabet=t.alphabet,this.codec=e(this.alphabet),this.base=this.alphabet.length}var r=t.prototype;return r.encodeChecked=function(t){var r=this.sha256(this.sha256(t)).slice(0,4);return this.encodeRaw(Buffer.from(function(){for(var t=[],r=arguments.length,e=new Array(r),n=0;n<r;n++)e[n]=arguments[n];return e.forEach(function(r){if(x(r))for(var e=0;e<r.length;e++)t.push(r[e]);else t.push(r)}),t}(t,r)))},r.encodeRaw=function(t){return this.codec.encode(t)},r.decodeChecked=function(t){var r=this.decodeRaw(t);if(r.length<5)throw new Error(\"invalid_input_size: decoded data must have length >= 5\");if(!this.verifyCheckSum(r))throw new Error(\"checksum_invalid\");return r.slice(0,-4)},r.decodeRaw=function(t){return this.codec.decode(t)},r.verifyCheckSum=function(t){return function(t,r){if(t.length!==r.length)return!1;for(var e=0;e<t.length;e++)if(t[e]!==r[e])return!1;return!0}(this.sha256(this.sha256(t.slice(0,-4))).slice(0,4),t.slice(-4))},t}())({sha256:function(t){return(new y).update(Buffer.from(t)).digest()},alphabet:\"rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz\"}),B=function(t){return\"0x\"===t.slice(0,2)?t.slice(2):t},I=function(t,e){if(void 0===e&&(e=null),\"string\"!=typeof t)throw new Error(\"stripHexPrefix param must be type 'string', is currently type \"+typeof t+\".\");for(var n,i=B(t).toLowerCase(),o=(n=(null!=e?e.toString()+\"0x\":\"\")+i,new r.Keccak(256).update(n).digest()).toString(\"hex\"),f=\"0x\",u=0;u<i.length;u++)f+=parseInt(o[u],16)>=8?i[u].toUpperCase():i[u];return f},A=function(t,r){if(!t)throw r},S=function(t,r){if(!Buffer.isBuffer(t))throw r},k=i.one,z=i.zero,C=i(3);function O(t,r){return t.and(k.shiftLeft(r)).notEquals(z)}function U(t){return i.fromArray(Array.prototype.slice.call(t,0),256)}function P(t,r){var e=t.toArray(256).value,n=r?Math.max(r-e.length,0):0;return Buffer.from([].concat(Array(n).fill(0),e))}function q(t,r,e,n){A(void 0!==n,\"Missing Z coordinate\"),this.curve=t,this.x=r,this.y=e,this.z=n,this._zInv=null,this.compressed=!0}Object.defineProperty(q.prototype,\"zInv\",{get:function(){return null===this._zInv&&(this._zInv=this.z.modInv(this.curve.p)),this._zInv}}),Object.defineProperty(q.prototype,\"affineX\",{get:function(){return this.x.multiply(this.zInv).mod(this.curve.p)}}),Object.defineProperty(q.prototype,\"affineY\",{get:function(){return this.y.multiply(this.zInv).mod(this.curve.p)}}),q.fromAffine=function(t,r,e){return new q(t,r,e,k)},q.prototype.equals=function(t){return t===this||(this.curve.isInfinity(this)?this.curve.isInfinity(t):this.curve.isInfinity(t)?this.curve.isInfinity(this):0===t.y.multiply(this.z).subtract(this.y.multiply(t.z)).mod(this.curve.p).compare(z)&&0===t.x.multiply(this.z).subtract(this.x.multiply(t.z)).mod(this.curve.p).compare(z))},q.prototype.negate=function(){var t=this.curve.p.subtract(this.y);return new q(this.curve,this.x,t,this.z)},q.prototype.add=function(t){if(this.curve.isInfinity(this))return t;if(this.curve.isInfinity(t))return this;var r=this.x,e=this.y,n=t.x,i=t.y.multiply(this.z).subtract(e.multiply(t.z)).mod(this.curve.p),o=n.multiply(this.z).subtract(r.multiply(t.z)).mod(this.curve.p);if(0===o.compare(z))return 0===i.compare(z)?this.twice():this.curve.infinity;var f=o.square(),u=f.multiply(o),s=r.multiply(f),a=i.square().multiply(this.z),h=a.subtract(s.shiftLeft(1)).multiply(t.z).subtract(u).multiply(o).mod(this.curve.p),c=s.multiply(C).multiply(i).subtract(e.multiply(u)).subtract(a.multiply(i)).multiply(t.z).add(i.multiply(u)).mod(this.curve.p),l=u.multiply(this.z).multiply(t.z).mod(this.curve.p);return new q(this.curve,h,c,l)},q.prototype.twice=function(){if(this.curve.isInfinity(this))return this;if(0===this.y.compare(z))return this.curve.infinity;var t=this.x,r=this.y,e=r.multiply(this.z).mod(this.curve.p),n=e.multiply(r).mod(this.curve.p),i=this.curve.a,o=t.square().multiply(C);0!==i.compare(z)&&(o=o.add(this.z.square().multiply(i)));var f=(o=o.mod(this.curve.p)).square().subtract(t.shiftLeft(3).multiply(n)).shiftLeft(1).multiply(e).mod(this.curve.p),u=o.multiply(C).multiply(t).subtract(n.shiftLeft(1)).shiftLeft(2).multiply(n).subtract(o.pow(3)).mod(this.curve.p),s=e.pow(3).shiftLeft(3).mod(this.curve.p);return new q(this.curve,f,u,s)},q.prototype.multiply=function(t){if(this.curve.isInfinity(this))return this;if(0===t.compare(z))return this.curve.infinity;for(var r=t,e=r.multiply(C),n=this.negate(),i=this,o=e.bitLength()-2;o>0;--o){var f=O(e,o),u=O(r,o);i=i.twice(),f!==u&&(i=i.add(f?this:n))}return i},q.prototype.multiplyTwo=function(t,r,e){for(var n=Math.max(t.bitLength(),e.bitLength())-1,i=this.curve.infinity,o=this.add(r);n>=0;){var f=O(t,n),u=O(e,n);i=i.twice(),f?i=i.add(u?o:this):u&&(i=i.add(r)),--n}return i},q.prototype.getEncoded=function(t){if(null==t&&(t=this.compressed),this.curve.isInfinity(this))return new Buffer(\"00\",\"hex\");var r,e=this.affineX,n=this.affineY,i=this.curve.pLength;return t?(r=new Buffer(1+i)).writeUInt8(n.isEven()?2:3,0):((r=new Buffer(1+i+i)).writeUInt8(4,0),P(n,i).copy(r,1+i)),P(e,i).copy(r,1),r},q.decodeFrom=function(t,r){var e,n=r.readUInt8(0),i=4!==n,o=Math.floor((t.p.bitLength()+7)/8),f=U(r.slice(1,1+o));if(i)A(r.length===o+1,\"Invalid sequence length\"),A(2===n||3===n,\"Invalid sequence tag\"),e=t.pointFromX(3===n,f);else{A(r.length===1+o+o,\"Invalid sequence length\");var u=U(r.slice(1+o));e=q.fromAffine(t,f,u)}return e.compressed=i,e},q.prototype.toString=function(){return this.curve.isInfinity(this)?\"(INFINITY)\":\"(\"+this.affineX.toString()+\",\"+this.affineY.toString()+\")\"};var L=i.zero,j=i.one;function R(t,r,e,n,i,o,f){this.p=t,this.a=r,this.b=e,this.G=q.fromAffine(this,n,i),this.n=o,this.h=f,this.infinity=new q(this,null,null,L),this.pOverFour=t.add(j).shiftRight(2),this.pLength=Math.floor((this.p.bitLength()+7)/8)}R.prototype.pointFromX=function(t,r){var e=r.pow(3).add(this.a.multiply(r)).add(this.b).mod(this.p).modPow(this.pOverFour,this.p),n=e;return e.isEven()^!t&&(n=this.p.subtract(n)),q.fromAffine(this,r,n)},R.prototype.isInfinity=function(t){return t===this.infinity||0===t.z.compare(L)&&0!==t.y.compare(L)},R.prototype.isOnCurve=function(t){if(this.isInfinity(t))return!0;var r=t.affineX,e=t.affineY,n=this.a,i=this.b,o=this.p;if(r.compare(L)<0||r.compareTo(o)>=0)return!1;if(e.compare(L)<0||e.compareTo(o)>=0)return!1;var f=e.square().mod(o),u=r.pow(3).add(n.multiply(r)).add(i).mod(o);return f.equals(u)},R.prototype.validate=function(t){A(!this.isInfinity(t),\"Point is at infinity\"),A(this.isOnCurve(t),\"Point is not on the curve\");var r=t.multiply(this.n);return A(this.isInfinity(r),\"Point is not a scalar multiple of G\"),!0};var M={p:\"fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f\",a:\"00\",b:\"07\",n:\"fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\",h:\"01\",Gx:\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",Gy:\"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\"};function F(t,e){return new r.SHA3(256).update(t).digest(e)}function T(t){return Buffer.from((new f.RIPEMD160).update(t).digest())}function D(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(S(t,\"expecting keyBuffer<Buffer>\"),\"sha256x2\"===r){var e=F(F(t)).slice(0,4);return o.encode(Buffer.concat([t,e]))}var n=[t];r&&n.push(Buffer.from(r));var i=T(Buffer.concat(n)).slice(0,4);return o.encode(Buffer.concat([t,i]))}function H(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;A(t,\"private key expected\");var e,n=new Buffer(o.decode(t)),i=n.slice(-4),f=n.slice(0,-4);if(\"sha256x2\"===r)e=F(F(f)).slice(0,4);else{var u=[f];r&&u.push(Buffer.from(r)),e=T(Buffer.concat(u)).slice(0,4)}if(i.toString(\"hex\")!==e.toString(\"hex\"))throw new Error(\"Invalid checksum, \"+\"\".concat(i.toString(\"hex\"),\" != \").concat(e.toString(\"hex\")));return f}var G=function(t){var r=M;if(!r)return null;var e=i(r.p,16),n=i(r.a,16),o=i(r.b,16),f=i(r.n,16),u=i(r.h,16);return new R(e,n,o,i(r.Gx,16),i(r.Gy,16),f,u)}();function N(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"EOS\";if(\"string\"==typeof t)return N.fromString(t,r);if(Buffer.isBuffer(t))return N.fromBuffer(t);if(\"object\"==typeof t&&t.Q)return N(t.Q);function e(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:t.compressed;return t.getEncoded(r)}function n(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"EOS\";return t+D(e())}function i(){return e().toString(\"hex\")}return{Q:t,toString:n,toBuffer:e,toHex:i}}N.isValid=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"EOS\";try{return N(t,r),!0}catch(t){return!1}},N.fromBuffer=function(t){return N(q.decodeFrom(G,t))},N.fromString=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"EOS\";try{return N.fromStringOrThrow(t,r)}catch(t){return null}},N.fromStringOrThrow=function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"EOS\",e=t.match(/^PUB_([A-Za-z0-9]+)_([A-Za-z0-9]+)$/);if(null===e){var n=new RegExp(\"^\"+r);return n.test(t)&&(t=t.substring(r.length)),N.fromBuffer(H(t))}var i=e[1],o=e[2];return N.fromBuffer(H(o,i))},N.fromHex=function(t){return N.fromBuffer(new Buffer(t,\"hex\"))},N.fromStringHex=function(t){return N.fromString(new Buffer(t,\"hex\"))};var X=e(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\"),K=X.encode,Y=X.decode,V=function(t){return void 0===t},Q={ed25519PublicKey:48,ed25519SecretSeed:144,preAuthTx:152,sha256Hash:184},Z=function(t){var r=Buffer.alloc(2);return r.writeUInt16LE(function(t,r){Buffer.isBuffer(t)||(t=new Buffer);for(var e=0,n=0;n<t.length;n++){var i=e>>>8&255;i^=255&t[n],e=e<<8&65535,e^=i^=i>>>4,e^=i=i<<5&65535,e^=i=i<<7&65535}return e}(t),0),r};function J(t){return(J=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function W(t,r){return(W=Object.setPrototypeOf||function(t,r){return t.__proto__=r,t})(t,r)}function $(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}function tt(t,r,e){return(tt=$()?Reflect.construct:function(t,r,e){var n=[null];n.push.apply(n,r);var i=new(Function.bind.apply(t,n));return e&&W(i,e.prototype),i}).apply(null,arguments)}function rt(t){var r=\"function\"==typeof Map?new Map:void 0;return(rt=function(t){if(null===t||-1===Function.toString.call(t).indexOf(\"[native code]\"))return t;if(\"function\"!=typeof t)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==r){if(r.has(t))return r.get(t);r.set(t,e)}function e(){return tt(t,arguments,J(this).constructor)}return e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),W(e,t)})(t)}var et=[0,1,2,42,43,68,69],nt=function(t){for(var r=new Uint8Array(t.length),e=0;e<t.length;e++)r[e]=t.charCodeAt(e);return r}(\"SS58PRE\"),it=function(t){var r,e;function n(){return t.apply(this,arguments)||this}return e=t,(r=n).prototype=Object.create(e.prototype),r.prototype.constructor=r,r.__proto__=e,n.prototype.toJSON=function(){return{_type:\"AccountIndex\",data:this+0}},n}(rt(Number));function ot(t,r){t.length||(t=[t]),r.length||(r=[r]);var e=new Uint8Array(t.length+r.length);return e.set(t),e.set(r,t.length),e}function ft(t){var r=new Error;this.name=r.name=\"ValidationError\",this.message=r.message=t,this.stack=r.stack}function ut(t,r){if(null==r&&(r=\"Assertion failed.\"),!t)throw new ft(r)}ft.prototype=Object.create(Error.prototype);var st=function(){function t(t,r){this.hi=0|t,this.lo=0|r}return t.prototype.ushrn32=function(t){var r=this.lo;return 0==(t&=63)||(t<32?(r>>>=t,r|=this.hi<<32-t):r=this.hi>>>t-32),r},t}(),at=Buffer.allocUnsafe(105),ht=\"qpzry9x8gf2tvdw0s3jn54khce6mua7l\",ct=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,15,-1,10,17,21,20,26,30,7,5,-1,-1,-1,-1,-1,-1,-1,29,-1,24,13,25,9,8,23,-1,18,22,31,27,19,-1,1,0,3,16,11,28,12,14,6,4,2,-1,-1,-1,-1,-1,-1,29,-1,24,13,25,9,8,23,-1,18,22,31,27,19,-1,1,0,3,16,11,28,12,14,6,4,2,-1,-1,-1,-1,-1],lt=new st(7,4294967295),dt=[new st(152,4072443489),new st(121,3077413346),new st(243,1046459332),new st(174,783016616),new st(30,1329849456)];function pt(t,r){var e=t,n=e.hi>>>3;e.hi&=lt.hi,e.lo&=lt.lo,e.hi<<=5,e.hi|=e.lo>>>27,e.lo<<=5;for(var i=0;i<dt.length;i++)n>>>i&1&&(e.hi^=dt[i].hi,e.lo^=dt[i].lo);return e.lo^=r,e}function vt(t,r,e,n,i,o,f){ut(Buffer.isBuffer(t)),ut(r>>>0===r),ut(Buffer.isBuffer(e)),ut(n>>>0===n),ut((255&i)===i),ut((255&o)===o),ut(\"boolean\"==typeof f);for(var u=(1<<o)-1,s=0,a=0;r<t.length;r++){var h=t[r];if(h>>>i!=0)throw new Error(\"Invalid bits.\");for(s=s<<i|h,a+=i;a>=o;)e[n++]=s>>>(a-=o)&u}if(f)a&&(e[n++]=s<<o-a&u);else if(a>=i||s<<o-a&u)throw new Error(\"Invalid bits.\");return ut(n<=e.length),e.slice(0,n)}var yt=function(t){function r(r){var e=r.slice(0,-4),n=r.slice(-4),i=t(e);if(!(n[0]^i[0]|n[1]^i[1]|n[2]^i[2]|n[3]^i[3]))return e}return{bs58Encode:function(r){var e=t(r);return o.encode(Buffer.concat([r,e],r.length+4))},bs58Decode:function(t){var e=r(o.decode(t));if(!e)throw new Error(\"Invalid checksum\");return e},decodeUnsafe:function(t){var e=o.decodeUnsafe(t);if(e)return r(e)}}}(function(t){var r=(new y).update(t).digest();return(new y).update(r).digest()}),gt=yt.bs58Decode,wt=yt.bs58Encode;exports.b32decode=h,exports.b32encode=function(t){var r=[],e=Math.floor(t.length/5),n=t.length%5;if(0!=n){for(var i=0;i<5-n;i++)t+=\"\\0\";e+=1}for(var o=0;o<e;o++)r.push(s.charAt(t.charCodeAt(5*o)>>3)),r.push(s.charAt((7&t.charCodeAt(5*o))<<2|t.charCodeAt(5*o+1)>>6)),r.push(s.charAt((63&t.charCodeAt(5*o+1))>>1)),r.push(s.charAt((1&t.charCodeAt(5*o+1))<<4|t.charCodeAt(5*o+2)>>4)),r.push(s.charAt((15&t.charCodeAt(5*o+2))<<1|t.charCodeAt(5*o+3)>>7)),r.push(s.charAt((127&t.charCodeAt(5*o+3))>>2)),r.push(s.charAt((3&t.charCodeAt(5*o+3))<<3|t.charCodeAt(5*o+4)>>5)),r.push(s.charAt(31&t.charCodeAt(5*o+4)));var f=0;1==n?f=6:2==n?f=4:3==n?f=3:4==n&&(f=1);for(var u=0;u<f;u++)r.pop();for(var a=0;a<f;a++)r.push(\"=\");return r.join(\"\")},exports.bs58Decode=gt,exports.bs58Encode=wt,exports.calculateChecksum=Z,exports.cashaddrDecode=function(t,r){void 0===r&&(r=\"bitcoincash\"),ut(\"string\"==typeof t),ut(\"string\"==typeof r);var e=function(t,r){if(ut(\"string\"==typeof t),t.length<8||t.length>196)throw new Error(\"Invalid cashaddr data length.\");for(var e=!1,n=!1,i=!1,o=0,f=0;f<t.length;f++){var u=t.charCodeAt(f);if(u>=97&&u<=122)e=!0;else if(u>=65&&u<=90)n=!0;else if(u>=48&&u<=57)i=!0;else{if(58!==u)throw new Error(\"Invalid cashaddr character.\");if(i||0===f||f>83)throw new Error(\"Invalid cashaddr prefix.\");if(0!==o)throw new Error(\"Invalid cashaddr separators.\");o=f}}if(n&&e)throw new Error(\"Invalid cashaddr casing.\");var s,a=new st(0,1);0===o?s=r.toLowerCase():(s=t.substring(0,o).toLowerCase(),o+=1);for(var h=0;h<s.length;h++)pt(a,31&(32|s.charCodeAt(h)));pt(a,0);var c=t.length-o;if(c<=8||c>112)throw new Error(\"Invalid cashaddr data length.\");for(var l=Buffer.allocUnsafe(c),d=o;d<t.length;d++){var p=t.charCodeAt(d),v=65408&p?-1:ct[p];if(-1===v)throw new Error(\"Invalid cashaddr character.\");pt(a,v),d+8<t.length&&(l[d-o]=v)}if(0!==a.hi||1!==a.lo||s!==r)throw new Error(\"Invalid cashaddr checksum.\");return[s,l.slice(0,-8)]}(t,r),n=e[0],i=e[1],o=5*i.length&7;if(o>=5)throw new Error(\"Invalid padding in data.\");if(i[i.length-1]&(1<<o)-1)throw new Error(\"Non zero padding.\");var f=vt(i,0,i,0,5,8,!1),u=f[0]>>>3&31,s=f.slice(1),a=20+4*(3&f[0]);if(4&f[0]&&(a*=2),a!==s.length)throw new Error(\"Invalid cashaddr data length.\");return{prefix:n,type:u,hash:s}},exports.cashaddrEncode=function(t,r,e){if(ut(\"string\"==typeof t),ut((15&r)===r,\"Invalid cashaddr type.\"),ut(Buffer.isBuffer(e)),0===t.length||t.length>83)throw new Error(\"Invalid cashaddr prefix.\");var n=function(t){switch(ut(t>>>0===t),t){case 20:return 0;case 24:return 1;case 28:return 2;case 32:return 3;case 40:return 4;case 48:return 5;case 56:return 6;case 64:return 7;default:throw new Error(\"Non standard length.\")}}(e.length),i=Buffer.allocUnsafe(e.length+1);return i[0]=r<<3|n,e.copy(i,1),function(t,r){ut(\"string\"==typeof t),ut(Buffer.isBuffer(r));for(var e=new st(0,1),n=\"\",i=!1,o=!1,f=0;f<t.length;f++){var u=t.charCodeAt(f);if(65280&u||u>>>5==0)throw new Error(\"Invalid cashaddr character.\");if(u>=97&&u<=122)o=!0;else if(u>=65&&u<=90)i=!0,u=u-65+97;else if(u>=48&&u<=57)throw new Error(\"Invalid cashaddr prefix.\");pt(e,31&u),n+=String.fromCharCode(u)}if(o&&i)throw new Error(\"Invalid cashaddr prefix.\");pt(e,0),n+=\":\";for(var s=0;s<r.length;s++){var a=r[s];if(a>>>5!=0)throw new Error(\"Invalid cashaddr value.\");pt(e,a),n+=ht[a]}for(var h=0;h<8;h++)pt(e,0);e.lo^=1;for(var c=0;c<8;c++){var l=31&e.ushrn32(5*(7-c));n+=ht[l]}return n}(t,vt(i,0,at,0,8,5,!0))},exports.codec=E,exports.decodeCheck=function(t,r){if(\"string\"!=typeof r)throw new TypeError(\"encoded argument must be of type String\");var e=Y(r),n=e[0],i=e.slice(0,-2),o=i.slice(1),f=e.slice(-2);if(r!==K(e))throw new Error(\"invalid encoded string\");var u=Q[t];if(V(u))throw new Error(t+' is not a valid version byte name.  expected one of \"accountId\" or \"seed\"');if(n!==u)throw new Error(\"invalid version byte. expected \"+u+\", got \"+n);if(!function(t,r){if(t.length!==r.length)return!1;if(0===t.length)return!0;for(var e=0;e<t.length;e+=1)if(t[e]!==r[e])return!1;return!0}(Z(i),f))throw new Error(\"invalid checksum\");return Buffer.from(o)},exports.encodeCheck=function(t,r){if(null===r||V(r))throw new Error(\"cannot encode null data\");var e=Q[t];if(V(e))throw new Error(t+' is not a valid version byte name.  expected one of \"ed25519PublicKey\", \"ed25519SecretSeed\", \"preAuthTx\", \"sha256Hash\"');r=Buffer.from(r);var n=Buffer.from([e]),i=Buffer.concat([n,r]),o=Z(i),f=Buffer.concat([i,o]);return K(f)},exports.eosPublicKey=N,exports.hex2a=function(t){for(var r=t.toString(),e=\"\",n=0;n<r.length;n+=2)e+=String.fromCharCode(parseInt(r.substr(n,2),16));return e},exports.isValid=function(t){var e=t.toString().toUpperCase().replace(/-/g,\"\");if(!e||40!==e.length)return!1;var n,i=function(t){for(var r=\"\",e=0;e<t.length;e++){var n=Math.round(t[e]).toString(16);1===n.length&&(n=\"0\"+n),r+=n}return r}(h(e));return n=Buffer.from(i.slice(0,42),\"hex\"),new r.Keccak(256).update(n).digest(\"hex\").toString().substr(0,8)===i.slice(42)},exports.isValidChecksumAddress=function(t,r){return function(t){return/^0x[0-9a-fA-F]{40}$/.test(t)}(t)&&I(t,r)===t},exports.ss58Decode=function(t,r){var e;void 0===r&&(r=0);try{e=o.decode(t)}catch(t){return null}if(-1===et.indexOf(e[0]))return null;if(e.length<3)return null;var n,i=e.length<=3?1:e.length<=5?2:e.length<=9?4:e.length<=17?8:32,f=e.length-1-i,s=e.slice(1,1+i);e.slice(1+e.length),32===i&&(n=s);var a=i<32?new it(function(t){var r=0,e=1;return t.forEach(function(t){r+=t*e,e*=256}),r}(s)):new Buffer.from(s);if(e[0]%1&&!n&&!r)return null;for(var h=u.blake2b(ot(nt,e[0]%1?n||r(a):e.slice(0,1+i))),c=0;c<f;++c)if(h[c]!==e[1+i+c])return null;return a},exports.ss58Encode=function(t,r,e,n,i){var f;if(void 0===r&&(r=42),void 0===e&&(e=null),void 0===n&&(n=null),-1===et.indexOf(r))throw new Error(\"Unknown ss58 address type\",r);if(\"number\"==typeof t||t instanceof it){var s=t<256?1:t<65536?2:t<1?4:8;if(-1===[1,2,4,8].indexOf(n=n||s))throw new Error(\"Invalid length\");if(n=Math.max(s,n),e&&\"number\"!=typeof e)throw new Error(\"Invalid checksum length\");switch(n){case 1:e=1;break;case 2:e=[1,2].indexOf(e)+1||1;break;case 4:e=[1,2,3,4].indexOf(e)+1||1;break;case 8:e=[1,2,3,4,5,6,7,8].indexOf(e)+1||1}f=function(t,r){var e=!1;t<0&&(t=-t-1,e=!0);for(var n=new Uint8Array(r),i=0;i<r;++i)n[i]=t%256,e&&(n[i]=255&~n[i]),t/=256;return n}(t,n)}else{if(!(t instanceof Uint8Array)||32!==t.length&&35!==t.length)throw new Error(\"Unknown item to encode as ss58. Passing back.\",t);e=2,i=f=35===t.length?t.slice(1,33):t}var a=u.blake2b(ot(nt,1&r?i:ot(r,f))),h=ot(ot(r,f),a.slice(0,e));return o.encode(Buffer.from(h))},exports.stripHexPrefix=B,exports.toChecksumAddress=I,exports.ua2hex=function(t){for(var r=\"\",e=0;e<t.length;e++){var n=t[e];r+=a[n>>>4],r+=a[15&n]}return r};\n//# sourceMappingURL=index.js.map\n","const alphabet = '13456789abcdefghijkmnopqrstuwxyz'\r\n\r\n/**\r\n * Encode provided Uint8Array using the Nano-specific Base-32 implementeation.\r\n * @param {Uint8Array} view Input buffer formatted as a Uint8Array\r\n * @returns {string}\r\n */\r\nfunction encode (view) {\r\n  if (view.constructor !== Uint8Array) {\r\n    throw new Error('View must be a Uint8Array!')\r\n  }\r\n  const length = view.length\r\n  const leftover = (length * 8) % 5\r\n  const offset = leftover === 0 ? 0 : 5 - leftover\r\n\r\n  let value = 0\r\n  let output = ''\r\n  let bits = 0\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    value = (value << 8) | view[i]\r\n    bits += 8\r\n\r\n    while (bits >= 5) {\r\n      output += alphabet[(value >>> (bits + offset - 5)) & 31]\r\n      bits -= 5\r\n    }\r\n  }\r\n\r\n  if (bits > 0) {\r\n    output += alphabet[(value << (5 - (bits + offset))) & 31]\r\n  }\r\n\r\n  return output\r\n}\r\n\r\nfunction readChar (char) {\r\n  var idx = alphabet.indexOf(char)\r\n\r\n  if (idx === -1) {\r\n    throw new Error('Invalid character found: ' + char)\r\n  }\r\n\r\n  return idx\r\n}\r\n\r\n/**\r\n * Decodes a Nano-implementation Base32 encoded string into a Uint8Array\r\n * @param {string} input A Nano-Base32 encoded string\r\n * @returns {Uint8Array}\r\n */\r\nfunction decode (input) {\r\n  if (typeof input !== 'string') {\r\n    throw new Error('Input must be a string!')\r\n  }\r\n  var length = input.length\r\n  const leftover = (length * 5) % 8\r\n  const offset = leftover === 0 ? 0 : 8 - leftover\r\n\r\n  var bits = 0\r\n  var value = 0\r\n\r\n  var index = 0\r\n  var output = new Uint8Array(Math.ceil(length * 5 / 8))\r\n\r\n  for (var i = 0; i < length; i++) {\r\n    value = (value << 5) | readChar(input[i])\r\n    bits += 5\r\n\r\n    if (bits >= 8) {\r\n      output[index++] = (value >>> (bits + offset - 8)) & 255\r\n      bits -= 8\r\n    }\r\n  }\r\n  if (bits > 0) {\r\n    output[index++] = (value << (bits + offset - 8)) & 255\r\n  }\r\n\r\n  if (leftover !== 0) {\r\n    output = output.slice(1)\r\n  }\r\n  return output\r\n}\r\n\r\nmodule.exports = {\r\n  encode,\r\n  decode\r\n}\r\n","// https://gitlab.com/mjbecze/leb128 was ported so that we can reuse older version of bn.js (4.0.0) instead of the one leb128 uses (5.1)\n\n// Could not make import work for bn.js as @types/bn.js wasn't working\n/* tslint:disable:no-var-requires */\nconst Bn = require('bn.js')\n// https://gitlab.com/mjbecze/leb128/-/blob/master/stream.js\nclass Stream{\n  public buffer:Buffer\n  private bytesRead:number\n\n  constructor (buf:Buffer = Buffer.from([])) {\n    this.buffer = buf\n    this.bytesRead = 0\n  }\n\n  public read (size:number) {\n    const data = this.buffer.slice(0, size)\n    this.buffer = this.buffer.slice(size)\n    this.bytesRead += size\n    return data\n  }\n\n  public write (buf:[any]) {\n    this.buffer = Buffer.concat([this.buffer, Buffer.from(buf)])\n  }\n}\n\n// https://gitlab.com/mjbecze/leb128/-/blob/master/unsigned.js\nfunction read (stream: Stream) {\n  return readBn(stream).toString()\n}\n\nfunction readBn (stream: Stream) {\n  const num = new Bn(0)\n  let shift = 0\n  let byt\n  while (true) {\n    byt = stream.read(1)[0]\n    /* tslint:disable:no-bitwise */\n    num.ior(new Bn(byt & 0x7f).shln(shift))\n    if (byt >> 7 === 0) {\n      break\n    } else {\n      shift += 7\n    }\n  }\n  return num\n}\n\nfunction write (num:string | number, stream: Stream) {\n  const bigNum = new Bn(num)\n  while (true) {\n    const i = bigNum.maskn(7).toNumber()\n    bigNum.ishrn(7)\n    if (bigNum.isZero()) {\n      stream.write([i])\n      break\n    } else {\n      stream.write([i | 0x80])\n    }\n  }\n}\n\n/**\n * LEB128 encodeds an interger\n * @param {String|Number} num\n * @return {Buffer}\n */\nexport function encode (num: string | number ) {\n  const stream = new Stream()\n  write(num, stream)\n  return stream.buffer\n}\n\n/**\n * decodes a LEB128 encoded interger\n * @param {Buffer} buffer\n * @return {String}\n */\nexport function decode (buffer:Buffer) {\n  const stream = new Stream(buffer)\n  return read(stream)\n}\n","export class Address {\n  public str: Buffer;\n  constructor(str: Buffer) {\n    if (!str || str.length < 1) { throw new Error('Missing str in address') }\n    this.str = str\n  }\n\n  // https://beta.spec.filecoin.io/#appendix__address__protocol-indicator\n  public protocol(): number {\n    if (this.str.length < 1) {\n      throw Error('No address found.')\n    }\n\n    return this.str[0]\n  }\n\n  public payload(): Buffer {\n    if (this.str.length < 1) {\n      throw Error('No address found.')\n    }\n    return this.str.slice(1, this.str.length)\n  }\n}\n","// Ported from https://www.npmjs.com/package/@glif/filecoin-address to reduce file size\n\nimport { blake2b } from 'blakejs'\nimport { b32decode, b32encode, hex2a} from 'crypto-addr-codec';\nimport { decode as lebDecode, encode as lebEncode } from '../leb128/unsigned';\nimport { Address } from './address';\n\nfunction validateChecksum (ingest:Buffer, expect:Buffer){\n    const digest = getChecksum(ingest)\n    return Buffer.compare(Buffer.from(digest), expect)\n}\n\nfunction getChecksum (ingest:Buffer):Buffer {\n    return blake2b(ingest, null, 4)\n}\n\nfunction checkAddressString (address:string){\n    if (!address){throw Error('No bytes to validate.')}\n    if (address.length < 3){throw Error('Address is too short to validate.')}\n    if (address[0] !== 'f' && address[0] !== 't') {\n        throw Error('Unknown address network.')\n    }\n\n    switch (address[1]) {\n        case '0': {\n        if (address.length > 22){throw Error('Invalid ID address length.')}\n        break\n        }\n        case '1': {\n        if (address.length !== 41){throw Error('Invalid secp256k1 address length.')}\n        break\n        }\n        case '2': {\n        if (address.length !== 41){throw Error('Invalid Actor address length.')}\n        break\n        }\n        case '3': {\n        if (address.length !== 86){throw Error('Invalid BLS address length.')}\n        break\n        }\n        default: {\n            throw new Error('Invalid address protocol.')\n        }\n    }\n}\n\nfunction filDecode (address: string) {\n    checkAddressString(address)\n    const network = address[0]\n    const protocol = parseInt(address[1], 10)\n    const protocolByte = Buffer.from([protocol])\n    const raw = address.slice(2)\n\n    if (protocol === 0) {\n      return filNewAddress(protocol, Buffer.from(lebEncode(raw)))\n    }\n\n    const payloadChecksum = Buffer.from(b32decode(raw.toUpperCase()))\n    const { length } = payloadChecksum\n    const payload = payloadChecksum.slice(0, length - 4)\n    const checksum = payloadChecksum.slice(length - 4, length)\n    if (validateChecksum(Buffer.concat([protocolByte, payload]), checksum)) {\n        throw Error(\"Checksums don't match\")\n    }\n\n    const addressObj = filNewAddress(protocol, payload)\n    if (filEncode(network, addressObj) !== address){\n        throw Error(`Did not encode this address properly: ${address}`)\n    }\n    return addressObj\n}\n\n\nfunction filEncode (network:string, address:Address) {\n    if (!address || !address.str){throw Error('Invalid address')}\n    let addressString = ''\n    const payload = address.payload()\n    const protocol = address.protocol()\n\n    switch (protocol) {\n        case 0: {\n            const decoded = lebDecode(payload)\n            addressString = network + String(protocol) + decoded\n            break\n        }\n        default: {\n            const protocolByte = Buffer.from([protocol])\n            const toChecksum = Buffer.concat([protocolByte, payload])\n            const checksum = getChecksum(toChecksum)\n            const bytes = Buffer.concat([payload, Buffer.from(checksum)])\n            const bytes2a = hex2a(bytes.toString('hex'));\n            const bytes32encoded = b32encode(bytes2a).replace(/=/g, '').toLowerCase();\n            addressString = String(network) + String(protocol) + bytes32encoded\n            break\n        }\n    }\n    return addressString\n}\n\nfunction filNewAddress (protocol:number, payload:Buffer): Address {\n    const protocolByte = Buffer.from([protocol])\n    const input = Buffer.concat([protocolByte, payload])\n    return new Address(input)\n}\n  \nexport function filAddrEncoder(data: Buffer): string {\n    const address = filNewAddress(data[0], data.slice(1))\n    return filEncode('f', address).toString()\n}\n    \nexport function filAddrDecoder(data: string): Buffer {\n    return filDecode(data).str\n}    \n","import {\n  decode as bech32Decode,\n  encode as bech32Encode,\n  fromWords as bech32FromWords,\n  toWords as bech32ToWords,\n} from 'bech32';\nimport bigInt from 'big-integer';\nimport { blake2b } from 'blakejs'\nimport { decode as bs58DecodeNoCheck, encode as bs58EncodeNoCheck } from 'bs58';\n// @ts-ignore\nimport { createHash } from 'crypto';\nimport {\n  b32decode,\n  b32encode,\n  bs58Decode,\n  bs58Encode,\n  cashaddrDecode,\n  cashaddrEncode,\n  codec as xrpCodec,\n  decodeCheck as decodeEd25519PublicKey,\n  encodeCheck as encodeEd25519PublicKey,\n  eosPublicKey,\n  hex2a,\n  isValid as isValidXemAddress,\n  isValidChecksumAddress as rskIsValidChecksumAddress,\n  ss58Decode,\n  ss58Encode,\n  stripHexPrefix as rskStripHexPrefix,\n  toChecksumAddress as rskToChecksumAddress,\n} from 'crypto-addr-codec';\nimport { decode as nanoBase32Decode, encode as nanoBase32Encode } from 'nano-base32';\nimport { filAddrDecoder, filAddrEncoder } from './filecoin/index';\n\ntype EnCoder = (data: Buffer) => string;\ntype DeCoder = (data: string) => Buffer;\n\ntype base58CheckVersion = number[]\n\nexport interface IFormat {\n  coinType: number;\n  name: string;\n  encoder: (data: Buffer) => string;\n  decoder: (data: string) => Buffer;\n}\n\n// Support version field of more than one byte (e.g. Zcash)\nfunction makeBitcoinBase58CheckEncoder(p2pkhVersion: base58CheckVersion, p2shVersion: base58CheckVersion): (data: Buffer) => string {\n  return (data: Buffer) => {\n    let addr: Buffer;\n    switch (data.readUInt8(0)) {\n      case 0x76: // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n        if (\n          data.readUInt8(1) !== 0xa9 ||\n          data.readUInt8(data.length - 2) !== 0x88 ||\n          data.readUInt8(data.length - 1) !== 0xac\n        ) {\n          throw Error('Unrecognised address format');\n        }\n        addr = Buffer.concat([Buffer.from(p2pkhVersion), data.slice(3, 3 + data.readUInt8(2))]);\n        // @ts-ignore\n        return bs58Encode(addr);\n      case 0xa9: // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n        if (data.readUInt8(data.length - 1) !== 0x87) {\n          throw Error('Unrecognised address format');\n        }\n        addr = Buffer.concat([Buffer.from(p2shVersion), data.slice(2, 2 + data.readUInt8(1))]);\n        return bs58Encode(addr);\n      default:\n        throw Error('Unrecognised address format');\n    }\n  };\n}\n\n// Supports version field of more than one byte\n// NOTE: Assumes all versions in p2pkhVersions[] or p2shVersions[] will have the same length\nfunction makeBitcoinBase58CheckDecoder(p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]): (data: string) => Buffer {\n  return (data: string) => {\n    const addr = bs58Decode(data);\n    // Checks if the first addr bytes are exactly equal to provided version field\n    const checkVersion = (version: base58CheckVersion) => {\n      return version.every((value: number, index: number) => index < addr.length && value === addr.readUInt8(index))\n    }\n    if (p2pkhVersions.some(checkVersion)) {\n      return Buffer.concat([Buffer.from([0x76, 0xa9, 0x14]), addr.slice(p2pkhVersions[0].length), Buffer.from([0x88, 0xac])]);\n    } else if (p2shVersions.some(checkVersion)) {\n      return Buffer.concat([Buffer.from([0xa9, 0x14]), addr.slice(p2shVersions[0].length), Buffer.from([0x87])]);\n    }\n    throw Error('Unrecognised address format');\n  };\n}\n\nconst bitcoinBase58Chain = (name: string, coinType: number, p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]) => ({\n  coinType,\n  decoder: makeBitcoinBase58CheckDecoder(p2pkhVersions, p2shVersions),\n  encoder: makeBitcoinBase58CheckEncoder(p2pkhVersions[0], p2shVersions[0]),\n  name,\n});\n\nfunction makeBech32SegwitEncoder(hrp: string): (data: Buffer) => string {\n  return (data: Buffer) => {\n    let version = data.readUInt8(0);\n    if (version >= 0x51 && version <= 0x60) {\n      version -= 0x50;\n    } else if (version !== 0x00) {\n      throw Error('Unrecognised address format');\n    }\n\n    const words = [version].concat(bech32ToWords(data.slice(2, data.readUInt8(1) + 2)));\n    return bech32Encode(hrp, words);\n  };\n}\n\nfunction makeBech32SegwitDecoder(hrp: string): (data: string) => Buffer {\n  return (data: string) => {\n    const { prefix, words } = bech32Decode(data);\n    if (prefix !== hrp) {\n      throw Error('Unexpected human-readable part in bech32 encoded address');\n    }\n    const script = bech32FromWords(words.slice(1));\n    let version = words[0];\n    if (version > 0) {\n      version += 0x50;\n    }\n    return Buffer.concat([Buffer.from([version, script.length]), Buffer.from(script)]);\n  };\n}\n\nfunction makeBitcoinEncoder(hrp: string, p2pkhVersion: base58CheckVersion, p2shVersion: base58CheckVersion): (data: Buffer) => string {\n  const encodeBech32 = makeBech32SegwitEncoder(hrp);\n  const encodeBase58Check = makeBitcoinBase58CheckEncoder(p2pkhVersion, p2shVersion);\n  return (data: Buffer) => {\n    try {\n      return encodeBase58Check(data);\n    } catch {\n      return encodeBech32(data);\n    }\n  };\n}\n\nfunction makeBitcoinDecoder(hrp: string, p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]): (data: string) => Buffer {\n  const decodeBech32 = makeBech32SegwitDecoder(hrp);\n  const decodeBase58Check = makeBitcoinBase58CheckDecoder(p2pkhVersions, p2shVersions);\n  return (data: string) => {\n    if (data.toLowerCase().startsWith(hrp + '1')) {\n      return decodeBech32(data);\n    } else {\n      return decodeBase58Check(data);\n    }\n  };\n}\n\nconst bitcoinChain = (\n  name: string,\n  coinType: number,\n  hrp: string,\n  p2pkhVersions: base58CheckVersion[],\n  p2shVersions: base58CheckVersion[],\n) => ({\n  coinType,\n  decoder: makeBitcoinDecoder(hrp, p2pkhVersions, p2shVersions),\n  encoder: makeBitcoinEncoder(hrp, p2pkhVersions[0], p2shVersions[0]),\n  name,\n});\n\n// Similar to makeBitcoinEncoder but:\n// - Uses Bech32 without SegWit https://zips.z.cash/zip-0173\n// - Supports version field of more than one byte\nfunction makeZcashEncoder(hrp: string, p2pkhVersion: base58CheckVersion, p2shVersion: base58CheckVersion): (data: Buffer) => string {\n  const encodeBech32 = makeBech32Encoder(hrp);\n  const encodeBase58Check = makeBitcoinBase58CheckEncoder(p2pkhVersion, p2shVersion);\n  return (data: Buffer) => {\n    try {\n      return encodeBase58Check(data);\n    } catch {\n      return encodeBech32(data);\n    }\n  };\n}\n\n// Similar to makeBitcoinDecoder but uses makeZcashBase58CheckDecoder to support version field of more than one byte\nfunction makeZcashDecoder(hrp: string, p2pkhVersions: base58CheckVersion[], p2shVersions: base58CheckVersion[]): (data: string) => Buffer {\n  const decodeBase58Check = makeBitcoinBase58CheckDecoder(p2pkhVersions, p2shVersions);\n  const decodeBech32 = makeBech32Decoder(hrp);\n  return (data: string) => {\n    if (data.toLowerCase().startsWith(hrp)) {\n      return decodeBech32(data);\n    } else {\n      return decodeBase58Check(data);\n    }\n  };\n}\n\nconst zcashChain = (\n  name: string,\n  coinType: number,\n  hrp: string,\n  p2pkhVersions: base58CheckVersion[],\n  p2shVersions: base58CheckVersion[],\n) => ({\n  coinType,\n  decoder: makeZcashDecoder(hrp, p2pkhVersions, p2shVersions),\n  encoder: makeZcashEncoder(hrp, p2pkhVersions[0], p2shVersions[0]),\n  name,\n});\n\nfunction encodeCashAddr(data: Buffer): string {\n  switch (data.readUInt8(0)) {\n    case 0x76: // P2PKH: OP_DUP OP_HASH160 <pubKeyHash> OP_EQUALVERIFY OP_CHECKSIG\n      if (\n        data.readUInt8(1) !== 0xa9 ||\n        data.readUInt8(data.length - 2) !== 0x88 ||\n        data.readUInt8(data.length - 1) !== 0xac\n      ) {\n        throw Error('Unrecognised address format');\n      }\n      return cashaddrEncode('bitcoincash', 0, data.slice(3, 3 + data.readUInt8(2)));\n    case 0xa9: // P2SH: OP_HASH160 <scriptHash> OP_EQUAL\n      if (data.readUInt8(data.length - 1) !== 0x87) {\n        throw Error('Unrecognised address format');\n      }\n      return cashaddrEncode('bitcoincash', 1, data.slice(2, 2 + data.readUInt8(1)));\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\nfunction decodeCashAddr(data: string): Buffer {\n  const { prefix, type, hash } = cashaddrDecode(data);\n  if (type === 0) {\n    return Buffer.concat([Buffer.from([0x76, 0xa9, 0x14]), Buffer.from(hash), Buffer.from([0x88, 0xac])]);\n  } else if (type === 1) {\n    return Buffer.concat([Buffer.from([0xa9, 0x14]), Buffer.from(hash), Buffer.from([0x87])]);\n  }\n  throw Error('Unrecognised address format');\n}\n\nfunction decodeBitcoinCash(data: string): Buffer {\n  const decodeBase58Check = makeBitcoinBase58CheckDecoder([[0x00]], [[0x05]]);\n  try {\n    return decodeBase58Check(data);\n  } catch {\n    return decodeCashAddr(data);\n  }\n}\n\nfunction makeChecksummedHexEncoder(chainId?: number) {\n  return (data: Buffer) => rskToChecksumAddress(data.toString('hex'), chainId || null);\n}\n\nfunction makeChecksummedHexDecoder(chainId?: number) {\n  return (data: string) => {\n    const stripped = rskStripHexPrefix(data);\n    if (\n      !rskIsValidChecksumAddress(data, chainId || null) &&\n      stripped !== stripped.toLowerCase() &&\n      stripped !== stripped.toUpperCase()\n    ) {\n      throw Error('Invalid address checksum');\n    }\n    return Buffer.from(rskStripHexPrefix(data), 'hex');\n  };\n}\n\nconst hexChecksumChain = (name: string, coinType: number, chainId?: number) => ({\n  coinType,\n  decoder: makeChecksummedHexDecoder(chainId),\n  encoder: makeChecksummedHexEncoder(chainId),\n  name,\n});\n\nfunction makeBech32Encoder(prefix: string) {\n  return (data: Buffer) => bech32Encode(prefix, bech32ToWords(data));\n}\n\nfunction makeBech32Decoder(currentPrefix: string) {\n  return (data: string) => {\n    const { prefix, words } = bech32Decode(data);\n    if (prefix !== currentPrefix) {\n      throw Error('Unrecognised address format');\n    }\n    return Buffer.from(bech32FromWords(words));\n  };\n}\n\nconst bech32Chain = (name: string, coinType: number, prefix: string) => ({\n  coinType,\n  decoder: makeBech32Decoder(prefix),\n  encoder: makeBech32Encoder(prefix),\n  name,\n});\n\n\nfunction b32encodeXemAddr(data: Buffer): string {\n  return b32encode(hex2a(data.toString('hex')));\n}\n\nfunction b32decodeXemAddr(data: string): Buffer {\n  if (!isValidXemAddress(data)) {\n    throw Error('Unrecognised address format');\n  }\n  const address = data\n    .toString()\n    .toUpperCase()\n    .replace(/-/g, '');\n  return b32decode(address);\n}\n\nfunction eosAddrEncoder(data: Buffer): string {\n  if (!eosPublicKey.isValid(data)) {\n    throw Error('Unrecognised address format');\n  }\n  return eosPublicKey.fromHex(data).toString();\n}\n\nfunction eosAddrDecoder(data: string): Buffer {\n  if (!eosPublicKey.isValid(data)) {\n    throw Error('Unrecognised address format');\n  }\n  return eosPublicKey(data).toBuffer();\n}\n\nfunction ksmAddrEncoder(data: Buffer): string {\n  return ss58Encode(Uint8Array.from(data), 2);\n}\n\nfunction dotAddrEncoder(data: Buffer): string {\n  return ss58Encode(Uint8Array.from(data), 0);\n}\n\nfunction ksmAddrDecoder(data: string): Buffer {\n  return new Buffer(ss58Decode(data));\n}\n\nfunction ontAddrEncoder(data: Buffer): string {\n  return bs58Encode(Buffer.concat([Buffer.from([0x17]), data]))\n}\n\nfunction ontAddrDecoder(data: string): Buffer {\n  const address = bs58Decode(data)\n\n  switch (address.readUInt8(0)) {\n   case 0x17:\n     return address.slice(1);\n\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\nfunction strDecoder(data: string): Buffer {\n  return decodeEd25519PublicKey('ed25519PublicKey', data);\n}\n\nfunction strEncoder(data: Buffer): string {\n  return encodeEd25519PublicKey('ed25519PublicKey', data);\n}\n\n// Referenced from the followings\n// https://tezos.stackexchange.com/questions/183/base58-encoding-decoding-of-addresses-in-micheline\n// https://tezos.gitlab.io/api/p2p.html?highlight=contract_id#contract-id-22-bytes-8-bit-tag\nfunction tezosAddressEncoder(data: Buffer): string {\n  if (data.length !== 22 && data.length !== 21) {\n    throw Error('Unrecognised address format');\n  }\n\n  let prefix: Buffer;\n  switch (data.readUInt8(0)) {\n    case 0x00:\n      if (data.readUInt8(1) === 0x00) {\n        prefix = Buffer.from([0x06, 0xa1, 0x9f]); // prefix tz1 equal 06a19f\n      } else if (data.readUInt8(1) === 0x01) {\n        prefix = Buffer.from([0x06, 0xa1, 0xa1]); // prefix tz2 equal 06a1a1\n      } else if (data.readUInt8(1) === 0x02) {\n        prefix = Buffer.from([0x06, 0xa1, 0xa4]); // prefix tz3 equal 06a1a4\n      } else {\n        throw Error('Unrecognised address format');\n      }\n      return bs58Encode(Buffer.concat([prefix, data.slice(2)]));\n    case 0x01:\n      prefix = Buffer.from([0x02, 0x5a, 0x79]); // prefix KT1 equal 025a79\n      return bs58Encode(Buffer.concat([prefix, data.slice(1, 21)]));\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\nfunction tezosAddressDecoder(data: string): Buffer {\n  const address = bs58Decode(data).slice(3);\n  switch (data.substring(0, 3)) {\n    case 'tz1':\n      return Buffer.concat([Buffer.from([0x00, 0x00]), address]);\n    case 'tz2':\n      return Buffer.concat([Buffer.from([0x00, 0x01]), address]);\n    case 'tz3':\n      return Buffer.concat([Buffer.from([0x00, 0x02]), address]);\n    case 'KT1':\n      return Buffer.concat([Buffer.from([0x01]), address, Buffer.from([0x00])]);\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\n// Reference from js library:\n// https://github.com/hashgraph/hedera-sdk-java/blob/120d98ac9cd167db767ed77bb52cefc844b09fc9/src/main/java/com/hedera/hashgraph/sdk/SolidityUtil.java#L26\nfunction hederaAddressEncoder(data: Buffer): string {\n  if (data.length !== 20) {\n    throw Error('Unrecognised address format');\n  }\n\n  const view = new DataView(data.buffer, 0);\n\n  const shard = view.getUint32(0);\n  const realm = view.getBigUint64(4);\n  const account = view.getBigUint64(12);\n\n  return [shard, realm, account].join('.');\n}\n\n// Reference from js library:\n// https://github.com/hashgraph/hedera-sdk-java/blob/120d98ac9cd167db767ed77bb52cefc844b09fc9/src/main/java/com/hedera/hashgraph/sdk/SolidityUtil.java#L26\nfunction hederaAddressDecoder(data: string): Buffer {\n  const buffer = Buffer.alloc(20);\n  const view = new DataView(buffer.buffer, 0, 20);\n\n  const components = data.split('.');\n  if (components.length !== 3) {\n    throw Error('Unrecognised address format');\n  }\n\n  const shard = Number(components[0]);\n  const realm = BigInt(components[1]);\n  const account = BigInt(components[2]);\n\n  view.setUint32(0, shard);\n  view.setBigUint64(4, realm);\n  view.setBigUint64(12, account);\n\n  return buffer;\n}\n\n// Reference from Lisk validator\n// https://github.com/LiskHQ/lisk-sdk/blob/master/elements/lisk-validator/src/validation.ts#L202\nfunction validateLiskAddress(address: string) {\n  if (address.length < 2 || address.length > 22) {\n    throw new Error('Address length does not match requirements. Expected between 2 and 22 characters.');\n  }\n\n  if (address[address.length - 1] !== 'L') {\n    throw new Error('Address format does not match requirements. Expected \"L\" at the end.');\n  }\n\n  if (address.includes('.')) {\n    throw new Error('Address format does not match requirements. Address includes invalid character: `.`.');\n  }\n}\n\nfunction liskAddressEncoder(data: Buffer): string {\n  const address = `${bigInt(data.toString('hex'), 16).toString(10)}L`;\n\n  return address;\n}\n\nfunction liskAddressDecoder(data: string): Buffer {\n  validateLiskAddress(data);\n\n  return Buffer.from(bigInt(data.slice(0, -1)).toString(16), 'hex');\n}\n  \n// Reference:\n// https://github.com/handshake-org/hsd/blob/c85d9b4c743a9e1c9577d840e1bd20dee33473d3/lib/primitives/address.js#L297\nfunction hnsAddressEncoder(data: Buffer): string {\n  if (data.length !== 20) {\n    throw Error('P2WPKH must be 20 bytes');\n  }\n\n  const version = 0;\n  const words = [version].concat(bech32ToWords(data));\n  return bech32Encode('hs', words);\n}\n\n// Reference:\n// https://github.com/handshake-org/hsd/blob/c85d9b4c743a9e1c9577d840e1bd20dee33473d3/lib/primitives/address.js#L225\nfunction hnsAddressDecoder(data: string): Buffer {\n  const { prefix, words } = bech32Decode(data);\n\n  if (prefix !== 'hs') {\n    throw Error('Unrecognised address format');\n  }\n\n  const version = words[0];\n  const hash = bech32FromWords(words.slice(1));\n\n  if (version !== 0) {\n    throw Error('Bad program version');\n  }\n\n  if (hash.length !== 20) {\n    throw Error('Witness program hash is the wrong size');\n  }\n\n  return Buffer.from(hash);\n}\n\n// Referenced from following\n// https://github.com/icon-project/icon-service/blob/master/iconservice/base/address.py#L219\nfunction icxAddressEncoder(data: Buffer): string {\n  if (data.length !== 21) {\n    throw Error('Unrecognised address format');\n  }\n  switch (data.readUInt8(0)) {\n    case 0x00:\n      return 'hx' + data.slice(1).toString('hex');\n    case 0x01:\n      return 'cx' + data.slice(1).toString('hex');\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\n// Referenced from following\n// https://github.com/icon-project/icon-service/blob/master/iconservice/base/address.py#L238\nfunction icxAddressDecoder(data: string): Buffer {\n  const prefix = data.slice(0, 2)\n  const body = data.slice(2)\n  switch (prefix) {\n    case 'hx':\n      return Buffer.concat([Buffer.from([0x00]), Buffer.from(body, 'hex')]);\n    case 'cx':\n      return Buffer.concat([Buffer.from([0x01]), Buffer.from(body, 'hex')]);\n    default:\n      throw Error('Unrecognised address format');\n  }\n}\n\nfunction steemAddressEncoder(data: Buffer): string {  \n  const RIPEMD160 = require('ripemd160');\n\n  const checksum = new RIPEMD160().update(data).digest();\n\n  return 'STM' + bs58EncodeNoCheck(Buffer.concat([data, checksum.slice(0, 4)]));\n}\n\nfunction steemAddressDecoder(data: string): Buffer {\n  const RIPEMD160 = require('ripemd160');\n\n  const prefix = data.slice(0, 3);\n  if (prefix !== 'STM') {\n    throw Error('Unrecognised address format');\n  }\n\n  data = data.slice(3);\n\n  const buffer: Buffer = bs58DecodeNoCheck(data);\n  const checksum = buffer.slice(-4);\n  const key = buffer.slice(0, -4);\n  const checksumVerify = new RIPEMD160().update(key).digest().slice(0, 4);\n\n  if(!checksumVerify.equals(checksum)) {\n    throw Error('Invalid checksum');\n  }\n\n  return Buffer.from(key);\n}\n\nconst AlgoChecksumByteLength = 4;\nconst AlgoAddressByteLength = 36;\n\n// Returns 4 last byte (8 chars) of sha512_256(publicKey)\nfunction algoChecksum(pk: Buffer): string {\n  return createHash('SHA512-256')\n    .update(pk)\n    .digest('hex')\n    .substr(-AlgoChecksumByteLength * 2);\n}\n\nfunction algoDecode(data: string): Buffer {\n  const decoded = b32decode(data);\n\n  if (decoded.length !== AlgoAddressByteLength) {\n    throw Error('Unrecognised address format');\n  }\n\n  const publicKey = decoded.slice(0, -AlgoChecksumByteLength);\n  const checksum = decoded.slice(-AlgoChecksumByteLength);\n  const expectedChecksum = algoChecksum(publicKey);\n\n  if (checksum.toString('hex') !== expectedChecksum) {\n    throw Error('Unrecognised address format');\n  }\n\n  return publicKey;\n}\n\nfunction algoEncode(data: Buffer): string {\n  // Calculate publicKey checksum\n  const checksum = algoChecksum(data);\n\n  // Append publicKey and checksum\n  const addr = b32encode(hex2a(data.toString('hex').concat(checksum)));\n\n  // Removing the extra '='\n  const cleanAddr = addr.replace(/=/g, '');\n  return cleanAddr;\n}\n\nfunction arkAddressDecoder(data: string): Buffer {\n  const buffer = bs58Decode(data);\n\n  if (buffer[0] !== 23) {\n    throw Error('Unrecognised address format');\n  }\n\n  return buffer;\n}\n\nfunction nanoAddressEncoder(data: Buffer): string {\n  const encoded = nanoBase32Encode(Uint8Array.from(data));\n  const checksum = blake2b(data, null, 5).reverse();\n  const checksumEncoded = nanoBase32Encode(checksum);\n\n  const address = `nano_${encoded}${checksumEncoded}`;\n  \n  return address;\n}\n\nfunction nanoAddressDecoder(data: string): Buffer {\n  const decoded = nanoBase32Decode(data.slice(5));\n  \n  return Buffer.from(decoded).slice(0, -5);\n}\n\nconst getConfig = (name: string, coinType: number, encoder: EnCoder, decoder: DeCoder) => {\n  return {\n    coinType,\n    decoder,\n    encoder,\n    name,\n  };\n};\n\n// Ordered by coinType\nexport const formats: IFormat[] = [\n  bitcoinChain('BTC', 0, 'bc', [[0x00]], [[0x05]]),\n  bitcoinChain('LTC', 2, 'ltc', [[0x30]], [[0x32], [0x05]]),\n  bitcoinBase58Chain('DOGE', 3, [[0x1e]], [[0x16]]),\n  bitcoinBase58Chain('RDD', 4, [[0x3d]], [[0x05]]),\n  bitcoinBase58Chain('DASH', 5, [[0x4c]], [[0x10]]),\n  bitcoinBase58Chain('PPC', 6, [[0x37]], [[0x75]]),\n  getConfig('NMC', 7, bs58Encode, bs58Decode),\n  bitcoinChain('MONA', 22, 'mona', [[0x32]], [[0x37], [0x05]]),\n  getConfig('DCR', 42, bs58EncodeNoCheck, bs58DecodeNoCheck),\n  getConfig('XEM', 43, b32encodeXemAddr, b32decodeXemAddr),\n  bitcoinBase58Chain('AIB', 55, [[0x17]], [[0x05]]),\n  bitcoinChain('SYS', 57, 'sys', [[0x3f]], [[0x05]]),\n  hexChecksumChain('ETH', 60),\n  hexChecksumChain('ETC', 61),\n  getConfig('ICX', 74, icxAddressEncoder, icxAddressDecoder),\n  getConfig('ARK', 111, bs58Encode, arkAddressDecoder),\n  bech32Chain('ATOM', 118, 'cosmos'),\n  bech32Chain('ZIL', 119, 'zil'),\n  bech32Chain('EGLD', 120, 'erd'),\n  zcashChain('ZEC', 133, 'zs', [[0x1c, 0xb8]], [[0x1c, 0xbd]]),\n  getConfig('LSK', 134, liskAddressEncoder, liskAddressDecoder),\n  getConfig('STEEM', 135, steemAddressEncoder, steemAddressDecoder),\n  hexChecksumChain('RSK', 137, 30),\n  getConfig('XRP', 144, data => xrpCodec.encodeChecked(data), data => xrpCodec.decodeChecked(data)),\n  getConfig('BCH', 145, encodeCashAddr, decodeBitcoinCash),\n  getConfig('XLM', 148, strEncoder, strDecoder),\n  getConfig('NANO', 165, nanoAddressEncoder, nanoAddressDecoder),\n  getConfig('EOS', 194, eosAddrEncoder, eosAddrDecoder),\n  getConfig('TRX', 195, bs58Encode, bs58Decode),\n  getConfig('NEO', 239, bs58Encode, bs58Decode),\n  getConfig('ALGO', 283, algoEncode, algoDecode),\n  bitcoinBase58Chain('DIVI', 301, [[0x1e]], [[0xd]]),\n  bech32Chain('IOTX', 304, 'io'),\n  getConfig('DOT', 354, dotAddrEncoder, ksmAddrDecoder),\n  getConfig('KSM', 434, ksmAddrEncoder, ksmAddrDecoder),\n  getConfig('FIL', 461, filAddrEncoder, filAddrDecoder),\n  bitcoinBase58Chain('CCA', 489, [[0x0b]], [[0x05]]),\n  getConfig('SOL', 501, bs58EncodeNoCheck, bs58DecodeNoCheck),\n  bitcoinBase58Chain('LRG', 568, [[0x1e]], [[0x0d]]),\n  bitcoinChain('CCXX', 571, 'ccx', [[0x89]], [[0x4b], [0x05]]),\n  bitcoinBase58Chain('BPS', 576, [[0x00]], [[0x05]]),\n  hexChecksumChain('XDAI', 700),\n  hexChecksumChain('VET', 703),\n  bech32Chain('BNB', 714, 'bnb'),\n  getConfig('HIVE', 825, steemAddressEncoder, steemAddressDecoder),\n  bech32Chain('ONE', 1023, 'one'),\n  getConfig('ONT', 1024, ontAddrEncoder, ontAddrDecoder),\n  {\n    coinType: 1729,\n    decoder: tezosAddressDecoder,\n    encoder: tezosAddressEncoder,\n    name: 'XTZ',\n  },\n  bech32Chain('ADA', 1815, 'addr'),\n  getConfig('QTUM', 2301, bs58Encode, bs58Decode),\n  getConfig('ELA', 2305, bs58EncodeNoCheck, bs58DecodeNoCheck),\n  {\n    coinType: 3030,\n    decoder: hederaAddressDecoder,\n    encoder: hederaAddressEncoder,\n    name: 'HBAR',\n  },\n  getConfig('HNS', 5353, hnsAddressEncoder, hnsAddressDecoder),\n  hexChecksumChain('CELO', 52752),\n];\n\nexport const formatsByName: { [key: string]: IFormat } = Object.assign({}, ...formats.map(x => ({ [x.name]: x })));\nexport const formatsByCoinType: { [key: number]: IFormat } = Object.assign(\n  {},\n  ...formats.map(x => ({ [x.coinType]: x })),\n);\n"],"names":["ALPHABET","ALPHABET_MAP","z","length","x","charAt","undefined","TypeError","polymodStep","pre","b","prefixChk","prefix","chk","i","c","charCodeAt","Error","v","convert","data","inBits","outBits","pad","value","bits","maxV","result","push","str","LIMIT","lowered","toLowerCase","uppered","toUpperCase","split","lastIndexOf","slice","wordChars","words","bytes","bigInt","BASE","MAX_INT","MAX_INT_ARR","smallToArray","LOG_MAX_INT","Math","log","Integer","radix","parseValue","parseBase","BigInteger","sign","this","isSmall","SmallInteger","isPrecise","n","floor","arrayToSmall","arr","trim","compareAbs","createArray","Array","truncate","ceil","add","a","sum","l_a","l_b","r","carry","base","addAny","addSmall","l","subtract","difference","a_l","b_l","borrow","subtractSmall","multiplyLong","product","a_i","j","multiplySmall","shiftLeft","concat","multiplySmallAndArray","square","divModSmall","lambda","q","remainder","divisor","quotient","divModAny","self","negate","abs","comparison","quotientDigit","shift","divisorMostSignificantDigit","divMod1","guess","xlen","highx","check","part","unshift","reverse","divMod2","qSign","mod","mSign","isBasicPrime","isUnit","equals","isEven","isDivisibleBy","lesser","millerRabinTest","d","nPrev","prev","divide","next","modPow","prototype","Object","create","plus","subtractAny","minus","small","multiply","l1","l2","multiplyKaratsuba","y","max","ac","bd","abcd","times","_multiplyBySmall","divmod","over","pow","toString","exp","isZero","isPositive","isOdd","compareTo","compare","Infinity","eq","neq","notEquals","gt","greater","lt","geq","greaterOrEquals","leq","lesserOrEquals","isNegative","isPrime","strict","bitLength","logN","t","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","zero","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","fn","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","toJSNumber","roughLOB","min","gcd","String","shiftRight","remQuo","and","or","xor","integerLogarithm","tmp","p","e","text","absBase","test","parseInt","isNaN","digits","charCode","start","parseBaseFromArray","val","stringify","digit","toBase","apply","map","valueOf","neg","Number","out","left","toBaseString","join","parseStringValue","decimalPlace","indexOf","parseNumberValue","toArray","toJSON","minusOne","lcm","isInstance","low","range","random","restricted","top","fromArray","module","hasOwnProperty","input","ret","Uint8Array","Buffer","from","call","ADD64AA","o0","o1","ADD64AC","b0","b1","B2B_GET32","B2B_G","ix","iy","x0","m","x1","y0","y1","xor0","xor1","BLAKE2B_IV32","Uint32Array","SIGMA82","blake2bCompress","ctx","last","h","blake2bInit","outlen","key","blake2bUpdate","blake2bFinal","blake2b","util","blake2bHex","output","B2S_GET32","B2S_G","ROTR32","BLAKE2S_IV","SIGMA","blake2sCompress","blake2sInit","keylen","blake2sUpdate","blake2sFinal","blake2s","blake2sHex","b2b","b2s","lookup","revLookup","Arr","code","len","encodeChunk","uint8","end","num","b64","lens","validLen","getLens","placeHoldersLen","_byteLength","curByte","extraBytes","parts","len2","buffer","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","s","NaN","rt","LN2","customInspectSymbol","Symbol","for","createBuffer","RangeError","buf","setPrototypeOf","arg","encodingOrOffset","allocUnsafe","string","encoding","isEncoding","byteLength","actual","write","fromString","ArrayBuffer","isView","fromArrayLike","fromArrayBuffer","SharedArrayBuffer","obj","isBuffer","checked","copy","numberIsNaN","type","isArray","fromObject","toPrimitive","assertSize","size","array","byteOffset","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","arrayIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","utf16leToBytes","base64","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","fromCharCode","decodeCodePointsArray","hexSliceLookupTable","checkOffset","ext","checkInt","checkIEEE754","writeFloat","littleEndian","noAssert","ieee754","writeDouble","exports","alloc","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","species","configurable","writable","poolSize","fill","allocUnsafeSlow","_isBuffer","list","pos","swap16","swap32","swap64","toLocaleString","inspect","INSPECT_MAX_BYTES","replace","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","newBuf","subarray","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","set","INVALID_BASE64_RE","leadSurrogate","base64clean","src","dst","constructor","name","table","i16","copyProps","SafeBuffer","SlowBuffer","_Buffer","require$$0","BASE_MAP","xc","LEADER","FACTOR","iFACTOR","decodeUnsafe","source","psz","zeroes","b256","it3","it4","vch","encode","pbegin","pend","b58","it1","it2","repeat","decode","basex","I","O","o","oi","ii","_copy","__esModule","default","_ref","A","C","_x","xy","x2","ROUND_CONSTANTS","_roundConstants","roundIndex","_piShuffles","_interopRequireDefault","_rhoOffsets","require$$1","require$$2","W","H","L","Wi","ri","D","x20","x21","x22","x23","x24","_chi","_iota","_rhoPi","_theta","require$$3","_permute","xorWords","readWords","_this","capacity","padding","keccak","blockSize","queueSize","queueOffset","state","stateSize","queue","_buffer","absorb","squeeze","options","reset","_sponge","createHash","allowedSizes","Hash","sponge","update","digest","formatOrOptions","format","Keccak","SHA3","SHAKE","SHA3Hash","ARRAY16","zl","initU8Array","zr","sl","sr","hl","initU32Array","hr","rotl","fn1","k","fn2","fn3","fn4","fn5","createU8Array","RIPEMD160","[object Object]","_block","_blockSize","_blockOffset","_length","_finalized","_a","_b","_c","_d","_e","block","_update","al","bl","cl","dl","el","ar","br","cr","dr","er","tl","tr","require$$4","f","require$$5","u","require$$6","_finalSize","_len","_hash","init","_w","g","w","_","super_","_f","_g","_h","E","sha256","alphabet","codec","encodeChecked","encodeRaw","forEach","decodeChecked","decodeRaw","verifyCheckSum","B","S","U","P","curve","_zInv","compressed","zInv","fromAffine","isInfinity","twice","infinity","multiplyTwo","getEncoded","affineX","affineY","pLength","decodeFrom","pointFromX","R","G","pOverFour","isOnCurve","validate","M","Gx","Gy","F","T","N","fromBuffer","Q","toBuffer","toHex","isValid","fromStringOrThrow","match","RegExp","substring","fromHex","fromStringHex","X","K","Y","V","ed25519PublicKey","ed25519SecretSeed","preAuthTx","sha256Hash","Z","J","getPrototypeOf","__proto__","$","Reflect","construct","sham","Proxy","Date","tt","Function","bind","Map","has","et","nt","it","_type","ot","ft","message","stack","ut","st","lo","ushrn32","at","ht","ct","dt","pt","vt","yt","bs58Encode","bs58Decode","wt","pop","hash","round","readChar","char","idx","view","leftover","Bn","require","Stream","bytesRead","Address","protocol","payload","getChecksum","ingest","filEncode","network","address","addressString","decoded","stream","byt","ior","shln","readBn","lebDecode","protocolByte","checksum","bytes2a","hex2a","bytes32encoded","b32encode","filNewAddress","makeBitcoinBase58CheckEncoder","p2pkhVersion","p2shVersion","addr","makeBitcoinBase58CheckDecoder","p2pkhVersions","p2shVersions","checkVersion","version","every","index","some","bitcoinBase58Chain","coinType","decoder","encoder","makeBitcoinEncoder","hrp","encodeBech32","bech32ToWords","bech32Encode","makeBech32SegwitEncoder","encodeBase58Check","makeBitcoinDecoder","decodeBech32","bech32Decode","script","bech32FromWords","makeBech32SegwitDecoder","decodeBase58Check","startsWith","bitcoinChain","makeChecksummedHexEncoder","chainId","rskToChecksumAddress","makeChecksummedHexDecoder","stripped","rskStripHexPrefix","rskIsValidChecksumAddress","hexChecksumChain","makeBech32Encoder","makeBech32Decoder","currentPrefix","bech32Chain","ksmAddrDecoder","ss58Decode","steemAddressEncoder","bs58EncodeNoCheck","steemAddressDecoder","bs58DecodeNoCheck","algoChecksum","pk","getConfig","formats","isValidXemAddress","b32decode","body","makeZcashDecoder","validateLiskAddress","xrpCodec","cashaddrEncode","cashaddrDecode","decodeCashAddr","encodeEd25519PublicKey","decodeEd25519PublicKey","encoded","nanoBase32Encode","nanoBase32Decode","eosPublicKey","publicKey","expectedChecksum","ss58Encode","checkAddressString","raw","bigNum","maskn","toNumber","ishrn","expect","payloadChecksum","addressObj","filDecode","DataView","components","shard","realm","BigInt","account","setUint32","setBigUint64","getUint32","getBigUint64","formatsByName","assign","formatsByCoinType"],"mappings":"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"}