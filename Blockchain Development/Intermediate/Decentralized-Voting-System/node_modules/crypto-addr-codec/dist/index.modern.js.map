{"version":3,"file":"index.modern.js","sources":["../lib/nem-sdk/convert.js","../lib/sha256/hash.js","../lib/sha256/sha256.js","../lib/ripple/xrp-codec.js","../lib/ripple/utils.js","../lib/rskjs/rsk.js","../lib/eos/helper.js","../lib/eos/ecc/point.js","../lib/eos/ecc/curve.js","../lib/eos/hash.js","../lib/eos/key_utils.js","../lib/eos/key_public.js","../lib/eos/ecc/names.js","../lib/str/publicKey.js","../lib/str/crc16xmodem.js","../lib/ss58/index.js","../lib/cashaddr/validation.js","../lib/cashaddr/cashaddr.js","../lib/bs58/bs58.js"],"sourcesContent":["/*!\nNEM-sdk - NEM Developer Kit for Node.js and the browser\n\nMIT License\n\nCopyright (c) 2017 QuantumMachine\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nimport { Keccak } from 'sha3';\n\nconst alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567\";\n\nexport const hex2a = (hexx) => {\n    var hex = hexx.toString();\n    var str = '';\n    for (var i = 0; i < hex.length; i += 2) {\n        str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n    }return str;\n};\n\nvar _hexEncodeArray = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\nexport const ua2hex = (ua) => {\n    var s = '';\n    for (var i = 0; i < ua.length; i++) {\n        var code = ua[i];\n        s += _hexEncodeArray[code >>> 4];\n        s += _hexEncodeArray[code & 0x0F];\n    }\n    return s;\n};\n\nexport const b32decode = function b32decode(s) {\n    var r = new ArrayBuffer(s.length * 5 / 8);\n    var b = new Uint8Array(r);\n    for (var j = 0; j < s.length / 8; j++) {\n        var v = [0, 0, 0, 0, 0, 0, 0, 0];\n        for (var _i4 = 0; _i4 < 8; ++_i4) {\n            v[_i4] = alphabet.indexOf(s[j * 8 + _i4]);\n        }\n        var i = 0;\n        b[j * 5 + 0] = v[i + 0] << 3 | v[i + 1] >> 2;\n        b[j * 5 + 1] = (v[i + 1] & 0x3) << 6 | v[i + 2] << 1 | v[i + 3] >> 4;\n        b[j * 5 + 2] = (v[i + 3] & 0xf) << 4 | v[i + 4] >> 1;\n        b[j * 5 + 3] = (v[i + 4] & 0x1) << 7 | v[i + 5] << 2 | v[i + 6] >> 3;\n        b[j * 5 + 4] = (v[i + 6] & 0x7) << 5 | v[i + 7];\n    }\n    return b;\n};\n\nexport const b32encode = function b32encode(s) {\n    var parts = [];\n    var quanta = Math.floor(s.length / 5);\n    var leftover = s.length % 5;\n\n    if (leftover != 0) {\n        for (var i = 0; i < 5 - leftover; i++) {\n            s += '\\x00';\n        }\n        quanta += 1;\n    }\n\n    for (var _i = 0; _i < quanta; _i++) {\n        parts.push(alphabet.charAt(s.charCodeAt(_i * 5) >> 3));\n        parts.push(alphabet.charAt((s.charCodeAt(_i * 5) & 0x07) << 2 | s.charCodeAt(_i * 5 + 1) >> 6));\n        parts.push(alphabet.charAt((s.charCodeAt(_i * 5 + 1) & 0x3F) >> 1));\n        parts.push(alphabet.charAt((s.charCodeAt(_i * 5 + 1) & 0x01) << 4 | s.charCodeAt(_i * 5 + 2) >> 4));\n        parts.push(alphabet.charAt((s.charCodeAt(_i * 5 + 2) & 0x0F) << 1 | s.charCodeAt(_i * 5 + 3) >> 7));\n        parts.push(alphabet.charAt((s.charCodeAt(_i * 5 + 3) & 0x7F) >> 2));\n        parts.push(alphabet.charAt((s.charCodeAt(_i * 5 + 3) & 0x03) << 3 | s.charCodeAt(_i * 5 + 4) >> 5));\n        parts.push(alphabet.charAt(s.charCodeAt(_i * 5 + 4) & 0x1F));\n    }\n\n    var replace = 0;\n    if (leftover == 1) replace = 6;else if (leftover == 2) replace = 4;else if (leftover == 3) replace = 3;else if (leftover == 4) replace = 1;\n\n    for (var _i2 = 0; _i2 < replace; _i2++) {\n        parts.pop();\n    }for (var _i3 = 0; _i3 < replace; _i3++) {\n        parts.push(\"=\");\n    }return parts.join(\"\");\n};\n\nexport const isValid = addr => {\n    let address = addr.toString().toUpperCase().replace(/-/g, '');\n    if (!address || address.length !== 40) {\n        return false;\n    }\n\n    let decoded = toHex(b32decode(address));\n\n    let stepThreeChecksum = KeccakChecksum(Buffer.from(decoded.slice(0, 42), 'hex'));\n\n    return stepThreeChecksum === decoded.slice(42);\n};\n\nconst toHex = arrayOfBytes => {\n    let finalHex = '';\n    for (let i = 0; i < arrayOfBytes.length; i++) {\n        let hex = Math.round(arrayOfBytes[i]).toString(16);\n        if (hex.length === 1) {\n            hex = '0' + hex\n        }\n        finalHex += hex\n    }\n    return finalHex;\n};\n\nconst KeccakChecksum = (payload) => {\n    return new Keccak(256).update(payload).digest('hex').toString().substr(0, 8)\n};\n","/**\n * Part of sha.js package.\n *\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\nimport { Buffer } from 'safe-buffer';\n\n// prototype class for hash functions\nexport default function Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n","/**\n * Part of sha.js package.\n *\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nimport { Buffer } from 'safe-buffer';\nimport Hash from './hash';\n\nfunction inherits(ctor, superCtor) {\n  if (superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  }\n}\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nexport default function Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n","/*!\n\nripple-address-codec - encodes/decodes base58 encoded XRP Ledger identifiers.\n\nCopyright (c) Ripple\n\nPermission to use, copy, modify, and/or distribute this software for any purpose\nwith or without fee is hereby granted, provided that the above copyright notice\nand this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH REGARD\nTO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS.\nIN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL\nDAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN\nAN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION\nWITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n\n*/\n\nimport baseCodec from 'base-x';\nimport Sha256 from '../sha256';\nimport { seqEqual, concatArgs } from './utils';\n\nclass Codec {\n    constructor(options) {\n        this.sha256 = options.sha256;\n        this.alphabet = options.alphabet;\n        this.codec = baseCodec(this.alphabet);\n        this.base = this.alphabet.length;\n    }\n    encodeChecked(buffer) {\n        const check = this.sha256(this.sha256(buffer)).slice(0, 4);\n        return this.encodeRaw(Buffer.from(concatArgs(buffer, check)));\n    }\n    encodeRaw(bytes) {\n        return this.codec.encode(bytes);\n    }\n    decodeChecked(base58string) {\n        const buffer = this.decodeRaw(base58string);\n        if (buffer.length < 5) {\n            throw new Error('invalid_input_size: decoded data must have length >= 5');\n        }\n        if (!this.verifyCheckSum(buffer)) {\n            throw new Error('checksum_invalid');\n        }\n        return buffer.slice(0, -4);\n    }\n    decodeRaw(base58string) {\n        return this.codec.decode(base58string);\n    }\n    verifyCheckSum(bytes) {\n        const computed = this.sha256(this.sha256(bytes.slice(0, -4))).slice(0, 4);\n        const checksum = bytes.slice(-4);\n        return seqEqual(computed, checksum);\n    }\n}\n\nconst codecOptions = {\n    sha256: function (bytes) {\n        return new Sha256().update(Buffer.from(bytes)).digest();\n    },\n    alphabet: 'rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz'\n};\n\nexport const codec = new Codec(codecOptions);\n","export function seqEqual(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n    for (let i = 0; i < arr1.length; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isSequence(val) {\n    return val.length !== undefined;\n}\nexport function concatArgs(...args) {\n    const ret = [];\n    args.forEach(function (arg) {\n        if (isSequence(arg)) {\n            for (let j = 0; j < arg.length; j++) {\n                ret.push(arg[j]);\n            }\n        }\n        else {\n            ret.push(arg);\n        }\n    });\n    return ret;\n}\n","/*!\n\nrskjs-util - A collection of utility functions for RSK.\n\nCopyright (c) 2018 RSK Smart.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN T\nHE SOFTWARE.\n\n*/\n\nimport { Keccak } from 'sha3';\n\nexport const stripHexPrefix = (str) => {\n    return str.slice(0, 2) === '0x' ? str.slice(2) : str\n};\nexport const toChecksumAddress = (address, chainId = null) => {\n    if (typeof address !== 'string') {\n        throw new Error(\"stripHexPrefix param must be type 'string', is currently type \" + (typeof address) + \".\");\n    }\n    const strip_address = stripHexPrefix(address).toLowerCase()\n    const prefix = chainId != null ? (chainId.toString() + '0x') : ''\n    const keccak_hash = keccak(prefix + strip_address).toString('hex')\n    let output = '0x'\n\n    for (let i = 0; i < strip_address.length; i++)\n        output += parseInt(keccak_hash[i], 16) >= 8 ?\n            strip_address[i].toUpperCase() :\n            strip_address[i];\n    return output\n};\nexport function isValidChecksumAddress(address, chainId) {\n    return isValidAddress(address) && (toChecksumAddress(address, chainId) === address)\n}\nfunction isValidAddress(address) {\n    return /^0x[0-9a-fA-F]{40}$/.test(address)\n}\nfunction keccak(a) {\n    return new Keccak(256).update(a).digest()\n}\n","export const assert = (value, errMsg) => {\n  if (!value) {\n    throw errMsg\n  }\n};\n\nexport const assertBuffer = (keyBuffer, errMsg) => {\n  if (!Buffer.isBuffer(keyBuffer)) {\n    throw errMsg\n  }\n};\n","import bigInt from 'big-integer';\nimport { assert } from './../helper';\n\nconst ONE = bigInt.one;\nconst ZERO = bigInt.zero;\nconst THREE = bigInt(3);\n\nfunction testBit(bigIntVal, n) {\n  return bigIntVal.and(ONE.shiftLeft(n)).notEquals(ZERO);\n}\n\nfunction bufferToBigInt(buffer) {\n  return bigInt.fromArray(Array.prototype.slice.call(buffer, 0), 256);\n}\n\nfunction bigIntToBuffer(bigIntVal, size) {\n  const { value } = bigIntVal.toArray(256);\n  const zeroBytesLength = size ? Math.max(size - value.length, 0) : 0;\n\n  return Buffer.from([...Array(zeroBytesLength).fill(0), ...value]);\n}\n\nexport default function Point (curve, x, y, z) {\n  assert(z !== undefined, 'Missing Z coordinate')\n\n  this.curve = curve\n  this.x = x\n  this.y = y\n  this.z = z\n  this._zInv = null\n\n  this.compressed = true\n}\n\nObject.defineProperty(Point.prototype, 'zInv', {\n  get: function () {\n    if (this._zInv === null) {\n      this._zInv = this.z.modInv(this.curve.p)\n    }\n\n    return this._zInv\n  }\n})\n\nObject.defineProperty(Point.prototype, 'affineX', {\n  get: function () {\n    return this.x.multiply(this.zInv).mod(this.curve.p)\n  }\n})\n\nObject.defineProperty(Point.prototype, 'affineY', {\n  get: function () {\n    return this.y.multiply(this.zInv).mod(this.curve.p)\n  }\n})\n\nPoint.fromAffine = function (curve, x, y) {\n  return new Point(curve, x, y, ONE)\n}\n\nPoint.prototype.equals = function (other) {\n  if (other === this) return true\n  if (this.curve.isInfinity(this)) return this.curve.isInfinity(other)\n  if (this.curve.isInfinity(other)) return this.curve.isInfinity(this)\n\n  // u = Y2 * Z1 - Y1 * Z2\n  var u = other.y.multiply(this.z).subtract(this.y.multiply(other.z)).mod(this.curve.p)\n\n  if (u.compare(ZERO) !== 0) return false\n\n  // v = X2 * Z1 - X1 * Z2\n  var v = other.x.multiply(this.z).subtract(this.x.multiply(other.z)).mod(this.curve.p)\n\n  return v.compare(ZERO) === 0\n}\n\nPoint.prototype.negate = function () {\n  var y = this.curve.p.subtract(this.y)\n\n  return new Point(this.curve, this.x, y, this.z)\n}\n\nPoint.prototype.add = function (b) {\n  if (this.curve.isInfinity(this)) return b\n  if (this.curve.isInfinity(b)) return this\n\n  var x1 = this.x\n  var y1 = this.y\n  var x2 = b.x\n  var y2 = b.y\n\n  // u = Y2 * Z1 - Y1 * Z2\n  var u = y2.multiply(this.z).subtract(y1.multiply(b.z)).mod(this.curve.p)\n  // v = X2 * Z1 - X1 * Z2\n  var v = x2.multiply(this.z).subtract(x1.multiply(b.z)).mod(this.curve.p)\n\n  if (v.compare(ZERO) === 0) {\n    if (u.compare(ZERO) === 0) {\n      return this.twice() // this == b, so double\n    }\n\n    return this.curve.infinity // this = -b, so infinity\n  }\n\n  var v2 = v.square()\n  var v3 = v2.multiply(v)\n  var x1v2 = x1.multiply(v2)\n  var zu2 = u.square().multiply(this.z)\n\n  // x3 = v * (z2 * (z1 * u^2 - 2 * x1 * v^2) - v^3)\n  var x3 = zu2.subtract(x1v2.shiftLeft(1)).multiply(b.z).subtract(v3).multiply(v).mod(this.curve.p)\n  // y3 = z2 * (3 * x1 * u * v^2 - y1 * v^3 - z1 * u^3) + u * v^3\n  var y3 = x1v2.multiply(THREE).multiply(u).subtract(y1.multiply(v3)).subtract(zu2.multiply(u)).multiply(b.z).add(u.multiply(v3)).mod(this.curve.p)\n  // z3 = v^3 * z1 * z2\n  var z3 = v3.multiply(this.z).multiply(b.z).mod(this.curve.p)\n\n  return new Point(this.curve, x3, y3, z3)\n}\n\nPoint.prototype.twice = function () {\n  if (this.curve.isInfinity(this)) return this\n  if (this.y.compare(ZERO) === 0) return this.curve.infinity\n\n  var x1 = this.x\n  var y1 = this.y\n\n  var y1z1 = y1.multiply(this.z).mod(this.curve.p)\n  var y1sqz1 = y1z1.multiply(y1).mod(this.curve.p)\n  var a = this.curve.a\n\n  // w = 3 * x1^2 + a * z1^2\n  var w = x1.square().multiply(THREE)\n\n  if (a.compare(ZERO) !== 0) {\n    w = w.add(this.z.square().multiply(a))\n  }\n\n  w = w.mod(this.curve.p)\n  // x3 = 2 * y1 * z1 * (w^2 - 8 * x1 * y1^2 * z1)\n  var x3 = w.square().subtract(x1.shiftLeft(3).multiply(y1sqz1)).shiftLeft(1).multiply(y1z1).mod(this.curve.p)\n  // y3 = 4 * y1^2 * z1 * (3 * w * x1 - 2 * y1^2 * z1) - w^3\n  var y3 = w.multiply(THREE).multiply(x1).subtract(y1sqz1.shiftLeft(1)).shiftLeft(2).multiply(y1sqz1).subtract(w.pow(3)).mod(this.curve.p)\n  // z3 = 8 * (y1 * z1)^3\n  var z3 = y1z1.pow(3).shiftLeft(3).mod(this.curve.p)\n\n  return new Point(this.curve, x3, y3, z3)\n}\n\n// Simple NAF (Non-Adjacent Form) multiplication algorithm\n// TODO: modularize the multiplication algorithm\nPoint.prototype.multiply = function (k) {\n  if (this.curve.isInfinity(this)) return this\n  if (k.compare(ZERO) === 0) return this.curve.infinity\n\n  var e = k\n  var h = e.multiply(THREE)\n\n  var neg = this.negate()\n  var R = this\n\n  for (var i = h.bitLength() - 2; i > 0; --i) {\n    var hBit = testBit(h, i);\n    var eBit = testBit(e, i);\n\n    R = R.twice()\n\n    if (hBit !== eBit) {\n      R = R.add(hBit ? this : neg)\n    }\n  }\n\n  return R\n}\n\n// Compute this*j + x*k (simultaneous multiplication)\nPoint.prototype.multiplyTwo = function (j, x, k) {\n  var i = Math.max(j.bitLength(), k.bitLength()) - 1\n  var R = this.curve.infinity\n  var both = this.add(x)\n\n  while (i >= 0) {\n    var jBit = testBit(j, i);\n    var kBit = testBit(k, i);\n\n    R = R.twice()\n\n    if (jBit) {\n      if (kBit) {\n        R = R.add(both)\n      } else {\n        R = R.add(this)\n      }\n    } else if (kBit) {\n      R = R.add(x)\n    }\n    --i\n  }\n\n  return R\n}\n\nPoint.prototype.getEncoded = function (compressed) {\n  if (compressed == null) compressed = this.compressed\n  if (this.curve.isInfinity(this)) return new Buffer('00', 'hex') // Infinity point encoded is simply '00'\n\n  var x = this.affineX\n  var y = this.affineY\n  var byteLength = this.curve.pLength\n  var buffer\n\n  // 0x02/0x03 | X\n  if (compressed) {\n    buffer = new Buffer(1 + byteLength)\n    buffer.writeUInt8(y.isEven() ? 0x02 : 0x03, 0)\n\n  // 0x04 | X | Y\n  } else {\n    buffer = new Buffer(1 + byteLength + byteLength)\n    buffer.writeUInt8(0x04, 0)\n\n    bigIntToBuffer(y, byteLength).copy(buffer, 1 + byteLength)\n  }\n\n  bigIntToBuffer(x, byteLength).copy(buffer, 1)\n\n  return buffer\n}\n\nPoint.decodeFrom = function (curve, buffer) {\n  var type = buffer.readUInt8(0)\n  var compressed = (type !== 4)\n\n  var byteLength = Math.floor((curve.p.bitLength() + 7) / 8)\n  var x = bufferToBigInt(buffer.slice(1, 1 + byteLength));\n\n  var Q\n  if (compressed) {\n    assert(buffer.length === byteLength + 1, 'Invalid sequence length')\n    assert(type === 0x02 || type === 0x03, 'Invalid sequence tag')\n\n    var isOdd = (type === 0x03)\n    Q = curve.pointFromX(isOdd, x)\n  } else {\n    assert(buffer.length === 1 + byteLength + byteLength, 'Invalid sequence length')\n\n    var y = bufferToBigInt(buffer.slice(1 + byteLength));\n    Q = Point.fromAffine(curve, x, y)\n  }\n\n  Q.compressed = compressed\n  return Q\n}\n\nPoint.prototype.toString = function () {\n  if (this.curve.isInfinity(this)) return '(INFINITY)'\n\n  return '(' + this.affineX.toString() + ',' + this.affineY.toString() + ')'\n}\n","import bigInt from 'big-integer';\nimport Point from './point';\nimport { assert } from './../helper';\n\nconst ZERO = bigInt.zero;\nconst ONE = bigInt.one;\n\nexport default function Curve (p, a, b, Gx, Gy, n, h) {\n  this.p = p\n  this.a = a\n  this.b = b\n  this.G = Point.fromAffine(this, Gx, Gy)\n  this.n = n\n  this.h = h\n\n  this.infinity = new Point(this, null, null, ZERO)\n\n  // result caching\n  this.pOverFour = p.add(ONE).shiftRight(2)\n\n  // determine size of p in bytes\n  this.pLength = Math.floor((this.p.bitLength() + 7) / 8)\n}\n\nCurve.prototype.pointFromX = function (isOdd, x) {\n  var alpha = x.pow(3).add(this.a.multiply(x)).add(this.b).mod(this.p)\n  var beta = alpha.modPow(this.pOverFour, this.p) // XXX: not compatible with all curves\n\n  var y = beta\n  if (beta.isEven() ^ !isOdd) {\n    y = this.p.subtract(y) // -y % p\n  }\n\n  return Point.fromAffine(this, x, y)\n}\n\nCurve.prototype.isInfinity = function (Q) {\n  if (Q === this.infinity) return true\n\n  return Q.z.compare(ZERO) === 0 && Q.y.compare(ZERO) !== 0\n}\n\nCurve.prototype.isOnCurve = function (Q) {\n  if (this.isInfinity(Q)) return true\n\n  var x = Q.affineX\n  var y = Q.affineY\n  var a = this.a\n  var b = this.b\n  var p = this.p\n\n  // Check that xQ and yQ are integers in the interval [0, p - 1]\n  if (x.compare(ZERO) < 0 || x.compareTo(p) >= 0) return false\n  if (y.compare(ZERO) < 0 || y.compareTo(p) >= 0) return false\n\n  // and check that y^2 = x^3 + ax + b (mod p)\n  var lhs = y.square().mod(p)\n  var rhs = x.pow(3).add(a.multiply(x)).add(b).mod(p)\n  return lhs.equals(rhs)\n}\n\n/**\n * Validate an elliptic curve point.\n *\n * See SEC 1, section 3.2.2.1: Elliptic Curve Public Key Validation Primitive\n */\nCurve.prototype.validate = function (Q) {\n  // Check Q != O\n  assert(!this.isInfinity(Q), 'Point is at infinity')\n  assert(this.isOnCurve(Q), 'Point is not on the curve')\n\n  // Check nQ = O (where Q is a scalar multiple of G)\n  var nQ = Q.multiply(this.n)\n  assert(this.isInfinity(nQ), 'Point is not a scalar multiple of G')\n\n  return true\n}\n","import { SHA3 } from 'sha3';\nimport { RIPEMD160 } from 'ripemd160-min';\n\nexport function sha256(data, resultEncoding) {\n  return new SHA3(256).update(data).digest(resultEncoding);\n}\n\nexport function ripemd160(data) {\n  return Buffer.from(new RIPEMD160().update(data).digest());\n}\n","import base58 from 'bs58';\nimport { assert, assertBuffer } from './helper';\nimport { sha256, ripemd160 } from './hash';\n\nexport function checkEncode(keyBuffer) {\n  const keyType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  assertBuffer(keyBuffer, 'expecting keyBuffer<Buffer>');\n\n  if (keyType === 'sha256x2') {\n    // legacy\n    const checksum = sha256(sha256(keyBuffer)).slice(0, 4);\n    return base58.encode(Buffer.concat([keyBuffer, checksum]));\n  } else {\n    const check = [keyBuffer];\n\n    if (keyType) {\n      check.push(Buffer.from(keyType));\n    }\n\n    const _checksum = ripemd160(Buffer.concat(check)).slice(0, 4);\n\n    return base58.encode(Buffer.concat([keyBuffer, _checksum]));\n  }\n}\n\nexport function checkDecode(keyString) {\n  const keyType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  assert(keyString, 'private key expected');\n  const buffer = new Buffer(base58.decode(keyString));\n  const checksum = buffer.slice(-4);\n  const key = buffer.slice(0, -4);\n  let newCheck;\n\n  if (keyType === 'sha256x2') {\n    // legacy\n    newCheck = sha256(sha256(key)).slice(0, 4); // WIF (legacy)\n  } else {\n    const check = [key];\n\n    if (keyType) {\n      check.push(Buffer.from(keyType));\n    }\n\n    newCheck = ripemd160(Buffer.concat(check)).slice(0, 4); //PVT\n  }\n\n  if (checksum.toString('hex') !== newCheck.toString('hex')) {\n    throw new Error('Invalid checksum, ' + \"\".concat(checksum.toString('hex'), \" != \").concat(newCheck.toString('hex')));\n  }\n\n  return key;\n}\n","/*!\neosjs-ecc - Elliptic curve cryptography functions (ECC).\n\nMIT License\n\nCopyright (c) EOSIO\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nimport { getCurveByName, Point } from './ecc';\nimport { checkEncode, checkDecode } from './key_utils';\n\nconst secp256k1 = getCurveByName('secp256k1');\n\nexport default function PublicKey(Q) {\n  const pubkey_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'EOS';\n\n  if (typeof Q === 'string') {\n    return PublicKey.fromString(Q, pubkey_prefix);\n  } else if (Buffer.isBuffer(Q)) {\n    return PublicKey.fromBuffer(Q);\n  } else if (typeof Q === 'object' && Q.Q) {\n    return PublicKey(Q.Q);\n  }\n\n  function toBuffer() {\n    const compressed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Q.compressed;\n    return Q.getEncoded(compressed);\n  }\n\n  function toString() {\n    const pubkey_prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'EOS';\n    return pubkey_prefix + checkEncode(toBuffer());\n  }\n\n  function toHex() {\n    return toBuffer().toString('hex');\n  }\n\n  return {\n    Q,\n    toString,\n    toBuffer,\n    toHex\n  };\n}\n\nPublicKey.isValid = function (pubkey) {\n  const pubkey_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'EOS';\n\n  try {\n    PublicKey(pubkey, pubkey_prefix);\n    return true;\n  } catch (e) {\n    return false;\n  }\n};\n\nPublicKey.fromBuffer = function (buffer) {\n  return PublicKey(Point.decodeFrom(secp256k1, buffer));\n};\n\nPublicKey.fromString = function (public_key) {\n  const pubkey_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'EOS';\n\n  try {\n    return PublicKey.fromStringOrThrow(public_key, pubkey_prefix);\n  } catch (e) {\n    return null;\n  }\n};\n\nPublicKey.fromStringOrThrow = function (public_key) {\n  const pubkey_prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'EOS';\n  const match = public_key.match(/^PUB_([A-Za-z0-9]+)_([A-Za-z0-9]+)$/);\n\n  if (match === null) {\n    // legacy\n    const prefix_match = new RegExp(\"^\" + pubkey_prefix);\n\n    if (prefix_match.test(public_key)) {\n      public_key = public_key.substring(pubkey_prefix.length);\n    }\n\n    return PublicKey.fromBuffer(checkDecode(public_key));\n  }\n\n  const [, keyType, keyString] = match;\n\n  return PublicKey.fromBuffer(checkDecode(keyString, keyType));\n};\n\nPublicKey.fromHex = function (hex) {\n  return PublicKey.fromBuffer(new Buffer(hex, 'hex'));\n};\n\nPublicKey.fromStringHex = function (hex) {\n  return PublicKey.fromString(new Buffer(hex, 'hex'));\n};\n","import bigInt from 'big-integer';\nimport curves from './curves.json';\nimport Curve from './curve';\n\nexport default function getCurveByName (name) {\n  const curve = curves[name];\n\n  if (!curve) {\n    return null;\n  }\n\n  const p = bigInt(curve.p, 16);\n  const a = bigInt(curve.a, 16);\n  const b = bigInt(curve.b, 16);\n  const n = bigInt(curve.n, 16);\n  const h = bigInt(curve.h, 16);\n  const Gx = bigInt(curve.Gx, 16);\n  const Gy = bigInt(curve.Gy, 16);\n\n  return new Curve(p, a, b, Gx, Gy, n, h);\n}\n","/*!\n\n   Copyright 2015 Stellar Development Foundation\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n----\n\nIncluded code for base58 encoding is licensed under the MIT license:\n\nCopyright (c) 2011 Google Inc\nCopyright (c) 2013 BitPay Inc\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\nimport baseCodec from 'base-x';\nimport { crc16xmodem } from './crc16xmodem';\n\nconst ALPHABET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\nconst { encode, decode } = baseCodec(ALPHABET);\n\nconst isString = value => typeof value == 'string';\nconst isNull = value => value === null;\nconst isUndefined = value => value === undefined;\n\nvar versionBytes = {\n    ed25519PublicKey: 6 << 3, // G\n    ed25519SecretSeed: 18 << 3, // S\n    preAuthTx: 19 << 3, // T\n    sha256Hash: 23 << 3 // X\n};\n\nexport const decodeCheck = (versionByteName, encoded) => {\n    if (!isString(encoded)) {\n        throw new TypeError('encoded argument must be of type String');\n    }\n\n    var decoded = decode(encoded);\n    var versionByte = decoded[0];\n    var payload = decoded.slice(0, -2);\n    var data = payload.slice(1);\n    var checksum = decoded.slice(-2);\n\n    if (encoded !== encode(decoded)) {\n        throw new Error('invalid encoded string');\n    }\n\n    var expectedVersion = versionBytes[versionByteName];\n\n    if (isUndefined(expectedVersion)) {\n        throw new Error(versionByteName + ' is not a valid version byte name.  expected one of \"accountId\" or \"seed\"');\n    }\n\n    if (versionByte !== expectedVersion) {\n        throw new Error('invalid version byte. expected ' + expectedVersion + ', got ' + versionByte);\n    }\n\n    var expectedChecksum = calculateChecksum(payload);\n\n    if (!verifyChecksum(expectedChecksum, checksum)) {\n        throw new Error('invalid checksum');\n    }\n\n    return Buffer.from(data);\n};\n\nexport const encodeCheck = (versionByteName, data) => {\n    if (isNull(data) || isUndefined(data)) {\n        throw new Error('cannot encode null data');\n    }\n\n    var versionByte = versionBytes[versionByteName];\n\n    if (isUndefined(versionByte)) {\n        throw new Error(versionByteName + ' is not a valid version byte name.  expected one of \"ed25519PublicKey\", \"ed25519SecretSeed\", \"preAuthTx\", \"sha256Hash\"');\n    }\n\n    data = Buffer.from(data);\n    var versionBuffer = Buffer.from([versionByte]);\n    var payload = Buffer.concat([versionBuffer, data]);\n    var checksum = calculateChecksum(payload);\n    var unencoded = Buffer.concat([payload, checksum]);\n\n    return encode(unencoded);\n}\n\nexport const calculateChecksum = (payload) => {\n    // This code calculates CRC16-XModem checksum of payload\n    // and returns it as Buffer in little-endian order.\n    var checksum = Buffer.alloc(2);\n    checksum.writeUInt16LE(crc16xmodem(payload), 0);\n    return checksum;\n};\nconst verifyChecksum = (expected, actual) => {\n    if (expected.length !== actual.length) {\n        return false;\n    }\n\n    if (expected.length === 0) {\n        return true;\n    }\n\n    for (let i = 0; i < expected.length; i += 1) {\n        if (expected[i] !== actual[i]) {\n            return false;\n        }\n    }\n\n    return true;\n};\n","export const crc16xmodem = (buf, previous) => {\n    if (!Buffer.isBuffer(buf)) {\n        buf = new Buffer()\n    }\n\n    let crc = typeof previous !== 'undefined' ? ~~previous : 0x0;\n\n    for (let index = 0; index < buf.length; index++) {\n        const byte = buf[index];\n        let code = (crc >>> 8) & 0xff;\n\n        code ^= byte & 0xff;\n        code ^= code >>> 4;\n        crc = (crc << 8) & 0xffff;\n        crc ^= code;\n        code = (code << 5) & 0xffff;\n        crc ^= code;\n        code = (code << 7) & 0xffff;\n        crc ^= code;\n    }\n\n    return crc;\n};\n","/*! Copyright (c) 2019 Parity Tech\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n*/\n// modified https://github.com/paritytech/oo7/blob/master/packages/oo7-substrate/src/ss58.js\n// to make it work with kusama addresses and compacted it a bit by only using what its needed\n// credits to parity tech for original code\n//\nimport bs58 from 'bs58';\nimport { blake2b } from 'blakejs/blake2b';\n\nlet defaultType = 42\nconst KNOWN_TYPES = [0, 1, 2, 42, 43, 68, 69];\n\nconst PREFIX = stringToBytes('SS58PRE');\n\nclass AccountIndex extends Number {\n\ttoJSON() {\n\t\treturn { _type: 'AccountIndex', data: this+0 }\n\t}\n}\n\nfunction stringToBytes(s) {\n\tvar data = new Uint8Array(s.length);\n\tfor (var i = 0; i < s.length; i++){\n\t\tdata[i] = s.charCodeAt(i);\n\t}\n\treturn data;\n}\n\n/* tslint:disable:no-bitwise */\nfunction toLE(val, bytes) {\n\tlet flip = false;\n\tif (val < 0) {\n\t\tval = -val - 1;\n\t\tflip = true;\n\t}\n\n\tlet r = new Uint8Array(bytes);\n\tfor (var o = 0; o < bytes; ++o) {\n\t\tr[o] = val % 256;\n\t\tif (flip) {\n\t\t\tr[o] = ~r[o] & 0xff;\n\t\t}\n\t\tval /= 256;\n\t}\n\treturn r;\n}\n\nfunction leToNumber(le) {\n\tlet r = 0;\n\tlet a = 1;\n\tle.forEach(x => { r += x * a; a *= 256; });\n\treturn r;\n}\n\nfunction mergeUint8Arrays(a, b) {\n\tif (!a.length) {\n\t\ta = [a];\n\t}\n\tif (!b.length) {\n\t\tb = [b];\n\t}\n\n\tconst c = new Uint8Array(a.length + b.length);\n\n\tc.set(a);\n\tc.set(b, a.length);\n\n\treturn c;\n}\n\nexport function ss58Encode(a, type = defaultType, checksumLength = null, length = null, accountId) {\n\tlet payload\n\tif (KNOWN_TYPES.indexOf(type) === -1) {\n\t\tthrow new Error('Unknown ss58 address type', type)\n\t}\n\tif (typeof a === 'number' || a instanceof AccountIndex) {\n\t\tlet minLength = (a < (1 << 8) ? 1 : a < (1 << 16) ? 2 : a < (1 << 32) ? 4 : 8)\n\t\tlength = length ? length : minLength\n\t\tif ([1, 2, 4, 8].indexOf(length) === -1) {\n\t\t\tthrow new Error('Invalid length')\n\t\t}\n\t\tlength = Math.max(minLength, length)\n\t\tif (checksumLength && typeof checksumLength !== 'number') {\n\t\t\tthrow new Error('Invalid checksum length')\n\t\t}\n\t\tswitch (length) {\n\t\t\tcase 1: { checksumLength = 1; break; }\n\t\t\tcase 2: { checksumLength = ([1, 2].indexOf(checksumLength) + 1) || 1; break; }\n\t\t\tcase 4: { checksumLength = ([1, 2, 3, 4].indexOf(checksumLength) + 1) || 1; break; }\n\t\t\tcase 8: { checksumLength = ([1, 2, 3, 4, 5, 6, 7, 8].indexOf(checksumLength) + 1) || 1; break; }\n\t\t}\n\t\tpayload = toLE(a, length)\n\t} else if ((a instanceof Uint8Array) && ((a.length === 32) || (a.length === 35))) {\n\t\tchecksumLength = 2\n\t\tpayload = (a.length === 35) ? a.slice(1, 33) : a\n\t\taccountId = payload\n\t} else {\n\t\tthrow new Error('Unknown item to encode as ss58. Passing back.', a)\n\t}\n\tlet hash = blake2b(mergeUint8Arrays(PREFIX, ((type & 1) ? accountId : mergeUint8Arrays(type, payload))));\n\tlet complete = mergeUint8Arrays(mergeUint8Arrays(type, payload), hash.slice(0, checksumLength));\n\treturn bs58.encode(Buffer.from(complete))\n}\n/* tslint:enable:no-bitwise */\n\nexport function ss58Decode(ss58, lookupIndex=0) {\n\tlet a\n\ttry {\n\t\ta = bs58.decode(ss58)\n\t}\n\tcatch (e) {\n\t\treturn null\n\t}\n\n\tlet type = a[0]\n\tif (KNOWN_TYPES.indexOf(type) === -1) {\n\t\treturn null\n\t}\n\n\tif (a.length < 3) {\n\t\treturn null\n\t\t//throw new Error('Invalid length of payload for address', a.length)\n\t}\n\tlet length = a.length <= 3\n\t\t? 1\n\t\t: a.length <= 5\n\t\t? 2\n\t\t: a.length <= 9\n\t\t? 4\n\t\t: a.length <= 17\n\t\t? 8\n\t\t: 32\n\tlet checksumLength = a.length - 1 - length\n\n\tlet payload = a.slice(1, 1 + length)\n\tlet checksum = a.slice(1 + a.length)\n\n\tlet accountId\n\tif (length === 32) {\n\t\taccountId = payload\n\t}\n\n\tlet result = length < 32\n\t\t? new AccountIndex(leToNumber(payload))\n\t\t: new Buffer.from(payload)\n\n\tif (a[0] % 1 && !accountId && !lookupIndex) {\n\t\treturn null\n\t}\n\tlet hash = blake2b(mergeUint8Arrays(PREFIX, (a[0] % 1 ? (accountId || lookupIndex(result)) : a.slice(0, 1 + length))))\n\n\tfor (var i = 0; i < checksumLength; ++i) {\n\t\tif (hash[i] !== a[1 + length + i]) {\n\t\t\t// invalid checksum\n\t\t\treturn null\n\t\t}\n\t}\n\n\treturn result\n}\n","/**\n * @license\n * https://github.com/bitcoincashjs/cashaddr\n * Copyright (c) 2017-2018 Emilio Almansi\n * Distributed under the MIT software license, see the accompanying\n * file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n */\n\n/**\n * Validation utility.\n *\n * @module validation\n */\n\n/**\n * Error thrown when encoding or decoding fail due to invalid input.\n *\n * @constructor ValidationError\n * @param {string} message Error description.\n */\nexport function ValidationError(message) {\n  var error = new Error();\n  this.name = error.name = 'ValidationError';\n  this.message = error.message = message;\n  this.stack = error.stack;\n}\n\nValidationError.prototype = Object.create(Error.prototype);\n\n/**\n * Validates a given condition, throwing a {@link ValidationError} if\n * the given condition does not hold.\n *\n * @static\n * @param {boolean} condition Condition to validate.\n * @param {string} message Error message in case the condition does not hold.\n */\nexport function validate(condition, message) {\n  if (message == null) {\n\t  message = \"Assertion failed.\";\n  }\n  if (!condition) {\n    throw new ValidationError(message);\n  }\n}\n","/*!\n * cashaddr.js - cashaddr for bcash\n * Copyright (c) 2017, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcoin\n *\n * Implementation of CashAddr\n * https://github.com/bitcoincashorg/spec/blob/master/cashaddr.md\n *\n * Parts of this software are based on \"bitcoin-abc\".\n * https://github.com/Bitcoin-ABC/bitcoin-abc\n *\n * Parts of this software are based on \"bech32\".\n * https://github.com/sipa/bech32\n *\n * Copyright (c) 2017 Pieter Wuille\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport { validate } from './validation';\n\n/**\n * U64\n */\nclass U64 {\n  constructor(hi, lo) {\n    this.hi = hi | 0;\n    this.lo = lo | 0;\n  }\n\n  ushrn32(bits) {\n    bits &= 63;\n\n    let lo = this.lo;\n\n    if (bits === 0)\n      return lo;\n\n    if (bits < 32) {\n      lo >>>= bits;\n      lo |= this.hi << (32 - bits);\n    } else {\n      lo = this.hi >>> (bits - 32);\n    }\n\n    return lo;\n  }\n}\n\n/**\n * Constants\n */\n\nconst POOL105 = Buffer.allocUnsafe(105);\nconst CHARSET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l';\n\nconst TABLE = [\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,\n  15, -1, 10, 17, 21, 20, 26, 30,  7,  5, -1, -1, -1, -1, -1, -1,\n  -1, 29, -1, 24, 13, 25,  9,  8, 23, -1, 18, 22, 31, 27, 19, -1,\n   1,  0,  3, 16, 11, 28, 12, 14,  6,  4,  2, -1, -1, -1, -1, -1,\n  -1, 29, -1, 24, 13, 25,  9,  8, 23, -1, 18, 22, 31, 27, 19, -1,\n   1,  0,  3, 16, 11, 28, 12, 14,  6,  4,  2, -1, -1, -1, -1, -1\n];\n\nconst CHECKSUM_MASK = new U64(0x00000007, 0xffffffff);\n\nconst GENERATOR = [\n  new U64(0x00000098, 0xf2bc8e61),\n  new U64(0x00000079, 0xb76d99e2),\n  new U64(0x000000f3, 0x3e5fb3c4),\n  new U64(0x000000ae, 0x2eabe2a8),\n  new U64(0x0000001e, 0x4f43e470)\n];\n\n/**\n * Update checksum\n * @ignore\n * @param {U64} chk\n * @param {Number} x\n * @returns {U64} -- new checksum\n */\n\nfunction polymod(pre, x) {\n  const c = pre;\n\n  // b = c >> 35\n  const b = c.hi >>> 3;\n\n  // c = (c & CHECKSUM_MASK) << 5\n  c.hi &= CHECKSUM_MASK.hi;\n  c.lo &= CHECKSUM_MASK.lo;\n  c.hi <<= 5;\n  c.hi |= c.lo >>> 27;\n  c.lo <<= 5;\n\n  for (let i = 0; i < GENERATOR.length; i++) {\n    if ((b >>> i) & 1) {\n      // c ^= GENERATOR[i]\n      c.hi ^= GENERATOR[i].hi;\n      c.lo ^= GENERATOR[i].lo;\n    }\n  }\n\n  // c ^= x\n  c.lo ^= x;\n\n  return c;\n}\n\n/**\n * Serialize data to cashaddr.\n * @param {String} prefix\n * @param {Buffer} data - 5bit serialized\n * @returns {String}\n */\n\nfunction serialize(prefix, data) {\n  validate(typeof prefix === 'string');\n  validate(Buffer.isBuffer(data));\n\n  const chk = new U64(0, 1);\n\n  let str = '';\n\n  let upper = false;\n  let lower = false;\n\n  for (let i = 0; i < prefix.length; i++) {\n    let ch = prefix.charCodeAt(i);\n\n    if ((ch & 0xff00) || (ch >>> 5) === 0)\n      throw new Error('Invalid cashaddr character.');\n\n    if (ch >= 0x61 && ch <= 0x7a) {\n      lower = true;\n    } else if (ch >= 0x41 && ch <= 0x5a) {\n      upper = true;\n      ch = (ch - 0x41) + 0x61;\n    } else if (ch >= 0x30 && ch <= 0x39) {\n      throw new Error('Invalid cashaddr prefix.');\n    }\n\n    polymod(chk, ch & 0x1f);\n\n    str += String.fromCharCode(ch);\n  }\n\n  if (lower && upper)\n    throw new Error('Invalid cashaddr prefix.');\n\n  polymod(chk, 0);\n  str += ':';\n\n  for (let i = 0; i < data.length; i++) {\n    const ch = data[i];\n\n    if ((ch >>> 5) !== 0)\n      throw new Error('Invalid cashaddr value.');\n\n    polymod(chk, ch);\n\n    str += CHARSET[ch];\n  }\n\n  for (let i = 0; i < 8; i++)\n    polymod(chk, 0);\n\n  chk.lo ^= 1;\n\n  for (let i = 0; i < 8; i++) {\n    const v = chk.ushrn32((7 - i) * 5) & 0x1f;\n\n    str += CHARSET[v];\n  }\n\n  return str;\n}\n\n/**\n * Decode CashAddr string.\n * @param {String} str\n * @param {String} defaultPrefix (lowercase and w/o numbers)\n * @returns {Array} [prefix, data]\n */\n\nfunction deserialize(str, defaultPrefix) {\n  validate(typeof str === 'string');\n\n  if (str.length < 8 || str.length > 196) // 83 + 1 + 112\n    throw new Error('Invalid cashaddr data length.');\n\n  let lower = false;\n  let upper = false;\n  let number = false;\n  let plen = 0;\n\n  // Process lower/upper, make sure we have prefix.\n  for (let i = 0; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n\n    if (ch >= 0x61 && ch <= 0x7a) {\n      lower = true;\n      continue;\n    }\n\n    if (ch >= 0x41 && ch <= 0x5a) {\n      upper = true;\n      continue;\n    }\n\n    if (ch >= 0x30 && ch <= 0x39) {\n      number = true;\n      continue;\n    }\n\n    if (ch === 0x3a) { // :\n      if (number || i === 0 || i > 83)\n        throw new Error('Invalid cashaddr prefix.');\n\n      if (plen !== 0)\n        throw new Error('Invalid cashaddr separators.');\n\n      plen = i;\n\n      continue;\n    }\n\n    throw new Error('Invalid cashaddr character.');\n  }\n\n  if (upper && lower)\n    throw new Error('Invalid cashaddr casing.');\n\n  // Process checksum.\n  const chk = new U64(0, 1);\n\n  let prefix;\n\n  if (plen === 0) {\n    prefix = defaultPrefix.toLowerCase();\n  } else {\n    prefix = str.substring(0, plen).toLowerCase();\n    plen += 1;\n  }\n\n  // Process prefix.\n  for (let i = 0; i < prefix.length; i++) {\n    const ch = prefix.charCodeAt(i);\n\n    polymod(chk, (ch | 0x20) & 0x1f);\n  }\n\n  polymod(chk, 0);\n\n  const dlen = str.length - plen;\n\n  if (dlen <= 8 || dlen > 112)\n    throw new Error('Invalid cashaddr data length.');\n\n  const data = Buffer.allocUnsafe(dlen);\n\n  for (let i = plen; i < str.length; i++) {\n    const ch = str.charCodeAt(i);\n    const v = (ch & 0xff80) ? -1 : TABLE[ch];\n\n    if (v === -1)\n      throw new Error('Invalid cashaddr character.');\n\n    polymod(chk, v);\n\n    if (i + 8 < str.length)\n      data[i - plen] = v;\n  }\n\n  const valid = chk.hi === 0 && chk.lo === 1 && prefix === defaultPrefix;\n\n  if (!valid)\n    throw new Error('Invalid cashaddr checksum.');\n\n  return [prefix, data.slice(0, -8)];\n}\n\n/**\n * Convert serialized data to another base.\n * @param {Buffer} input\n * @param {Number} i\n * @param {Buffer} output\n * @param {Number} j\n * @param {Number} frombits\n * @param {Number} tobits\n * @param {Boolean} pad\n * @returns {Buffer}\n */\n\nfunction convert(input, i, output, j, frombits, tobits, pad) {\n  validate(Buffer.isBuffer(input));\n  validate((i >>> 0) === i);\n  validate(Buffer.isBuffer(output));\n  validate((j >>> 0) === j);\n  validate((frombits & 0xff) === frombits);\n  validate((tobits & 0xff) === tobits);\n  validate(typeof pad === 'boolean');\n\n  const maxv = (1 << tobits) - 1;\n\n  let acc = 0;\n  let bits = 0;\n\n  for (; i < input.length; i++) {\n    const value = input[i];\n\n    if ((value >>> frombits) !== 0)\n      throw new Error('Invalid bits.');\n\n    acc = (acc << frombits) | value;\n    bits += frombits;\n\n    while (bits >= tobits) {\n      bits -= tobits;\n      output[j++] = (acc >>> bits) & maxv;\n    }\n  }\n\n  if (pad) {\n    if (bits)\n      output[j++] = (acc << (tobits - bits)) & maxv;\n  } else {\n    if (bits >= frombits || ((acc << (tobits - bits)) & maxv))\n      throw new Error('Invalid bits.');\n  }\n\n  validate(j <= output.length);\n\n  return output.slice(0, j);\n}\n\n/**\n * Calculate size required for bit conversion.\n * @param {Number} len\n * @param {Number} frombits\n * @param {Number} tobits\n * @param {Boolean} pad\n * @returns {Number}\n */\n\nfunction convertSize(len, frombits, tobits, pad) {\n  validate((len >>> 0) === len);\n  validate((frombits & 0xff) === frombits);\n  validate((tobits & 0xff) === tobits);\n  validate(typeof pad === 'boolean');\n  validate(tobits !== 0);\n\n  let size = (len * frombits + (tobits - 1)) / tobits;\n\n  size >>>= 0;\n\n  if (pad)\n    size += 1;\n\n  return size;\n}\n\n/**\n * Convert serialized data to another base.\n * @param {Buffer} data\n * @param {Number} frombits\n * @param {Number} tobits\n * @param {Boolean} pad\n * @returns {Buffer}\n */\n\nfunction convertBits(data, frombits, tobits, pad) {\n  validate(Buffer.isBuffer(data));\n  validate((frombits & 0xff) === frombits);\n  validate((tobits & 0xff) === tobits);\n  validate(typeof pad === 'boolean');\n\n  const size = convertSize(data.length, frombits, tobits, pad);\n  const out = Buffer.allocUnsafe(size);\n\n  return convert(data, 0, out, 0, frombits, tobits, pad);\n}\n\n/**\n * Get cashaddr encoded size.\n * @param {Number} size\n * @returns {Number}\n */\n\nfunction encodedSize(size) {\n  validate((size >>> 0) === size);\n\n  switch (size) {\n    case 20:\n      return 0;\n    case 24:\n      return 1;\n    case 28:\n      return 2;\n    case 32:\n      return 3;\n    case 40:\n      return 4;\n    case 48:\n      return 5;\n    case 56:\n      return 6;\n    case 64:\n      return 7;\n    default:\n      throw new Error('Non standard length.');\n  }\n}\n\n/**\n * Serialize data to cashaddr\n * @param {String} prefix\n * @param {Number} type - (0 = P2PKH, 1 = P2SH)\n * @param {Buffer} hash\n * @returns {String}\n */\n\nexport function cashaddrEncode(prefix, type, hash) {\n  validate(typeof prefix === 'string');\n  // There are 4 bits available for the version (2 ^ 4 = 16)\n  validate((type & 0x0f) === type, 'Invalid cashaddr type.');\n  validate(Buffer.isBuffer(hash));\n\n  if (prefix.length === 0 || prefix.length > 83)\n    throw new Error('Invalid cashaddr prefix.');\n\n  const size = encodedSize(hash.length);\n  const data = Buffer.allocUnsafe(hash.length + 1);\n  data[0] = (type << 3) | size;\n  hash.copy(data, 1);\n\n  const output = POOL105;\n  const converted = convert(data, 0, output, 0, 8, 5, true);\n\n  return serialize(prefix, converted);\n}\n\n/**\n * Deserialize data from CashAddr address.\n * @param {String} str\n * @param {String} defaultPrefix (lowercase and w/o numbers)\n * @returns {Object}\n */\n\nexport function cashaddrDecode(str, defaultPrefix = 'bitcoincash') {\n  validate(typeof str === 'string');\n  validate(typeof defaultPrefix === 'string');\n\n  const [prefix, data] = deserialize(str, defaultPrefix);\n  const extrabits = (data.length * 5) & 7;\n\n  if (extrabits >= 5)\n    throw new Error('Invalid padding in data.');\n\n  const last = data[data.length - 1];\n  const mask = (1 << extrabits) - 1;\n\n  if (last & mask)\n    throw new Error('Non zero padding.');\n\n  const output = data;\n  const converted = convert(data, 0, output, 0, 5, 8, false);\n\n  const type = (converted[0] >>> 3) & 0x1f;\n  const hash = converted.slice(1);\n\n  let size = 20 + 4 * (converted[0] & 0x03);\n\n  if (converted[0] & 0x04)\n    size *= 2;\n\n  if (size !== hash.length)\n    throw new Error('Invalid cashaddr data length.');\n\n  return {\n    prefix: prefix,\n    type: type,\n    hash: hash\n  };\n}\n\n/**\n * Test whether a string is a cashaddr string.\n * @param {String} str\n * @param {String} defaultPrefix (lowercase and w/o numbers)\n * @returns {Boolean}\n */\n\nexport function cashaddrTest(str, defaultPrefix = 'bitcoincash') {\n  try {\n    cashaddrDecode(str, defaultPrefix);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n","/*!\nbs58check - A straight forward implementation of base58check extending upon bs58.\n\nThe MIT License (MIT)\nCopyright (c) 2017 Daniel Cousens\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n*/\n\nimport Sha256 from '../sha256';\nimport base58 from 'bs58';\n\nfunction sha256x2 (buffer) {\n    var tmp = new Sha256().update(buffer).digest()\n    return new Sha256().update(tmp).digest()\n}\n\nconst bs58Check = function (checksumFn) {\n    // Encode a buffer as a base58-check encoded string\n    function encode (payload) {\n        var checksum = checksumFn(payload)\n\n        return base58.encode(Buffer.concat([\n            payload,\n            checksum\n        ], payload.length + 4))\n    }\n    function decodeRaw (buffer) {\n        var payload = buffer.slice(0, -4)\n        var checksum = buffer.slice(-4)\n        var newChecksum = checksumFn(payload)\n        /* tslint:disable:no-bitwise */\n        if (checksum[0] ^ newChecksum[0] |\n            checksum[1] ^ newChecksum[1] |\n            checksum[2] ^ newChecksum[2] |\n            checksum[3] ^ newChecksum[3]) { return }\n\n        return payload\n    }\n    // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n    function decodeUnsafe (data) {\n        var buffer = base58.decodeUnsafe(data)\n        if (!buffer) { return }\n\n        return decodeRaw(buffer)\n    }\n    function decode (data) {\n        var buffer = base58.decode(data)\n        var payload = decodeRaw(buffer, checksumFn)\n        if (!payload) { throw new Error('Invalid checksum') }\n        return payload\n    }\n    return { bs58Encode: encode, bs58Decode: decode, decodeUnsafe: decodeUnsafe }\n};\n\nconst bs58 = bs58Check(sha256x2);\n\nexport const { bs58Decode, bs58Encode, decodeUnsafe } = bs58;\n\nexport default bs58;\n"],"names":["alphabet","hex2a","hexx","hex","toString","str","i","length","String","fromCharCode","parseInt","substr","_hexEncodeArray","ua2hex","ua","s","code","b32decode","r","ArrayBuffer","b","Uint8Array","j","v","_i4","indexOf","b32encode","parts","quanta","Math","floor","leftover","_i","push","charAt","charCodeAt","replace","_i2","pop","_i3","join","isValid","addr","address","toUpperCase","decoded","toHex","KeccakChecksum","Buffer","from","slice","arrayOfBytes","finalHex","round","payload","Keccak","update","digest","Hash","blockSize","finalSize","this","_block","alloc","_finalSize","_blockSize","_len","prototype","data","enc","block","accum","offset","assigned","remainder","min","_update","rem","fill","bits","writeUInt32BE","lowBits","hash","_hash","Error","ctor","superCtor","K","W","Array","Sha256","init","_w","call","ch","x","y","z","maj","sigma0","sigma1","gamma0","super_","Object","create","constructor","value","enumerable","writable","configurable","_a","_b","_c","_d","_e","_f","_g","_h","M","a","c","d","e","f","g","h","readInt32BE","T1","T2","H","allocUnsafe","writeInt32BE","codecOptions","sha256","bytes","codec","options","baseCodec","base","encodeChecked","buffer","check","encodeRaw","args","ret","forEach","arg","undefined","concatArgs","encode","decodeChecked","base58string","decodeRaw","verifyCheckSum","decode","arr1","arr2","seqEqual","stripHexPrefix","toChecksumAddress","chainId","strip_address","toLowerCase","keccak_hash","output","isValidChecksumAddress","test","isValidAddress","assert","errMsg","assertBuffer","keyBuffer","isBuffer","ONE","bigInt","one","ZERO","zero","THREE","testBit","bigIntVal","n","and","shiftLeft","notEquals","bufferToBigInt","fromArray","bigIntToBuffer","size","toArray","zeroBytesLength","max","Point","curve","_zInv","compressed","defineProperty","get","modInv","p","multiply","zInv","mod","fromAffine","equals","other","isInfinity","subtract","compare","negate","add","x1","y1","x2","u","twice","infinity","v2","square","v3","x1v2","zu2","x3","y3","z3","y1z1","y1sqz1","w","pow","k","neg","R","bitLength","hBit","eBit","multiplyTwo","both","jBit","kBit","getEncoded","affineX","affineY","byteLength","pLength","writeUInt8","isEven","copy","decodeFrom","Q","type","readUInt8","pointFromX","Curve","Gx","Gy","G","pOverFour","shiftRight","isOdd","beta","modPow","isOnCurve","compareTo","lhs","rhs","validate","nQ","resultEncoding","SHA3","ripemd160","RIPEMD160","checkEncode","keyType","arguments","checksum","base58","concat","_checksum","checkDecode","keyString","key","newCheck","secp256k1","name","curves","getCurveByName","PublicKey","pubkey_prefix","fromString","fromBuffer","toBuffer","pubkey","public_key","fromStringOrThrow","match","RegExp","substring","fromHex","fromStringHex","isUndefined","versionBytes","ed25519PublicKey","ed25519SecretSeed","preAuthTx","sha256Hash","decodeCheck","versionByteName","encoded","TypeError","versionByte","expectedVersion","expectedChecksum","calculateChecksum","verifyChecksum","encodeCheck","versionBuffer","unencoded","writeUInt16LE","crc16xmodem","buf","previous","crc","index","expected","actual","KNOWN_TYPES","PREFIX","stringToBytes","AccountIndex","Number","toJSON","_type","mergeUint8Arrays","set","ss58Encode","checksumLength","accountId","minLength","val","flip","o","toLE","blake2b","complete","bs58","ss58Decode","ss58","lookupIndex","result","le","leToNumber","ValidationError","message","error","stack","condition","U64","hi","lo","ushrn32","POOL105","CHARSET","TABLE","CHECKSUM_MASK","GENERATOR","polymod","pre","convert","input","frombits","tobits","pad","maxv","acc","cashaddrEncode","prefix","encodedSize","chk","upper","lower","serialize","cashaddrDecode","defaultPrefix","number","plen","dlen","deserialize","extrabits","converted","checksumFn","newChecksum","bs58Encode","bs58Decode","decodeUnsafe","bs58Check","tmp"],"mappings":"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"}