{"version":3,"file":"ITerminal.js","sourceRoot":"","sources":["../../src/Terminal/ITerminal.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { ITerminalProvider } from './ITerminalProvider';\nimport { IColorableSequence } from './Colors';\n\n/**\n * @beta\n */\nexport interface ITerminal {\n  /**\n   * Subscribe a new terminal provider.\n   */\n  registerProvider(provider: ITerminalProvider): void;\n\n  /**\n   * Unsubscribe a terminal provider. If the provider isn't subscribed, this function does nothing.\n   */\n  unregisterProvider(provider: ITerminalProvider): void;\n\n  /**\n   * Write a generic message to the terminal\n   */\n  write(...messageParts: (string | IColorableSequence)[]): void;\n\n  /**\n   * Write a generic message to the terminal, followed by a newline\n   */\n  writeLine(...messageParts: (string | IColorableSequence)[]): void;\n\n  /**\n   * Write a warning message to the console with yellow text.\n   *\n   * @remarks\n   * The yellow color takes precedence over any other foreground colors set.\n   */\n  writeWarning(...messageParts: (string | IColorableSequence)[]): void;\n\n  /**\n   * Write a warning message to the console with yellow text, followed by a newline.\n   *\n   * @remarks\n   * The yellow color takes precedence over any other foreground colors set.\n   */\n  writeWarningLine(...messageParts: (string | IColorableSequence)[]): void;\n\n  /**\n   * Write an error message to the console with red text.\n   *\n   * @remarks\n   * The red color takes precedence over any other foreground colors set.\n   */\n  writeError(...messageParts: (string | IColorableSequence)[]): void;\n\n  /**\n   * Write an error message to the console with red text, followed by a newline.\n   *\n   * @remarks\n   * The red color takes precedence over any other foreground colors set.\n   */\n  writeErrorLine(...messageParts: (string | IColorableSequence)[]): void;\n\n  /**\n   * Write a verbose-level message.\n   */\n  writeVerbose(...messageParts: (string | IColorableSequence)[]): void;\n\n  /**\n   * Write a verbose-level message followed by a newline.\n   */\n  writeVerboseLine(...messageParts: (string | IColorableSequence)[]): void;\n\n  /**\n   * Write a debug-level message.\n   */\n  writeDebug(...messageParts: (string | IColorableSequence)[]): void;\n\n  /**\n   * Write a debug-level message followed by a newline.\n   */\n  writeDebugLine(...messageParts: (string | IColorableSequence)[]): void;\n}\n"]}