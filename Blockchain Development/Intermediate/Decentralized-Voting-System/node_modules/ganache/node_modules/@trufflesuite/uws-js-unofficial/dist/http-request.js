"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.HttpRequest = void 0;
const url_1 = require("url");
const querystring_1 = require("querystring");
class HttpRequest {
    constructor(request) {
        this.request = request;
        this.ancientHttp = false;
        this.didYield = false;
        this.currentParameters = [0, []];
    }
    isAncient() {
        return this.ancientHttp;
    }
    getYield() {
        return this.didYield;
    }
    /**
     * If you do not want to handle this route
     * @param yield
     */
    setYield(yielded) {
        this.didYield = yielded;
        return this;
    }
    getHeader(lowerCasedHeader) {
        return this.request.headers[lowerCasedHeader] || "";
    }
    getUrl() {
        if (!this.request.url) {
            throw new Error("URL on request is undefined");
        }
        return this.request.url;
    }
    getMethod() {
        if (!this.request.method) {
            throw new Error("Method on request is undefined");
        }
        return this.request.method;
    }
    getCaseSensitiveMethod() {
        throw new Error("Not implemented");
    }
    /**
     * Finds and decodes the URI component.
     * @param key
     */
    getQuery(key) {
        if (!this.request.url) {
            throw new Error("URL on request is undefined");
        }
        const search = new url_1.URL(this.request.url).search;
        if (key != null) {
            return (0, querystring_1.parse)(key)[key] || "";
        }
        else {
            return search;
        }
    }
    setParameters(parameters) {
        this.currentParameters = parameters;
    }
    getParameter(index) {
        if (this.currentParameters[0] < index) {
            return "";
        }
        else {
            return this.currentParameters[1][index];
        }
    }
    forEach(cb) {
        throw new Error("Not implemented");
    }
}
exports.HttpRequest = HttpRequest;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cC1yZXF1ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2ZhbGxiYWNrL2h0dHAtcmVxdWVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSw2QkFBMEI7QUFDMUIsNkNBQW9DO0FBRXBDLE1BQWEsV0FBVztJQU90QixZQUFZLE9BQXdCO1FBQ2xDLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxXQUFXLEdBQUcsS0FBSyxDQUFDO1FBQ3pCLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRU0sU0FBUztRQUNkLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQztJQUMxQixDQUFDO0lBRU0sUUFBUTtRQUNiLE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztJQUN2QixDQUFDO0lBRUQ7OztPQUdHO0lBQ0ksUUFBUSxDQUFDLE9BQWdCO1FBQzlCLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDO1FBQ3hCLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLFNBQVMsQ0FBQyxnQkFBd0I7UUFDdkMsT0FBUSxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBWSxJQUFJLEVBQUUsQ0FBQztJQUNsRSxDQUFDO0lBRU0sTUFBTTtRQUNYLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRTtZQUNyQixNQUFNLElBQUksS0FBSyxDQUFDLDZCQUE2QixDQUFDLENBQUM7U0FDaEQ7UUFFRCxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDO0lBQzFCLENBQUM7SUFFTSxTQUFTO1FBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFO1lBQ3hCLE1BQU0sSUFBSSxLQUFLLENBQUMsZ0NBQWdDLENBQUMsQ0FBQztTQUNuRDtRQUVELE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7SUFDN0IsQ0FBQztJQUVNLHNCQUFzQjtRQUMzQixNQUFNLElBQUksS0FBSyxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDckMsQ0FBQztJQU1EOzs7T0FHRztJQUNJLFFBQVEsQ0FBQyxHQUFZO1FBQzFCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRTtZQUNyQixNQUFNLElBQUksS0FBSyxDQUFDLDZCQUE2QixDQUFDLENBQUM7U0FDaEQ7UUFFRCxNQUFNLE1BQU0sR0FBRyxJQUFJLFNBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQztRQUNoRCxJQUFJLEdBQUcsSUFBSSxJQUFJLEVBQUU7WUFDZixPQUFRLElBQUEsbUJBQUssRUFBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQVksSUFBSSxFQUFFLENBQUM7U0FDMUM7YUFBTTtZQUNMLE9BQU8sTUFBTSxDQUFDO1NBQ2Y7SUFDSCxDQUFDO0lBRU0sYUFBYSxDQUFDLFVBQThCO1FBQ2pELElBQUksQ0FBQyxpQkFBaUIsR0FBRyxVQUFVLENBQUM7SUFDdEMsQ0FBQztJQUVNLFlBQVksQ0FBQyxLQUFhO1FBQy9CLElBQUksSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssRUFBRTtZQUNyQyxPQUFPLEVBQUUsQ0FBQztTQUNYO2FBQU07WUFDTCxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQztTQUN6QztJQUNILENBQUM7SUFFRCxPQUFPLENBQUMsRUFBd0M7UUFDOUMsTUFBTSxJQUFJLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Q0FDRjtBQTNGRCxrQ0EyRkMifQ==