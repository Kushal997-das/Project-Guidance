{"version":3,"file":"ApiInterface.js","sourceRoot":"","sources":["../../src/model/ApiInterface.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAE3D,kGAKiE;AACjE,8CAA+C;AAC/C,2EAIyC;AACzC,8DAA0G;AAC1G,qEAIsC;AAEtC,iDAA8C;AAC9C,yDAA+F;AAC/F,mFAI6C;AAyB7C;;;;;;;;;;;;;;;;GAgBG;AACH,MAAa,YAAa,SAAQ,IAAA,6CAAqB,EACrD,IAAA,2BAAY,EAAC,IAAA,qDAAyB,EAAC,IAAA,uCAAkB,EAAC,iCAAe,CAAC,CAAC,CAAC,CAC7E;IAGC,YAAmB,OAA6B;QAC9C,KAAK,CAAC,OAAO,CAAC,CAAC;QAHA,kBAAa,GAAmB,EAAE,CAAC;QAKlD,KAAK,MAAM,iBAAiB,IAAI,OAAO,CAAC,kBAAkB,EAAE;YAC1D,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,2BAAY,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;SACjF;IACH,CAAC;IAEM,MAAM,CAAC,eAAe,CAAC,IAAY;QACxC,OAAO,GAAG,IAAI,IAAI,qBAAW,CAAC,SAAS,EAAE,CAAC;IAC5C,CAAC;IAED,gBAAgB;IACT,MAAM,CAAC,iBAAiB,CAC7B,OAAsC,EACtC,OAA4B,EAC5B,UAA6B;QAE7B,KAAK,CAAC,iBAAiB,CAAC,OAAO,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;QAEtD,OAAO,CAAC,kBAAkB,GAAG,UAAU,CAAC,kBAAkB,CAAC;IAC7D,CAAC;IAED,gBAAgB;IAChB,IAAW,IAAI;QACb,OAAO,qBAAW,CAAC,SAAS,CAAC;IAC/B,CAAC;IAED,gBAAgB;IAChB,IAAW,YAAY;QACrB,OAAO,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;IAED;;OAEG;IACH,IAAW,YAAY;QACrB,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,gBAAgB;IACT,aAAa,CAAC,UAAsC;QACzD,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAEhC,UAAU,CAAC,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;IACrF,CAAC;IAED,sBAAsB;IACf,uBAAuB;QAC5B,MAAM,aAAa,GAAc,2CAAoB,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAChF,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC,CAAC,2CAAoB,CAAC,KAAK,EAAE,CAAC;aACjF,iBAAiB,oBAAqB,aAAa,CAAC;aACpD,WAAW,6BAAmB,CAAC;IACpC,CAAC;CACF;AA3DD,oCA2DC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport {\n  DeclarationReference,\n  Meaning,\n  Navigation,\n  Component\n} from '@microsoft/tsdoc/lib-commonjs/beta/DeclarationReference';\nimport { ApiItemKind } from '../items/ApiItem';\nimport {\n  ApiItemContainerMixin,\n  IApiItemContainerMixinOptions,\n  IApiItemContainerJson\n} from '../mixins/ApiItemContainerMixin';\nimport { ApiDeclaredItem, IApiDeclaredItemOptions, IApiDeclaredItemJson } from '../items/ApiDeclaredItem';\nimport {\n  IApiReleaseTagMixinOptions,\n  ApiReleaseTagMixin,\n  IApiReleaseTagMixinJson\n} from '../mixins/ApiReleaseTagMixin';\nimport { IExcerptTokenRange } from '../mixins/Excerpt';\nimport { HeritageType } from './HeritageType';\nimport { IApiNameMixinOptions, ApiNameMixin, IApiNameMixinJson } from '../mixins/ApiNameMixin';\nimport {\n  IApiTypeParameterListMixinOptions,\n  IApiTypeParameterListMixinJson,\n  ApiTypeParameterListMixin\n} from '../mixins/ApiTypeParameterListMixin';\nimport { DeserializerContext } from './DeserializerContext';\n\n/**\n * Constructor options for {@link ApiInterface}.\n * @public\n */\nexport interface IApiInterfaceOptions\n  extends IApiItemContainerMixinOptions,\n    IApiNameMixinOptions,\n    IApiTypeParameterListMixinOptions,\n    IApiReleaseTagMixinOptions,\n    IApiDeclaredItemOptions {\n  extendsTokenRanges: IExcerptTokenRange[];\n}\n\nexport interface IApiInterfaceJson\n  extends IApiItemContainerJson,\n    IApiNameMixinJson,\n    IApiTypeParameterListMixinJson,\n    IApiReleaseTagMixinJson,\n    IApiDeclaredItemJson {\n  extendsTokenRanges: IExcerptTokenRange[];\n}\n\n/**\n * Represents a TypeScript class declaration.\n *\n * @remarks\n *\n * This is part of the {@link ApiModel} hierarchy of classes, which are serializable representations of\n * API declarations.\n *\n * `ApiInterface` represents a TypeScript declaration such as this:\n *\n * ```ts\n * export interface X extends Y {\n * }\n * ```\n *\n * @public\n */\nexport class ApiInterface extends ApiItemContainerMixin(\n  ApiNameMixin(ApiTypeParameterListMixin(ApiReleaseTagMixin(ApiDeclaredItem)))\n) {\n  private readonly _extendsTypes: HeritageType[] = [];\n\n  public constructor(options: IApiInterfaceOptions) {\n    super(options);\n\n    for (const extendsTokenRange of options.extendsTokenRanges) {\n      this._extendsTypes.push(new HeritageType(this.buildExcerpt(extendsTokenRange)));\n    }\n  }\n\n  public static getContainerKey(name: string): string {\n    return `${name}|${ApiItemKind.Interface}`;\n  }\n\n  /** @override */\n  public static onDeserializeInto(\n    options: Partial<IApiInterfaceOptions>,\n    context: DeserializerContext,\n    jsonObject: IApiInterfaceJson\n  ): void {\n    super.onDeserializeInto(options, context, jsonObject);\n\n    options.extendsTokenRanges = jsonObject.extendsTokenRanges;\n  }\n\n  /** @override */\n  public get kind(): ApiItemKind {\n    return ApiItemKind.Interface;\n  }\n\n  /** @override */\n  public get containerKey(): string {\n    return ApiInterface.getContainerKey(this.name);\n  }\n\n  /**\n   * The list of base interfaces that this interface inherits from using the `extends` keyword.\n   */\n  public get extendsTypes(): ReadonlyArray<HeritageType> {\n    return this._extendsTypes;\n  }\n\n  /** @override */\n  public serializeInto(jsonObject: Partial<IApiInterfaceJson>): void {\n    super.serializeInto(jsonObject);\n\n    jsonObject.extendsTokenRanges = this.extendsTypes.map((x) => x.excerpt.tokenRange);\n  }\n\n  /** @beta @override */\n  public buildCanonicalReference(): DeclarationReference {\n    const nameComponent: Component = DeclarationReference.parseComponent(this.name);\n    return (this.parent ? this.parent.canonicalReference : DeclarationReference.empty())\n      .addNavigationStep(Navigation.Exports, nameComponent)\n      .withMeaning(Meaning.Interface);\n  }\n}\n"]}