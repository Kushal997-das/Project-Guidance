{"version":3,"file":"ApiItem.js","sourceRoot":"","sources":["../../src/items/ApiItem.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { DeclarationReference } from '@microsoft/tsdoc/lib-commonjs/beta/DeclarationReference';\nimport { Constructor, PropertiesOf } from '../mixins/Mixin';\nimport { ApiPackage } from '../model/ApiPackage';\nimport { ApiParameterListMixin } from '../mixins/ApiParameterListMixin';\nimport { DeserializerContext } from '../model/DeserializerContext';\nimport { InternalError } from '@rushstack/node-core-library';\nimport { ApiItemContainerMixin } from '../mixins/ApiItemContainerMixin';\n\n/**\n * The type returned by the {@link ApiItem.kind} property, which can be used to easily distinguish subclasses of\n * {@link ApiItem}.\n *\n * @public\n */\nexport enum ApiItemKind {\n  CallSignature = 'CallSignature',\n  Class = 'Class',\n  Constructor = 'Constructor',\n  ConstructSignature = 'ConstructSignature',\n  EntryPoint = 'EntryPoint',\n  Enum = 'Enum',\n  EnumMember = 'EnumMember',\n  Function = 'Function',\n  IndexSignature = 'IndexSignature',\n  Interface = 'Interface',\n  Method = 'Method',\n  MethodSignature = 'MethodSignature',\n  Model = 'Model',\n  Namespace = 'Namespace',\n  Package = 'Package',\n  Property = 'Property',\n  PropertySignature = 'PropertySignature',\n  TypeAlias = 'TypeAlias',\n  Variable = 'Variable',\n  None = 'None'\n}\n\n/**\n * Constructor options for {@link ApiItem}.\n * @public\n */\nexport interface IApiItemOptions {}\n\nexport interface IApiItemJson {\n  kind: ApiItemKind;\n  canonicalReference: string;\n}\n\n// PRIVATE - Allows ApiItemContainerMixin to assign the parent.\n//\nexport const apiItem_onParentChanged: unique symbol = Symbol('ApiItem._onAddToContainer');\n\n/**\n * The abstract base class for all members of an `ApiModel` object.\n *\n * @remarks\n * This is part of the {@link ApiModel} hierarchy of classes, which are serializable representations of\n * API declarations.\n * @public\n */\nexport class ApiItem {\n  private _canonicalReference: DeclarationReference | undefined;\n  private _parent: ApiItem | undefined;\n\n  public constructor(options: IApiItemOptions) {\n    // (\"options\" is not used here, but part of the inheritance pattern)\n  }\n\n  public static deserialize(jsonObject: IApiItemJson, context: DeserializerContext): ApiItem {\n    // The Deserializer class is coupled with a ton of other classes, so  we delay loading it\n    // to avoid ES5 circular imports.\n    const deserializerModule: typeof import('../model/Deserializer') = require('../model/Deserializer');\n    return deserializerModule.Deserializer.deserialize(context, jsonObject);\n  }\n\n  /** @virtual */\n  public static onDeserializeInto(\n    options: Partial<IApiItemOptions>,\n    context: DeserializerContext,\n    jsonObject: IApiItemJson\n  ): void {\n    // (implemented by subclasses)\n  }\n\n  /** @virtual */\n  public serializeInto(jsonObject: Partial<IApiItemJson>): void {\n    jsonObject.kind = this.kind;\n    jsonObject.canonicalReference = this.canonicalReference.toString();\n  }\n\n  /**\n   * Identifies the subclass of the `ApiItem` base class.\n   * @virtual\n   */\n  public get kind(): ApiItemKind {\n    throw new Error('ApiItem.kind was not implemented by the child class');\n  }\n\n  /**\n   * Warning: This API is used internally by API extractor but is not yet ready for general usage.\n   *\n   * @remarks\n   *\n   * Returns a `DeclarationReference` object using the experimental new declaration reference notation.\n   *\n   * @beta\n   */\n  public get canonicalReference(): DeclarationReference {\n    if (!this._canonicalReference) {\n      try {\n        this._canonicalReference = this.buildCanonicalReference();\n      } catch (e) {\n        const name: string = this.getScopedNameWithinPackage() || this.displayName;\n        throw new InternalError(`Error building canonical reference for ${name}:\\n` + (e as Error).message);\n      }\n    }\n    return this._canonicalReference;\n  }\n\n  /**\n   * Returns a string key that can be used to efficiently retrieve an `ApiItem` from an `ApiItemContainerMixin`.\n   * The key is unique within the container.  Its format is undocumented and may change at any time.\n   *\n   * @remarks\n   * Use the `getContainerKey()` static member to construct the key.  Each subclass has a different implementation\n   * of this function, according to the aspects that are important for identifying it.\n   *\n   * @virtual\n   */\n  public get containerKey(): string {\n    throw new InternalError('ApiItem.containerKey was not implemented by the child class');\n  }\n\n  /**\n   * Returns a name for this object that can be used in diagnostic messages, for example.\n   *\n   * @remarks\n   * For an object that inherits ApiNameMixin, this will return the declared name (e.g. the name of a TypeScript\n   * function).  Otherwise, it will return a string such as \"(call signature)\" or \"(model)\".\n   *\n   * @virtual\n   */\n  public get displayName(): string {\n    switch (this.kind) {\n      case ApiItemKind.CallSignature:\n        return '(call)';\n      case ApiItemKind.Constructor:\n        return '(constructor)';\n      case ApiItemKind.ConstructSignature:\n        return '(new)';\n      case ApiItemKind.IndexSignature:\n        return '(indexer)';\n      case ApiItemKind.Model:\n        return '(model)';\n    }\n    return '(???)'; // All other types should inherit ApiNameMixin which will override this property\n  }\n\n  /**\n   * If this item was added to a ApiItemContainerMixin item, then this returns the container item.\n   * If this is an Parameter that was added to a method or function, then this returns the function item.\n   * Otherwise, it returns undefined.\n   * @virtual\n   */\n  public get parent(): ApiItem | undefined {\n    return this._parent;\n  }\n\n  /**\n   * This property supports a visitor pattern for walking the tree.\n   * For items with ApiItemContainerMixin, it returns the contained items, sorted alphabetically.\n   * Otherwise it returns an empty array.\n   * @virtual\n   */\n  public get members(): ReadonlyArray<ApiItem> {\n    return [];\n  }\n\n  /**\n   * If this item has a name (i.e. extends `ApiNameMixin`), then return all items that have the same parent\n   * and the same name.  Otherwise, return all items that have the same parent and the same `ApiItemKind`.\n   *\n   * @remarks\n   * Examples: For a function, this would return all overloads for the function.  For a constructor, this would\n   * return all overloads for the constructor.  For a merged declaration (e.g. a `namespace` and `enum` with the\n   * same name), this would return both declarations.  If this item does not have a parent, or if it is the only\n   * item of its name/kind, then the result is an array containing only this item.\n   */\n  public getMergedSiblings(): ReadonlyArray<ApiItem> {\n    const parent: ApiItem | undefined = this._parent;\n    if (parent && ApiItemContainerMixin.isBaseClassOf(parent)) {\n      return parent._getMergedSiblingsForMember(this);\n    }\n    return [];\n  }\n\n  /**\n   * Returns the chain of ancestors, starting from the root of the tree, and ending with the this item.\n   */\n  public getHierarchy(): ReadonlyArray<ApiItem> {\n    const hierarchy: ApiItem[] = [];\n    for (let current: ApiItem | undefined = this; current !== undefined; current = current.parent) {\n      hierarchy.push(current);\n    }\n    hierarchy.reverse();\n    return hierarchy;\n  }\n\n  /**\n   * This returns a scoped name such as `\"Namespace1.Namespace2.MyClass.myMember()\"`.  It does not include the\n   * package name or entry point.\n   *\n   * @remarks\n   * If called on an ApiEntrypoint, ApiPackage, or ApiModel item, the result is an empty string.\n   */\n  public getScopedNameWithinPackage(): string {\n    const reversedParts: string[] = [];\n\n    for (let current: ApiItem | undefined = this; current !== undefined; current = current.parent) {\n      if (\n        current.kind === ApiItemKind.Model ||\n        current.kind === ApiItemKind.Package ||\n        current.kind === ApiItemKind.EntryPoint\n      ) {\n        break;\n      }\n      if (reversedParts.length !== 0) {\n        reversedParts.push('.');\n      } else {\n        switch (current.kind) {\n          case ApiItemKind.CallSignature:\n          case ApiItemKind.ConstructSignature:\n          case ApiItemKind.Constructor:\n          case ApiItemKind.IndexSignature:\n            // These functional forms don't have a proper name, so we don't append the \"()\" suffix\n            break;\n          default:\n            if (ApiParameterListMixin.isBaseClassOf(current)) {\n              reversedParts.push('()');\n            }\n        }\n      }\n      reversedParts.push(current.displayName);\n    }\n\n    return reversedParts.reverse().join('');\n  }\n\n  /**\n   * If this item is an ApiPackage or has an ApiPackage as one of its parents, then that object is returned.\n   * Otherwise undefined is returned.\n   */\n  public getAssociatedPackage(): ApiPackage | undefined {\n    for (let current: ApiItem | undefined = this; current !== undefined; current = current.parent) {\n      if (current.kind === ApiItemKind.Package) {\n        return current as ApiPackage;\n      }\n    }\n    return undefined;\n  }\n\n  /** @virtual */\n  public getSortKey(): string {\n    return this.containerKey;\n  }\n\n  /**\n   * PRIVATE\n   *\n   * @privateRemarks\n   * Allows ApiItemContainerMixin to assign the parent when the item is added to a container.\n   *\n   * @internal\n   */\n  public [apiItem_onParentChanged](parent: ApiItem | undefined): void {\n    this._parent = parent;\n    this._canonicalReference = undefined;\n  }\n\n  /**\n   * Builds the cached object used by the `canonicalReference` property.\n   * @virtual\n   */\n  protected buildCanonicalReference(): DeclarationReference {\n    throw new InternalError('ApiItem.canonicalReference was not implemented by the child class');\n  }\n}\n\n/**\n * This abstraction is used by the mixin pattern.\n * It describes a class type that inherits from {@link ApiItem}.\n *\n * @public\n */\nexport interface IApiItemConstructor extends Constructor<ApiItem>, PropertiesOf<typeof ApiItem> {}\n"]}