{"version":3,"file":"DeserializerContext.js","sourceRoot":"","sources":["../../src/model/DeserializerContext.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAI3D,IAAY,oBA+DX;AA/DD,WAAY,oBAAoB;IAC9B;;OAEG;IACH,sEAAa,CAAA;IAEb;;OAEG;IACH,sEAAa,CAAA;IAEb;;OAEG;IACH,sEAAa,CAAA;IAEb;;;;;OAKG;IACH,sEAAa,CAAA;IAEb;;;;;OAKG;IACH,sEAAa,CAAA;IAEb;;;;OAIG;IACH,sEAAa,CAAA;IAEb;;;;;OAKG;IACH,sEAAe,CAAA;IAEf;;;;;OAKG;IACH,0FAAyB,CAAA;IAEzB;;;;;;OAMG;IACH,8GAAmC,CAAA;AACrC,CAAC,EA/DW,oBAAoB,GAApB,4BAAoB,KAApB,4BAAoB,QA+D/B;AAED,MAAa,mBAAmB;IA0B9B,YAAmB,OAA4B;QAC7C,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,CAAC;QAC/C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC,oBAAoB,CAAC;QACzD,IAAI,CAAC,kBAAkB,GAAG,OAAO,CAAC,kBAAkB,CAAC;IACvD,CAAC;CACF;AAjCD,kDAiCC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { TSDocConfiguration } from '@microsoft/tsdoc';\n\nexport enum ApiJsonSchemaVersion {\n  /**\n   * The initial release.\n   */\n  V_1000 = 1000,\n\n  /**\n   * Add support for type parameters and type alias types.\n   */\n  V_1001 = 1001,\n\n  /**\n   * Remove `canonicalReference` field.  This field was for diagnostic purposes only and was never deserialized.\n   */\n  V_1002 = 1002,\n\n  /**\n   * Reintroduce the `canonicalReference` field using the experimental new TSDoc declaration reference notation.\n   *\n   * This is not a breaking change because this field is never deserialized; it is provided for informational\n   * purposes only.\n   */\n  V_1003 = 1003,\n\n  /**\n   * Add a `tsdocConfig` field that tracks the TSDoc configuration for parsing doc comments.\n   *\n   * This is not a breaking change because an older implementation will still work correctly.  The\n   * custom tags will be skipped over by the parser.\n   */\n  V_1004 = 1004,\n\n  /**\n   * Add an `isOptional` field to `IApiParameterOptions` to track whether a function parameter is optional.\n   *\n   * When loading older JSON files, the value defaults to `false`.\n   */\n  V_1005 = 1005,\n\n  /**\n   * The current latest .api.json schema version.\n   *\n   * IMPORTANT: When incrementing this number, consider whether `OLDEST_SUPPORTED` or `OLDEST_FORWARDS_COMPATIBLE`\n   * should be updated.\n   */\n  LATEST = V_1005,\n\n  /**\n   * The oldest .api.json schema version that is still supported for backwards compatibility.\n   *\n   * This must be updated if you change to the file format and do not implement compatibility logic for\n   * deserializing the older representation.\n   */\n  OLDEST_SUPPORTED = V_1001,\n\n  /**\n   * Used to assign `IApiPackageMetadataJson.oldestForwardsCompatibleVersion`.\n   *\n   * This value must be \\<= `ApiJsonSchemaVersion.LATEST`.  It must be reset to the `LATEST` value\n   * if the older library would not be able to deserialize your new file format.  Adding a nonessential field\n   * is generally okay.  Removing, modifying, or reinterpreting existing fields is NOT safe.\n   */\n  OLDEST_FORWARDS_COMPATIBLE = V_1001\n}\n\nexport class DeserializerContext {\n  /**\n   * The path of the file being deserialized, which may be useful for diagnostic purposes.\n   */\n  public readonly apiJsonFilename: string;\n\n  /**\n   * Metadata from `IApiPackageMetadataJson.toolPackage`.\n   */\n  public readonly toolPackage: string;\n\n  /**\n   * Metadata from `IApiPackageMetadataJson.toolVersion`.\n   */\n  public readonly toolVersion: string;\n\n  /**\n   * The version of the schema being deserialized, as obtained from `IApiPackageMetadataJson.schemaVersion`.\n   */\n  public readonly versionToDeserialize: ApiJsonSchemaVersion;\n\n  /**\n   * The TSDoc configuration for the context.\n   */\n  public readonly tsdocConfiguration: TSDocConfiguration;\n\n  public constructor(options: DeserializerContext) {\n    this.apiJsonFilename = options.apiJsonFilename;\n    this.toolPackage = options.toolPackage;\n    this.toolVersion = options.toolVersion;\n    this.versionToDeserialize = options.versionToDeserialize;\n    this.tsdocConfiguration = options.tsdocConfiguration;\n  }\n}\n"]}