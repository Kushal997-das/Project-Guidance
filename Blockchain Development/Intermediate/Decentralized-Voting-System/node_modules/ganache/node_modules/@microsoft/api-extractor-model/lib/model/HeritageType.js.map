{"version":3,"file":"HeritageType.js","sourceRoot":"","sources":["../../src/model/HeritageType.ts"],"names":[],"mappings":";AAAA,4FAA4F;AAC5F,2DAA2D;;;AAI3D;;;;;;;;;;;;;;GAcG;AACH,MAAa,YAAY;IAiBvB,YAAmB,OAAgB;QACjC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;CACF;AApBD,oCAoBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n// See LICENSE in the project root for license information.\n\nimport { Excerpt } from '../mixins/Excerpt';\n\n/**\n * Represents a type referenced via an \"extends\" or \"implements\" heritage clause for a TypeScript class.\n * @remarks\n *\n * For example, consider this declaration:\n *\n * ```ts\n * export class Widget extends Controls.WidgetBase implements Controls.IWidget, IDisposable {\n *   // . . .\n * }\n * ```\n *\n * The heritage types are `Controls.WidgetBase`, `Controls.IWidget`, and `IDisposable`.\n * @public\n */\nexport class HeritageType {\n  /**\n   * An excerpt corresponding to the referenced type.\n   * @remarks\n   *\n   * For example, consider this declaration:\n   *\n   * ```ts\n   * export class Widget extends Controls.WidgetBase implements Controls.IWidget, IDisposable {\n   *   // . . .\n   * }\n   * ```\n   *\n   * The excerpt might be `Controls.WidgetBase`, `Controls.IWidget`, or `IDisposable`.\n   */\n  public readonly excerpt: Excerpt;\n\n  public constructor(excerpt: Excerpt) {\n    this.excerpt = excerpt;\n  }\n}\n"]}