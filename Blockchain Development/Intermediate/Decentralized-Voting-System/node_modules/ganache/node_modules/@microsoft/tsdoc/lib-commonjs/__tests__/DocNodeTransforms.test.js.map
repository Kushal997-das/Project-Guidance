{"version":3,"file":"DocNodeTransforms.test.js","sourceRoot":"","sources":["../../src/__tests__/DocNodeTransforms.test.ts"],"names":[],"mappings":";;AAAA,wBAAgD;AAChD,+DAA8D;AAE9D,qEAAoE;AAEpE,IAAI,CAAC,iCAAiC,EAAE;IACtC,IAAM,MAAM,GAAW;QACrB,KAAK;QACL,IAAI;QACJ,yBAAyB;QACzB,+BAA+B;QAC/B,4BAA4B;QAC5B,eAAe;QACf,KAAK;KACN,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEb,IAAM,WAAW,GAAgB,IAAI,eAAW,EAAE,CAAC;IACnD,IAAM,aAAa,GAAkB,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IACrE,IAAM,SAAS,GAAY,aAAa,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC5E,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,OAAO,6BAAuB,CAAC;IACtD,IAAM,SAAS,GAAiB,SAAyB,CAAC;IAC1D,IAAM,oBAAoB,GAAiB,qCAAiB,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;IAC9F,MAAM,CAAC,yBAAW,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC;AACjF,CAAC,CAAC,CAAC","sourcesContent":["import { ParserContext, TSDocParser } from '..';\r\nimport { TestHelpers } from '../parser/__tests__/TestHelpers';\r\nimport { DocParagraph, DocNode, DocNodeKind } from '../nodes';\r\nimport { DocNodeTransforms } from '../transforms/DocNodeTransforms';\r\n\r\ntest('01 trimSpacesInParagraphNodes()', () => {\r\n  const buffer: string = [\r\n    '/**',\r\n    ' *',\r\n    ' *    This \\t is    the',\r\n    ' * first   {@mylink}sentence.',\r\n    ' *         This is another',\r\n    ' *sentence.  ',\r\n    ' */'\r\n  ].join('\\n');\r\n\r\n  const tsdocParser: TSDocParser = new TSDocParser();\r\n  const parserContext: ParserContext = tsdocParser.parseString(buffer);\r\n  const firstNode: DocNode = parserContext.docComment.summarySection.nodes[0];\r\n  expect(firstNode.kind).toEqual(DocNodeKind.Paragraph);\r\n  const paragraph: DocParagraph = firstNode as DocParagraph;\r\n  const transformedParagraph: DocParagraph = DocNodeTransforms.trimSpacesInParagraph(paragraph);\r\n  expect(TestHelpers.getDocNodeSnapshot(transformedParagraph)).toMatchSnapshot();\r\n});\r\n"]}