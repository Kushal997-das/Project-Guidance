{"version":3,"file":"cli.js","mappings":"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","sources":["webpack://Ganache/webpack/universalModuleDefinition","webpack://Ganache/webpack/runtime/chunk loaded","webpack://Ganache/webpack/runtime/startup chunk dependencies","webpack://Ganache/../cli/node_modules/colors/lib|sync","webpack://Ganache/../cli/node_modules/yargs-parser/build|sync","webpack://Ganache/../cli/node_modules/yargs/build|sync","webpack://Ganache/../cli/node_modules/yargs|sync","webpack://Ganache/../cli/src/args.ts","webpack://Ganache/../cli/src/detach.ts","webpack://Ganache/../cli/src/flavors.ts","webpack://Ganache/../cli/src/helpers.ts","webpack://Ganache/../cli/src/process-name.ts","webpack://Ganache/../cli/src/cli.ts","webpack://Ganache/./src/cli.ts","webpack://Ganache/external node-commonjs \"assert\"","webpack://Ganache/external node-commonjs \"buffer\"","webpack://Ganache/external node-commonjs \"child_process\"","webpack://Ganache/external node-commonjs \"crypto\"","webpack://Ganache/external node-commonjs \"events\"","webpack://Ganache/external node-commonjs \"fs\"","webpack://Ganache/external node-commonjs \"http\"","webpack://Ganache/external node-commonjs \"https\"","webpack://Ganache/external node-commonjs \"net\"","webpack://Ganache/external node-commonjs \"os\"","webpack://Ganache/external node-commonjs \"path\"","webpack://Ganache/external node-commonjs \"process\"","webpack://Ganache/external node-commonjs \"readline\"","webpack://Ganache/external node-commonjs \"stream\"","webpack://Ganache/external node-commonjs \"tls\"","webpack://Ganache/external node-commonjs \"tty\"","webpack://Ganache/external node-commonjs \"url\"","webpack://Ganache/external node-commonjs \"util\"","webpack://Ganache/external node-commonjs \"worker_threads\"","webpack://Ganache/external node-commonjs \"zlib\"","webpack://Ganache/external umd \"@trufflesuite/bigint-buffer\"","webpack://Ganache/external umd \"@trufflesuite/uws-js-unofficial\"","webpack://Ganache/external umd \"abstract-level\"","webpack://Ganache/external umd \"abstract-leveldown\"","webpack://Ganache/external umd \"bufferutil\"","webpack://Ganache/external umd \"emittery\"","webpack://Ganache/external umd \"keccak\"","webpack://Ganache/external umd \"leveldown\"","webpack://Ganache/external umd \"secp256k1\"","webpack://Ganache/external umd \"utf-8-validate\"","webpack://Ganache/webpack/bootstrap","webpack://Ganache/webpack/runtime/amd define","webpack://Ganache/webpack/runtime/amd options","webpack://Ganache/webpack/runtime/define property getters","webpack://Ganache/webpack/runtime/ensure chunk","webpack://Ganache/webpack/runtime/get javascript chunk filename","webpack://Ganache/webpack/runtime/hasOwnProperty shorthand","webpack://Ganache/webpack/runtime/make namespace object","webpack://Ganache/webpack/runtime/node module decorator","webpack://Ganache/webpack/runtime/require chunk loading","webpack://Ganache/webpack/startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@trufflesuite/bigint-buffer\"), require(\"keccak\"), require(\"emittery\"), require(\"secp256k1\"), require(\"abstract-leveldown\"), require(\"leveldown\"), require(\"abstract-level\"), (function webpackLoadOptionalExternalModule() { try { return require(\"bufferutil\"); } catch(e) {} }()), (function webpackLoadOptionalExternalModule() { try { return require(\"utf-8-validate\"); } catch(e) {} }()), require(\"@trufflesuite/uws-js-unofficial\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@trufflesuite/bigint-buffer\", \"keccak\", \"emittery\", \"secp256k1\", \"abstract-leveldown\", \"leveldown\", \"abstract-level\", \"bufferutil\", \"utf-8-validate\", \"@trufflesuite/uws-js-unofficial\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Ganache\"] = factory(require(\"@trufflesuite/bigint-buffer\"), require(\"keccak\"), require(\"emittery\"), require(\"secp256k1\"), require(\"abstract-leveldown\"), require(\"leveldown\"), require(\"abstract-level\"), (function webpackLoadOptionalExternalModule() { try { return require(\"bufferutil\"); } catch(e) {} }()), (function webpackLoadOptionalExternalModule() { try { return require(\"utf-8-validate\"); } catch(e) {} }()), require(\"@trufflesuite/uws-js-unofficial\"));\n\telse\n\t\troot[\"Ganache\"] = factory(root[\"@trufflesuite/bigint-buffer\"], root[\"keccak\"], root[\"emittery\"], root[\"secp256k1\"], root[\"abstract-leveldown\"], root[\"leveldown\"], root[\"abstract-level\"], root[\"bufferutil\"], root[\"utf-8-validate\"], root[\"@trufflesuite/uws-js-unofficial\"]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE__148__, __WEBPACK_EXTERNAL_MODULE__150__, __WEBPACK_EXTERNAL_MODULE__29__, __WEBPACK_EXTERNAL_MODULE__283__, __WEBPACK_EXTERNAL_MODULE__51__, __WEBPACK_EXTERNAL_MODULE__190__, __WEBPACK_EXTERNAL_MODULE__420__, __WEBPACK_EXTERNAL_MODULE__444__, __WEBPACK_EXTERNAL_MODULE__446__, __WEBPACK_EXTERNAL_MODULE__454__) {\nreturn ","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\t__webpack_require__.e(0);\n\t__webpack_require__.e(4);\n\t__webpack_require__.e(1);\n\treturn next();\n};","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 827;\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 820;\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 559;\nmodule.exports = webpackEmptyContext;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 821;\nmodule.exports = webpackEmptyContext;","import { TruffleColors } from \"@ganache/colors\";\nimport yargs from \"yargs\";\nimport { StartArgs, GanacheArgs } from \"./types\";\nimport chalk from \"chalk\";\nimport { EOL } from \"os\";\nimport { configureStartCommandForFlavor, loadFlavorFromArgs } from \"./flavors\";\nimport { center, highlight, wrapWidth } from \"./helpers\";\n\nconst NEED_HELP = \"Need more help? Reach out to the Truffle community at\";\nconst COMMUNITY_LINK = \"https://trfl.io/support\";\nconst OR_DOCS = \"or check out our docs at\";\nconst DOCS_LINK = \"https://ganache.dev\";\n\nexport const parseArgs = (version: string, rawArgs = process.argv.slice(2)) => {\n  if (rawArgs[0] === \"filecoin\" || rawArgs[0] === \"ethereum\") {\n    // we used to allow the comand `ganache filecoin` and `ganache ethereum`\n    // but this is weird and confusing since they aren't \"\"commands\", per say.\n    // so for backwards compatibility we'll still allow it for these two flavors\n    // only, all other flavors must use the `--flavor` option.\n    // replace the flavor arg with `--flavor <flavor>`\n    rawArgs[1] === rawArgs[0];\n    rawArgs.unshift(\"--flavor\");\n  }\n  const versionUsageOutputText = chalk`{hex(\"${\n    TruffleColors.porsche\n  }\").bold ${center(version, version.length)}}`;\n\n  // disable dot-notation because yargs just can't coerce args properly...\n  // ...on purpose! https://github.com/yargs/yargs/issues/1021#issuecomment-352324693\n  yargs\n    .parserConfiguration({ \"dot-notation\": false })\n    .strict()\n    .usage(versionUsageOutputText)\n    .epilogue(\n      versionUsageOutputText +\n        EOL +\n        EOL +\n        center(\n          chalk`{hex(\"${TruffleColors.porsche}\").bold ${NEED_HELP}} {hex(\"${TruffleColors.turquoise}\") ${COMMUNITY_LINK}}`,\n          (NEED_HELP + \" \" + COMMUNITY_LINK).length\n        ) +\n        EOL +\n        center(\n          chalk`{hex(\"${TruffleColors.porsche}\").bold ${OR_DOCS}} {hex(\"${TruffleColors.turquoise}\") ${DOCS_LINK}}`,\n          (OR_DOCS + \" \" + DOCS_LINK).length\n        )\n    );\n\n  const { flavor, options: flavorOptions } = loadFlavorFromArgs(rawArgs);\n  configureStartCommandForFlavor(yargs, flavor, flavorOptions);\n\n  yargs\n    .command(\n      \"instances\",\n      highlight(\n        \"Manage instances of Ganache running in detached mode.\" +\n          EOL +\n          \"(Ganache can be run in detached mode by providing the `--detach` flag)\"\n      ),\n      _yargs => {\n        _yargs\n          .command(\n            \"list\",\n            \"List instances running in detached mode\",\n            _ => {},\n            listArgs => {\n              listArgs.action = \"list\";\n            }\n          )\n          .command(\n            \"stop <name>\",\n            \"Stop the instance specified by <name>\",\n            stopArgs => {\n              stopArgs.positional(\"name\", { type: \"string\" });\n            },\n            stopArgs => {\n              stopArgs.action = \"stop\";\n            }\n          )\n          .version(false);\n      },\n      function () {\n        // this handler executes when `ganache instances` is called without a subcommand\n        const command = chalk`{hex(\"${TruffleColors.porsche}\") ganache instances}`;\n        console.log(`Missing subcommand for ${command}.`);\n        console.log();\n        yargs.showHelp();\n        yargs.exit(1, new Error(\"No subcommand provided\"));\n      }\n    )\n    .showHelpOnFail(false)\n    .alias(\"help\", \"?\")\n    .wrap(wrapWidth)\n    .version(version);\n\n  const parsedArgs = yargs.parse(rawArgs);\n  let finalArgs: GanacheArgs;\n  if (parsedArgs.action === \"stop\") {\n    finalArgs = {\n      action: \"stop\",\n      name: parsedArgs.name as string\n    };\n  } else if (parsedArgs.action === \"list\") {\n    finalArgs = { action: \"list\" };\n  } else if (\n    parsedArgs.action === \"start\" ||\n    parsedArgs.action === \"start-detached\"\n  ) {\n    const action = parsedArgs.action;\n    const flavor = (parsedArgs.flavor || \"ethereum\") as string | \"ethereum\";\n    finalArgs = {\n      flavor,\n      action,\n      ...(expandArgs(parsedArgs) as Omit<StartArgs<any>, \"flavor\" | \"action\">)\n    };\n  } else {\n    throw new Error(`Unknown action: ${parsedArgs.action}`);\n  }\n\n  return finalArgs;\n};\n\n/**\n * Expands the arguments into an object including only namespaced keys from the\n * `args` argument.\n * @param  {object} args to be expanded\n * @returns {object} with the expanded arguments\n */\nexport function expandArgs(args: object): object {\n  const namespacedArgs = {};\n\n  for (const key in args) {\n    // ignore keys that are kebab-cased - they will be duplicated as camelCase\n    if (key.indexOf(\"-\") === -1) {\n      // split on the first \".\"\n      const [namespace, option] = key.split(/\\.(.+)/);\n      // only copy namespaced/group keys, and ignore keys with kebab cases\n      if (option) {\n        if (!namespacedArgs[namespace]) {\n          namespacedArgs[namespace] = {};\n        }\n        namespacedArgs[namespace][option] = args[key];\n      }\n    }\n  }\n\n  return namespacedArgs;\n}\n","import { fork } from \"child_process\";\nimport createInstanceName from \"./process-name\";\nimport envPaths from \"env-paths\";\nimport psList, { ProcessDescriptor } from \"@trufflesuite/ps-list\";\nimport { Dirent, promises as fsPromises } from \"fs\";\n// this awkward import is required to support node 12\nconst { readFile, mkdir, readdir, rmdir, writeFile, unlink } = fsPromises;\nimport path from \"path\";\nimport { CliSettings } from \"@ganache/flavor\";\n\nexport type DetachedInstance = {\n  name: string;\n  pid: number;\n  startTime: number;\n  host: string;\n  port: number;\n  flavor: \"ethereum\" | string;\n  cmd: string;\n  version: string;\n};\n\nconst FILE_ENCODING = \"utf8\";\nconst START_ERROR =\n  \"An error occurred spawning a detached instance of Ganache:\";\nconst dataPath = envPaths(`Ganache/instances`, { suffix: \"\" }).data;\n\nfunction getInstanceFilePath(instanceName: string): string {\n  return path.join(dataPath, `${instanceName}.json`);\n}\n\n/**\n * Notify that the detached instance has started and is ready to receive requests.\n */\nexport function notifyDetachedInstanceReady(cliSettings: CliSettings) {\n  // in \"detach\" mode, the parent will wait until the port is\n  // received before disconnecting from the child process.\n  process.send(cliSettings);\n}\n\n/**\n * Attempt to find and remove the instance file for a detached instance.\n * @param  {string} instanceName the name of the instance to be removed\n * @returns boolean indicating whether the instance file was cleaned up successfully\n */\nexport async function removeDetachedInstanceFile(\n  instanceName: string\n): Promise<boolean> {\n  const instanceFilename = getInstanceFilePath(instanceName);\n  try {\n    await unlink(instanceFilename);\n    return true;\n  } catch {}\n  return false;\n}\n\n/**\n * Attempts to stop a detached instance with the specified instance name by\n * sending a SIGTERM signal. Returns a boolean indicating whether the process\n * was found. If the PID is identified, but the process is not found, any\n * corresponding instance file will be removed.\n *\n * Note: This does not guarantee that the instance actually stops.\n * @param  {string} instanceName\n * @returns boolean indicating whether the instance was found.\n */\nexport async function stopDetachedInstance(\n  instanceName: string\n): Promise<boolean> {\n  try {\n    // getDetachedInstanceByName() throws if the instance file is not found or\n    // cannot be parsed\n    const instance = await getDetachedInstanceByName(instanceName);\n\n    // process.kill() throws if the process was not found (or was a group\n    // process in Windows)\n    process.kill(instance.pid, \"SIGTERM\");\n  } catch (err) {\n    return false;\n  } finally {\n    await removeDetachedInstanceFile(instanceName);\n  }\n  return true;\n}\n\n/**\n * Start an instance of Ganache in detached mode.\n * @param  {string[]} argv arguments to be passed to the new instance.\n * @returns {Promise<DetachedInstance>} resolves to the DetachedInstance once it\n * is started and ready to receive requests.\n */\nexport async function startDetachedInstance(\n  argv: string[],\n  instanceInfo: {\n    flavor?: \"ethereum\" | string;\n  },\n  version: string\n): Promise<DetachedInstance> {\n  const [bin, module, ...args] = argv;\n\n  // append `--no-detach` argument to cancel out --detach and aliases (must be\n  // the last argument). See test \"is false, when proceeded with --no-detach\" in\n  // args.test.ts\n  const childArgs = [...args, \"--no-detach\"];\n\n  const child = fork(module, childArgs, {\n    stdio: [\"ignore\", \"ignore\", \"pipe\", \"ipc\"],\n    detached: true\n  });\n\n  // Any messages output to stderr by the child process (before the `ready`\n  // event is emitted) will be streamed to stderr on the parent.\n  child.stderr.pipe(process.stderr);\n\n  // Wait for the child process to send its port, which indicates that the\n  // Ganache server has started and is ready to receive RPC requests. It signals\n  // by sending the port number to which it was bound back to us; this is needed\n  // because Ganache may bind to a random port if the user specified port 0.\n  // It sends both `port` and `host` as a CliSettings, since host could\n  // theoretically have a variable default (in the case of plugins), so we can't\n  // just grab a `hostOptionObj.default(state)` host and use it here, as it\n  // could differ from the actual host.\n  const { port, host } = await new Promise<CliSettings>((resolve, reject) => {\n    child.once(\"message\", resolve);\n\n    child.on(\"error\", err => {\n      // This only happens if there's an error starting the child process, not\n      // if Ganache throws within the child process.\n      console.error(`${START_ERROR}\\n${err.message}`);\n      process.exitCode = 1;\n      reject(err);\n    });\n\n    child.on(\"exit\", (code: number) => {\n      // This shouldn't happen, so ensure that we surface a non-zero exit code.\n      process.exitCode = code === 0 ? 1 : code;\n      reject(\n        new Error(\n          `${START_ERROR}\\nThe detached instance exited with error code: ${code}`\n        )\n      );\n    });\n  });\n\n  // destroy the ReadableStream exposed by the child process, to allow the\n  // parent to exit gracefully.\n  child.stderr.destroy();\n  child.unref();\n  child.disconnect();\n\n  const flavor = instanceInfo.flavor;\n  const cmd =\n    process.platform === \"win32\"\n      ? path.basename(process.execPath)\n      : [process.execPath, ...process.execArgv, module, ...childArgs].join(\" \");\n  const pid = child.pid;\n  const startTime = Date.now();\n\n  const instance: DetachedInstance = {\n    startTime,\n    pid,\n    name: createInstanceName(),\n    host,\n    port,\n    flavor,\n    cmd,\n    version\n  };\n\n  while (true) {\n    const instanceFilename = getInstanceFilePath(instance.name);\n    try {\n      await writeFile(instanceFilename, JSON.stringify(instance), {\n        // wx means \"Open file for writing, but fail if the path exists\". see\n        // https://nodejs.org/api/fs.html#file-system-flags\n        flag: \"wx\",\n        encoding: FILE_ENCODING\n      });\n      break;\n    } catch (err) {\n      switch ((err as NodeJS.ErrnoException).code) {\n        case \"EEXIST\":\n          // an instance already exists with this name\n          instance.name = createInstanceName();\n          break;\n        case \"ENOENT\":\n          // we don't check whether the folder exists before writing, as that's\n          // a very uncommon case. Catching the exception and subsequently\n          // creating the directory is faster in the majority of cases.\n          await mkdir(dataPath, { recursive: true });\n          break;\n        default:\n          throw err;\n      }\n    }\n  }\n\n  return instance;\n}\n\n/**\n * Fetch all instance of Ganache running in detached mode. Cleans up any\n * instance files for processes that are no longer running.\n * @returns {Promise<DetachedInstance[]>} resolves with an array of instances\n */\nexport async function getDetachedInstances(): Promise<DetachedInstance[]> {\n  let dirEntries: Dirent[];\n  let processes: ProcessDescriptor[];\n  let someInstancesFailed = false;\n\n  try {\n    [dirEntries, processes] = await Promise.all([\n      readdir(dataPath, { withFileTypes: true }),\n      psList()\n    ]);\n  } catch (err) {\n    if ((err as NodeJS.ErrnoException).code !== \"ENOENT\") {\n      throw err;\n    }\n    // instances directory does not (yet) exist, so there cannot be any instances\n    return [];\n  }\n  const instances: DetachedInstance[] = [];\n\n  const loadingInstancesInfos = dirEntries.map(async dirEntry => {\n    const filename = dirEntry.name;\n    const { name: instanceName, ext } = path.parse(filename);\n\n    let failureReason: string;\n\n    if (ext !== \".json\") {\n      failureReason = `\"${filename}\" does not have a .json extension`;\n    } else {\n      let instance: DetachedInstance;\n      try {\n        // getDetachedInstanceByName() throws if the instance file is not found or\n        // cannot be parsed\n        instance = await getDetachedInstanceByName(instanceName);\n      } catch (err: any) {\n        failureReason = err.message;\n      }\n      if (instance) {\n        const matchingProcess = processes.find(p => p.pid === instance.pid);\n        if (!matchingProcess) {\n          failureReason = `Process with PID ${instance.pid} could not be found`;\n        } else if (matchingProcess.cmd !== instance.cmd) {\n          failureReason = `Process with PID ${instance.pid} does not match ${instanceName}`;\n        } else {\n          instances.push(instance);\n        }\n      }\n    }\n\n    if (failureReason !== undefined) {\n      someInstancesFailed = true;\n      const fullPath = path.join(dataPath, filename);\n      let resolution: string;\n      if (dirEntry.isDirectory()) {\n        const reason = `\"${filename}\" is a directory`;\n        try {\n          await rmdir(fullPath, { recursive: true });\n          failureReason = reason;\n        } catch {\n          resolution = `\"${filename}\" could not be removed`;\n        }\n      } else {\n        try {\n          await unlink(fullPath);\n        } catch {\n          resolution = `\"${filename}\" could not be removed`;\n        }\n      }\n\n      console.warn(\n        `Failed to load instance data. ${failureReason}. ${\n          resolution || `\"${filename}\" has been removed`\n        }.`\n      );\n    }\n  });\n\n  await Promise.all(loadingInstancesInfos);\n\n  if (someInstancesFailed) {\n    console.warn(\n      \"If this keeps happening, please open an issue at https://github.com/trufflesuite/ganache/issues/new\\n\"\n    );\n  }\n\n  return instances;\n}\n\n/**\n * Attempts to load data for the instance specified by instanceName. Throws if\n * the instance file is not found or cannot be parsed\n * @param  {string} instanceName\n */\nasync function getDetachedInstanceByName(\n  instanceName: string\n): Promise<DetachedInstance> {\n  const filepath = getInstanceFilePath(instanceName);\n  const content = await readFile(filepath, FILE_ENCODING);\n  return JSON.parse(content) as DetachedInstance;\n}\n\n// adapted from https://github.com/30-seconds/30-seconds-of-code/blob/master/snippets/formatDuration.md\n// under CC-BY-4.0 License https://creativecommons.org/licenses/by/4.0/\nexport function formatUptime(ms: number) {\n  if (ms > -1000 && ms < 1000) return \"Just started\";\n\n  const isFuture = ms < 0;\n  ms = Math.abs(ms);\n\n  const time = {\n    d: Math.floor(ms / 86400000),\n    h: Math.floor(ms / 3600000) % 24,\n    m: Math.floor(ms / 60000) % 60,\n    s: Math.floor(ms / 1000) % 60\n  };\n  const duration = Object.entries(time)\n    .filter(val => val[1] !== 0)\n    .map(([key, val]) => `${val}${key}`)\n    .join(\" \");\n\n  return isFuture ? `In ${duration}` : duration;\n}\n","import type { AnyFlavor } from \"@ganache/flavor\";\nimport {\n  cliDefaults,\n  load,\n  OptionsConfig,\n  serverDefaults\n} from \"@ganache/flavor\";\nimport chalk from \"chalk\";\nimport { Argv } from \"yargs\";\nimport { applyDefaults } from \"./helpers\";\n\nexport function loadFlavorFromArgs(args: string[]): AnyFlavor {\n  // the next entry after `--flavor` is treated as a flavor name, if it isn't a\n  // valid npm package we'll throw an error via `load` or\n  const flavorArgIndex = args.indexOf(\"--flavor\") + 1;\n  if (flavorArgIndex > 0) {\n    const flavor = args[flavorArgIndex];\n    if (flavor) {\n      if (flavor !== \"ethereum\") {\n        // load flavor plugin:\n        return load(flavor === \"filecoin\" ? \"@ganache/filecoin\" : flavor);\n      }\n    } else {\n      throw new Error(\"No flavor specified after `--flavor` flag.\");\n    }\n  }\n\n  // fallback to ethereum\n  return require(\"@ganache/ethereum\").default;\n}\n\nfunction addFlavorFlag(yargs: Argv<{}>) {\n  // Usage: `ganache --flavor [string]`\n  yargs.option(\"flavor\", {\n    type: \"string\",\n    description: chalk`Load an installed npm package as a Ganache flavor, e.g., {bold ganache --flavor @ganache/filecoin}.`\n  });\n}\n\nfunction addDetachFlag(yargs: Argv<{}>) {\n  yargs.option(\"detach\", {\n    type: \"boolean\",\n    description: `Run Ganache in detached (daemon) mode.\nSee \\`ganache instances --help\\` for information on managing detached instances.`,\n    alias: [\"D\", \"😈\"]\n  });\n}\n\nexport function configureStartCommandForFlavor(\n  yargs: Argv<{}>,\n  flavor: string,\n  options: {\n    provider?: OptionsConfig<any>;\n    server?: OptionsConfig<any>;\n    cli?: OptionsConfig<any>;\n  }\n) {\n  // Usage: `ganache`\n  // If the user has specified a --flavor, we use this command's `help` option\n  // to show it.\n  yargs.command(\n    [\"$0\"],\n    chalk`Use the {bold ${flavor}} flavor of Ganache`,\n    args => {\n      // flavor defaults must be merged onto the ganache defaults, in order to\n      // support overriding ganache defaults\n      const combinedCliOptions = {\n        ...cliDefaults,\n        ...options?.cli?.defaults\n      };\n      const combinedServerOptions = {\n        ...serverDefaults,\n        ...options?.server?.defaults\n      };\n\n      if (options && options.provider) {\n        applyDefaults(options.provider.defaults, args);\n      }\n\n      applyDefaults(combinedCliOptions, args);\n      applyDefaults(combinedServerOptions, args);\n\n      addFlavorFlag(args);\n      addDetachFlag(args);\n    },\n    parsed => (parsed.action = parsed.detach ? \"start-detached\" : \"start\")\n  );\n}\n","import { marked } from \"marked\";\nimport TerminalRenderer from \"marked-terminal\";\nimport chalk from \"chalk\";\nimport yargs, { Options } from \"yargs\";\nimport {\n  Base,\n  Defaults,\n  Definitions,\n  YargsPrimitiveCliTypeStrings\n} from \"@ganache/options\";\nimport { EOL } from \"os\";\nimport { TruffleColors } from \"@ganache/colors\";\n\nmarked.setOptions({\n  renderer: new TerminalRenderer({\n    codespan: chalk.hex(TruffleColors.porsche),\n    // Disable `unescape` since doesn't work for everything (we just do it ourselves)\n    unescape: false\n  })\n});\n\nexport const wrapWidth = Math.min(120, yargs.terminalWidth());\n\nconst addAliases = (args: yargs.Argv<{}>, aliases: string[], key: string) => {\n  const options = { hidden: true, alias: key };\n  return aliases.reduce((args, a) => args.option(a, options), args);\n};\n\nexport function applyDefaults<D extends Defaults<any>>(\n  defaults: D,\n  args: yargs.Argv<{}>\n) {\n  for (const category in defaults) {\n    type GroupType = `${Capitalize<typeof category>}:`;\n    const group = `${category[0].toUpperCase()}${category.slice(\n      1\n    )}:` as GroupType;\n    const categoryObj = defaults[\n      category\n    ] as unknown as Definitions<Base.Config>;\n    const state = {};\n    for (const option in categoryObj) {\n      const optionObj = categoryObj[option];\n      addOption(state, category, group, option, optionObj, args);\n    }\n  }\n}\n\nfunction unescapeEntities(html: string) {\n  return html\n    .replace(/&amp;/g, \"&\")\n    .replace(/&lt;/g, \"<\")\n    .replace(/&gt;/g, \">\")\n    .replace(/&quot;/g, '\"')\n    .replace(/&#39;/g, \"'\")\n    .replace(/\\*\\#COLON\\|\\*/g, \":\");\n}\nexport const highlight = (t: string) => unescapeEntities(marked.parseInline(t));\nexport const center = (str: string, length: number) =>\n  \" \".repeat(Math.max(0, Math.floor((wrapWidth - length) / 2))) + str;\n\nfunction addOption(\n  state: any,\n  category: string,\n  group: string,\n  option: string,\n  optionObj: Definitions<Base.Config>[string],\n  argv: yargs.Argv\n) {\n  if (optionObj.disableInCLI !== true) {\n    const shortHand = [];\n    const legacyAliases = [];\n\n    let description = highlight(optionObj.cliDescription || \"\");\n    if (optionObj.cliAliases) {\n      optionObj.cliAliases.forEach(alias => {\n        if (alias.length === 1) shortHand.push(alias);\n        else legacyAliases.push(alias);\n      });\n      description = chalk`${description}${EOL}{dim deprecated aliases: ${legacyAliases\n        .map(a => `--${a}`)\n        .join(\", \")}}`;\n    }\n\n    const generateDefaultDescription = () => {\n      // default sometimes requires a config, so we supply one\n      return (state[option] = optionObj.default\n        ? optionObj.default(state).toString()\n        : undefined);\n    };\n    const defaultDescription =\n      \"defaultDescription\" in optionObj\n        ? optionObj.defaultDescription\n        : generateDefaultDescription();\n\n    // we need to specify the type of each array so yargs properly casts\n    // the types held within each array\n    const { cliType } = optionObj;\n    const array = cliType && cliType.startsWith(\"array:\"); // e.g. array:string or array:number\n    const type = (\n      array\n        ? cliType.slice(6) // remove the \"array:\" part\n        : cliType\n    ) as YargsPrimitiveCliTypeStrings;\n\n    const options: Options = {\n      group,\n      description,\n      alias: shortHand,\n      defaultDescription,\n      array,\n      type,\n      choices: optionObj.cliChoices,\n      coerce: optionObj.cliCoerce,\n      implies: optionObj.implies\n    };\n\n    const key = `${category}.${option}`;\n\n    // First, create *hidden* deprecated aliases...\n    argv = addAliases(argv, legacyAliases, key);\n\n    // and *then* create the main option, as options added later take precedence\n    // example: `-d --wallet.seed 123` is invalid (mutally exclusive). If aliases are defined _after_\n    // the main option definition the error message will be `Arguments deterministic and wallet.seed are mutually exclusive`\n    // when it should be `Arguments wallet.deterministic and wallet.seed are mutually exclusive`\n    argv = argv.option(key, options);\n  }\n}\n","function pick(source: string[]) {\n  const partIndex = Math.floor(Math.random() * source.length);\n  return source[partIndex];\n}\n/**\n * Generates a random name to assign to an instance of Ganache. The name is\n * generated from an adjective, a flavor and a type of desert, in the form of\n * `<adjective>_<flavor>_<type>`, eg., `salted_caramel_ganache`.\n */\nexport default function createInstanceName() {\n  const name = `${pick(adjectives)}_${pick(flavors)}_${pick(kinds)}`;\n  return name;\n}\n\nconst adjectives = [\n  \"baked\",\n  \"candied\",\n  \"deepfried\",\n  \"frozen\",\n  \"hot\",\n  \"molten\",\n  \"pureed\",\n  \"salted\",\n  \"spiced\",\n  \"sticky\"\n];\nconst flavors = [\n  \"almond\",\n  \"apple\",\n  \"banana\",\n  \"blackforest\",\n  \"caramel\",\n  \"cherry\",\n  \"chocolate\",\n  \"cinnamon\",\n  \"coconut\",\n  \"coffee\",\n  \"cream\",\n  \"custard\",\n  \"fruit\",\n  \"ginger\",\n  \"gingerbread\",\n  \"jelly\",\n  \"lemon\",\n  \"lime\",\n  \"milk\",\n  \"nut\",\n  \"orange\",\n  \"peanut\",\n  \"plum\",\n  \"poppyseed\",\n  \"rhubarb\",\n  \"strawberry\",\n  \"sugar\",\n  \"tiramisu\"\n];\nconst kinds = [\n  \"bar\",\n  \"biscuit\",\n  \"brownie\",\n  \"cake\",\n  \"cheesecake\",\n  \"cookie\",\n  \"crumble\",\n  \"cupcake\",\n  \"doughnut\",\n  \"drizzle\",\n  \"dumpling\",\n  \"friand\",\n  \"ganache\",\n  \"loaf\",\n  \"macaroon\",\n  \"mousse\",\n  \"muffin\",\n  \"pastry\",\n  \"pie\",\n  \"pudding\",\n  \"sponge\",\n  \"strudel\",\n  \"tart\",\n  \"torte\",\n  \"trifle\",\n  \"truffle\",\n  \"waffle\"\n];\n","\nimport type Readline from \"readline\";\nimport Ganache, { ServerStatus } from \"@ganache/core\";\nimport { parseArgs } from \"./args\";\nimport type { AnyFlavor } from \"@ganache/flavor\";\nimport { load, CliOptionsConfig } from \"@ganache/flavor\";\nimport {\n  notifyDetachedInstanceReady,\n  stopDetachedInstance,\n  startDetachedInstance,\n  getDetachedInstances,\n  formatUptime\n} from \"./detach\";\nimport { TruffleColors } from \"@ganache/colors\";\nimport Table from \"cli-table\";\nimport chalk from \"chalk\";\n\nconst porscheColor = chalk.hex(TruffleColors.porsche);\n\nconst logAndForceExit = (messages: any[], exitCode = 0) => {\n  // https://nodejs.org/api/process.html#process_process_exit_code\n  // writes to process.stdout in Node.js are sometimes asynchronous and may occur over\n  // multiple ticks of the Node.js event loop. Calling process.exit(), however, forces\n  // the process to exit before those additional writes to stdout can be performed.\n  // se we set stdout to block in order to successfully log before exiting\n  if ((process.stdout as any)._handle) {\n    (process.stdout as any)._handle.setBlocking(true);\n  }\n  try {\n    messages.forEach(message => console.log(message));\n  } catch (e) {\n    console.log(e);\n  }\n\n  // force the process to exit\n  process.exit(exitCode);\n};\n\nconst version = process.env.VERSION || \"DEV\";\nconst cliVersion = process.env.CLI_VERSION || \"DEV\";\nconst coreVersion = process.env.CORE_VERSION || \"DEV\";\n\nconst detailedVersion = `ganache v${version} (@ganache/cli: ${cliVersion}, @ganache/core: ${coreVersion})`;\n\nconst argv = parseArgs(detailedVersion);\n\nif (argv.action === \"start\") {\n  const flavorName = argv.flavor;\n\n  let { server: cliSettings } = CliOptionsConfig.normalize(argv);\n\n  let flavor: AnyFlavor;\n  if (flavorName === \"ethereum\") {\n    flavor = require(\"@ganache/ethereum\").default;\n  } else {\n    flavor = load(flavorName);\n\n    // if the flavor handler has a cli section, merge it with our cli settings\n    // as it might have a section for overriding the port and the host\n    if (flavor.options.cli) {\n      Object.assign(cliSettings, flavor.options.cli.normalize(argv));\n    }\n  }\n\n  console.log(detailedVersion);\n\n  let server: ReturnType<typeof Ganache.server>;\n\n  try {\n    server = Ganache.server(argv);\n  } catch (error: any) {\n    console.error(error.message);\n    process.exit(1);\n  }\n\n  let started = false;\n  process.on(\"uncaughtException\", function (e) {\n    if (started) {\n      logAndForceExit([e], 1);\n    } else {\n      logAndForceExit([e.stack], 1);\n    }\n  });\n\n  let receivedShutdownSignal: boolean = false;\n  const handleSignal = async (signal: NodeJS.Signals) => {\n    console.log(`\\nReceived shutdown signal: ${signal}`);\n    closeHandler();\n  };\n  const closeHandler = async () => {\n    try {\n      // graceful shutdown\n      switch (server.status) {\n        case ServerStatus.opening:\n          receivedShutdownSignal = true;\n          console.log(\"Server is currently starting; waiting…\");\n          return;\n        case ServerStatus.open:\n          console.log(\"Shutting down…\");\n          await server.close();\n          console.log(\"Server has been shut down\");\n          break;\n      }\n      // don't just call `process.exit()` here, as we don't want to hide shutdown\n      // errors behind a forced shutdown. Note: `process.exitCode` doesn't do\n      // anything other than act as a place to anchor this comment :-)\n      process.exitCode = 0;\n    } catch (err: any) {\n      logAndForceExit(\n        [\n          \"\\nReceived an error while attempting to shut down the server: \",\n          err.stack || err\n        ],\n        1\n      );\n    }\n  };\n\n  // See http://stackoverflow.com/questions/10021373/what-is-the-windows-equivalent-of-process-onsigint-in-node-js\n  if (process.platform === \"win32\") {\n    const rl = (require(\"readline\") as typeof Readline)\n      .createInterface({\n        input: process.stdin,\n        output: process.stdout\n      })\n      .on(\"SIGINT\", () => {\n        // we must \"close\" the RL interface otherwise the process will think we\n        // are still listening\n        // https://nodejs.org/api/readline.html#readline_event_sigint\n        rl.close();\n        handleSignal(\"SIGINT\");\n      });\n  }\n\n  process.on(\"SIGINT\", handleSignal);\n  process.on(\"SIGTERM\", handleSignal);\n  process.on(\"SIGHUP\", handleSignal);\n\n  console.log(\"Starting RPC server\");\n  server.listen(cliSettings.port, cliSettings.host, async (err: Error) => {\n    if (err) {\n      console.error(err);\n      process.exitCode = 1;\n      return;\n    } else if (receivedShutdownSignal) {\n      closeHandler();\n      return;\n    }\n    started = true;\n\n    await flavor.ready({\n      provider: server.provider,\n      options: { server: cliSettings }\n    });\n\n    // if process.send is defined, this is a child_process (we assume a detached\n    // instance), so we need to notify that we are ready.\n    const isDetachedInstance = process.send !== undefined;\n    if (isDetachedInstance) {\n      notifyDetachedInstanceReady(cliSettings);\n    }\n  });\n} else if (argv.action === \"stop\") {\n  const instanceName = argv.name;\n\n  stopDetachedInstance(instanceName).then(instanceFound => {\n    if (instanceFound) {\n      console.log(\"Instance stopped\");\n    } else {\n      console.error(\"Instance not found\");\n    }\n  });\n} else if (argv.action === \"start-detached\") {\n  startDetachedInstance(process.argv, argv, version)\n    .then(instance => {\n      const highlightedName = porscheColor(instance.name);\n      // output only the instance name to allow users to capture stdout and use to\n      // programmatically stop the instance\n      console.log(highlightedName);\n    })\n    .catch(err => {\n      // the child process would have output its error to stdout, so no need to\n      // output anything more\n    });\n} else if (argv.action === \"list\") {\n  getDetachedInstances().then(instances => {\n    if (instances.length === 0) {\n      console.log(\n        `No detached instances found - try ${porscheColor(\n          \"ganache --detach\"\n        )} to start a detached instance`\n      );\n    } else {\n      const now = Date.now();\n\n      const table = new Table({\n        head: [\n          chalk.bold(\"PID\"),\n          chalk.bold(\"Name\"),\n          chalk.bold(\"Flavor\"),\n          chalk.bold(\"Version\"),\n          chalk.bold(\"Host\"),\n          chalk.bold(\"Uptime\")\n        ],\n        colAligns: [\"right\", \"left\", \"left\", \"left\", \"left\", \"right\"],\n        style: {\n          head: [\"white\", \"white\", \"white\", \"white\", \"white\", \"white\"]\n        }\n      });\n\n      instances.sort((a, b) => b.startTime - a.startTime);\n      for (let i = 0; i < instances.length; i++) {\n        const instance = instances[i];\n\n        const uptime = now - instance.startTime;\n        table.push([\n          instance.pid.toString(),\n          porscheColor(instance.name),\n          instance.flavor,\n          instance.version,\n          `${instance.host}:${instance.port.toString()}`,\n          formatUptime(uptime)\n        ]);\n      }\n\n      console.log(table.toString());\n    }\n  });\n}\n","\nimport \"@ganache/cli/src/cli\";\n","module.exports = require(\"assert\");","module.exports = require(\"buffer\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"process\");","module.exports = require(\"readline\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"worker_threads\");","module.exports = require(\"zlib\");","module.exports = __WEBPACK_EXTERNAL_MODULE__148__;","module.exports = __WEBPACK_EXTERNAL_MODULE__454__;","module.exports = __WEBPACK_EXTERNAL_MODULE__420__;","module.exports = __WEBPACK_EXTERNAL_MODULE__51__;","if(typeof __WEBPACK_EXTERNAL_MODULE__444__ === 'undefined') { var e = new Error(\"Cannot find module 'bufferutil'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__444__;","module.exports = __WEBPACK_EXTERNAL_MODULE__29__;","module.exports = __WEBPACK_EXTERNAL_MODULE__150__;","module.exports = __WEBPACK_EXTERNAL_MODULE__190__;","module.exports = __WEBPACK_EXTERNAL_MODULE__283__;","if(typeof __WEBPACK_EXTERNAL_MODULE__446__ === 'undefined') { var e = new Error(\"Cannot find module 'utf-8-validate'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__446__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [0,4,1], () => (__webpack_require__(__webpack_require__.s = 819)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"loaded\", otherwise not loaded yet\nvar installedChunks = {\n\t2: 1\n};\n\n__webpack_require__.O.require = (chunkId) => (installedChunks[chunkId]);\n\nvar installChunk = (chunk) => {\n\tvar moreModules = chunk.modules, chunkIds = chunk.ids, runtime = chunk.runtime;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tfor(var i = 0; i < chunkIds.length; i++)\n\t\tinstalledChunks[chunkIds[i]] = 1;\n\t__webpack_require__.O();\n};\n\n// require() chunk loading for javascript\n__webpack_require__.f.require = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\tinstallChunk(require(\"./\" + __webpack_require__.u(chunkId)));\n\t\t} else installedChunks[chunkId] = 1;\n\t}\n};\n\n// no external install chunk\n\n// no HMR\n\n// no HMR manifest","// module cache are used so entry inlining is disabled\n// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","require","webpackLoadOptionalExternalModule","e","define","amd","global","__WEBPACK_EXTERNAL_MODULE__148__","__WEBPACK_EXTERNAL_MODULE__150__","__WEBPACK_EXTERNAL_MODULE__29__","__WEBPACK_EXTERNAL_MODULE__283__","__WEBPACK_EXTERNAL_MODULE__51__","__WEBPACK_EXTERNAL_MODULE__190__","__WEBPACK_EXTERNAL_MODULE__420__","__WEBPACK_EXTERNAL_MODULE__444__","__WEBPACK_EXTERNAL_MODULE__446__","__WEBPACK_EXTERNAL_MODULE__454__","deferred","next","webpackEmptyContext","req","Error","code","keys","resolve","id","NEED_HELP","COMMUNITY_LINK","OR_DOCS","DOCS_LINK","expandArgs","args","namespacedArgs","key","indexOf","namespace","option","split","parseArgs","version","rawArgs","process","argv","slice","unshift","versionUsageOutputText","TruffleColors","porsche","center","length","parserConfiguration","strict","usage","epilogue","EOL","turquoise","flavor","options","flavorOptions","loadFlavorFromArgs","configureStartCommandForFlavor","command","highlight","_yargs","_","listArgs","action","stopArgs","positional","type","console","log","showHelp","exit","showHelpOnFail","alias","wrap","wrapWidth","parsedArgs","parse","finalArgs","name","readFile","mkdir","readdir","rmdir","writeFile","unlink","FILE_ENCODING","START_ERROR","dataPath","suffix","data","getInstanceFilePath","instanceName","join","async","removeDetachedInstanceFile","instanceFilename","getDetachedInstanceByName","filepath","content","JSON","notifyDetachedInstanceReady","cliSettings","send","stopDetachedInstance","instance","kill","pid","err","startDetachedInstance","instanceInfo","bin","childArgs","child","fork","stdio","detached","stderr","pipe","port","host","Promise","reject","once","on","error","message","exitCode","destroy","unref","disconnect","cmd","platform","basename","execPath","execArgv","startTime","Date","now","stringify","flag","encoding","recursive","getDetachedInstances","dirEntries","processes","someInstancesFailed","all","withFileTypes","instances","loadingInstancesInfos","map","dirEntry","filename","ext","failureReason","matchingProcess","find","p","push","undefined","fullPath","resolution","isDirectory","reason","warn","formatUptime","ms","isFuture","Math","abs","time","d","floor","h","m","s","duration","Object","entries","filter","val","flavorArgIndex","load","yargs","combinedCliOptions","cliDefaults","cli","defaults","combinedServerOptions","serverDefaults","server","provider","applyDefaults","addFlavorFlag","description","addDetachFlag","parsed","detach","marked","setOptions","renderer","codespan","hex","unescape","min","terminalWidth","category","group","toUpperCase","categoryObj","state","addOption","t","unescapeEntities","html","replace","parseInline","optionObj","disableInCLI","shortHand","legacyAliases","cliDescription","cliAliases","forEach","a","generateDefaultDescription","default","toString","defaultDescription","cliType","array","startsWith","choices","cliChoices","coerce","cliCoerce","implies","aliases","hidden","reduce","addAliases","str","repeat","max","pick","source","random","createInstanceName","adjectives","flavors","kinds","porscheColor","logAndForceExit","messages","stdout","_handle","setBlocking","detailedVersion","flavorName","CliOptionsConfig","normalize","assign","started","stack","receivedShutdownSignal","handleSignal","signal","closeHandler","status","ServerStatus","opening","open","close","rl","input","stdin","output","listen","ready","then","instanceFound","highlightedName","catch","table","head","bold","colAligns","style","sort","b","i","uptime","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","call","c","x","__webpack_exports__","O","amdD","amdO","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","definition","o","defineProperty","enumerable","get","f","chunkId","promises","u","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","nmd","paths","children","installedChunks","chunk","moreModules","modules","ids","runtime","installChunk"],"sourceRoot":""}