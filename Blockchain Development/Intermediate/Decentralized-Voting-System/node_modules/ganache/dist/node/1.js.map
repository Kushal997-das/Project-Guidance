{"version":3,"file":"1.js","mappings":"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,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,+BCvSJppE,OAAOc,eAAeE,EAAS,aAAc,CAAEK,OAAO,IACtDL,EAAQqjC,YAAcrjC,EAAQ+B,eAAiB/B,EAAQ2a,IAAM3a,EAAQ2V,cAAgB3V,EAAQ2zB,eAAiB3zB,EAAQ09B,YAAc19B,EAAQ0V,aAAe1V,EAAQkxD,aAAelxD,EAAQyzB,qBAAkB,EAC5MzzB,EAAQyzB,gBAAkBjpB,OAAOmC,YAAY,KAAKwY,KAAK,GACvDnlB,EAAQkxD,aAAelxD,EAAQyzB,gBAAgBniB,MAAM,EAAG,IACxDtR,EAAQ0V,aAAelL,OAAOmC,YAAY,GAC1C3M,EAAQ09B,YAAc19B,EAAQyzB,gBAAgBniB,MAAM,EAAG,GACvDtR,EAAQ2zB,eAAiB3zB,EAAQyzB,gBAAgBniB,MAAM,EAAG,IAC1DtR,EAAQ2V,cAAgB3V,EAAQyzB,gBAAgBniB,MAAM,EAAG,GACzDtR,EAAQ2a,IAAM,qBACd3a,EAAQ+B,eAAiB,IAAIqM,IAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,WAIlDpO,EAAQqjC,YAAc74B,OAAO1I,KAAK,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,wCCbjE,IAWIumE,EAXAnkE,EAA0BnF,MAAQA,KAAKmF,wBAA2B,SAAUN,EAAUC,EAAOxD,EAAOyD,EAAMC,GAC1G,GAAa,MAATD,EAAc,MAAM,IAAIE,UAAU,kCACtC,GAAa,MAATF,IAAiBC,EAAG,MAAM,IAAIC,UAAU,iDAC5C,GAAqB,mBAAVH,EAAuBD,IAAaC,IAAUE,GAAKF,EAAMI,IAAIL,GAAW,MAAM,IAAII,UAAU,2EACvG,MAAiB,MAATF,EAAeC,EAAE3D,KAAKwD,EAAUvD,GAAS0D,EAAIA,EAAE1D,MAAQA,EAAQwD,EAAMM,IAAIP,EAAUvD,GAASA,CACxG,EACIsD,EAA0B5E,MAAQA,KAAK4E,wBAA2B,SAAUC,EAAUC,EAAOC,EAAMC,GACnG,GAAa,MAATD,IAAiBC,EAAG,MAAM,IAAIC,UAAU,iDAC5C,GAAqB,mBAAVH,EAAuBD,IAAaC,IAAUE,GAAKF,EAAMI,IAAIL,GAAW,MAAM,IAAII,UAAU,4EACvG,MAAgB,MAATF,EAAeC,EAAa,MAATD,EAAeC,EAAE3D,KAAKwD,GAAYG,EAAIA,EAAE1D,MAAQwD,EAAMhE,IAAI+D,EACxF,EAEA5E,OAAOc,eAAeE,EAAS,aAAc,CAAEK,OAAO,IACtDL,EAAQwC,cAAW,EACnB,MAAM8lE,EAAY,EAAQ,KA2D1BtoE,EAAQwC,SA1DR,MAAMA,SAIFwC,YAAY3C,GACRgmE,EAA6BlkE,IAAIpF,UAAM,GACvCmF,EAAuBnF,KAAMspE,EAA8BhmE,EAAoB,IACnF,CAKA+1B,OACIz0B,EAAuB5E,KAAMspE,EAA8B,KAAKjwC,MACpE,CAIAtuB,MACInG,EAAuB5E,KAAMspE,EAA8B,KAAKv+D,KACpE,CAMAo+C,QAAQqgB,EAAKf,EAAY54D,GAGrB,GAA0B,iBAAf44D,KAUF,EAAIc,EAAUn+B,QAAQo+B,EAAIC,UAAWhB,IAA8B,gBAAfA,IACrD,EAAIc,EAAUn+B,QAAQo+B,EAAKf,IAAa,CAExC,MAAM9jC,EAAK6kC,EAAIf,GAGf,GAAkB,mBAAP9jC,EAMP,OAAO//B,EAAuB5E,KAAMspE,EAA8B,KAAK7G,MAAM99B,EAAI6kC,EAAK35D,EAE9F,CAEJ,MAAM,IAAI1I,MAAM,cAAc0zC,OAAO4tB,qCACzC,GAGJa,EAA+B,IAAIlgE,kCC1EnCnJ,OAAOc,eAAeE,EAAS,aAAc,CAAEK,OAAO,IACtDL,EAAQ2hD,wBAAqB,EA4D7B3hD,EAAQ2hD,mBAhCR,SAASA,mBAAmB/0B,EAAOwpB,EAAKqyB,GAEpC,IAAIlnB,EAAQ30B,EAAM5mB,OAGd0iE,EAAiB,EAGjB97D,EAAS,EACb,KAAO20C,EAAQ,GAAG,CAEd,MAAMonB,EAAQpnB,EAAQ,EAAK,EAC3B30C,GAAU+7D,EAELF,EAAKryB,EAAKxpB,EAAMhgB,KAYjB20C,EAAQonB,EACR/7D,EAAS87D,IAPTA,IAAmB97D,EACnB20C,GAASonB,EAAO,EAQxB,CACA,OAAOD,CACX,4BC5DA1pE,OAAOc,eAAeE,EAAS,aAAc,CAAEK,OAAO,IACtDL,EAAQmqC,YAAS,EACjB,MAAMy+B,EAAU,CAAC,EAAEzoE,eAAeC,KAAKqmB,KAAK,CAAC,EAAEtmB,gBAe/CH,EAAQmqC,OAHO,CAACiR,EAAKytB,IACH,MAAPztB,GAAewtB,EAAQxtB,EAAKytB,6BCfvC7pE,OAAOc,eAAeE,EAAS,aAAc,CAAEK,OAAO,IACtDL,EAAQikD,UAAO,EACf,MAAMA,KASFj/C,YAAY8jE,EAAMjlB,GACd9kD,KAAKiH,OAAS,EACdjH,KAAK6tB,MAAQ,GACb7tB,KAAK+pE,KAAOA,EACZ/pE,KAAK8kD,UAAYA,CACrB,CACA7zB,KAAKpD,GACD7tB,KAAK6tB,MAAQA,EACb,MAAM5mB,EAAUjH,KAAKiH,OAAS4mB,EAAM5mB,OACpC,IAAK,IAAIgQ,GAAMhQ,EAAS,EAAK,GAAK,EAAGgQ,GAAK,GACtCjX,KAAKgqE,KAAK/yD,IAAKhQ,EAEvB,CAWAs/C,QAAQ7wB,GACJ,MAAMzuB,EAASjH,KAAKiH,OACdq3C,EAAOr3C,EAAS,EAAK,EAC3B,IAAK,IAAIgQ,EAAIqnC,EAAKrnC,EAAIhQ,EAAQgQ,IAC1BjX,KAAK8kD,UAAU9kD,KAAK6tB,MAAM5W,GAAIye,GAElC,IAAK,IAAIze,EAAIqnC,EAAM,EAAGrnC,GAAK,GACvBjX,KAAK8kD,UAAU9kD,KAAK6tB,MAAM5W,GAAIye,GAC9B11B,KAAKgqE,KAAK/yD,IAAKhQ,EAEvB,CAKAqB,KAAKhH,GACD,MAAM2V,EAAIjX,KAAKiH,SACfjH,KAAK6tB,MAAM5W,GAAK3V,EAChBtB,KAAKiqE,GAAGhzD,EACZ,CACAjD,OACI,OAAOhU,KAAKiH,MAChB,CAIA6+C,OACI,OAAO9lD,KAAK6tB,MAAM,EACtB,CACAgM,QACI75B,KAAKiH,OAASjH,KAAK6tB,MAAM5mB,OAAS,CACtC,CAOA07D,QACI,MAAM17D,EAASjH,KAAKiH,OAEpB,GAAIA,GAAU,EAAG,CACb,GAAe,IAAXA,EACA,OACJ,MAAMijE,EAAUlqE,KAAK6tB,MAAM,GAG3B,OADA7tB,KAAK65B,QACEqwC,CACX,CAGA,MAAMr8C,EAAQ7tB,KAAK6tB,MACbg4B,EAAOh4B,EAAM,GACbs8C,EAAanqE,KAAKiH,OAASA,EAAS,EAK1C,OAHA4mB,EAAM,GAAKA,EAAMs8C,GAEjBnqE,KAAKgqE,KAAK,EAAGG,GACNtkB,CACX,CASAkB,YAAYqjB,GACRpqE,KAAK6tB,MAAM,GAAKu8C,EAChBpqE,KAAKgqE,KAAK,EAAGhqE,KAAKiH,OACtB,CAQA8V,QAAQ9F,EAAGmzD,GACPpqE,KAAK6tB,MAAM5W,GAAKmzD,EAChBpqE,KAAKqqE,IAAIpzD,EACb,CAMAqzD,OAAOrzD,GACH,MAAMkzD,IAAcnqE,KAAKiH,OACrBkjE,IAAclzD,IACdjX,KAAKuqE,KAAKtzD,EAAGkzD,GACRnqE,KAAKgqE,KAAK/yD,EAAGkzD,IACdnqE,KAAKiqE,GAAGhzD,GAGpB,CAQAmvC,aACI,MAAMv4B,EAAQ7tB,KAAK6tB,MAEnB,GAAe,IADA7tB,KAAKiH,OAIhB,OADAjH,KAAKiH,OAAS4mB,EAAM5mB,OAAS,GACtB,EAEX,MAAMkjE,IAAcnqE,KAAKiH,OAKzB,OAHA4mB,EAAM,GAAKA,EAAMs8C,GAEjBnqE,KAAKgqE,KAAK,EAAGG,IACN,CACX,CASAE,IAAIpzD,GACKjX,KAAKgqE,KAAK/yD,EAAGjX,KAAKiH,SACnBjH,KAAKiqE,GAAGhzD,EAEhB,CACAgzD,GAAGvF,GACC,MAAMqF,EAAO/pE,KAAK+pE,KAAKriD,KAAK,KAAM1nB,KAAK6tB,OACvC,IAAK,IAAI5W,EAAIA,GAAMytD,EAAI,GAAK,EAAK,EAAIztD,IAAMytD,GAAKqF,EAAKrF,EAAGztD,GAAIytD,EAAIztD,EAC5DjX,KAAKuqE,KAAKtzD,EAAGytD,EAErB,CACAsF,KAAKQ,EAAI7pC,GACL,MAAMopC,EAAO/pE,KAAK+pE,KAAKriD,KAAK,KAAM1nB,KAAK6tB,OACvC,IACS48C,EADLxzD,EAAIuzD,EACR,MAAcC,EAAK,EAAIxzD,EAAI,GAAK0pB,GAAI,CAChC,IAAI+jC,EAAI+F,EACJC,EAAKD,EAAK,EAId,GAHIC,EAAK/pC,GAAKopC,EAAKW,EAAID,KACnB/F,EAAIgG,IAEHX,EAAKrF,EAAGztD,GACT,MAEJjX,KAAKuqE,KAAKtzD,EAAGytD,GACbztD,EAAIytD,CACR,CACA,OAAOztD,EAAIuzD,CACf,CAMAD,KAAKtzD,EAAGytD,GACJ,MAAM72C,EAAQ7tB,KAAK6tB,MACbqiB,EAAQriB,EAAM5W,GACpB4W,EAAM5W,GAAK4W,EAAM62C,GACjB72C,EAAM62C,GAAKx0B,CACf,CAQA5/B,YAAYy0C,EAAMglB,EAAMjlB,GACpB,MAAM6lB,EAAO,IAAIzlB,KAAK6kB,EAAMjlB,GAG5B,OAFA6lB,EAAK98C,MAAQ,CAACk3B,GACd4lB,EAAK1jE,OAAS,EACP0jE,CACX,EAEJ1pE,EAAQikD,KAAOA,uCCtNf,IAAInlD,EAAmBC,MAAQA,KAAKD,kBAAqBE,OAAOC,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3B,IAAIG,EAAOP,OAAOQ,yBAAyBL,EAAGC,GACzCG,KAAS,QAASA,GAAQJ,EAAEM,WAAaF,EAAKG,UAAYH,EAAKI,gBAClEJ,EAAO,CAAEK,YAAY,EAAMC,IAAK,WAAa,OAAOV,EAAEC,EAAI,IAE5DJ,OAAOc,eAAeZ,EAAGG,EAAIE,EAChC,EAAI,SAAUL,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACb,GACGW,EAAgBhB,MAAQA,KAAKgB,cAAiB,SAASZ,EAAGa,GAC1D,IAAK,IAAIC,KAAKd,EAAa,YAANc,GAAoBjB,OAAOkB,UAAUC,eAAeC,KAAKJ,EAASC,IAAInB,EAAgBkB,EAASb,EAAGc,EAC3H,EACAjB,OAAOc,eAAeE,EAAS,aAAc,CAAEK,OAAO,IACtDN,EAAa,EAAQ,KAAuBC,GAC5CD,EAAa,EAAQ,KAAuBC,GAC5CD,EAAa,EAAQ,KAAeC,GACpCD,EAAa,EAAQ,KAAWC,GAChCD,EAAa,EAAQ,KAA0BC,GAC/CD,EAAa,EAAQ,KAAYC,GACjCD,EAAa,EAAQ,KAAcC,GACnCD,EAAa,EAAQ,KAAqBC,GAC1CD,EAAa,EAAQ,IAAgBC,GACrCD,EAAa,EAAQ,KAAoBC,GACzCD,EAAa,EAAQ,KAAaC,GAClCD,EAAa,EAAQ,KAA2BC,GAChDD,EAAa,EAAQ,KAA8BC,GACnDD,EAAa,EAAQ,KAAcC,GACnCD,EAAa,EAAQ,KAAgBC,qCC7BrC,IAAIU,EAAmB3B,MAAQA,KAAK2B,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIlB,WAAckB,EAAM,CAAE,QAAWA,EACxD,EACA3B,OAAOc,eAAeE,EAAS,aAAc,CAAEK,OAAO,IACtDL,EAAQ8R,YAAS,EACjB,MAAM63D,EAAWjpE,EAAgB,EAAQ,MAGnCkpE,GAAW,EAAID,EAASpoE,SAAS,aAcvCvB,EAAQ8R,OATR,SAASA,OAAO7H,GACZ2/D,EAASC,OAAOC,OAAO7/D,GACvB,MAAM0M,EAASizD,EAASC,OAAOE,QAAQ,IAKvC,OAHAH,EAASC,OAAOjzC,WAXP,KACI,KAYbgzC,EAASI,YAAa,EACfrzD,CACX,4BCrBA3X,OAAOc,eAAeE,EAAS,aAAc,CAAEK,OAAO,IACtDL,EAAQkqB,IAAMlqB,EAAQmqB,SAAM,EAM5BnqB,EAAQmqB,IADI,IAAI8/C,IAAYA,EAAQ/W,QAAO,CAACgX,EAAK1+D,IAAUA,EAAO0+D,EAAM1+D,EAAO0+D,IAO/ElqE,EAAQkqB,IADI,IAAI+/C,IAAYA,EAAQ/W,QAAO,CAACgX,EAAK1+D,IAAUA,EAAO0+D,EAAM1+D,EAAO0+D,sCCZ/E,IAAIxpE,EAAmB3B,MAAQA,KAAK2B,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIlB,WAAckB,EAAM,CAAE,QAAWA,EACxD,EACA3B,OAAOc,eAAeE,EAAS,aAAc,CAAEK,OAAO,IACtDL,EAAQmqE,2BAAwB,EAChC,MAAMje,EAAexrD,EAAgB,EAAQ,KA8C7CV,EAAQmqE,sBA7CR,MAAMA,sBAMFnlE,YAAY4rD,EAAM/sD,GACd,GAAoB,iBAAT+sD,QAAsC,IAAV/sD,EACnC9E,KAAK+1D,IAAM5I,EAAa3qD,QAAQmtD,KAAKkC,EAAM,CAAE/sD,OAAO,SAEnD,GAAqB,iBAAVA,EAIZ9E,KAAK+1D,IAAM5I,EAAa3qD,QAAQmtD,KAAK,GAAI,CAAE7qD,cAE1C,CACD,MAAMumE,EAAU7oD,KAAK4tC,SAAWj+B,KAAK4C,MACrC/0B,KAAK+1D,IAAM5I,EAAa3qD,QAAQmtD,KAAK,GAAG0b,IAAW,CAAEvmE,OAAO,GAChE,CACJ,CACAwmE,UAAUC,EAAsB,GAG5B,OAA4B,IAAxBA,EACOvrE,KAAK+1D,MAAQwV,EAGbvrE,KAAK+1D,KAEpB,CACAyV,WAAWvkE,EAAQskE,EAAsB,GACrC,MAAML,EAAU,GAChB,IAAK,IAAIj0D,EAAI,EAAGA,EAAIhQ,EAAQgQ,IACxBi0D,EAAQ5iE,KAAKtI,KAAKsrE,UAAUC,IAEhC,OAAOL,CACX,CACAO,UAAUxkE,GACN,OAAOwE,OAAO1I,KAAK/C,KAAKwrE,WAAWvkE,EAAQ,KAC/C,CACAnC,QACI,OAAO9E,KAAK+1D,IAAIjxD,OACpB,mCCjDJ,IAWI4mE,EAA4BC,EAX5B/mE,EAA0B5E,MAAQA,KAAK4E,wBAA2B,SAAUC,EAAUC,EAAOC,EAAMC,GACnG,GAAa,MAATD,IAAiBC,EAAG,MAAM,IAAIC,UAAU,iDAC5C,GAAqB,mBAAVH,EAAuBD,IAAaC,IAAUE,GAAKF,EAAMI,IAAIL,GAAW,MAAM,IAAII,UAAU,4EACvG,MAAgB,MAATF,EAAeC,EAAa,MAATD,EAAeC,EAAE3D,KAAKwD,GAAYG,EAAIA,EAAE1D,MAAQwD,EAAMhE,IAAI+D,EACxF,EACIM,EAA0BnF,MAAQA,KAAKmF,wBAA2B,SAAUN,EAAUC,EAAOxD,EAAOyD,EAAMC,GAC1G,GAAa,MAATD,EAAc,MAAM,IAAIE,UAAU,kCACtC,GAAa,MAATF,IAAiBC,EAAG,MAAM,IAAIC,UAAU,iDAC5C,GAAqB,mBAAVH,EAAuBD,IAAaC,IAAUE,GAAKF,EAAMI,IAAIL,GAAW,MAAM,IAAII,UAAU,2EACvG,MAAiB,MAATF,EAAeC,EAAE3D,KAAKwD,EAAUvD,GAAS0D,EAAIA,EAAE1D,MAAQA,EAAQwD,EAAMM,IAAIP,EAAUvD,GAASA,CACxG,EAEArB,OAAOc,eAAeE,EAAS,aAAc,CAAEK,OAAO,IACtDL,EAAQsC,wBAAqB,EAC7B,MAAMuG,KAAO,OA+Gb7I,EAAQsC,mBA3GR,MAAMA,mBACEqwB,aACA,OAAOhvB,EAAuB5E,KAAM0rE,EAA4B,IACpE,CAMAzlE,YAAYwwB,GAIRz2B,KAAK8tB,QAAU,GAIf9tB,KAAK4rE,aAAe,EACpBF,EAA2BtmE,IAAIpF,MAAM,GAKrCA,KAAKwjB,MAAQ,KACTre,EAAuBnF,KAAM0rE,GAA4B,EAAM,IAAI,EAKvE1rE,KAAKkE,OAAS,KACViB,EAAuBnF,KAAM0rE,GAA4B,EAAO,KAChE9mE,EAAuB5E,KAAM2rE,EAA6B,KAAKtqE,KAAKrB,KAAK,EAE7E2rE,EAA4BvmE,IAAIpF,MAAM,KAGlC,MAAQA,KAAK4zB,QACT5zB,KAAK8tB,QAAQ7mB,OAAS,KACpBjH,KAAKy2B,OAASz2B,KAAK4rE,aAAe5rE,KAAKy2B,QAAQ,CACjD,MAAMiD,EAAU15B,KAAK8tB,QAAQ60C,QAC7B3iE,KAAK4rE,eACLlyC,EACKyvB,UAMAxgD,MAAMmB,MACNuhC,SAAQ,KACTrrC,KAAK4rE,eACLhnE,EAAuB5E,KAAM2rE,EAA6B,KAAKtqE,KAAKrB,KAAK,GAEjF,KAKJA,KAAKyiE,MAAQ,CAAC99B,EAAIknC,EAAcC,IACrB,IAAIxkE,SAAQ,CAACQ,EAASP,KAYzBvH,KAAK8tB,QAAQxlB,KAAK,CAAE6gD,QAVJhhD,UACZ,IACI,MAAM7G,EAAQgd,QAAQw8B,MAAMnW,EAAIknC,EAAcC,GAAiB,IAE/D,OADAhkE,EAAQ,CAAExG,UACHA,CAIX,CAFA,MAAOmH,GACHlB,EAAOkB,EACX,GAEyBlB,WAC7B3C,EAAuB5E,KAAM2rE,EAA6B,KAAKtqE,KAAKrB,KAAK,IAGjFA,KAAKy2B,MAAQA,CACjB,CAUA4C,OACIr5B,KAAKwjB,QACLxjB,KAAKkE,OAAS,KACV,MAAM,IAAIiD,MAAM,8DAA8D,EAElFnH,KAAKyiE,MAAQt6D,UACT,MAAM,IAAIhB,MAAM,mDAAmD,CAE3E,CAKA4D,MACI,KAAO/K,KAAK8tB,QAAQ7mB,OAAS,GACzBjH,KAAK8tB,QACA60C,QACAp7D,OAAO,IAAIJ,MAAM,oDAE9B,GAGJukE,EAA6B,IAAItiE,QAAWuiE,EAA8B,IAAIviE,0CC9H9E,IAAIzH,EAAmB3B,MAAQA,KAAK2B,iBAAoB,SAAUC,GAC9D,OAAQA,GAAOA,EAAIlB,WAAckB,EAAM,CAAE,QAAWA,EACxD,EACA3B,OAAOc,eAAeE,EAAS,aAAc,CAAEK,OAAO,IACtDL,EAAQk5D,aAAel5D,EAAQ+mB,YAAS,EACxC,MAAMixB,EAAct3C,EAAgB,EAAQ,KAC5C,SAASqmB,OAAO0xC,EAASlyC,GACrB,MAAM3P,EAAS,CACXkkD,UAAW,IAAIv2D,WAAW,IAC1Bs2D,MAAO,MAGX,GAAe,IADA7iB,EAAYz2C,QAAQupE,UAAUl0D,EAAQ6hD,EAASlyC,GAE1D,MAAM,IAAIrgB,MAAM,wEAEpB,MAAM,UAAE40D,EAAS,MAAED,GAAUjkD,EACvB3M,EAAS6wD,EAAU7wD,OAIzB,MAAO,CAAEmT,EAHC5S,OAAO1I,KAAKmI,EAAQ,EAAG,IAGrBpC,EAFF2C,OAAO1I,KAAKmI,EAAQ,GAAI,IAEnB6c,EADLwC,OAAOuxC,GAErB,CACA76D,EAAQ+mB,OAASA,OAMjB/mB,EAAQk5D,aALR,SAASA,aAAaT,EAASlyC,EAAYnK,GACvC,MAAM,EAAE0K,EAAC,EAAE1J,EAAC,EAAEvV,GAAMkf,OAAO0xC,EAASlyC,GAEpC,MAAO,CAAEnJ,IAAGvV,IAAGif,OADaxnB,IAAZ8c,EAAwB0K,EAAI,IAAMA,EAAI,IAAwB,GAAlBwC,OAAOlN,GAEvE,4BC3BApd,OAAOc,eAAeE,EAAS,aAAc,CAAEK,OAAO,IACtDL,EAAQ0W,kBAAe,EACvB,MAAMq0D,EAAa,WAabp+D,EAAcnC,OAAOmC,YAiK3B3M,EAAQ0W,aAHR,SAASA,aAAas0D,GAClB,OAAOA,EAAMD,EAtFjB,SAASE,cAAcD,GAMnB,IAAIt+D,EAKAqwC,EAAK9jC,OAAOqQ,OAAO0hD,IAAQ,KAC/B,MAAME,EAAQnuB,EACd,IAAInwC,EAAS,EAGb,GAAKmwC,KAAQ,EAAI,CACb,MAAMouB,EAAMpuB,EACZ,GAAKA,KAAQ,EAAI,CACb,MAAMquB,EAAOruB,GACRA,KAAQ,IACTrwC,EAAMC,EAAY,GAClBD,EAAI,GAAKqwC,EACTrwC,EAAI,GAAK0+D,EACT1+D,EAAI,GAAKy+D,EACTz+D,EAAI,GAAKw+D,EACTt+D,EAAS,IAGTF,EAAMC,EAAY,GAClBD,EAAI,GAAK0+D,EACT1+D,EAAI,GAAKy+D,EACTz+D,EAAI,GAAKw+D,EACTt+D,EAAS,EAEjB,MAEIF,EAAMC,EAAY,GAClBD,EAAI,GAAKy+D,EACTz+D,EAAI,GAAKw+D,EACTt+D,EAAS,CAEjB,MAEIF,EAAMC,EAAY,GAClBD,EAAI,GAAKw+D,EACTt+D,EAAS,EAGb,IAAIkwC,EAAKkuB,EAAMD,EACf,MAAMM,EAAMvuB,EACZ,GAAKA,KAAQ,EAAI,CACb,MAAMwuB,EAAMxuB,EACZ,GAAKA,KAAQ,EAAI,CACb,MAAMyuB,EAAMzuB,EACZpwC,EAAIE,EAAS,GAAKkwC,KAAQ,EAC1BpwC,EAAIE,EAAS,GAAK2+D,EAClB7+D,EAAIE,EAAS,GAAK0+D,EAClB5+D,EAAIE,GAAUy+D,CAClB,MAEI3+D,EAAIE,EAAS,GAAK,EAClBF,EAAIE,EAAS,GAAK,EAClBF,EAAIE,EAAS,GAAK0+D,EAClB5+D,EAAIE,GAAUy+D,CAEtB,MAEI3+D,EAAIE,EAAS,GAAK,EAClBF,EAAIE,EAAS,GAAK,EAClBF,EAAIE,EAAS,GAAK,EAClBF,EAAIE,GAAUy+D,EAElB,OAAO3+D,CACX,CAY8Bu+D,CAAcD,GAtJ5C,SAASQ,YAAYR,GACjB,IAAIt+D,EAIJ,MAAM2+D,EAAML,EAGZ,GAAKA,KAAS,EAAI,CAGd,MAAMS,EAAST,EAGf,GAAKA,KAAS,EAAI,CAGd,MAAMU,EAAQV,GACTA,KAAS,IAGVt+D,EAAMC,EAAY,GAGlBD,EAAI,GAAKs+D,EACTt+D,EAAI,GAAKg/D,EACTh/D,EAAI,GAAK++D,EACT/+D,EAAI,GAAK2+D,IAKT3+D,EAAMC,EAAY,GAClBD,EAAI,GAAKg/D,EACTh/D,EAAI,GAAK++D,EACT/+D,EAAI,GAAK2+D,EAEjB,MAII3+D,EAAMC,EAAY,GAClBD,EAAI,GAAK++D,EACT/+D,EAAI,GAAK2+D,CAEjB,MAII3+D,EAAMC,EAAY,GAClBD,EAAI,GAAK2+D,EAGb,OAAO3+D,CACX,CAgGmD8+D,CAAYR,EAC/D,4BC/KAhsE,OAAOc,eAAeE,EAAS,aAAc,CAAEK,OAAO,IACtDL,EAAQgxD,WAAQ,EAkBhBhxD,EAAQgxD,MATR,SAASA,MAAM1d,GACX,MAAqB,iBAAVA,GAA6C,mBAAhBA,EAAM0d,QAC1C1d,EAAM0d,SACC,EAKf","sources":["webpack://Ganache/../colors/lib/index.js","webpack://Ganache/../colors/lib/src/index.js","webpack://Ganache/../core/lib/index.js","webpack://Ganache/../core/lib/src/connector-loader.js","webpack://Ganache/../core/lib/src/server.js","webpack://Ganache/../core/lib/src/servers/http-server.js","webpack://Ganache/../core/lib/src/servers/utils/content-types.js","webpack://Ganache/../core/lib/src/servers/utils/fragment-generator.js","webpack://Ganache/../core/lib/src/servers/utils/http-response-codes.js","webpack://Ganache/../core/lib/src/servers/utils/websocket-close-codes.js","webpack://Ganache/../core/lib/src/servers/ws-server.js","webpack://Ganache/../ethereum/address/lib/index.js","webpack://Ganache/../ethereum/block/lib/index.js","webpack://Ganache/../ethereum/block/lib/src/block-params.js","webpack://Ganache/../ethereum/block/lib/src/block.js","webpack://Ganache/../ethereum/block/lib/src/helpers.js","webpack://Ganache/../ethereum/block/lib/src/runtime-block.js","webpack://Ganache/../ethereum/block/lib/src/serialize.js","webpack://Ganache/../ethereum/block/lib/src/snapshots.js","webpack://Ganache/../ethereum/console.log/lib/index.js","webpack://Ganache/../ethereum/console.log/lib/src/handlers.js","webpack://Ganache/../ethereum/console.log/lib/src/maybe-get-logs.js","webpack://Ganache/../ethereum/console.log/lib/src/signatures.js","webpack://Ganache/../ethereum/ethereum/lib/index.js","webpack://Ganache/../ethereum/ethereum/lib/src/api-types.js","webpack://Ganache/../ethereum/ethereum/lib/src/api.js","webpack://Ganache/../ethereum/ethereum/lib/src/blockchain.js","webpack://Ganache/../ethereum/ethereum/lib/src/connector.js","webpack://Ganache/../ethereum/ethereum/lib/src/data-managers/account-manager.js","webpack://Ganache/../ethereum/ethereum/lib/src/data-managers/block-manager.js","webpack://Ganache/../ethereum/ethereum/lib/src/data-managers/blocklog-manager.js","webpack://Ganache/../ethereum/ethereum/lib/src/data-managers/manager.js","webpack://Ganache/../ethereum/ethereum/lib/src/data-managers/transaction-manager.js","webpack://Ganache/../ethereum/ethereum/lib/src/data-managers/transaction-receipt-manager.js","webpack://Ganache/../ethereum/ethereum/lib/src/database.js","webpack://Ganache/../ethereum/ethereum/lib/src/forking/cache.js","webpack://Ganache/../ethereum/ethereum/lib/src/forking/deferred.js","webpack://Ganache/../ethereum/ethereum/lib/src/forking/fork.js","webpack://Ganache/../ethereum/ethereum/lib/src/forking/handlers/base-handler.js","webpack://Ganache/../ethereum/ethereum/lib/src/forking/handlers/http-handler.js","webpack://Ganache/../ethereum/ethereum/lib/src/forking/handlers/provider-handler.js","webpack://Ganache/../ethereum/ethereum/lib/src/forking/handlers/ws-handler.js","webpack://Ganache/../ethereum/ethereum/lib/src/forking/lexicographic-key-codec.js","webpack://Ganache/../ethereum/ethereum/lib/src/forking/persistent-cache/ancestry.js","webpack://Ganache/../ethereum/ethereum/lib/src/forking/persistent-cache/helpers.js","webpack://Ganache/../ethereum/ethereum/lib/src/forking/persistent-cache/persistent-cache.js","webpack://Ganache/../ethereum/ethereum/lib/src/forking/persistent-cache/tree.js","webpack://Ganache/../ethereum/ethereum/lib/src/forking/rate-limiter/limit-counter.js","webpack://Ganache/../ethereum/ethereum/lib/src/forking/rate-limiter/rate-limiter.js","webpack://Ganache/../ethereum/ethereum/lib/src/forking/state-manager.js","webpack://Ganache/../ethereum/ethereum/lib/src/forking/trie.js","webpack://Ganache/../ethereum/ethereum/lib/src/hdkey.js","webpack://Ganache/../ethereum/ethereum/lib/src/helpers/assert-arg-length.js","webpack://Ganache/../ethereum/ethereum/lib/src/helpers/bufferify.js","webpack://Ganache/../ethereum/ethereum/lib/src/helpers/common-helpers.js","webpack://Ganache/../ethereum/ethereum/lib/src/helpers/filter-parsing.js","webpack://Ganache/../ethereum/ethereum/lib/src/helpers/gas-estimator.js","webpack://Ganache/../ethereum/ethereum/lib/src/helpers/precompiles.js","webpack://Ganache/../ethereum/ethereum/lib/src/helpers/run-call.js","webpack://Ganache/../ethereum/ethereum/lib/src/helpers/storage-range-at.js","webpack://Ganache/../ethereum/ethereum/lib/src/helpers/trie.js","webpack://Ganache/../ethereum/ethereum/lib/src/miner/miner.js","webpack://Ganache/../ethereum/ethereum/lib/src/miner/replace-from-heap.js","webpack://Ganache/../ethereum/ethereum/lib/src/provider-events.js","webpack://Ganache/../ethereum/ethereum/lib/src/provider.js","webpack://Ganache/../ethereum/ethereum/lib/src/state-manager.js","webpack://Ganache/../ethereum/ethereum/lib/src/transaction-pool.js","webpack://Ganache/../ethereum/ethereum/lib/src/trie-db.js","webpack://Ganache/../ethereum/ethereum/lib/src/wallet.js","webpack://Ganache/../ethereum/options/lib/index.js","webpack://Ganache/../ethereum/options/lib/src/chain-options.js","webpack://Ganache/../ethereum/options/lib/src/database-options.js","webpack://Ganache/../ethereum/options/lib/src/fork-options.js","webpack://Ganache/../ethereum/options/lib/src/helpers.js","webpack://Ganache/../ethereum/options/lib/src/index.js","webpack://Ganache/../ethereum/options/lib/src/logging-options.js","webpack://Ganache/../ethereum/options/lib/src/miner-options.js","webpack://Ganache/../ethereum/options/lib/src/wallet-options.js","webpack://Ganache/../ethereum/transaction/lib/index.js","webpack://Ganache/../ethereum/transaction/lib/src/access-lists.js","webpack://Ganache/../ethereum/transaction/lib/src/base-transaction.js","webpack://Ganache/../ethereum/transaction/lib/src/eip1559-fee-market-transaction.js","webpack://Ganache/../ethereum/transaction/lib/src/eip2930-access-list-transaction.js","webpack://Ganache/../ethereum/transaction/lib/src/hardfork.js","webpack://Ganache/../ethereum/transaction/lib/src/legacy-transaction.js","webpack://Ganache/../ethereum/transaction/lib/src/params.js","webpack://Ganache/../ethereum/transaction/lib/src/raw.js","webpack://Ganache/../ethereum/transaction/lib/src/rpc-transaction.js","webpack://Ganache/../ethereum/transaction/lib/src/runtime-transaction.js","webpack://Ganache/../ethereum/transaction/lib/src/signing.js","webpack://Ganache/../ethereum/transaction/lib/src/transaction-factory.js","webpack://Ganache/../ethereum/transaction/lib/src/transaction-receipt.js","webpack://Ganache/../ethereum/transaction/lib/src/transaction-serialization.js","webpack://Ganache/../ethereum/transaction/lib/src/transaction-types.js","webpack://Ganache/../ethereum/transaction/lib/src/vm-transaction.js","webpack://Ganache/../ethereum/utils/lib/index.js","webpack://Ganache/../ethereum/utils/lib/src/errors/abort-error.js","webpack://Ganache/../ethereum/utils/lib/src/errors/call-error.js","webpack://Ganache/../ethereum/utils/lib/src/errors/coded-error.js","webpack://Ganache/../ethereum/utils/lib/src/errors/errors.js","webpack://Ganache/../ethereum/utils/lib/src/errors/runtime-error.js","webpack://Ganache/../ethereum/utils/lib/src/index.js","webpack://Ganache/../ethereum/utils/lib/src/things/account.js","webpack://Ganache/../ethereum/utils/lib/src/things/blocklogs.js","webpack://Ganache/../ethereum/utils/lib/src/things/tags.js","webpack://Ganache/../ethereum/utils/lib/src/things/trace-data.js","webpack://Ganache/../ethereum/utils/lib/src/things/trace-storage-map.js","webpack://Ganache/../ethereum/utils/lib/src/types/account-proof.js","webpack://Ganache/../ethereum/utils/lib/src/types/debug-storage.js","webpack://Ganache/../ethereum/utils/lib/src/types/extract-values-from-types.js","webpack://Ganache/../ethereum/utils/lib/src/types/fee-history.js","webpack://Ganache/../ethereum/utils/lib/src/types/filters.js","webpack://Ganache/../ethereum/utils/lib/src/types/hex-datatypes.js","webpack://Ganache/../ethereum/utils/lib/src/types/shh.js","webpack://Ganache/../ethereum/utils/lib/src/types/subscriptions.js","webpack://Ganache/../ethereum/utils/lib/src/types/trace-transaction.js","webpack://Ganache/../ethereum/utils/lib/src/types/tuple-from-union.js","webpack://Ganache/../flavor/lib/index.js","webpack://Ganache/../flavor/lib/src/load.js","webpack://Ganache/../flavor/lib/src/options/cli/cli-defaults.js","webpack://Ganache/../flavor/lib/src/options/cli/cli-options-config.js","webpack://Ganache/../flavor/lib/src/options/cli/cli-options.js","webpack://Ganache/../flavor/lib/src/options/server/server-defaults.js","webpack://Ganache/../flavor/lib/src/options/server/server-options-config.js","webpack://Ganache/../flavor/lib/src/options/server/server-options.js","webpack://Ganache/./webpack/polyfills/debug.ts","webpack://Ganache/../options/lib/index.js","webpack://Ganache/../options/lib/src/base.js","webpack://Ganache/../options/lib/src/create.js","webpack://Ganache/../options/lib/src/definition.js","webpack://Ganache/../options/lib/src/exclusive.js","webpack://Ganache/../promise-queue/lib/index.js","webpack://Ganache/../promise-queue/lib/src/entry.js","webpack://Ganache/../rlp/lib/index.js","webpack://Ganache/../secp256k1/lib/index.js","webpack://Ganache/../utils/lib/index.js","webpack://Ganache/../utils/lib/src/common.js","webpack://Ganache/../utils/lib/src/things/json-rpc/index.js","webpack://Ganache/../utils/lib/src/things/json-rpc/input-parsers.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-base-types.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-data.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-quantity.js","webpack://Ganache/../utils/lib/src/things/jsonrpc.js","webpack://Ganache/../utils/lib/src/things/logger.js","webpack://Ganache/../utils/lib/src/things/promievent.js","webpack://Ganache/../utils/lib/src/things/subscription.js","webpack://Ganache/../utils/lib/src/types/api.js","webpack://Ganache/../utils/lib/src/types/index.js","webpack://Ganache/../utils/lib/src/utils/bigint-to-buffer.js","webpack://Ganache/../utils/lib/src/utils/buffer-to-bigint.js","webpack://Ganache/../utils/lib/src/utils/buffer-to-key.js","webpack://Ganache/../utils/lib/src/utils/constants.js","webpack://Ganache/../utils/lib/src/utils/executor.js","webpack://Ganache/../utils/lib/src/utils/find-insert-position.js","webpack://Ganache/../utils/lib/src/utils/has-own.js","webpack://Ganache/../utils/lib/src/utils/heap.js","webpack://Ganache/../utils/lib/src/utils/index.js","webpack://Ganache/../utils/lib/src/utils/keccak.js","webpack://Ganache/../utils/lib/src/utils/min-max.js","webpack://Ganache/../utils/lib/src/utils/random-number-generator.js","webpack://Ganache/../utils/lib/src/utils/request-coordinator.js","webpack://Ganache/../utils/lib/src/utils/signature.js","webpack://Ganache/../utils/lib/src/utils/uint-to-buffer.js","webpack://Ganache/../utils/lib/src/utils/unref.js"],"sourcesContent":["\"use strict\";\n/*!\n * @ganache/colors\n *\n * @author David Murdoch\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/index\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TruffleColors = void 0;\nexports.TruffleColors = {\n    /**\n     * Ganache orange\n     */\n    porsche: \"#e4a663\",\n    /**\n     * Truffle blue/turquoise\n     */\n    turquoise: \"#3fe0c5\",\n    /**\n     * Infura orange\n     */\n    infura: \"#ff6b4a\"\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.__experimental_info = exports.provider = exports.server = exports.ServerStatus = exports.Server = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst connector_loader_1 = require(\"./src/connector-loader\");\nconst server_1 = __importDefault(require(\"./src/server\"));\nvar server_2 = require(\"./src/server\");\nObject.defineProperty(exports, \"Server\", { enumerable: true, get: function () { return server_2.Server; } });\nObject.defineProperty(exports, \"ServerStatus\", { enumerable: true, get: function () { return server_2.ServerStatus; } });\nconst version = process.env.VERSION || \"DEV\";\n/**\n * @public\n */\nconst Ganache = {\n    /**\n     * Creates a Ganache server instance that creates and\n     * serves an underlying Ganache provider. Initialization\n     * doesn't begin until `server.listen(...)` is called.\n     * `server.listen(...)` returns a promise that resolves\n     * when initialization is finished.\n     *\n     * @param options - Configuration options for the server;\n     * `options` includes provider based options as well.\n     * @returns A provider instance for the flavor\n     * `options.flavor` which defaults to `ethereum`.\n     */\n    server: (options) => new server_1.default(options),\n    /**\n     * Initializes a Web3 provider for a Ganache instance.\n     * This function starts an asynchronous task, but does not\n     * finish it by the time the function returns. Listen to\n     * `provider.on(\"connect\", () => {...})` or wait for\n     * `await provider.once(\"connect\")` for initialization to\n     * finish. You may start sending requests to the provider\n     * before initialization finishes however; these requests\n     * will start being consumed after initialization finishes.\n     *\n     * @param options - Configuration options for the provider.\n     * @returns A provider instance for the flavor\n     * `options.flavor` which defaults to `ethereum`.\n     */\n    provider: (options) => {\n        const loader = (0, connector_loader_1.initializeFlavor)(options);\n        return loader.connector.provider;\n    },\n    /**\n     *\n     * @experimental\n     */\n    __experimental_info() {\n        return {\n            version,\n            fork: {\n                knownChainIds: Array.from(utils_1.KNOWN_CHAINIDS)\n            }\n        };\n    }\n};\n/**\n * @public\n */\nexports.server = Ganache.server;\n/**\n * @public\n */\nexports.provider = Ganache.provider;\n/**\n * @experimental\n */\nexports.__experimental_info = Ganache.__experimental_info;\n/**\n * @public\n */\nexports.default = Ganache;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initializeFlavor = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst flavor_1 = require(\"@ganache/flavor\");\nfunction loadFlavorByName(flavorName) {\n    if (flavorName === \"ethereum\") {\n        // lazy load the ethereum flavor to avoid start up overhead for\n        // other flavors.\n        return require(\"@ganache/ethereum\").default;\n    }\n    return (0, flavor_1.load)(flavorName);\n}\nfunction getConnector(flavor, providerOptions, executor) {\n    return flavor.connect(providerOptions, executor);\n}\n/**\n * Loads the connector specified by the given `options.flavor` with the given\n * options, or the `ethereum` flavor is `options.flavor` is not specified.\n * @param options\n * @returns\n */\nconst initializeFlavor = (options = {\n    flavor: \"ethereum\"\n}) => {\n    const flavorName = (options.flavor || \"ethereum\");\n    // Set up our request coordinator to either use FIFO or or async request\n    // processing. The RequestCoordinator _can_ be used to coordinate the number\n    // of requests being processed, but we don't use it for that (yet), instead\n    // of \"all\" (0) or just 1 as we are doing here:\n    let asyncRequestProcessing;\n    if (\"chain\" in options &&\n        \"asyncRequestProcessing\" in options.chain) {\n        asyncRequestProcessing = options.chain[\"asyncRequestProcessing\"];\n    }\n    else if (\"asyncRequestProcessing\" in options) {\n        asyncRequestProcessing = options[\"asyncRequestProcessing\"];\n    }\n    else {\n        asyncRequestProcessing = true;\n    }\n    const requestCoordinator = new utils_1.RequestCoordinator(asyncRequestProcessing ? 0 : 1);\n    // The Executor is responsible for actually executing the method on the\n    // chain/API. It performs some safety checks to ensure \"safe\" method\n    //  execution before passing it to a RequestCoordinator.\n    const executor = new utils_1.Executor(requestCoordinator);\n    const flavor = loadFlavorByName(flavorName);\n    const connector = getConnector(flavor, options, executor);\n    // Purposely not awaiting on this to prevent a breaking change\n    // to the `Ganache.provider()` method\n    const connectPromise = connector.connect();\n    // The request coordinator is initialized in a \"paused\" state; when the\n    // provider is ready we unpause.. This lets us accept queue requests before\n    // we've even fully initialized.\n    // The function referenced by requestcoordinator.resume will be changed when\n    // requestCoordinator.stop() is called. Ensure that no references to the\n    // function are held, otherwise internal errors may be surfaced.\n    return {\n        flavor,\n        connector,\n        promise: connectPromise.then(() => requestCoordinator.resume())\n    };\n};\nexports.initializeFlavor = initializeFlavor;\n//# sourceMappingURL=connector-loader.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Server_options, _Server_status, _Server_app, _Server_httpServer, _Server_listenSocket, _Server_host, _Server_connector, _Server_websocketServer, _Server_initializer;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Server = exports.ServerStatus = void 0;\nconst aggregate_error_1 = __importDefault(require(\"aggregate-error\"));\nconst uws_js_unofficial_1 = require(\"@trufflesuite/uws-js-unofficial\");\n// Set the \"silent\" config option so we don't output the \"uwebsockets\" header\n// we check for truthiness because `uws` is omitted from the browser build\nuws_js_unofficial_1._cfg &&\n    (0, uws_js_unofficial_1._cfg)(new Uint8Array([115, 105, 108, 101, 110, 116]));\nconst flavor_1 = require(\"@ganache/flavor\");\nconst connector_loader_1 = require(\"./connector-loader\");\nconst ws_server_1 = __importDefault(require(\"./servers/ws-server\"));\nconst http_server_1 = __importDefault(require(\"./servers/http-server\"));\nconst emittery_1 = __importDefault(require(\"emittery\"));\n// not using the \"net\" node package in order to avoid having to polyfill this\n// for the browser build.\n// isIPv4 taken from https://github.com/nodejs/node/blob/01323d50c4b24cf730a651d06ba20633905ecbed/lib/internal/net.js#L31\nconst v4Seg = \"(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\";\nconst IPv4Reg = new RegExp(`^(${v4Seg}[.]){3}${v4Seg}$`);\nconst isIPv4 = (s) => IPv4Reg.test(s);\nconst DEFAULT_HOST = \"127.0.0.1\";\n/**\n * Server ready state constants.\n *\n * These are bit flags. This means that you can check if the status is:\n *  * ready: `status === ServerStatus.ready` or `status & ServerStatus.ready !== 0`\n *  * opening: `status === ServerStatus.opening` or `status & ServerStatus.opening !== 0`\n *  * open: `status === ServerStatus.open` or `status & ServerStatus.open !== 0`\n *  * opening || open: `status & ServerStatus.openingOrOpen !== 0` or `status & (ServerStatus.opening | ServerStatus.open) !== 0`\n *  * closing: `status === ServerStatus.closing` or `status & ServerStatus.closing !== 0`\n *  * closed: `status === ServerStatus.closed` or `status & ServerStatus.closed !== 0`\n *  * closing || closed: `status & ServerStatus.closingOrClosed !== 0` or `status & (ServerStatus.closing | ServerStatus.closed) !== 0`\n */\nvar ServerStatus;\n(function (ServerStatus) {\n    /**\n     * The Server is in an unknown state; perhaps construction didn't succeed\n     */\n    ServerStatus[ServerStatus[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * The Server has been constructed and is ready to be opened.\n     */\n    ServerStatus[ServerStatus[\"ready\"] = 1] = \"ready\";\n    /**\n     * The Server has started to open, but has not yet finished initialization.\n     */\n    ServerStatus[ServerStatus[\"opening\"] = 2] = \"opening\";\n    /**\n     * The Server is open and ready for connection.\n     */\n    ServerStatus[ServerStatus[\"open\"] = 4] = \"open\";\n    /**\n     * The Server is either opening or is already open\n     */\n    ServerStatus[ServerStatus[\"openingOrOpen\"] = 6] = \"openingOrOpen\";\n    /**\n     * The Server is in the process of closing.\n     */\n    ServerStatus[ServerStatus[\"closing\"] = 8] = \"closing\";\n    /**\n     * The Server is closed and not accepting new connections.\n     */\n    ServerStatus[ServerStatus[\"closed\"] = 16] = \"closed\";\n    /**\n     * The Server is either opening or is already open\n     */\n    ServerStatus[ServerStatus[\"closingOrClosed\"] = 24] = \"closingOrClosed\";\n})(ServerStatus || (exports.ServerStatus = ServerStatus = {}));\n/**\n * @public\n */\nclass Server extends emittery_1.default {\n    get provider() {\n        return __classPrivateFieldGet(this, _Server_connector, \"f\").provider;\n    }\n    get status() {\n        return __classPrivateFieldGet(this, _Server_status, \"f\");\n    }\n    constructor(options = {\n        flavor: \"ethereum\"\n    }) {\n        super();\n        _Server_options.set(this, void 0);\n        _Server_status.set(this, ServerStatus.unknown);\n        _Server_app.set(this, null);\n        _Server_httpServer.set(this, null);\n        _Server_listenSocket.set(this, null);\n        _Server_host.set(this, null);\n        _Server_connector.set(this, void 0);\n        _Server_websocketServer.set(this, null);\n        _Server_initializer.set(this, void 0);\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.ready, \"f\");\n        // we need to start initializing now because the connector's `#provider\n        // property must be available to the server immediately... someone might\n        // want to do:\n        // ```\n        // const server = Ganache.server();\n        // const provider = server.provider; // this needs to exist\n        // await server.listen(8545)\n        // ```\n        const { flavor, connector, promise } = (0, connector_loader_1.initializeFlavor)(options);\n        __classPrivateFieldSet(this, _Server_connector, connector, \"f\");\n        let serverOptions = flavor_1.ServerOptionsConfig.normalize(options);\n        // etheruem flavor options are the defaults, so only merge for non-ethereum\n        if (flavor.flavor !== \"ethereum\" && flavor.options.server) {\n            serverOptions = {\n                ...serverOptions,\n                ...flavor.options.server.normalize(options)\n            };\n        }\n        __classPrivateFieldSet(this, _Server_options, serverOptions, \"f\");\n        const _app = (__classPrivateFieldSet(this, _Server_app, (0, uws_js_unofficial_1.App)(), \"f\"));\n        if (serverOptions.server.ws) {\n            __classPrivateFieldSet(this, _Server_websocketServer, new ws_server_1.default(_app, connector, serverOptions.server), \"f\");\n        }\n        __classPrivateFieldSet(this, _Server_httpServer, new http_server_1.default(_app, connector, __classPrivateFieldGet(this, _Server_options, \"f\").server), \"f\");\n        // Since `loadConnector` starts an async promise that we intentionally\n        // don't await yet we keep the promise around for `listen` to handle\n        // later.\n        __classPrivateFieldSet(this, _Server_initializer, promise, \"f\");\n    }\n    listen(port, host, callback) {\n        if (typeof host === \"function\") {\n            callback = host;\n            host = null;\n        }\n        const callbackIsFunction = typeof callback === \"function\";\n        // Method signature specifies port: number, but we parse a string if provided\n        // inspiration taken from nodejs internal port validator\n        // https://github.com/nodejs/node/blob/8c4b8b201ada6b76d5306c9c7f352e45087fb4a9/lib/internal/validators.js#L208-L219\n        if ((typeof port !== \"number\" && typeof port !== \"string\") ||\n            (typeof port === \"string\" && port.trim().length === 0) ||\n            +port !== +port >>> 0 ||\n            port > 0xffff) {\n            const err = new Error(`Port should be >= 0 and < 65536. Received ${port}.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        const portNumber = +port;\n        const status = __classPrivateFieldGet(this, _Server_status, \"f\");\n        if (status === ServerStatus.closing) {\n            // if closing\n            const err = new Error(`Cannot start server while it is closing.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        else if ((status & ServerStatus.openingOrOpen) !== 0) {\n            // if opening or open\n            const err = new Error(`Server is already open, or is opening, on port: ${portNumber}.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.opening, \"f\");\n        const initializer = __classPrivateFieldGet(this, _Server_initializer, \"f\");\n        // don't keep old promises around as they could be holding onto\n        // references to things that could otherwise be collected.\n        __classPrivateFieldSet(this, _Server_initializer, null, \"f\");\n        const promise = Promise.allSettled([\n            initializer,\n            new Promise((resolve) => {\n                // Make sure we have *exclusive* use of this port.\n                // https://github.com/uNetworking/uSockets/commit/04295b9730a4d413895fa3b151a7337797dcb91f#diff-79a34a07b0945668e00f805838601c11R51\n                const LIBUS_LISTEN_EXCLUSIVE_PORT = 1;\n                host\n                    ? __classPrivateFieldGet(this, _Server_app, \"f\").listen(host, portNumber, LIBUS_LISTEN_EXCLUSIVE_PORT, resolve)\n                    : __classPrivateFieldGet(this, _Server_app, \"f\").listen(portNumber, LIBUS_LISTEN_EXCLUSIVE_PORT, resolve);\n            }).then(listenSocket => {\n                if (listenSocket) {\n                    __classPrivateFieldSet(this, _Server_status, ServerStatus.open, \"f\");\n                    __classPrivateFieldSet(this, _Server_listenSocket, listenSocket, \"f\");\n                    __classPrivateFieldSet(this, _Server_host, host || DEFAULT_HOST, \"f\");\n                }\n                else {\n                    __classPrivateFieldSet(this, _Server_status, ServerStatus.closed, \"f\");\n                    const err = new Error(`listen EADDRINUSE: address already in use ${host || DEFAULT_HOST}:${portNumber}.`);\n                    // emulate part of node's EADDRINUSE error:\n                    err.code = \"EADDRINUSE\";\n                    throw err;\n                }\n            })\n        ]).then(async (promiseResults) => {\n            const errors = [];\n            if (promiseResults[0].status === \"rejected\") {\n                errors.push(promiseResults[0].reason);\n            }\n            if (promiseResults[1].status === \"rejected\") {\n                errors.push(promiseResults[1].reason);\n            }\n            if (errors.length === 0) {\n                this.emit(\"open\");\n            }\n            else {\n                __classPrivateFieldSet(this, _Server_status, ServerStatus.unknown, \"f\");\n                try {\n                    await this.close();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n                if (errors.length > 1) {\n                    throw new aggregate_error_1.default(errors);\n                }\n                else {\n                    throw errors[0];\n                }\n            }\n        });\n        if (callbackIsFunction) {\n            promise.then(() => callback(null)).catch(callback);\n        }\n        else {\n            return promise;\n        }\n    }\n    address() {\n        if (__classPrivateFieldGet(this, _Server_listenSocket, \"f\")) {\n            const address = __classPrivateFieldGet(this, _Server_host, \"f\");\n            return {\n                address,\n                family: isIPv4(address) ? \"IPv4\" : \"IPv6\",\n                port: (0, uws_js_unofficial_1.us_socket_local_port)(__classPrivateFieldGet(this, _Server_listenSocket, \"f\"))\n            };\n        }\n        else {\n            return null;\n        }\n    }\n    async close() {\n        if (__classPrivateFieldGet(this, _Server_status, \"f\") === ServerStatus.opening) {\n            // if opening\n            throw new Error(`Cannot close server while it is opening.`);\n        }\n        else if ((__classPrivateFieldGet(this, _Server_status, \"f\") & ServerStatus.closingOrClosed) !== 0) {\n            // if closing or closed\n            throw new Error(`Server is already closing or closed.`);\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.closing, \"f\");\n        // clean up the websocket objects\n        const _listenSocket = __classPrivateFieldGet(this, _Server_listenSocket, \"f\");\n        __classPrivateFieldSet(this, _Server_listenSocket, null, \"f\");\n        // close the socket to prevent any more connections\n        if (_listenSocket !== null) {\n            (0, uws_js_unofficial_1.us_listen_socket_close)(_listenSocket);\n        }\n        // close all the connected websockets:\n        if (__classPrivateFieldGet(this, _Server_websocketServer, \"f\") !== null) {\n            __classPrivateFieldGet(this, _Server_websocketServer, \"f\").close();\n        }\n        // and do all http cleanup, if any\n        if (__classPrivateFieldGet(this, _Server_httpServer, \"f\") !== null) {\n            __classPrivateFieldGet(this, _Server_httpServer, \"f\").close();\n        }\n        // cleanup the connector, provider, etc.\n        if (__classPrivateFieldGet(this, _Server_connector, \"f\") !== null) {\n            await __classPrivateFieldGet(this, _Server_connector, \"f\").close();\n        }\n        // calling `close()` on the app closes any idle connections immediately,\n        // this is neccessary because keepAlive connections can keep the server\n        // open indefintely even after the listen socket is closed.\n        // TODO: add a `close` is our uws fork fallback:\n        __classPrivateFieldGet(this, _Server_app, \"f\").close && __classPrivateFieldGet(this, _Server_app, \"f\").close();\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.closed, \"f\");\n        __classPrivateFieldSet(this, _Server_app, null, \"f\");\n        await this.emit(\"close\");\n    }\n}\nexports.Server = Server;\n_Server_options = new WeakMap(), _Server_status = new WeakMap(), _Server_app = new WeakMap(), _Server_httpServer = new WeakMap(), _Server_listenSocket = new WeakMap(), _Server_host = new WeakMap(), _Server_connector = new WeakMap(), _Server_websocketServer = new WeakMap(), _Server_initializer = new WeakMap();\nexports.default = Server;\n//# sourceMappingURL=server.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _HttpServer_connector, _HttpServer_options, _HttpServer_isClosing, _HttpServer_handlePost, _HttpServer_handleOptions;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst content_types_1 = __importDefault(require(\"./utils/content-types\"));\nconst http_response_codes_1 = __importDefault(require(\"./utils/http-response-codes\"));\nconst util_1 = require(\"util\");\nconst fragment_generator_1 = require(\"./utils/fragment-generator\");\nconst noop = () => { };\n/**\n * uWS doesn't let us use the request after the request method has completed.\n * But we can't set headers until after the statusCode is set. But we don't\n * know the status code until the provider returns asynchronously.\n * So this does request-related work immediately and returns a function to do the\n * rest of the work later.\n * @param method -\n * @param request -\n */\nfunction prepareCORSResponseHeaders(method, request) {\n    // https://fetch.spec.whatwg.org/#http-requests\n    const origin = request.getHeader(\"origin\");\n    const acrh = request.getHeader(\"access-control-request-headers\");\n    return (response) => {\n        const isCORSRequest = origin !== \"\";\n        if (isCORSRequest) {\n            // OPTIONS preflight requests need a little extra treatment\n            if (method === \"OPTIONS\") {\n                // we only allow POST requests, so it doesn't matter which method the request is asking for\n                response.writeHeader(\"Access-Control-Allow-Methods\", \"POST\");\n                // echo all requested access-control-request-headers back to the response\n                if (acrh !== \"\") {\n                    response.writeHeader(\"Access-Control-Allow-Headers\", acrh);\n                }\n                // Make browsers and compliant clients cache the OPTIONS preflight response for 10\n                // minutes (this is the maximum time Chromium allows)\n                response.writeHeader(\"Access-Control-Max-Age\", \"600\"); // seconds\n            }\n            // From the spec: https://fetch.spec.whatwg.org/#http-responses\n            // \"For a CORS-preflight request, request’s credentials mode is always \"omit\",\n            // but for any subsequent CORS requests it might not be. Support therefore\n            // needs to be indicated as part of the HTTP response to the CORS-preflight request as well.\", so this\n            // header is added to all requests.\n            // Additionally, https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials,\n            // states that there aren't any HTTP Request headers that indicate you whether or not Request.withCredentials\n            // is set. Because web3@1.0.0-beta.35-? always sets `request.withCredentials = true` while Safari requires it be\n            // returned even when no credentials are set in the browser this header must always be return on all requests.\n            // (I've found that Chrome and Firefox don't actually require the header when credentials aren't set)\n            //  Regression Commit: https://github.com/ethereum/web3.js/pull/1722\n            //  Open Web3 Issue: https://github.com/ethereum/web3.js/issues/1802\n            response.writeHeader(\"Access-Control-Allow-Credentials\", \"true\");\n            // From the spec: \"It cannot be reliably identified as participating in the CORS protocol\n            // as the `Origin` header is also included for all requests whose method is neither\n            // `GET` nor `HEAD`.\"\n            // Explicitly set the origin instead of using *, since credentials\n            // can't be used in conjunction with *. This will always be set\n            /// for valid preflight requests.\n            response.writeHeader(\"Access-Control-Allow-Origin\", origin);\n        }\n    };\n}\nfunction sendResponse(response, closeConnection, statusCode, contentType, data, writeHeaders = noop) {\n    response.cork(() => {\n        response.writeStatus(statusCode);\n        writeHeaders(response);\n        if (contentType != null) {\n            response.writeHeader(\"Content-Type\", contentType);\n        }\n        if (data !== null) {\n            response.end(data, closeConnection);\n        }\n        else {\n            // in the case that body is not provided, it must specifically be <undefined> and not <null>\n            response.end(undefined, closeConnection);\n        }\n    });\n}\nfunction sendChunkedResponse(response, closeConnection, statusCode, contentType, data, chunkSize, writeHeaders = noop) {\n    const fragments = (0, fragment_generator_1.getFragmentGenerator)(data, chunkSize);\n    // get our first fragment\n    const { value: firstFragment } = fragments.next();\n    // check if there is any more fragments after this one\n    let { value: nextFragment, done } = fragments.next();\n    // if there are no more fragments send the \"firstFragment\" via `sendResponse`,\n    // as we don't need to chunk it.\n    if (done) {\n        sendResponse(response, closeConnection, statusCode, contentType, firstFragment, writeHeaders);\n    }\n    else {\n        response.cork(() => {\n            response.writeStatus(statusCode);\n            writeHeaders(response);\n            response.writeHeader(\"Content-Type\", contentType);\n            // since we have at least two fragments send both now\n            response.write(firstFragment);\n            response.write(nextFragment);\n            // and then keep sending the rest\n            for (nextFragment of fragments) {\n                response.write(nextFragment);\n            }\n            response.end(undefined, closeConnection);\n        });\n    }\n}\nclass HttpServer {\n    constructor(app, connector, options) {\n        _HttpServer_connector.set(this, void 0);\n        _HttpServer_options.set(this, void 0);\n        _HttpServer_isClosing.set(this, false);\n        _HttpServer_handlePost.set(this, (response, request) => {\n            if (__classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"))\n                return void response.close();\n            // handle JSONRPC post requests...\n            const writeHeaders = prepareCORSResponseHeaders(\"POST\", request);\n            // TODO(perf): pre-allocate the buffer if we know the Content-Length\n            let buffer;\n            let aborted = false;\n            response.onAborted(() => {\n                aborted = true;\n            });\n            response.onData((message, isLast) => {\n                const chunk = Buffer.from(message);\n                if (isLast) {\n                    // we have to use any here because typescript isn't smart enough\n                    // to understand the ambiguity of RequestFormat and ReturnType\n                    // on the Connector interface must match up appropriately\n                    const connector = __classPrivateFieldGet(this, _HttpServer_connector, \"f\");\n                    let payload;\n                    try {\n                        const message = buffer\n                            ? Buffer.concat([buffer, chunk], buffer.length + chunk.length)\n                            : chunk;\n                        payload = connector.parse(message);\n                    }\n                    catch (e) {\n                        sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.BAD_REQUEST, content_types_1.default.PLAIN, \"400 Bad Request: \" + e.message, writeHeaders);\n                        return;\n                    }\n                    connector\n                        .handle(payload, request)\n                        .then(({ value }) => value)\n                        .then(result => {\n                        if (aborted) {\n                            // if the request has been aborted don't try sending (it'll\n                            // cause an `Unhandled promise rejection` if we try)\n                            return;\n                        }\n                        const data = connector.format(result, payload);\n                        if (util_1.types.isGeneratorObject(data)) {\n                            sendChunkedResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, __classPrivateFieldGet(this, _HttpServer_options, \"f\").chunkSize, writeHeaders);\n                        }\n                        else {\n                            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, writeHeaders);\n                        }\n                    })\n                        .catch(error => {\n                        if (aborted) {\n                            // if the request has been aborted don't try sending (it'll\n                            // cause an `Unhandled promise rejection` if we try)\n                            return;\n                        }\n                        const data = connector.formatError(error, payload);\n                        sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, writeHeaders);\n                    });\n                }\n                else {\n                    if (buffer) {\n                        buffer = Buffer.concat([buffer, chunk], buffer.length + chunk.length);\n                    }\n                    else {\n                        buffer = Buffer.concat([chunk], chunk.length);\n                    }\n                }\n            });\n        });\n        _HttpServer_handleOptions.set(this, (response, request) => {\n            if (__classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"))\n                return void response.close();\n            // handle CORS preflight requests...\n            const writeHeaders = prepareCORSResponseHeaders(\"OPTIONS\", request);\n            // OPTIONS responses don't have a body, so respond with `204 No Content`...\n            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.NO_CONTENT, null, null, writeHeaders);\n        });\n        __classPrivateFieldSet(this, _HttpServer_connector, connector, \"f\");\n        __classPrivateFieldSet(this, _HttpServer_options, options, \"f\");\n        // JSON-RPC routes...\n        app\n            .post(options.rpcEndpoint, __classPrivateFieldGet(this, _HttpServer_handlePost, \"f\"))\n            .options(options.rpcEndpoint, __classPrivateFieldGet(this, _HttpServer_handleOptions, \"f\"));\n        // because Easter Eggs are fun...\n        app.get(\"/418\", response => {\n            if (__classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"))\n                return void response.close();\n            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.IM_A_TEAPOT, content_types_1.default.PLAIN, \"418 I'm a teapot\");\n        });\n        // fallback routes...\n        app.any(\"/*\", (response, request) => {\n            if (__classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"))\n                return void response.close();\n            const connectionHeader = request.getHeader(\"connection\");\n            if (connectionHeader && connectionHeader.toLowerCase() === \"upgrade\") {\n                // if we got here it means the websocket server wasn't enabled but\n                // a client tried to connect via websocket. This is a Bad Request.\n                sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.BAD_REQUEST, content_types_1.default.PLAIN, \"400 Bad Request\");\n            }\n            else {\n                // all other requests don't mean anything to us, so respond with `404 Not Found`...\n                sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.NOT_FOUND, content_types_1.default.PLAIN, \"404 Not Found\");\n            }\n        });\n    }\n    close() {\n        // flags the server as closing, indicating the connection should be closed with subsequent responses\n        // as there is no way presently to close existing connections outside of the request/response context\n        // see discussion: https://github.com/uNetworking/uWebSockets.js/issues/663#issuecomment-1026283415\n        __classPrivateFieldSet(this, _HttpServer_isClosing, true, \"f\");\n    }\n}\n_HttpServer_connector = new WeakMap(), _HttpServer_options = new WeakMap(), _HttpServer_isClosing = new WeakMap(), _HttpServer_handlePost = new WeakMap(), _HttpServer_handleOptions = new WeakMap();\nexports.default = HttpServer;\n//# sourceMappingURL=http-server.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentTypes;\n(function (ContentTypes) {\n    ContentTypes[\"PLAIN\"] = \"text/plain\";\n    ContentTypes[\"JSON\"] = \"application/json\";\n})(ContentTypes || (ContentTypes = {}));\nexports.default = ContentTypes;\n//# sourceMappingURL=content-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFragmentGenerator = void 0;\nfunction* getFragmentGenerator(data, bufferSize) {\n    // Use a large buffer to reduce round-trips\n    let buf = Buffer.allocUnsafe(bufferSize);\n    let offset = 0;\n    for (const value of data) {\n        const { byteLength } = value;\n        // if we don't have enough space in the buffer for this next value `yield`\n        // the buffer as is.\n        if (offset > 0 && byteLength + offset > bufferSize) {\n            yield buf.subarray(0, offset);\n            // Reset the buffer. Since `uws` sends packets asynchronously,\n            // it is important that we allocate a new buffer for the next\n            // frame. This avoids overwriting data before it is sent. The\n            // reason we need to do this is likely because we do not yet\n            // handle backpressure. Part of handling backpressure will\n            // involve the drain event and only sending while\n            // `ws.getBufferedAmount() < ACCEPTABLE_BACKPRESSURE`.\n            // See https://github.com/trufflesuite/ganache/issues/2790\n            buf = null;\n            offset = 0;\n        }\n        // Store value in buffer if it fits (but don't store it if it is the exact\n        // same size as bufferSize)\n        if (byteLength < bufferSize) {\n            // copy from value into buffer\n            if (buf === null)\n                buf = Buffer.allocUnsafe(bufferSize);\n            value.copy(buf, offset, 0, byteLength);\n            offset += byteLength;\n        }\n        else {\n            // Cannot fit this value in buffer, send it directly.\n            // Buffer has just been flushed (since the condition `byteLength + offset > bufferSize`\n            // will always be true here, which will have triggered the flush above) so\n            // we do not need to worry about out-of-order send.\n            yield value;\n        }\n    }\n    // If we've got anything buffered at this point, send it.\n    if (offset > 0)\n        yield buf.subarray(0, offset);\n    return void 0;\n}\nexports.getFragmentGenerator = getFragmentGenerator;\n//# sourceMappingURL=fragment-generator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * HTTP/1.1 Response Status-Codes, including the _required_ space character.\n *\n * e.g., `\"200 \"` or `\"404 \"`\n *\n * RFC Grammar:\n *\n * ```ebnf\n * Status-Line = HTTP-Version SP Status-Code SP Reason-Phrase CRLF\n * ```\n *\n * The Status-Codes defined here fullfill the `Status-Code SP` part of the above\n * grammar.\n *\n * See https://datatracker.ietf.org/doc/html/rfc2616#section-6.1 for details.\n */\nvar HttpResponseCodes;\n(function (HttpResponseCodes) {\n    HttpResponseCodes[\"OK\"] = \"200 \";\n    HttpResponseCodes[\"NO_CONTENT\"] = \"204 \";\n    HttpResponseCodes[\"BAD_REQUEST\"] = \"400 \";\n    HttpResponseCodes[\"NOT_FOUND\"] = \"404 \";\n    HttpResponseCodes[\"METHOD_NOT_ALLOWED\"] = \"405 \";\n    HttpResponseCodes[\"IM_A_TEAPOT\"] = \"418 \";\n})(HttpResponseCodes || (HttpResponseCodes = {}));\nexports.default = HttpResponseCodes;\n//# sourceMappingURL=http-response-codes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WebSocketCloseCodes;\n(function (WebSocketCloseCodes) {\n    /**\n     * Normal closure; the connection successfully completed whatever purpose for\n     * which it was created.\n     */\n    WebSocketCloseCodes[WebSocketCloseCodes[\"CLOSE_NORMAL\"] = 1000] = \"CLOSE_NORMAL\";\n    /**\n     * Indicates that an endpoint is \"going away\", such as a server going down or\n     * a browser having navigated away from a page.\n     */\n    // CLOSE_GOING_AWAY = 1001\n    // CLOSE_PROTOCOL_ERROR = 1002,\n    // CLOSE_ABNORMAL = 1006\n})(WebSocketCloseCodes || (WebSocketCloseCodes = {}));\nexports.default = WebSocketCloseCodes;\n//# sourceMappingURL=websocket-close-codes.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _WebsocketServer_connections;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_PAYLOAD_SIZE = exports.sendFragmented = void 0;\nconst websocket_close_codes_1 = __importDefault(require(\"./utils/websocket-close-codes\"));\nconst util_1 = require(\"util\");\nconst fragment_generator_1 = require(\"./utils/fragment-generator\");\nfunction sendFragmented(ws, data, useBinary, chunkSize) {\n    ws.cork(() => {\n        // fragment send: https://github.com/uNetworking/uWebSockets.js/issues/635\n        const shouldCompress = false;\n        const fragments = (0, fragment_generator_1.getFragmentGenerator)(data, chunkSize);\n        // get our first fragment\n        const { value: firstFragment } = fragments.next();\n        // check if there is any more fragments after this one\n        let { value: maybeLastFragment, done } = fragments.next();\n        // if there are no more fragments send the \"firstFragment\" via `send`, as\n        // we don't need to chunk it.\n        if (done) {\n            ws.send(firstFragment, useBinary);\n        }\n        else {\n            // since we have at least two fragments send the first one now that it\n            // is \"full\"\n            ws.sendFirstFragment(firstFragment, useBinary);\n            // at this point `maybeLastFragment` is the next fragment that should be\n            // sent. We iterate over all fragments, sending the _previous_ fragment\n            // (`maybeLastFragment`) then cache the current fragment (`fragment`)\n            // in the `maybeLastFragment` variable, which will be sent in the next\n            // iteration, or via `sendLastFragment`, below, if `fragment` was also the\n            // very last one.\n            for (const fragment of fragments) {\n                // definitely not the last fragment, send it!\n                ws.sendFragment(maybeLastFragment, shouldCompress);\n                maybeLastFragment = fragment;\n            }\n            ws.sendLastFragment(\n            // definitely the last fragment at this point\n            maybeLastFragment, shouldCompress);\n        }\n    });\n}\nexports.sendFragmented = sendFragmented;\n// matches geth's limit of 15 MebiBytes: https://github.com/ethereum/go-ethereum/blob/3526f690478482a02a152988f4d31074c176b136/rpc/websocket.go#L40\nexports.MAX_PAYLOAD_SIZE = 15 * 1024 * 1024;\nclass WebsocketServer {\n    constructor(app, connector, options) {\n        _WebsocketServer_connections.set(this, new Map());\n        const connections = __classPrivateFieldGet(this, _WebsocketServer_connections, \"f\");\n        const wsBinary = options.wsBinary;\n        const autoBinary = wsBinary === \"auto\";\n        app.ws(options.rpcEndpoint, {\n            /* WS Options */\n            maxPayloadLength: exports.MAX_PAYLOAD_SIZE,\n            idleTimeout: 120,\n            // Note that compression is disabled (the default option)\n            // due to not being able to link against electron@12\n            // with compression included\n            /* Handlers */\n            open: (ws) => {\n                ws.closed = false;\n                connections.set(ws, new Set());\n            },\n            message: async (ws, message, isBinary) => {\n                // We have to use type any instead of ReturnType<typeof connector.parse>\n                // on `payload` because Typescript isn't smart enough to understand the\n                // ambiguity doesn't actually exist\n                let payload;\n                const useBinary = autoBinary ? isBinary : wsBinary;\n                try {\n                    payload = connector.parse(Buffer.from(message));\n                }\n                catch (err) {\n                    const response = connector.formatError(err, payload);\n                    ws.send(response, useBinary);\n                    return;\n                }\n                let data;\n                try {\n                    const { value } = await connector.handle(payload, ws);\n                    // The socket may have closed while we were waiting for the response\n                    // Don't bother trying to send to it if it was.\n                    if (ws.closed)\n                        return;\n                    const resultEmitter = value;\n                    const result = await resultEmitter;\n                    if (ws.closed)\n                        return;\n                    data = connector.format(result, payload);\n                    // if the result is an emitter listen to its `\"message\"` event\n                    // We check if `on` is a function rather than check if\n                    // `resultEmitter instanceof PromiEvent` because flavor plugins\n                    // and `ganache` webpack `@ganache/utils` separately. This causes\n                    // `instanceof` to fail here. Since we know `resultEmitter` is\n                    // MergePromiseT we can safely assume that if `on` is a function, then\n                    // we have a PromiEvent\n                    if (typeof resultEmitter[\"on\"] === \"function\") {\n                        const resultEmitterPromiEvent = resultEmitter;\n                        resultEmitterPromiEvent.on(\"message\", (result) => {\n                            // note: we _don't_ need to check if `ws.closed` here because when\n                            // `ws.closed` is set we remove this event handler anyway.\n                            const message = JSON.stringify({\n                                jsonrpc: \"2.0\",\n                                method: result.type,\n                                params: result.data\n                            });\n                            ws.send(message, isBinary);\n                        });\n                        // keep track of listeners to dispose off when the ws disconnects\n                        connections.get(ws).add(resultEmitterPromiEvent.dispose);\n                    }\n                }\n                catch (err) {\n                    // ensure the connector's `handle` fn doesn't throw outside of a Promise\n                    if (ws.closed)\n                        return;\n                    data = connector.formatError(err, payload);\n                }\n                if (util_1.types.isGeneratorObject(data)) {\n                    sendFragmented(ws, data, useBinary, options.chunkSize);\n                }\n                else {\n                    ws.send(data, useBinary);\n                }\n            },\n            drain: (ws) => {\n                // This is there so tests can detect if a small amount of backpressure\n                // is happening and that things will still work if it does. We actually\n                // don't do anything to manage excessive backpressure.\n                // TODO: handle back pressure for real!\n                // options.logger.log(\"WebSocket backpressure: \" + ws.getBufferedAmount());\n            },\n            close: (ws) => {\n                ws.closed = true;\n                connections.get(ws).forEach(dispose => dispose());\n                connections.delete(ws);\n            }\n        });\n    }\n    close() {\n        __classPrivateFieldGet(this, _WebsocketServer_connections, \"f\").forEach((_, ws) => ws.end(websocket_close_codes_1.default.CLOSE_NORMAL, \"Server closed by client\"));\n    }\n}\n_WebsocketServer_connections = new WeakMap();\nexports.default = WebsocketServer;\n//# sourceMappingURL=ws-server.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Address = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst utils_1 = require(\"@ganache/utils\");\nclass Address extends util_1.Address {\n    constructor(value) {\n        super(value);\n    }\n    static from(value) {\n        return new Address(utils_1.Data.toBuffer(value, Address.ByteLength));\n    }\n    static toBuffer(value) {\n        return Address.from(value).toBuffer();\n    }\n    static toString(value) {\n        return Address.from(value).toString();\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\nexports.Address = Address;\nAddress.ByteLength = 20;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/block\"), exports);\n__exportStar(require(\"./src/runtime-block\"), exports);\n__exportStar(require(\"./src/snapshots\"), exports);\n__exportStar(require(\"./src/serialize\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n// NOTE these params may need to be changed at each hardfork\n// they can be tracked here: https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/common/src/hardforks/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockParams = void 0;\nexports.BlockParams = {\n    /**\n     *  Base fee per gas for blocks without a parent containing a base fee per gas.\n     */\n    INITIAL_BASE_FEE_PER_GAS: 1000000000n,\n    /**\n     * Divisor used to set a block's target gas usage.\n     */\n    ELASTICITY: 2n,\n    /**\n     * Divisor used to limit the amount the base fee per gas can change from one block to another.\n     */\n    BASE_FEE_MAX_CHANGE_DENOMINATOR: 8n\n};\n//# sourceMappingURL=block-params.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Block = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst helpers_1 = require(\"./helpers\");\nconst utils_2 = require(\"@ganache/utils\");\nconst serialize_1 = require(\"./serialize\");\nconst block_params_1 = require(\"./block-params\");\nclass Block {\n    constructor(serialized, common) {\n        this._common = common;\n        if (serialized) {\n            const deserialized = (0, rlp_1.decode)(serialized);\n            this._raw = deserialized[0];\n            this._rawTransactions = deserialized[1] || [];\n            // TODO: support actual uncle data (needed for forking!)\n            // Issue: https://github.com/trufflesuite/ganache/issues/786\n            // const uncles = deserialized[2];\n            let totalDifficulty;\n            // if there are 7 serialized fields we are after shanghai\n            // as in shanghai we added `withdrawals` to the block data\n            if (deserialized.length === 7) {\n                this._rawWithdrawals = deserialized[3] || []; // added in Shanghai\n                totalDifficulty = deserialized[4];\n                this._rawTransactionMetaData = deserialized[5] || [];\n                this._size = utils_1.Quantity.toNumber(deserialized[6]);\n            }\n            else {\n                this._rawWithdrawals = null;\n                totalDifficulty = deserialized[3];\n                this._rawTransactionMetaData = (deserialized[4] || []);\n                this._size = utils_1.Quantity.toNumber(deserialized[5]);\n            }\n            this.header = (0, helpers_1.makeHeader)(this._raw, totalDifficulty);\n        }\n    }\n    /**\n     * Migrates a serialized Block to the latest version. This should only be\n     * called on serialized data from blocks created before v7.8.0.\n     *\n     * This migration updates the `size` value of the block to the correct value\n     * by re-serializing the block for storage in the db.\n     * @param serialized\n     * @returns\n     */\n    static migrate(serialized) {\n        const deserialized = (0, rlp_1.decode)(serialized);\n        const start = deserialized.slice(0, 3);\n        start[1] = start[1].map((oldRawTx) => {\n            if (oldRawTx.length === 9) {\n                return oldRawTx; // legacy transactions are fine\n            }\n            else {\n                // `type` is always `< 0x7F`, so we can yank the first byte from the\n                // Buffer without having to think about conversion.\n                // https://eips.ethereum.org/EIPS/eip-2718#transactiontype-only-goes-up-to-0x7f\n                const type = oldRawTx[0][0];\n                const raw = oldRawTx.slice(1);\n                // type 1 and 2 transactions were encoded within the block as:\n                // `[type, ...rawTx]` when they should have been `[type, encode(rawTx)]`\n                return (0, ethereum_transaction_1.encodeWithPrefix)(type, raw);\n            }\n        });\n        return (0, serialize_1.serialize)(start, deserialized.slice(3, 5)).serialized;\n    }\n    hash() {\n        return (this._hash || (this._hash = utils_1.Data.from((0, utils_2.keccak)((0, rlp_1.encode)(this._raw)), 32)));\n    }\n    getTransactions() {\n        const common = this._common;\n        const blockHash = this.hash().toBuffer();\n        const number = this.header.number.toBuffer();\n        return this._rawTransactions.map((raw, index) => {\n            const [from, hash] = this._rawTransactionMetaData[index];\n            const extra = [\n                from,\n                hash,\n                blockHash,\n                number,\n                utils_1.Quantity.toBuffer(index)\n            ];\n            return (0, serialize_1.blockTransactionFromRaw)(raw, common, extra);\n        });\n    }\n    toJSON(includeFullTransactions) {\n        const hash = this.hash();\n        const txFn = this.getTxFn(includeFullTransactions);\n        const hashBuffer = hash.toBuffer();\n        const header = this.header;\n        const number = header.number.toBuffer();\n        const common = this._common;\n        const transactions = this._rawTransactions.map((raw, index) => {\n            const [from, hash] = this._rawTransactionMetaData[index];\n            const extra = [\n                from,\n                hash,\n                hashBuffer,\n                number,\n                utils_1.Quantity.toBuffer(index)\n            ];\n            const tx = (0, serialize_1.blockTransactionFromRaw)(raw, common, extra);\n            // we could either parse the raw data to check if the tx is type 2,\n            // get the maxFeePerGas and maxPriorityFeePerGas, use those to calculate\n            // the effectiveGasPrice and add it to `extra` above, or we can just\n            // leave it out of extra and update the effectiveGasPrice after like this\n            tx.updateEffectiveGasPrice(header.baseFeePerGas?.toBigInt());\n            return txFn(tx);\n        });\n        return {\n            hash,\n            ...header,\n            size: utils_1.Quantity.from(this._size),\n            transactions,\n            uncles: [],\n            // if `this._rawWithdrawals` is not set we should not include it in the\n            // JSON response (`undefined` gets stripped when JSON.stringify is called).\n            withdrawals: this._rawWithdrawals?.map(serialize_1.convertRawWithdrawals)\n        };\n    }\n    getTxFn(include = false) {\n        if (include) {\n            return (tx) => tx.toJSON(this._common);\n        }\n        else {\n            return (tx) => tx.hash;\n        }\n    }\n    static calcNextBaseFeeBigInt(parentHeader) {\n        let nextBaseFee;\n        const header = parentHeader;\n        const parentGasTarget = header.gasLimit.toBigInt() / block_params_1.BlockParams.ELASTICITY;\n        const parentGasUsed = header.gasUsed.toBigInt();\n        const baseFeePerGas = header.baseFeePerGas\n            ? header.baseFeePerGas.toBigInt()\n            : block_params_1.BlockParams.INITIAL_BASE_FEE_PER_GAS;\n        if (parentGasTarget === parentGasUsed) {\n            // If the parent gasUsed is the same as the target, the baseFee remains unchanged.\n            nextBaseFee = baseFeePerGas;\n        }\n        else if (parentGasUsed > parentGasTarget) {\n            // If the parent block used more gas than its target, the baseFee should increase.\n            const gasUsedDelta = parentGasUsed - parentGasTarget;\n            const adjustedFeeDelta = (baseFeePerGas * gasUsedDelta) /\n                parentGasTarget /\n                block_params_1.BlockParams.BASE_FEE_MAX_CHANGE_DENOMINATOR;\n            if (adjustedFeeDelta > 1n) {\n                nextBaseFee = baseFeePerGas + adjustedFeeDelta;\n            }\n            else {\n                nextBaseFee = baseFeePerGas + 1n;\n            }\n        }\n        else {\n            // Otherwise if the parent block used less gas than its target, the baseFee should decrease.\n            const gasUsedDelta = parentGasTarget - parentGasUsed;\n            const adjustedFeeDelta = (baseFeePerGas * gasUsedDelta) /\n                parentGasTarget /\n                block_params_1.BlockParams.BASE_FEE_MAX_CHANGE_DENOMINATOR;\n            nextBaseFee = baseFeePerGas - adjustedFeeDelta;\n        }\n        return nextBaseFee;\n    }\n    static calcNBlocksMaxBaseFee(blocks, parentHeader) {\n        const { BASE_FEE_MAX_CHANGE_DENOMINATOR } = block_params_1.BlockParams;\n        let maxPossibleBaseFee = this.calcNextBaseFeeBigInt(parentHeader);\n        // we must calculate each future block's max base fee individually because\n        // each block's base fee must be appropriately \"floored\" (Math.floor) before\n        // the following block's base fee is calculated. If we don't do this we'll\n        // end up with compounding rounding errors.\n        // FYI: the more performant, but rounding error-prone, way is:\n        // return lastMaxBlockBaseFee + (lastMaxBlockBaseFee * ((BASE_FEE_MAX_CHANGE_DENOMINATOR-1)**(blocks-1)) / ((BASE_FEE_MAX_CHANGE_DENOMINATOR)**(blocks-1)))\n        while (--blocks) {\n            maxPossibleBaseFee +=\n                maxPossibleBaseFee / BASE_FEE_MAX_CHANGE_DENOMINATOR;\n        }\n        return maxPossibleBaseFee;\n    }\n    static calcNextBaseFee(parentBlock) {\n        const header = parentBlock.header;\n        if (header.baseFeePerGas === undefined) {\n            return undefined;\n        }\n        else {\n            return this.calcNextBaseFeeBigInt(header);\n        }\n    }\n}\nexports.Block = Block;\n/**\n *  Base fee per gas for blocks without a parent containing a base fee per gas.\n */\nBlock.INITIAL_BASE_FEE_PER_GAS = block_params_1.BlockParams.INITIAL_BASE_FEE_PER_GAS;\n//# sourceMappingURL=block.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeHeader = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nfunction makeHeader(raw, totalDifficulty) {\n    return {\n        parentHash: utils_1.Data.from(raw[0], 32),\n        sha3Uncles: utils_1.Data.from(raw[1], 32),\n        miner: utils_1.Data.from(raw[2], 20),\n        stateRoot: utils_1.Data.from(raw[3], 32),\n        transactionsRoot: utils_1.Data.from(raw[4], 32),\n        receiptsRoot: utils_1.Data.from(raw[5], 32),\n        logsBloom: utils_1.Data.from(raw[6], 256),\n        difficulty: utils_1.Quantity.from(raw[7], false),\n        number: utils_1.Quantity.from(raw[8], false),\n        gasLimit: utils_1.Quantity.from(raw[9], false),\n        gasUsed: utils_1.Quantity.from(raw[10], false),\n        timestamp: utils_1.Quantity.from(raw[11], false),\n        extraData: utils_1.Data.from(raw[12]),\n        mixHash: utils_1.Data.from(raw[13], 32),\n        nonce: utils_1.Data.from(raw[14], 8),\n        totalDifficulty: utils_1.Quantity.from(totalDifficulty, false),\n        baseFeePerGas: raw[15] === undefined ? undefined : utils_1.Quantity.from(raw[15], false),\n        withdrawalsRoot: raw[16] === undefined ? undefined : utils_1.Data.from(raw[16], 32)\n    };\n}\nexports.makeHeader = makeHeader;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeBlock = exports.getBlockSize = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst serialize_1 = require(\"./serialize\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst helpers_1 = require(\"./helpers\");\nconst block_1 = require(\"./block\");\n/**\n * Returns the size of the serialized data as it would have been calculated had\n * we stored things geth does, i.e., `totalDifficulty` is not usually stored in\n * the block header.\n *\n * @param serialized -\n * @param totalDifficulty -\n */\nfunction getBlockSize(serialized, totalDifficulty) {\n    return serialized.length - totalDifficulty.length;\n}\nexports.getBlockSize = getBlockSize;\n/**\n * A minimal block that can be used by the EVM to run transactions.\n */\nclass RuntimeBlock {\n    constructor(common, number, parentHash, coinbase, gasLimit, gasUsed, timestamp, difficulty, previousBlockTotalDifficulty, mixHash, baseFeePerGas, withdrawalsRoot) {\n        this._common = common;\n        this.header = {\n            parentHash: parentHash.toBuffer(),\n            coinbase: coinbase,\n            number: number.toBigInt(),\n            difficulty: difficulty.toBigInt(),\n            totalDifficulty: utils_1.Quantity.toBuffer(previousBlockTotalDifficulty.toBigInt() + difficulty.toBigInt()),\n            gasLimit: gasLimit.toBigInt(),\n            gasUsed: gasUsed.toBigInt(),\n            timestamp: timestamp.toBigInt(),\n            baseFeePerGas,\n            mixHash,\n            prevRandao: mixHash,\n            withdrawalsRoot,\n            // fixes https://github.com/trufflesuite/ganache/issues/4359\n            cliqueSigner: () => coinbase\n        };\n    }\n    /**\n     * Returns the serialization of all block data, the hash of the block header,\n     * and a map of the hashed and raw storage keys\n     */\n    finalize(transactionsTrie, receiptTrie, bloom, stateRoot, gasUsed, extraData, transactions, storageKeys) {\n        const { header } = this;\n        const rawHeader = [\n            header.parentHash,\n            util_1.KECCAK256_RLP_ARRAY,\n            header.coinbase.buf,\n            stateRoot,\n            transactionsTrie,\n            receiptTrie,\n            bloom,\n            utils_1.Quantity.toBuffer(header.difficulty),\n            utils_1.Quantity.toBuffer(header.number),\n            utils_1.Quantity.toBuffer(header.gasLimit),\n            gasUsed === 0n ? utils_1.BUFFER_EMPTY : utils_1.Quantity.toBuffer(gasUsed),\n            utils_1.Quantity.toBuffer(header.timestamp),\n            extraData.toBuffer(),\n            header.mixHash,\n            utils_1.BUFFER_8_ZERO // nonce\n        ];\n        const isEip4895 = this._common.isActivatedEIP(4895);\n        // baseFeePerGas was added in London\n        if (header.baseFeePerGas !== undefined) {\n            rawHeader[15] = utils_1.Quantity.toBuffer(header.baseFeePerGas, false);\n            // withdrawalsRoot was added in Shanghai\n            if (isEip4895)\n                rawHeader[16] = utils_1.Data.toBuffer(header.withdrawalsRoot);\n        }\n        const { totalDifficulty } = header;\n        const txs = Array(transactions.length);\n        const extraTxs = Array(transactions.length);\n        for (let i = 0; i < transactions.length; i++) {\n            const tx = transactions[i];\n            txs[i] =\n                tx.raw.length === 9\n                    ? tx.raw // legacy transactions don't have their own encoding\n                    : tx.serialized ?? (0, ethereum_transaction_1.encodeWithPrefix)(tx.type.toNumber(), tx.raw);\n            extraTxs[i] = [tx.from.toBuffer(), tx.hash.toBuffer()];\n        }\n        const rawBlock = isEip4895\n            ? [rawHeader, txs, [], []]\n            : [rawHeader, txs, []];\n        const { serialized, size } = (0, serialize_1.serialize)(rawBlock, [\n            totalDifficulty,\n            extraTxs\n        ]);\n        // make a new block, but pass `null` so it doesn't do the extra\n        // deserialization work since we already have everything in a deserialized\n        // state here. We'll just set it ourselves by reaching into the \"_private\"\n        // fields.\n        const block = new block_1.Block(null, this._common);\n        block._raw = rawHeader;\n        block._rawTransactions = txs;\n        block.header = (0, helpers_1.makeHeader)(rawHeader, totalDifficulty);\n        block._rawWithdrawals = [];\n        block._rawTransactionMetaData = extraTxs;\n        block._size = size;\n        return {\n            block: block,\n            serialized,\n            storageKeys,\n            transactions\n        };\n    }\n}\nexports.RuntimeBlock = RuntimeBlock;\n//# sourceMappingURL=runtime-block.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertRawWithdrawals = exports.blockTransactionFromRaw = exports.serialize = void 0;\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst utils_1 = require(\"@ganache/utils\");\n/**\n * Serializes a block to compute its size and store it in the database.\n * @param start\n * @param end\n * @returns\n */\nfunction serialize(start, end) {\n    const serializedStart = (0, rlp_1.encodeRange)(start, 0, start.length);\n    const serializedLength = serializedStart.length;\n    const ethereumRawBlockSize = (0, rlp_1.encodeLength)(serializedLength, 192).length;\n    const size = ethereumRawBlockSize + serializedLength;\n    const middle = (0, rlp_1.encodeRange)(end, 0, 2);\n    const ending = (0, rlp_1.encode)((0, utils_1.uintToBuffer)(size));\n    return {\n        serialized: (0, rlp_1.digest)([serializedStart.output, middle.output, [ending]], serializedLength + middle.length + ending.length),\n        size\n    };\n}\nexports.serialize = serialize;\nfunction isLegacyRawTransaction(raw) {\n    return raw.length === 9;\n}\n/**\n * Converts a raw transaction encoded for use in a raw block into a `Transaction`\n *\n * @param raw the raw transaction data after the block has been rlp decoded.\n * @param common\n * @param extra\n * @returns\n */\nfunction blockTransactionFromRaw(raw, common, extra) {\n    let txData;\n    let type;\n    if (isLegacyRawTransaction(raw)) {\n        // legacy txs\n        type = 0;\n        txData = raw;\n    }\n    else {\n        // type 1 and 2 txs\n        type = raw[0];\n        txData = (0, rlp_1.decode)(raw.subarray(1));\n    }\n    return ethereum_transaction_1.TransactionFactory.fromSafeTypeAndTxData(type, txData, common, extra);\n}\nexports.blockTransactionFromRaw = blockTransactionFromRaw;\nfunction convertRawWithdrawals([index, validatorIndex, address, amount]) {\n    return {\n        index: utils_1.Quantity.from(index),\n        validatorIndex: utils_1.Quantity.from(validatorIndex),\n        address: ethereum_address_1.Address.from(address),\n        amount: utils_1.Quantity.from(amount)\n    };\n}\nexports.convertRawWithdrawals = convertRawWithdrawals;\n//# sourceMappingURL=serialize.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=snapshots.js.map","\"use strict\";\n/*!\n * @ganache/console.log\n *\n * @author David Murdoch\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maybeGetLogs = void 0;\nvar maybe_get_logs_1 = require(\"./src/maybe-get-logs\");\nObject.defineProperty(exports, \"maybeGetLogs\", { enumerable: true, get: function () { return maybe_get_logs_1.maybeGetLogs; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Handlers = exports.bytes = exports.address = exports.bool = exports.string = exports.uint256 = exports.int256 = exports.fixedBytes = exports.WORD_SIZE = void 0;\nconst utils_1 = require(\"@ganache/utils\");\n/**\n * EVM word size for abi encoded data\n */\nexports.WORD_SIZE = 32; // bytes\n/**\n * Used to convert _from_ twos compliment\n * This is calculated via:\n * ~((1n << (8n * BigInt(WORD_SIZE))) - 1n)\n */\nconst OR_WITH_TWOS_COMPLEMENT = -0x10000000000000000000000000000000000000000000000000000000000000000n;\n/**\n * For dynamic-length types, like `bytes` and `string`, returns the starting\n * position of the value in `memory`, and the `end` position of the value.\n *\n * Calling this function when the type is not dynamic will not work. You have\n * been warned.\n *\n * @param memory\n * @param offset The offset into the given memory from which to start parsing.\n * @returns The starting position of the value in `memory`, and the `end` position of the value.\n */\nfunction getDynamicDataMarkers(memory, offset) {\n    // A Buffer's length maxes out at UInt32 max, 4294967295, (2**(8 * 4)) - 1) so\n    // it is safe to decode the `start` and `length` values as UInt32s.\n    //\n    // If we had a start position \"word\" of:\n    //   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 60\n    // we know we really only need to read the last 4 bytes, since we know that\n    // a Buffer's length can't be greater than UInt32 (which can be represented by\n    // up to 4 bytes). So we only need to look at:\n    // 00 00 00 60\n    // `offset + WORD_SIZE - UINT32_BYTE_LENGTH` effectively tells `readUInt32BE`\n    // to read only these last 4 bytes of the word that represent the `start`\n    // value.\n    // We add WORD_SIZE to this value because we are skipping over the location of\n    // the length and referencing the start of the location of the data itself.\n    const UINT32_BYTE_LENGTH = 4;\n    const nextWordOffset = offset + exports.WORD_SIZE;\n    const startUint32MemoryPosition = nextWordOffset - UINT32_BYTE_LENGTH;\n    const start = memory.readUInt32BE(startUint32MemoryPosition) + exports.WORD_SIZE;\n    // the same optimization is applied here.\n    // The word that immediately precedes the data itself is the data's `length`:\n    const end = start + memory.readUInt32BE(start - UINT32_BYTE_LENGTH);\n    return { start, end };\n}\n/**\n * Ganerates a handler function for solidity's bytes1-bytes32 types\n * @param length From 1 to 32.\n * @returns A function that accepts a memory Buffer and an offset.\n */\nfunction fixedBytes(length) {\n    return (memory, offset) => handleBytes(memory, offset, offset + length);\n}\nexports.fixedBytes = fixedBytes;\n/**\n * Returns the hex representation of the bytes in `memory`.\n *\n * @param memory\n * @param start The start of the data in the given memory.\n * @param end The end of the data in the given memory (not inclusive).\n * @returns\n */\nfunction handleBytes(memory, start, end) {\n    return `0x${memory.toString(\"hex\", start, end)}`;\n}\nconst int256 = (memory, offset) => {\n    // convert from two's compliment to signed BigInt\n    const twosComplementBuffer = memory.subarray(offset, offset + exports.WORD_SIZE);\n    const twosComplementBigInt = (0, utils_1.bufferToBigInt)(twosComplementBuffer);\n    if (twosComplementBuffer[0] & 128) {\n        // if the first bit is `1` we need to convert from two's compliment\n        return twosComplementBigInt | OR_WITH_TWOS_COMPLEMENT;\n    }\n    else {\n        // if the first bit is not `1` we can treat it as unsigned\n        return twosComplementBigInt;\n    }\n};\nexports.int256 = int256;\n/**\n * Handle decoding of solidity's `uint256` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst uint256 = (memory, offset) => (0, utils_1.bufferToBigInt)(memory.subarray(offset, offset + exports.WORD_SIZE));\nexports.uint256 = uint256;\n/**\n * Handle decoding of solidity's dynamic `string` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst string = (memory, offset) => {\n    const { start, end } = getDynamicDataMarkers(memory, offset);\n    return memory.toString(\"utf8\", start, end);\n};\nexports.string = string;\n/**\n * Handle decoding of solidity's `bool` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst bool = (memory, offset) => memory[offset + exports.WORD_SIZE - 1] !== 0;\nexports.bool = bool;\n/**\n * Handle decoding of solidity's `address` type from EVM memory.\n * @param memory\n * @param offset\n * @returns A 20 byte hex encoded string, prefixed with 0x.\n */\nconst address = (memory, offset) => `0x${memory.toString(\"hex\", offset + 12, offset + exports.WORD_SIZE)}`;\nexports.address = address;\n/**\n * Handle decoding of solidity's dynamic `bytes` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst bytes = (memory, offset) => {\n    const { start, end } = getDynamicDataMarkers(memory, offset);\n    return handleBytes(memory, start, end);\n};\nexports.bytes = bytes;\nexports.Handlers = {\n    address: exports.address,\n    bool: exports.bool,\n    bytes: exports.bytes,\n    int256: exports.int256,\n    string: exports.string,\n    uint256: exports.uint256\n};\n//# sourceMappingURL=handlers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maybeGetLogs = void 0;\nconst handlers_1 = require(\"./handlers\");\nconst signatures_1 = require(\"./signatures\");\nconst CONSOLE_ADDRESS = 0x636f6e736f6c652e6c6f67n;\n/**\n * Returns arguments passed to console.sol's `console.log` if the given\n * `@ethereumjs/vm` step event's `opcode`, `stack`, and `memory` fields contain\n * valid `console.log` data.\n *\n * The event's `opcode.name` field must be `\"STATICCALL\"` and the `toAddress` on\n * the `stack` must be the `console.log` address:\n * `0x000000000000000000636f6e736f6c652e6c6f67`.\n *\n * @param event - `@ethereumjs/vm` step event\n * @returns\n */\nconst maybeGetLogs = (event) => {\n    if (event.opcode.name !== \"STATICCALL\")\n        return null;\n    // STATICCALL, which is the OPCODE that is used to initiate a console.log, has\n    // 6 params, but we only care about these 3:\n    const stack = event.stack;\n    const [memoryLength, memoryOffset, toAddress] = stack.slice(-4, -1);\n    // only if the toAddress is our console address we should try parsing\n    if (toAddress !== CONSOLE_ADDRESS)\n        return null;\n    // STATICCALL allows for passing in invalid pointers and lengths so we need to\n    // guard against failures with a try/catch\n    try {\n        const memoryStart = Number(memoryOffset);\n        const memoryEnd = memoryStart + Number(memoryLength);\n        const memory = event.memory.subarray(memoryStart, memoryEnd);\n        const method = memory.readUInt32BE(0); // 4 bytes wide\n        const handlers = signatures_1.signatureMap.get(method);\n        if (!handlers)\n            return null;\n        // we skip the first 4 bytes, as that is our signature\n        const values = memory.subarray(4);\n        return handlers.map((handler, index) => {\n            const offset = index * handlers_1.WORD_SIZE;\n            return handler(values, offset);\n        });\n    }\n    catch {\n        return null;\n    }\n};\nexports.maybeGetLogs = maybeGetLogs;\n//# sourceMappingURL=maybe-get-logs.js.map","\"use strict\";\n/*\n * This file was automatically generated by `./packages/ethereum/console.log/scripts/generate.ts`; do not edit. */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signatureMap = void 0;\nconst handlers_1 = require(\"./handlers\");\nexports.signatureMap = new Map([\n    // log()\n    [1368866505, []],\n    // log(address)\n    [741264322, [handlers_1.address]],\n    // log(bool)\n    [843419373, [handlers_1.bool]],\n    // log(string)\n    [1093685164, [handlers_1.string]],\n    // log(uint256)\n    [4163653873, [handlers_1.uint256]],\n    // log(uint)\n    [4122065833, [handlers_1.uint256]],\n    // log(bytes)\n    [199720790, [handlers_1.bytes]],\n    // log(int256)\n    [760966329, [handlers_1.int256]],\n    // log(int)\n    [1309416733, [handlers_1.int256]],\n    // log(bytes1)\n    [1847107880, [(0, handlers_1.fixedBytes)(1)]],\n    // log(bytes2)\n    [3921027734, [(0, handlers_1.fixedBytes)(2)]],\n    // log(bytes3)\n    [763578662, [(0, handlers_1.fixedBytes)(3)]],\n    // log(bytes4)\n    [3764340945, [(0, handlers_1.fixedBytes)(4)]],\n    // log(bytes5)\n    [2793701517, [(0, handlers_1.fixedBytes)(5)]],\n    // log(bytes6)\n    [2927928721, [(0, handlers_1.fixedBytes)(6)]],\n    // log(bytes7)\n    [1322614312, [(0, handlers_1.fixedBytes)(7)]],\n    // log(bytes8)\n    [1334060334, [(0, handlers_1.fixedBytes)(8)]],\n    // log(bytes9)\n    [2428341456, [(0, handlers_1.fixedBytes)(9)]],\n    // log(bytes10)\n    [20780939, [(0, handlers_1.fixedBytes)(10)]],\n    // log(bytes11)\n    [67127854, [(0, handlers_1.fixedBytes)(11)]],\n    // log(bytes12)\n    [2258660029, [(0, handlers_1.fixedBytes)(12)]],\n    // log(bytes13)\n    [2488442420, [(0, handlers_1.fixedBytes)(13)]],\n    // log(bytes14)\n    [2456219775, [(0, handlers_1.fixedBytes)(14)]],\n    // log(bytes15)\n    [3667227872, [(0, handlers_1.fixedBytes)(15)]],\n    // log(bytes16)\n    [1717330180, [(0, handlers_1.fixedBytes)(16)]],\n    // log(bytes17)\n    [866084666, [(0, handlers_1.fixedBytes)(17)]],\n    // log(bytes18)\n    [3302112666, [(0, handlers_1.fixedBytes)(18)]],\n    // log(bytes19)\n    [1584093747, [(0, handlers_1.fixedBytes)(19)]],\n    // log(bytes20)\n    [1367925737, [(0, handlers_1.fixedBytes)(20)]],\n    // log(bytes21)\n    [3923391840, [(0, handlers_1.fixedBytes)(21)]],\n    // log(bytes22)\n    [3589990556, [(0, handlers_1.fixedBytes)(22)]],\n    // log(bytes23)\n    [2879508237, [(0, handlers_1.fixedBytes)(23)]],\n    // log(bytes24)\n    [4055063348, [(0, handlers_1.fixedBytes)(24)]],\n    // log(bytes25)\n    [193248344, [(0, handlers_1.fixedBytes)(25)]],\n    // log(bytes26)\n    [4172368369, [(0, handlers_1.fixedBytes)(26)]],\n    // log(bytes27)\n    [976705501, [(0, handlers_1.fixedBytes)(27)]],\n    // log(bytes28)\n    [3358255854, [(0, handlers_1.fixedBytes)(28)]],\n    // log(bytes29)\n    [1265222613, [(0, handlers_1.fixedBytes)(29)]],\n    // log(bytes30)\n    [3994207469, [(0, handlers_1.fixedBytes)(30)]],\n    // log(bytes31)\n    [3263516050, [(0, handlers_1.fixedBytes)(31)]],\n    // log(bytes32)\n    [666357637, [(0, handlers_1.fixedBytes)(32)]],\n    // log(address,address)\n    [3673216170, [handlers_1.address, handlers_1.address]],\n    // log(address,bool)\n    [1974863315, [handlers_1.address, handlers_1.bool]],\n    // log(address,string)\n    [1973388987, [handlers_1.address, handlers_1.string]],\n    // log(address,uint256)\n    [2198464680, [handlers_1.address, handlers_1.uint256]],\n    // log(address,uint)\n    [574869411, [handlers_1.address, handlers_1.uint256]],\n    // log(bool,address)\n    [2235320393, [handlers_1.bool, handlers_1.address]],\n    // log(bool,bool)\n    [705760899, [handlers_1.bool, handlers_1.bool]],\n    // log(bool,string)\n    [2414527781, [handlers_1.bool, handlers_1.string]],\n    // log(bool,uint256)\n    [965833939, [handlers_1.bool, handlers_1.uint256]],\n    // log(bool,uint)\n    [910912146, [handlers_1.bool, handlers_1.uint256]],\n    // log(string,address)\n    [832238387, [handlers_1.string, handlers_1.address]],\n    // log(string,bool)\n    [3283441205, [handlers_1.string, handlers_1.bool]],\n    // log(string,string)\n    [1264337527, [handlers_1.string, handlers_1.string]],\n    // log(string,uint256)\n    [3054400204, [handlers_1.string, handlers_1.uint256]],\n    // log(string,uint)\n    [2534451664, [handlers_1.string, handlers_1.uint256]],\n    // log(uint256,address)\n    [1764191366, [handlers_1.uint256, handlers_1.address]],\n    // log(uint,address)\n    [1491830284, [handlers_1.uint256, handlers_1.address]],\n    // log(uint256,bool)\n    [480083635, [handlers_1.uint256, handlers_1.bool]],\n    // log(uint,bool)\n    [510514412, [handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,string)\n    [1681903839, [handlers_1.uint256, handlers_1.string]],\n    // log(uint,string)\n    [262402885, [handlers_1.uint256, handlers_1.string]],\n    // log(uint256,uint256)\n    [4133908826, [handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,uint)\n    [1812949376, [handlers_1.uint256, handlers_1.uint256]],\n    // log(address,address,address)\n    [25986242, [handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(address,address,bool)\n    [4070990470, [handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(address,address,string)\n    [7426238, [handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(address,address,uint256)\n    [402547077, [handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,address,uint)\n    [1815506290, [handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,bool,address)\n    [4044790253, [handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(address,bool,bool)\n    [3951234194, [handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(address,bool,string)\n    [555898316, [handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(address,bool,uint256)\n    [2622462459, [handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,bool,uint)\n    [742821141, [handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,string,address)\n    [4035396840, [handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(address,string,bool)\n    [3473018801, [handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(address,string,string)\n    [4218888805, [handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(address,string,uint256)\n    [1742565361, [handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,string,uint)\n    [484110986, [handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,uint256,address)\n    [2076235848, [handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint,address)\n    [2548867988, [handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint256,bool)\n    [1736575400, [handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint,bool)\n    [3846889796, [handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint256,string)\n    [2717051050, [handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint,string)\n    [3136907337, [handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint256,uint256)\n    [3063663350, [handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,uint,uint)\n    [2273710942, [handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,address,address)\n    [3530962535, [handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(bool,address,bool)\n    [415876934, [handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(bool,address,string)\n    [3734671984, [handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(bool,address,uint256)\n    [1601936123, [handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,address,uint)\n    [3950005167, [handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,bool,address)\n    [276362893, [handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(bool,bool,bool)\n    [1349555864, [handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(bool,bool,string)\n    [626391622, [handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(bool,bool,uint256)\n    [317855234, [handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,bool,uint)\n    [2954061243, [handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,string,address)\n    [2509355347, [handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(bool,string,bool)\n    [3686056519, [handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(bool,string,string)\n    [2960557183, [handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(bool,string,uint256)\n    [278130193, [handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,string,uint)\n    [3224906412, [handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,uint256,address)\n    [143587794, [handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint,address)\n    [3302110471, [handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint256,bool)\n    [3906927529, [handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint,bool)\n    [464374251, [handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint256,string)\n    [3288086896, [handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint,string)\n    [3359211184, [handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint256,uint256)\n    [923808615, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,uint,uint)\n    [995886048, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,address,address)\n    [4243355104, [handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(string,address,bool)\n    [3374145236, [handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(string,address,string)\n    [3773410639, [handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(string,address,uint256)\n    [220641573, [handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,address,uint)\n    [130552343, [handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,bool,address)\n    [2469116728, [handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(string,bool,bool)\n    [2232122070, [handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(string,bool,string)\n    [3801674877, [handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(string,bool,uint256)\n    [3378075862, [handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,bool,uint)\n    [689682896, [handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,string,address)\n    [2515337621, [handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(string,string,bool)\n    [2967534005, [handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(string,string,string)\n    [753761519, [handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(string,string,uint256)\n    [1478619041, [handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,string,uint)\n    [4083337817, [handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,uint256,address)\n    [478069832, [handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint,address)\n    [3817119609, [handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint256,bool)\n    [3396809649, [handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint,bool)\n    [4043501061, [handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint256,string)\n    [1500569737, [handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint,string)\n    [2750793529, [handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint256,uint256)\n    [3393701099, [handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,uint,uint)\n    [2526862595, [handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,address,address)\n    [3170737120, [handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint,address,address)\n    [2104993307, [handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint256,address,bool)\n    [2607726658, [handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint,address,bool)\n    [2060456590, [handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint256,address,string)\n    [1674265081, [handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint,address,string)\n    [3464692859, [handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint256,address,uint256)\n    [1520131797, [handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint,address,uint)\n    [2286109610, [handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,bool,address)\n    [889741179, [handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint,bool,address)\n    [1112473535, [handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint256,bool,bool)\n    [544310864, [handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint,bool,bool)\n    [3587091680, [handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,bool,string)\n    [2239189025, [handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint,bool,string)\n    [2332955902, [handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint256,bool,uint256)\n    [537493524, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,bool,uint)\n    [1515034914, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,string,address)\n    [2063255897, [handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint,string,address)\n    [529592906, [handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint256,string,bool)\n    [1290643290, [handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint,string,bool)\n    [1185403086, [handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint256,string,string)\n    [2970968351, [handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint,string,string)\n    [1062716053, [handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint256,string,uint256)\n    [933920076, [handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint,string,uint)\n    [1533929535, [handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,uint256,address)\n    [1553380145, [handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint,uint,address)\n    [3191032091, [handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,uint256,bool)\n    [1197922930, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,uint,bool)\n    [1733758967, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,uint256,string)\n    [1909476082, [handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint,uint,string)\n    [2104037094, [handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,uint256,uint256)\n    [3522001468, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,uint,uint)\n    [3884059252, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,address,address,address)\n    [1717301556, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(address,address,address,bool)\n    [238520724, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(address,address,address,string)\n    [4161329696, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(address,address,address,uint256)\n    [2485456247, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,address,address,uint)\n    [3982404743, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,address,bool,address)\n    [2669396846, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(address,address,bool,bool)\n    [752096074, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(address,address,bool,string)\n    [2858762440, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(address,address,bool,uint256)\n    [963766156, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,address,bool,uint)\n    [2513854225, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,address,string,address)\n    [2406706454, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(address,address,string,bool)\n    [1863997774, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(address,address,string,string)\n    [566079269, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(address,address,string,uint256)\n    [4011651047, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,address,string,uint)\n    [69767936, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,address,uint256,address)\n    [2376523509, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,address,uint,address)\n    [3603321462, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,address,uint256,bool)\n    [2604815586, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,address,uint,bool)\n    [3270936812, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,address,uint256,string)\n    [4256496016, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,address,uint,string)\n    [2647731885, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,address,uint256,uint256)\n    [3193255041, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,address,uint,uint)\n    [1425929188, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,bool,address,address)\n    [1711502813, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(address,bool,address,bool)\n    [2801077007, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(address,bool,address,string)\n    [769095910, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(address,bool,address,uint256)\n    [2807847390, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(address,bool,address,uint)\n    [3698398930, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(address,bool,bool,address)\n    [3476636805, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(address,bool,bool,bool)\n    [3401856121, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(address,bool,bool,string)\n    [3754205928, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(address,bool,bool,uint256)\n    [2353946086, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(address,bool,bool,uint)\n    [3484780374, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(address,bool,string,address)\n    [436029782, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(address,bool,string,bool)\n    [1353532957, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(address,bool,string,string)\n    [1197235251, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(address,bool,string,uint256)\n    [2162598411, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(address,bool,string,uint)\n    [2652011374, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(address,bool,uint256,address)\n    [3438776481, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(address,bool,uint,address)\n    [227337758, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(address,bool,uint256,bool)\n    [3294903840, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(address,bool,uint,bool)\n    [2244855215, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(address,bool,uint256,string)\n    [178704301, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(address,bool,uint,string)\n    [2606272204, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(address,bool,uint256,uint256)\n    [946861556, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,bool,uint,uint)\n    [3255869470, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,string,address,address)\n    [221706784, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(address,string,address,bool)\n    [233909110, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(address,string,address,string)\n    [4158874181, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(address,string,address,uint256)\n    [1166009295, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(address,string,address,uint)\n    [2350461865, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(address,string,bool,address)\n    [542667202, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(address,string,bool,bool)\n    [1595759775, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(address,string,bool,string)\n    [3154862590, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(address,string,bool,uint256)\n    [1365129398, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(address,string,bool,uint)\n    [3877655068, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(address,string,string,address)\n    [2689478535, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(address,string,string,bool)\n    [900007711, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(address,string,string,string)\n    [1560462603, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(address,string,string,uint256)\n    [362776871, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(address,string,string,uint)\n    [2706362425, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(address,string,uint256,address)\n    [1662531192, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(address,string,uint,address)\n    [3755464715, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(address,string,uint256,bool)\n    [251125840, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(address,string,uint,bool)\n    [2116357467, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(address,string,uint256,string)\n    [1149776040, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(address,string,uint,string)\n    [1561552329, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(address,string,uint256,uint256)\n    [499704248, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,string,uint,uint)\n    [2764647008, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,uint256,address,address)\n    [1200430178, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(address,uint,address,address)\n    [3961816175, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(address,uint256,address,bool)\n    [2713504179, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(address,uint,address,bool)\n    [4051804649, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(address,uint256,address,string)\n    [497649386, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(address,uint,address,string)\n    [1567749022, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(address,uint256,address,uint256)\n    [269444366, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(address,uint,address,uint)\n    [2782496616, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(address,uint256,bool,address)\n    [2736520652, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(address,uint,bool,address)\n    [602229106, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(address,uint256,bool,bool)\n    [1005970743, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(address,uint,bool,bool)\n    [4272018778, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(address,uint256,bool,string)\n    [3316483577, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(address,uint,bool,string)\n    [2391690869, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(address,uint256,bool,uint256)\n    [586594713, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(address,uint,bool,uint)\n    [1770996626, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(address,uint256,string,address)\n    [1547898183, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(address,uint,string,address)\n    [3698927108, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(address,uint256,string,bool)\n    [3474460764, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(address,uint,string,bool)\n    [2751614737, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(address,uint256,string,string)\n    [2292761606, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(address,uint,string,string)\n    [2119616147, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(address,uint256,string,uint256)\n    [3204577425, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(address,uint,string,uint)\n    [4111650715, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(address,uint256,uint256,address)\n    [551786573, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint,uint,address)\n    [519451700, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint256,uint256,bool)\n    [1727118439, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint,uint,bool)\n    [3964381346, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint256,uint256,string)\n    [1244184599, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint,uint,string)\n    [2301889963, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint256,uint256,uint256)\n    [888202806, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,uint,uint,uint)\n    [1024368100, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,address,address,address)\n    [487903233, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(bool,address,address,bool)\n    [1180699616, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(bool,address,address,string)\n    [3625099623, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(bool,address,address,uint256)\n    [208064958, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(bool,address,address,uint)\n    [1384430956, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(bool,address,bool,address)\n    [474063670, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(bool,address,bool,bool)\n    [1788626827, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(bool,address,bool,string)\n    [1248250676, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(bool,address,bool,uint256)\n    [126031106, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,address,bool,uint)\n    [1287000017, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,address,string,address)\n    [1870422078, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(bool,address,string,bool)\n    [3804222987, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(bool,address,string,string)\n    [2805734838, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(bool,address,string,uint256)\n    [3256837319, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(bool,address,string,uint)\n    [194640930, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(bool,address,uint256,address)\n    [325780957, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(bool,address,uint,address)\n    [1760647349, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(bool,address,uint256,bool)\n    [3590430492, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,address,uint,bool)\n    [4002252402, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,address,uint256,string)\n    [1374724088, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(bool,address,uint,string)\n    [2691192883, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(bool,address,uint256,uint256)\n    [2079424929, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,address,uint,uint)\n    [2617143996, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,bool,address,address)\n    [4102557348, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(bool,bool,address,bool)\n    [3231908568, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(bool,bool,address,string)\n    [2695133539, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(bool,bool,address,uint256)\n    [1276263767, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,bool,address,uint)\n    [1620281063, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,bool,bool,address)\n    [2352126746, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(bool,bool,bool,bool)\n    [992632032, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(bool,bool,bool,string)\n    [719587540, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(bool,bool,bool,uint256)\n    [1836074433, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,bool,bool,uint)\n    [3259532109, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,bool,string,address)\n    [4188875657, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(bool,bool,string,bool)\n    [3092715066, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(bool,bool,string,string)\n    [1830717265, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(bool,bool,string,uint256)\n    [3819555375, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,bool,string,uint)\n    [395003525, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,bool,uint256,address)\n    [1420274080, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,bool,uint,address)\n    [201299213, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,bool,uint256,bool)\n    [1637764366, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,bool,uint,bool)\n    [2874982852, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,bool,uint256,string)\n    [2111099104, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,bool,uint,string)\n    [1348569399, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,bool,uint256,uint256)\n    [196087467, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,bool,uint,uint)\n    [1181212302, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,string,address,address)\n    [724244700, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(bool,string,address,bool)\n    [1842623690, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(bool,string,address,string)\n    [316065672, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(bool,string,address,uint256)\n    [2781534868, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(bool,string,address,uint)\n    [453743963, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(bool,string,bool,address)\n    [1401816747, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(bool,string,bool,bool)\n    [3697185627, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(bool,string,bool,string)\n    [1211958294, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(bool,string,bool,uint256)\n    [369533843, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,string,bool,uint)\n    [2372902053, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,string,string,address)\n    [2547225816, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(bool,string,string,bool)\n    [508266469, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(bool,string,string,string)\n    [392356650, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(bool,string,string,uint256)\n    [2078327787, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(bool,string,string,uint)\n    [1574643090, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(bool,string,uint256,address)\n    [362193358, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(bool,string,uint,address)\n    [1529002296, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(bool,string,uint256,bool)\n    [1796103507, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,string,uint,bool)\n    [549177775, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,string,uint256,string)\n    [450457062, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(bool,string,uint,string)\n    [2007084013, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(bool,string,uint256,uint256)\n    [679886795, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,string,uint,uint)\n    [2387273838, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,uint256,address,address)\n    [653615272, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(bool,uint,address,address)\n    [2318373034, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(bool,uint256,address,bool)\n    [3032683775, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(bool,uint,address,bool)\n    [1705899016, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(bool,uint256,address,string)\n    [464760986, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(bool,uint,address,string)\n    [403247937, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(bool,uint256,address,uint256)\n    [355982471, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(bool,uint,address,uint)\n    [3399820138, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(bool,uint256,bool,address)\n    [2597139990, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(bool,uint,bool,address)\n    [1114097656, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(bool,uint256,bool,bool)\n    [3468031191, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(bool,uint,bool,bool)\n    [2650928961, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(bool,uint256,bool,string)\n    [2437143473, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(bool,uint,bool,string)\n    [3067439572, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(bool,uint256,bool,uint256)\n    [2140912802, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,uint,bool,uint)\n    [3554563475, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,uint256,string,address)\n    [4275904511, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(bool,uint,string,address)\n    [2781285673, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(bool,uint256,string,bool)\n    [3857124139, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(bool,uint,string,bool)\n    [2446522387, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(bool,uint256,string,string)\n    [4122747465, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(bool,uint,string,string)\n    [3542771016, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(bool,uint256,string,uint256)\n    [1779538402, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(bool,uint,string,uint)\n    [1098907931, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(bool,uint256,uint256,address)\n    [14518201, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint,uint,address)\n    [4049711649, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint256,uint256,bool)\n    [3197649747, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint,uint,bool)\n    [2753397214, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint256,uint256,string)\n    [2389310301, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint,uint,string)\n    [3657852616, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint256,uint256,uint256)\n    [927708338, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,uint,uint,uint)\n    [853517604, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,address,address,address)\n    [3985582326, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(string,address,address,bool)\n    [3047013728, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(string,address,address,string)\n    [2148146279, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(string,address,address,uint256)\n    [2398352281, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(string,address,address,uint)\n    [1857524797, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(string,address,bool,address)\n    [573965245, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(string,address,bool,bool)\n    [2038975531, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(string,address,bool,string)\n    [72663161, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(string,address,bool,uint256)\n    [1050642026, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(string,address,bool,uint)\n    [3318856587, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(string,address,string,address)\n    [2864486961, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(string,address,string,bool)\n    [1595265676, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(string,address,string,string)\n    [609847026, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(string,address,string,uint256)\n    [2446397742, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(string,address,string,uint)\n    [2405583849, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(string,address,uint256,address)\n    [1677429701, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(string,address,uint,address)\n    [2741431424, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(string,address,uint256,bool)\n    [4232594928, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(string,address,uint,bool)\n    [1522647356, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(string,address,uint256,string)\n    [1514632754, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(string,address,uint,string)\n    [1280700980, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(string,address,uint256,uint256)\n    [4176812830, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,address,uint,uint)\n    [3668153533, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,bool,address,address)\n    [870964509, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(string,bool,address,bool)\n    [2508990662, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(string,bool,address,string)\n    [764294052, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(string,bool,address,uint256)\n    [1560853253, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(string,bool,address,uint)\n    [685723286, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(string,bool,bool,address)\n    [1905304873, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(string,bool,bool,bool)\n    [2304440517, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(string,bool,bool,string)\n    [2636305885, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(string,bool,bool,uint256)\n    [2386524329, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(string,bool,bool,uint)\n    [2155164136, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(string,bool,string,address)\n    [3764542249, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(string,bool,string,bool)\n    [1066037277, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(string,bool,string,string)\n    [2821114603, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(string,bool,string,uint256)\n    [620303461, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(string,bool,string,uint)\n    [885731469, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(string,bool,uint256,address)\n    [2472413631, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(string,bool,uint,address)\n    [1909687565, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(string,bool,uint256,bool)\n    [2331496330, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(string,bool,uint,bool)\n    [1019590099, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(string,bool,uint256,string)\n    [1949134567, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(string,bool,uint,string)\n    [1119461927, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(string,bool,uint256,uint256)\n    [1689631591, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,bool,uint,uint)\n    [1572859960, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,string,address,address)\n    [1134328815, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(string,string,address,bool)\n    [1556958775, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(string,string,address,string)\n    [3944480640, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(string,string,address,uint256)\n    [2093204999, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,string,address,uint)\n    [1250010474, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,string,bool,address)\n    [3279013851, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(string,string,bool,bool)\n    [1081628777, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(string,string,bool,string)\n    [1585754346, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(string,string,bool,uint256)\n    [3601791698, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,string,bool,uint)\n    [2256636538, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,string,string,address)\n    [1834430276, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(string,string,string,bool)\n    [739726573, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(string,string,string,string)\n    [3731419658, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(string,string,string,uint256)\n    [2393878571, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,string,string,uint)\n    [2681211381, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,string,uint256,address)\n    [270792626, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,string,uint,address)\n    [1565476480, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,string,uint256,bool)\n    [3282609748, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,string,uint,bool)\n    [3864418506, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,string,uint256,string)\n    [1562023706, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,string,uint,string)\n    [2366909661, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,string,uint256,uint256)\n    [4099767596, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,string,uint,uint)\n    [3587119056, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,uint256,address,address)\n    [1587722158, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(string,uint,address,address)\n    [3939013249, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(string,uint256,address,bool)\n    [2182163010, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(string,uint,address,bool)\n    [285649143, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(string,uint256,address,string)\n    [2684039059, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(string,uint,address,string)\n    [844415720, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(string,uint256,address,uint256)\n    [1325727174, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(string,uint,address,uint)\n    [1481210622, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(string,uint256,bool,address)\n    [3773389720, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(string,uint,bool,address)\n    [3847527825, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(string,uint256,bool,bool)\n    [894187222, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(string,uint,bool,bool)\n    [3816813520, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(string,uint256,bool,string)\n    [2885106328, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(string,uint,bool,string)\n    [1993105508, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(string,uint256,bool,uint256)\n    [3827003247, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(string,uint,bool,uint)\n    [1427009269, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(string,uint256,string,address)\n    [2084975268, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(string,uint,string,address)\n    [3144824297, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(string,uint256,string,bool)\n    [2099530013, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(string,uint,string,bool)\n    [3919545039, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(string,uint256,string,string)\n    [1522028063, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(string,uint,string,string)\n    [1821956834, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(string,uint256,string,uint256)\n    [3330189777, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(string,uint,string,uint)\n    [2697245221, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(string,uint256,uint256,address)\n    [3793609336, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint,uint,address)\n    [3201771711, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint256,uint256,bool)\n    [1982258066, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint,uint,bool)\n    [4147936829, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint256,uint256,string)\n    [2236298390, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint,uint,string)\n    [2773406909, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint256,uint256,uint256)\n    [2812835923, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,uint,uint,uint)\n    [149837414, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,address,address,address)\n    [612938772, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(uint,address,address,address)\n    [1430734329, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(uint256,address,address,bool)\n    [153090805, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(uint,address,address,bool)\n    [22350596, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(uint256,address,address,string)\n    [52195187, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(uint,address,address,string)\n    [2034490470, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(uint256,address,address,uint256)\n    [1936653238, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(uint,address,address,uint)\n    [2587672470, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,address,bool,address)\n    [4017276179, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(uint,address,bool,address)\n    [3056677012, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(uint256,address,bool,bool)\n    [3813741583, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(uint,address,bool,bool)\n    [2116501773, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,address,bool,string)\n    [2432370346, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(uint,address,bool,string)\n    [1676730946, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(uint256,address,bool,uint256)\n    [1522374954, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,address,bool,uint)\n    [2064181483, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,address,string,address)\n    [2629472255, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(uint,address,string,address)\n    [3420819197, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(uint256,address,string,bool)\n    [3425872647, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(uint,address,string,bool)\n    [581204390, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(uint256,address,string,string)\n    [1041403043, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(uint,address,string,string)\n    [2373420580, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(uint256,address,string,uint256)\n    [1182952285, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(uint,address,string,uint)\n    [2697204968, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,address,uint256,address)\n    [364980149, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(uint,address,uint,address)\n    [4256361684, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,address,uint256,bool)\n    [1601452668, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,address,uint,bool)\n    [435581801, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,address,uint256,string)\n    [3719324961, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(uint,address,uint,string)\n    [1054063912, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,address,uint256,uint256)\n    [211605953, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,address,uint,uint)\n    [3399106228, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,bool,address,address)\n    [2716814523, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(uint,bool,address,address)\n    [2263728396, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(uint256,bool,address,bool)\n    [1162695845, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(uint,bool,address,bool)\n    [2449150530, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(uint256,bool,address,string)\n    [2917159623, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(uint,bool,address,string)\n    [2721084958, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(uint256,bool,address,uint256)\n    [125994997, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(uint,bool,address,uint)\n    [1102442299, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,bool,bool,address)\n    [1768164185, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(uint,bool,bool,address)\n    [1392910941, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(uint256,bool,bool,bool)\n    [3069540257, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(uint,bool,bool,bool)\n    [1315722005, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,bool,bool,string)\n    [3722155361, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(uint,bool,bool,string)\n    [831186331, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(uint256,bool,bool,uint256)\n    [1952763427, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,bool,bool,uint)\n    [3173363033, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,bool,string,address)\n    [4015165464, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(uint,bool,string,address)\n    [1231956916, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(uint256,bool,string,bool)\n    [3952250239, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(uint,bool,string,bool)\n    [879671495, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(uint256,bool,string,string)\n    [1757984957, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(uint,bool,string,string)\n    [2754870525, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(uint256,bool,string,uint256)\n    [740099910, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(uint,bool,string,uint)\n    [2438978344, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,bool,uint256,address)\n    [2295029825, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(uint,bool,uint,address)\n    [1329595790, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,bool,uint256,bool)\n    [2443193898, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,bool,uint,bool)\n    [3534472445, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,bool,uint256,string)\n    [3724797812, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(uint,bool,uint,string)\n    [3906845782, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,bool,uint256,uint256)\n    [3333212072, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,bool,uint,uint)\n    [1451396516, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,string,address,address)\n    [1634266465, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(uint,string,address,address)\n    [2141537675, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(uint256,string,address,bool)\n    [2428701270, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(uint,string,address,bool)\n    [4181720887, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(uint256,string,address,string)\n    [2621104033, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(uint,string,address,string)\n    [4170733439, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(uint256,string,address,uint256)\n    [3906142605, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(uint,string,address,uint)\n    [2565338099, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,string,bool,address)\n    [2922300801, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(uint,string,bool,address)\n    [2037328032, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(uint256,string,bool,bool)\n    [3126025628, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(uint,string,bool,bool)\n    [1371286465, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,string,bool,string)\n    [3537118157, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(uint,string,bool,string)\n    [2370346144, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(uint256,string,bool,uint256)\n    [3472922752, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,string,bool,uint)\n    [2763295359, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,string,string,address)\n    [3582182914, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(uint,string,string,address)\n    [3432549024, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(uint256,string,string,bool)\n    [3014047421, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(uint,string,string,bool)\n    [310782872, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(uint256,string,string,string)\n    [564987523, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(uint,string,string,string)\n    [1474103825, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(uint256,string,string,uint256)\n    [2955463101, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(uint,string,string,uint)\n    [1995203422, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,string,uint256,address)\n    [992115124, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(uint,string,uint,address)\n    [2877020669, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,string,uint256,bool)\n    [1763348340, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,string,uint,bool)\n    [2270850606, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,string,uint256,string)\n    [3082360010, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(uint,string,uint,string)\n    [2730232985, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,string,uint256,uint256)\n    [2193775476, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,string,uint,uint)\n    [3221501959, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,uint256,address,address)\n    [1453707697, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint,uint,address,address)\n    [3398671136, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint256,uint256,address,bool)\n    [365610102, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint,uint,address,bool)\n    [2833785006, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint256,uint256,address,string)\n    [1826504888, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint,uint,address,string)\n    [3600994782, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint256,uint256,address,uint256)\n    [2297881778, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint,uint,address,uint)\n    [1628154048, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,uint256,bool,address)\n    [2592172675, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint,uint,bool,address)\n    [3776410703, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint256,uint256,bool,bool)\n    [2869451494, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint,uint,bool,bool)\n    [2495495089, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,uint256,bool,string)\n    [2780101785, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint,uint,bool,string)\n    [4024028142, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint256,uint256,bool,uint256)\n    [3950997458, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,uint,bool,uint)\n    [1818524812, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,uint256,string,address)\n    [1121066423, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint,uint,string,address)\n    [1127384482, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint256,uint256,string,bool)\n    [2062986021, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint,uint,string,bool)\n    [2989403910, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint256,uint256,string,string)\n    [668512210, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint,uint,string,string)\n    [2080582194, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint256,uint256,string,uint256)\n    [1570936811, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint,uint,string,uint)\n    [949229117, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,uint256,uint256,address)\n    [4202792367, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint,uint,uint,address)\n    [3766828905, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,uint256,uint256,bool)\n    [3315126661, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,uint,uint,bool)\n    [1683143115, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,uint256,uint256,string)\n    [1506790371, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint,uint,uint,string)\n    [2024634892, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,uint256,uint256,uint256)\n    [423606272, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,uint,uint,uint)\n    [1554033982, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]]\n]);\n//# sourceMappingURL=signatures.js.map","\"use strict\";\n/*!\n * @ganache/ethereum\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst chalk_1 = __importDefault(require(\"chalk\"));\nconst colors_1 = require(\"@ganache/colors\");\nconst utils_1 = require(\"@ganache/utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst ethereum_options_1 = require(\"@ganache/ethereum-options\");\nconst flavor_1 = require(\"@ganache/flavor\");\nconst connector_1 = require(\"./src/connector\");\n__exportStar(require(\"./src/connector\"), exports);\n__exportStar(require(\"./src/api-types\"), exports);\nfunction capitalizeFirstLetter(string) {\n    return string[0].toUpperCase() + string.slice(1);\n}\nfunction color(str) {\n    return (0, chalk_1.default) `{hex(\"${colors_1.TruffleColors.porsche}\") ${str}}`;\n}\nconst EthereumFlavor = {\n    flavor: \"ethereum\",\n    connect: (options, executor) => new connector_1.Connector(options, executor),\n    options: {\n        provider: ethereum_options_1.EthereumOptionsConfig,\n        server: flavor_1.ServerOptionsConfig,\n        cli: flavor_1.CliOptionsConfig\n    },\n    ready\n};\n// flavors are exported as a default export\nexports.default = EthereumFlavor;\nfunction ready({ provider, options }) {\n    const liveOptions = provider.getOptions();\n    const accounts = provider.getInitialAccounts();\n    const addresses = Object.keys(accounts);\n    const logs = [];\n    logs.push(\"\");\n    logs.push(\"Available Accounts\");\n    logs.push(\"==================\");\n    if (addresses.length > 0) {\n        addresses.forEach(function (address, index) {\n            const balance = accounts[address].balance;\n            const strBalance = balance / utils_1.WEI;\n            const about = balance % utils_1.WEI === 0n ? \"\" : \"~\";\n            let line = `(${index}) ${(0, util_1.toChecksumAddress)(address)} (${about}${strBalance} ETH)`;\n            if (!accounts[address].unlocked) {\n                line += \" 🔒\";\n            }\n            logs.push(line);\n        });\n        logs.push(\"\");\n        logs.push(\"Private Keys\");\n        logs.push(\"==================\");\n        addresses.forEach(function (address, index) {\n            logs.push(`(${index}) ${accounts[address].secretKey}`);\n        });\n        if (liveOptions.wallet.accountKeysPath != null) {\n            logs.push(\"\");\n            logs.push(`Accounts and keys saved to ${liveOptions.wallet.accountKeysPath}`);\n        }\n    }\n    else {\n        logs.push(\"(no accounts unlocked)\");\n    }\n    if (liveOptions.wallet.accounts == null) {\n        logs.push(\"\");\n        logs.push(\"HD Wallet\");\n        logs.push(\"==================\");\n        logs.push(`Mnemonic:      ${color(liveOptions.wallet.mnemonic)}`);\n        logs.push(`Base HD Path:  ${color(liveOptions.wallet.hdPath.join(\"/\") + \"/{account_index}\")}`);\n    }\n    if (liveOptions.miner.defaultGasPrice) {\n        logs.push(\"\");\n        logs.push(\"Default Gas Price\");\n        logs.push(\"==================\");\n        logs.push(color(liveOptions.miner.defaultGasPrice.toBigInt().toString()));\n    }\n    if (liveOptions.miner.blockGasLimit) {\n        logs.push(\"\");\n        logs.push(\"BlockGas Limit\");\n        logs.push(\"==================\");\n        logs.push(color(liveOptions.miner.blockGasLimit.toBigInt().toString()));\n    }\n    if (liveOptions.miner.callGasLimit) {\n        logs.push(\"\");\n        logs.push(\"Call Gas Limit\");\n        logs.push(\"==================\");\n        logs.push(color(liveOptions.miner.callGasLimit.toBigInt().toString()));\n    }\n    if (liveOptions.fork.network || liveOptions.fork.url) {\n        logs.push(\"\");\n        logs.push(\"Forked Chain\");\n        logs.push(\"==================\");\n        let location;\n        if (liveOptions.fork.network) {\n            location = `Ethereum ${capitalizeFirstLetter(liveOptions.fork.network.replace(\"goerli\", \"görli\"))}, via ${(0, chalk_1.default) `{hex(\"${colors_1.TruffleColors.infura}\") 丕Infura}`}`;\n        }\n        else {\n            location = liveOptions.fork.url.toString();\n        }\n        logs.push(`Location:        ${color(location)}`);\n        logs.push(`Block:           ${color(liveOptions.fork.blockNumber.toString())}`);\n        logs.push(`Network ID:      ${color(liveOptions.chain.networkId.toString())}`);\n        logs.push(`Time:            ${color(liveOptions.chain.time.toString())}`);\n        if (liveOptions.fork.requestsPerSecond !== 0) {\n            logs.push(`Requests/Second: ${color(liveOptions.fork.requestsPerSecond.toString())}`);\n        }\n    }\n    logs.push(\"\");\n    logs.push(\"Chain\");\n    logs.push(\"==================\");\n    logs.push(`Hardfork: ${color(liveOptions.chain.hardfork)}`);\n    logs.push(`Id:       ${color(liveOptions.chain.chainId.toString())}`);\n    logs.push(\"\");\n    logs.push(\"RPC Listening on \" + options.server.host + \":\" + options.server.port);\n    console.log(logs.join(\"\\n\"));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=api-types.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _EthereumApi_getId, _EthereumApi_filters, _EthereumApi_subscriptions, _EthereumApi_options, _EthereumApi_blockchain, _EthereumApi_wallet;\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#region Imports\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst eth_sig_util_1 = require(\"eth-sig-util\");\nconst utils_1 = require(\"@ganache/utils\");\nconst wallet_1 = __importDefault(require(\"./wallet\"));\nconst gas_estimator_1 = __importDefault(require(\"./helpers/gas-estimator\"));\nconst assert_arg_length_1 = require(\"./helpers/assert-arg-length\");\nconst filter_parsing_1 = require(\"./helpers/filter-parsing\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst miner_1 = require(\"./miner/miner\");\nasync function autofillDefaultTransactionValues(tx, eth_estimateGas, eth_maxPriorityFeePerGas, transaction, blockchain, options) {\n    if (tx.gas.isNull()) {\n        const defaultLimit = options.miner.defaultTransactionGasLimit;\n        if (defaultLimit === utils_1.Quantity.Empty) {\n            // if the default limit is `Quantity.Empty` use a gas estimate\n            tx.gas = await eth_estimateGas(transaction, ethereum_utils_1.Tag.latest);\n        }\n        else {\n            tx.gas = defaultLimit;\n        }\n    }\n    if (\"gasPrice\" in tx && tx.gasPrice.isNull()) {\n        tx.gasPrice = options.miner.defaultGasPrice;\n    }\n    if (\"maxFeePerGas\" in tx && tx.maxFeePerGas.isNull()) {\n        const block = blockchain.blocks.latest;\n        tx.maxFeePerGas = utils_1.Quantity.from(ethereum_block_1.Block.calcNBlocksMaxBaseFee(3, block.header));\n    }\n    if (\"maxPriorityFeePerGas\" in tx && tx.maxPriorityFeePerGas.isNull()) {\n        tx.maxPriorityFeePerGas = await eth_maxPriorityFeePerGas();\n    }\n}\nconst version = process.env.VERSION || \"DEV\";\n//#endregion\n//#region Constants\nconst CLIENT_VERSION = `Ganache/v${version}/EthereumJS TestRPC/v${version}/ethereum-js`;\nconst PROTOCOL_VERSION = utils_1.Data.from(\"0x3f\");\nconst RPC_MODULES = {\n    eth: \"1.0\",\n    net: \"1.0\",\n    rpc: \"1.0\",\n    web3: \"1.0\",\n    evm: \"1.0\",\n    personal: \"1.0\"\n};\n//#endregion\n//#region helpers\n/**\n * Combines RuntimeErrors for a list of rejected or reverted transactions.\n * @param transactions Array of transactions with errors to assert.\n */\nfunction assertExceptionalTransactions(transactions) {\n    let baseError = null;\n    let errors;\n    const data = {};\n    transactions.forEach(transaction => {\n        if (transaction.execException) {\n            if (baseError) {\n                baseError = ethereum_utils_1.VM_EXCEPTIONS;\n                errors.push(`${transaction.hash.toString()}: ${transaction.execException}\\n`);\n                data[transaction.execException.data.hash] =\n                    transaction.execException.data;\n            }\n            else {\n                baseError = ethereum_utils_1.VM_EXCEPTION;\n                errors = [transaction.execException.message];\n                data[transaction.execException.data.hash] =\n                    transaction.execException.data;\n            }\n        }\n    });\n    if (baseError) {\n        const err = new Error(baseError + errors.join(\"\\n\"));\n        err.data = data;\n        throw err;\n    }\n}\n//#endregion helpers\nclass EthereumApi {\n    /**\n     * This is the Ethereum API that the provider interacts with.\n     * The only methods permitted on the prototype are the supported json-rpc\n     * methods.\n     * @param options -\n     * @param wallet -\n     * @param emitter -\n     */\n    constructor(options, wallet, blockchain) {\n        _EthereumApi_getId.set(this, (id => () => utils_1.Quantity.from(++id))(0));\n        _EthereumApi_filters.set(this, new Map());\n        _EthereumApi_subscriptions.set(this, new Map());\n        _EthereumApi_options.set(this, void 0);\n        _EthereumApi_blockchain.set(this, void 0);\n        _EthereumApi_wallet.set(this, void 0);\n        __classPrivateFieldSet(this, _EthereumApi_options, options, \"f\");\n        __classPrivateFieldSet(this, _EthereumApi_wallet, wallet, \"f\");\n        __classPrivateFieldSet(this, _EthereumApi_blockchain, blockchain, \"f\");\n    }\n    //#region db\n    /**\n     * Stores a string in the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @param value - String to store.\n     * @returns returns true if the value was stored, otherwise false.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_putString\", [\"testDb\", \"testKey\", \"testValue\"] ));\n     * ```\n     */\n    async db_putString(dbName, key, value) {\n        return false;\n    }\n    /**\n     * Returns string from the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @returns The previously stored string.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_getString\", [\"testDb\", \"testKey\"] ));\n     * ```\n     */\n    async db_getString(dbName, key) {\n        return \"\";\n    }\n    /**\n     * Stores binary data in the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @param data - Data to store.\n     * @returns true if the value was stored, otherwise false.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_putHex\", [\"testDb\", \"testKey\", \"0x0\"] ));\n     * ```\n     */\n    async db_putHex(dbName, key, data) {\n        return false;\n    }\n    /**\n     * Returns binary data from the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @returns The previously stored data.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_getHex\", [\"testDb\", \"testKey\"] ));\n     * ```\n     */\n    async db_getHex(dbName, key) {\n        return \"0x00\";\n    }\n    //#endregion\n    //#region bzz\n    /**\n     * Returns the kademlia table in a readable table format.\n     * @returns Returns the kademlia table in a readable table format.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"bzz_hive\"));\n     * ```\n     */\n    async bzz_hive() {\n        return [];\n    }\n    /**\n     * Returns details about the swarm node.\n     * @returns Returns details about the swarm node.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"bzz_info\"));\n     * ```\n     */\n    async bzz_info() {\n        return [];\n    }\n    async evm_mine(arg) {\n        // `MINE_ONLY_ONE_BLOCK` refers to the number of blocks mined per call to `blockchain.mine()`\n        const MINE_ONLY_ONE_BLOCK = true;\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        const vmErrorsOnRPCResponse = options.chain.vmErrorsOnRPCResponse;\n        // Since `typeof null === \"object\"` we have to guard against that\n        if (arg !== null && typeof arg === \"object\") {\n            let { blocks, timestamp } = arg;\n            if (blocks == null) {\n                blocks = 1;\n            }\n            // TODO(perf): add an option to mine a bunch of blocks in a batch so\n            // we can save them all to the database in one go.\n            // Developers like to move the blockchain forward by thousands of blocks\n            // at a time and doing this would make it way faster\n            for (let i = 0; i < blocks; i++) {\n                const { transactions } = await blockchain.mine(miner_1.Capacity.FillBlock, MINE_ONLY_ONE_BLOCK, timestamp);\n                if (vmErrorsOnRPCResponse) {\n                    assertExceptionalTransactions(transactions);\n                }\n            }\n        }\n        else {\n            const timestamp = arg;\n            const { transactions } = await blockchain.mine(miner_1.Capacity.FillBlock, MINE_ONLY_ONE_BLOCK, timestamp);\n            if (vmErrorsOnRPCResponse) {\n                assertExceptionalTransactions(transactions);\n            }\n        }\n        return \"0x0\";\n    }\n    /**\n     * Sets the given account's nonce to the specified value. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param nonce - The nonce value to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const nonce = \"0x3e8\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountNonce\", [address, nonce] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountNonce(address, nonce) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        const account = await eei.getAccount(vmAddress);\n        account.nonce = utils_1.Quantity.toBigInt(nonce);\n        await eei.checkpoint();\n        await eei.putAccount(vmAddress, account);\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's balance to the specified WEI value. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param balance - The balance value, in WEI, to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const balance = \"0x3e8\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountBalance\", [address, balance] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountBalance(address, balance) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        const account = await eei.getAccount(vmAddress);\n        account.balance = utils_1.Quantity.toBigInt(balance);\n        await eei.checkpoint();\n        await eei.putAccount(vmAddress, account);\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's code to the specified data. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param code - The code to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const data = \"0xbaddad42\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountCode\", [address, data] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountCode(address, code) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const codeBuffer = utils_1.Data.toBuffer(code);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        // The ethereumjs-vm StateManager does not allow to set empty code,\n        // therefore we will manually set the code hash when \"clearing\" the contract code\n        await eei.checkpoint();\n        if (codeBuffer.length > 0) {\n            await eei.putContractCode(vmAddress, codeBuffer);\n        }\n        else {\n            const account = await eei.getAccount(vmAddress);\n            account.codeHash = util_1.KECCAK256_NULL;\n            await eei.putAccount(vmAddress, account);\n        }\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's storage slot to the specified data. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param slot - The storage slot that should be set.\n     * @param value - The value to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const slot = \"0x0000000000000000000000000000000000000000000000000000000000000005\";\n     * const data = \"0xbaddad42\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountStorageAt\", [address, slot, data] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountStorageAt(address, slot, value) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const slotBuffer = utils_1.Data.toBuffer(slot);\n        const valueBuffer = utils_1.Data.toBuffer(value);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        await eei.checkpoint();\n        await eei.putContractStorage(vmAddress, slotBuffer, valueBuffer);\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Jump forward in time by the given amount of time, in seconds.\n     * @param seconds - Number of seconds to jump forward in time by. Must be greater than or equal to `0`.\n     * @returns Returns the total time adjustment, in seconds.\n     * @example\n     * ```javascript\n     * const seconds = 10;\n     * const timeAdjustment = await provider.send(\"evm_increaseTime\", [seconds] );\n     * console.log(timeAdjustment);\n     * ```\n     */\n    async evm_increaseTime(seconds) {\n        const milliseconds = (typeof seconds === \"number\" ? seconds : utils_1.Quantity.toNumber(seconds)) *\n            1000;\n        return Math.floor(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").increaseTime(milliseconds) / 1000);\n    }\n    /**\n     * Sets the internal clock time to the given timestamp.\n     *\n     * Warning: This will allow you to move *backwards* in time, which may cause\n     * new blocks to appear to be mined before old blocks. This will result in\n     * an invalid state.\n     *\n     * @param time - JavaScript timestamp (millisecond precision).\n     * @returns The amount of *seconds* between the given timestamp and now.\n     * @example\n     * ```javascript\n     * const currentDate = Date.now();\n     * await new Promise(resolve => {\n     *   setTimeout(async () => {\n     *     const time = await provider.send(\"evm_setTime\", [currentDate]);\n     *     console.log(time); // should be about two seconds ago\n     *     resolve();\n     *   }, 1000);\n     * });\n     * ```\n     */\n    async evm_setTime(time) {\n        let timestamp;\n        switch (typeof time) {\n            case \"object\":\n                timestamp = time.getTime();\n                break;\n            case \"number\":\n                timestamp = time;\n                break;\n            default:\n                timestamp = utils_1.Quantity.toNumber(time);\n                break;\n        }\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const offsetMilliseconds = blockchain.setTimeDiff(timestamp);\n        // convert offsetMilliseconds to seconds:\n        return Math.floor(offsetMilliseconds / 1000);\n    }\n    /**\n     * Revert the state of the blockchain to a previous snapshot. Takes a single\n     * parameter, which is the snapshot id to revert to. This deletes the given\n     * snapshot, as well as any snapshots taken after (e.g.: reverting to id 0x1\n     * will delete snapshots with ids 0x1, 0x2, etc.)\n     *\n     * @param snapshotId - The snapshot id to revert.\n     * @returns `true` if a snapshot was reverted, otherwise `false`.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.send(\"eth_accounts\");\n     * const startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from] ));\n     *\n     * // take a snapshot\n     * const snapshotId = await provider.send(\"evm_snapshot\");\n     *\n     * // send value to another account (over-simplified example)\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"] );\n     * await provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}] );\n     *\n     * // ensure balance has updated\n     * const newBalance = await provider.send(\"eth_getBalance\", [from] );\n     * assert(BigInt(newBalance) < startingBalance);\n     *\n     * // revert the snapshot\n     * const isReverted = await provider.send(\"evm_revert\", [snapshotId] );\n     * assert(isReverted);\n     * console.log({isReverted: isReverted});\n     *\n     * // ensure balance has reverted\n     * const endingBalance = await provider.send(\"eth_getBalance\", [from] );\n     * const isBalanceReverted = assert.strictEqual(BigInt(endingBalance), startingBalance);\n     * console.log({isBalanceReverted: isBalanceReverted});\n     * ```\n     */\n    async evm_revert(snapshotId) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").revert(utils_1.Quantity.from(snapshotId));\n    }\n    /**\n     * Snapshot the state of the blockchain at the current block. Takes no\n     * parameters. Returns the id of the snapshot that was created. A snapshot can\n     * only be reverted once. After a successful `evm_revert`, the same snapshot\n     * id cannot be used again. Consider creating a new snapshot after each\n     * `evm_revert` if you need to revert to the same point multiple times.\n     *\n     * @returns The hex-encoded identifier for this snapshot.\n     *\n     * @example\n     * ```javascript\n     * const provider = ganache.provider();\n     * const [from, to] = await provider.send(\"eth_accounts\");\n     * const startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from] ));\n     *\n     * // take a snapshot\n     * const snapshotId = await provider.send(\"evm_snapshot\");\n     *\n     * // send value to another account (over-simplified example)\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"] );\n     * await provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}] );\n     *\n     * // ensure balance has updated\n     * const newBalance = await provider.send(\"eth_getBalance\", [from] );\n     * assert(BigInt(newBalance) < startingBalance);\n     *\n     * // revert the snapshot\n     * const isReverted = await provider.send(\"evm_revert\", [snapshotId] );\n     * assert(isReverted);\n     *\n     * // ensure balance has reverted\n     * const endingBalance = await provider.send(\"eth_getBalance\", [from] );\n     * const isBalanceReverted = assert.strictEqual(BigInt(endingBalance), startingBalance);\n     * console.log({isBalanceReverted: isBalanceReverted});\n     * ```\n     */\n    async evm_snapshot() {\n        return utils_1.Quantity.from(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").snapshot());\n    }\n    /**\n     * Adds any arbitrary account to the `personal` namespace.\n     *\n     * Note: accounts already known to the `personal` namespace and accounts\n     * returned by `eth_accounts` cannot be re-added using this method.\n     * @param address - The address of the account to add to the `personal`\n     * namespace.\n     * @param passphrase - The passphrase used to encrypt the account's private key.\n     * NOTE: this passphrase will be needed for all `personal` namespace calls\n     * that require a password.\n     * @returns `true` if  the account was successfully added. `false` if the\n     * account is already in the `personal` namespace.\n     * @example\n     * ```javascript\n     * const address = \"0x742d35Cc6634C0532925a3b844Bc454e4438f44e\";\n     * const passphrase = \"passphrase\"\n     * const result = await provider.send(\"evm_addAccount\", [address, passphrase] );\n     * console.log(result);\n     * ```\n     */\n    async evm_addAccount(address, passphrase) {\n        const addy = ethereum_address_1.Address.from(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addUnknownAccount(addy, passphrase);\n    }\n    /**\n     * Removes an account from the `personal` namespace.\n     *\n     * Note: accounts not known to the `personal` namespace cannot be removed\n     * using this method.\n     * @param address - The address of the account to remove from the `personal`\n     * namespace.\n     * @param passphrase - The passphrase used to decrypt the account's private key.\n     * @returns `true` if the account was successfully removed. `false` if the\n     * account was not in the `personal` namespace.\n     * @example\n     * ```javascript\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const passphrase = \"\";\n     * const result = await provider.send(\"evm_removeAccount\", [address, passphrase] );\n     * console.log(result);\n     * ```\n     */\n    async evm_removeAccount(address, passphrase) {\n        const addy = ethereum_address_1.Address.from(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").removeKnownAccount(addy, passphrase);\n    }\n    //#endregion evm\n    //#region miner\n    /**\n     * Resume the CPU mining process with the given number of threads.\n     *\n     * Note: `threads` is ignored.\n     * @param threads - Number of threads to resume the CPU mining process with.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * await provider.send(\"miner_stop\");\n     * // check that eth_mining returns false\n     * console.log(await provider.send(\"eth_mining\"));\n     * await provider.send(\"miner_start\");\n     * // check that eth_mining returns true\n     * console.log(await provider.send(\"eth_mining\"));\n     * ```\n     */\n    async miner_start(threads = 1) {\n        if (__classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.instamine === \"eager\") {\n            const resumption = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").resume(threads);\n            // resumption can be undefined if the blockchain isn't currently paused\n            if (resumption &&\n                resumption.transactions != null &&\n                __classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.vmErrorsOnRPCResponse) {\n                assertExceptionalTransactions(resumption.transactions);\n            }\n        }\n        else {\n            __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").resume(threads);\n        }\n        return true;\n    }\n    /**\n     * Stop the CPU mining operation.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * // check that eth_mining returns true\n     * console.log(await provider.send(\"eth_mining\"));\n     * await provider.send(\"miner_stop\");\n     * // check that eth_mining returns false\n     * console.log(await provider.send(\"eth_mining\"));\n     * ```\n     */\n    async miner_stop() {\n        __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").pause();\n        return true;\n    }\n    /**\n     * Sets the default accepted gas price when mining transactions.\n     * Any transactions that don't specify a gas price will use this amount.\n     * Transactions that are below this limit are excluded from the mining process.\n     * @param number - Default accepted gas price.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"miner_setGasPrice\", [300000] ));\n     * ```\n     */\n    async miner_setGasPrice(number) {\n        __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.defaultGasPrice = utils_1.Quantity.from(number);\n        return true;\n    }\n    /**\n     * Sets the etherbase, where mining rewards will go.\n     * @param address - The address where the mining rewards will go.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * console.log(await provider.send(\"miner_setEtherbase\", [account] ));\n     * ```\n     */\n    async miner_setEtherbase(address) {\n        __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").coinbase = ethereum_address_1.Address.from(address);\n        return true;\n    }\n    /**\n     * Set the extraData block header field a miner can include.\n     * @param extra - The `extraData` to include.\n     * @returns If successfully set returns `true`, otherwise returns an error.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"miner_setExtra\", [\"0x0\"] ));\n     * ```\n     */\n    async miner_setExtra(extra) {\n        const bytes = utils_1.Data.from(extra);\n        const length = bytes.toBuffer().length;\n        if (length > 32) {\n            throw new Error(`extra exceeds max length. ${length} > 32`);\n        }\n        __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.extraData = bytes;\n        return true;\n    }\n    //#endregion\n    //#region web3\n    /**\n     * Returns the current client version.\n     * @returns The current client version.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"web3_clientVersion\"));\n     * ```\n     */\n    async web3_clientVersion() {\n        return CLIENT_VERSION;\n    }\n    /**\n     * Returns Keccak-256 (not the standardized SHA3-256) of the given data.\n     * @param data - the data to convert into a SHA3 hash.\n     * @returns The SHA3 result of the given string.\n     * @example\n     * ```javascript\n     * const data = \"0xabcdef0123456789\";\n     * const sha3 = await provider.send(\"web3_sha3\", [data] );\n     * console.log(sha3);\n     * ```\n     */\n    async web3_sha3(data) {\n        return utils_1.Data.from((0, utils_1.keccak)(utils_1.Data.toBuffer(data)));\n    }\n    //#endregion\n    //#region net\n    /**\n     * Returns the current network id.\n     * @returns The current network id. This value should NOT be JSON-RPC\n     * Quantity/Data encoded.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_version\"));\n     * ```\n     */\n    async net_version() {\n        return __classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.networkId.toString();\n    }\n    /**\n     * Returns `true` if client is actively listening for network connections.\n     * @returns `true` when listening, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_listening\"));\n     * ```\n     */\n    async net_listening() {\n        return true;\n    }\n    /**\n     * Returns number of peers currently connected to the client.\n     * @returns Number of connected peers.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_peerCount\"));\n     * ```\n     */\n    async net_peerCount() {\n        return utils_1.Quantity.Zero;\n    }\n    //#endregion\n    //#region eth\n    /**\n     * Generates and returns an estimate of how much gas is necessary to allow the\n     * transaction to complete. The transaction will not be added to the\n     * blockchain. Note that the estimate may be significantly more than the\n     * amount of gas actually used by the transaction, for a variety of reasons\n     * including EVM mechanics and node performance.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     *\n     * @returns The amount of gas used.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const gasEstimate = await provider.request({ method: \"eth_estimateGas\", params: [{ from, to }, \"latest\" ] });\n     * console.log(gasEstimate);\n     * ```\n     */\n    async eth_estimateGas(transaction, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blocks = blockchain.blocks;\n        const parentBlock = await blocks.get(blockNumber);\n        const parentHeader = parentBlock.header;\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        const generateVM = async () => {\n            // note(hack): blockchain.vm.copy() doesn't work so we just do it this way\n            // /shrug\n            const vm = await blockchain.createVmFromStateTrie(blockchain.trie.copy(false), options.chain.allowUnlimitedContractSize, false);\n            return vm;\n        };\n        return new Promise((resolve, reject) => {\n            const { coinbase } = blockchain;\n            const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n            if (tx.from == null) {\n                tx.from = coinbase;\n            }\n            if (tx.gas.isNull()) {\n                // eth_estimateGas isn't subject to regular transaction gas limits\n                tx.gas = options.miner.callGasLimit;\n            }\n            const block = new ethereum_block_1.RuntimeBlock(blockchain.common, utils_1.Quantity.from((parentHeader.number.toBigInt() || 0n) + 1n), parentHeader.parentHash, new ethereum_address_1.Address(parentHeader.miner.toBuffer()), tx.gas, parentHeader.gasUsed, parentHeader.timestamp, options.miner.difficulty, parentHeader.totalDifficulty, blockchain.getMixHash(parentHeader.parentHash.toBuffer()), 0n, // no baseFeePerGas for estimates\n            util_1.KECCAK256_RLP);\n            const runArgs = {\n                tx: tx.toVmTransaction(),\n                block,\n                skipBalance: true,\n                skipNonce: true\n            };\n            (0, gas_estimator_1.default)(generateVM, runArgs, (err, result) => {\n                if (err)\n                    return void reject(err);\n                resolve(utils_1.Quantity.from(result.gasEstimate));\n            });\n        });\n    }\n    /**\n     * Returns the current ethereum protocol version.\n     * @returns The current ethereum protocol version.\n     * @example\n     * ```javascript\n     * const version = await provider.request({ method: \"eth_protocolVersion\", params: [] });\n     * console.log(version);\n     * ```\n     */\n    async eth_protocolVersion() {\n        return PROTOCOL_VERSION;\n    }\n    /**\n     * Returns an object containing data about the sync status or `false` when not syncing.\n     *\n     * @returns An object with sync status data or `false`, when not syncing.\n     *\n     * * `startingBlock`: \\{bigint\\} The block at which the import started (will\n     *     only be reset, after the sync reached his head).\n     * * `currentBlock`: \\{bigint\\} The current block, same as `eth_blockNumber`.\n     * * `highestBlock`: \\{bigint\\} The estimated highest block.\n     *\n     * @example\n     * ```javascript\n     * const result = await provider.request({ method: \"eth_syncing\", params: [] });\n     * console.log(result);\n     * ```\n     */\n    async eth_syncing() {\n        return false;\n    }\n    /**\n     * Returns the client coinbase address.\n     * @returns The current coinbase address.\n     * @example\n     * ```javascript\n     * const coinbaseAddress = await provider.request({ method: \"eth_coinbase\" });\n     * console.log(coinbaseAddress);\n     * ```\n     */\n    async eth_coinbase() {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").coinbase;\n    }\n    /**\n     * Returns information about a block by block number.\n     * @param number - Integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the\n     * default block parameter.\n     * @param transactions - If `true` it returns the full transaction objects, if `false` only the hashes of the\n     * transactions.\n     * @returns The block, `null` if the block doesn't exist.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `transactions`: `Array` - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * @example\n     * ```javascript\n     * const block = await provider.request({ method: \"eth_getBlockByNumber\", params: [\"0x0\", false] });\n     * console.log(block);\n     * ```\n     */\n    async eth_getBlockByNumber(number, transactions) {\n        if (typeof transactions === \"undefined\") {\n            transactions = false;\n        }\n        const block = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks\n            .get(number)\n            .catch(_ => null);\n        return block ? block.toJSON(transactions) : null;\n    }\n    /**\n     * Returns the details for the account at the specified address and block\n     * number, the account's Merkle proof, and the storage values for the\n     * specified storage keys with their Merkle-proofs.\n     *\n     * @param address - Address of the account\n     * @param storageKeys - Array of storage keys to be proofed.\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\", or\n     * \"pending\".\n     * @returns An object containing the details for the account at the specified\n     * address and block number, the account's Merkle proof, and the\n     * storage-values for the specified storage keys with their Merkle-proofs:\n     * * `balance`: `QUANTITY` - the balance of the account.\n     * * `codeHash`: `DATA` - 32 Bytes - hash of the account. A simple account\n     *   without code will return\n     *   `\"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\"`\n     * * `nonce`: `QUANTITY` - the nonce of the account.\n     * * `storageHash`: `DATA` - 32 Bytes - SHA3 of the StorageRoot. All storage\n     *   will deliver a MerkleProof starting with this rootHash.\n     * * `accountProof`: `Array` - Array of rlp-serialized MerkleTree-Nodes,\n     *   starting with the stateRoot-NODE, following the path of the SHA3\n     *   (address) as key.\n     * * `storageProof`: `Array` - Array of storage entries as requested. Each\n     *   entry is an object with the following properties:\n     *   * `key`: `DATA` - the requested storage key.\n     *   * `value`: `QUANTITY` - the storage value.\n     *   * `proof`: `Array` - Array of rlp-serialized MerkleTree-Nodes, starting\n     *     with the storageHash-Node, following the path of the SHA3 (key) as\n     *     path.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting `value` to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const proof = await provider.request({ method: \"eth_getProof\", params: [txReceipt.contractAddress, [\"0x0\", \"0x1\"], \"latest\"] });\n     * console.log(proof);\n     * ```\n     */\n    async eth_getProof(address, storageKeys, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        if (blockchain.fallback) {\n            throw new Error(\"eth_getProof is not supported on a forked network. See https://github.com/trufflesuite/ganache/issues/3234 for details.\");\n        }\n        const targetBlock = await blockchain.blocks.get(blockNumber);\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const slotBuffers = storageKeys.map(slotHex => utils_1.Data.toBuffer(slotHex, 32));\n        const stateManagerCopy = blockchain.vm.stateManager.copy();\n        await stateManagerCopy.setStateRoot(targetBlock.header.stateRoot.toBuffer());\n        const proof = await stateManagerCopy.getProof(vmAddress, slotBuffers);\n        return {\n            address: vmAddress,\n            balance: utils_1.Quantity.from(proof.balance),\n            codeHash: utils_1.Data.from(proof.codeHash),\n            nonce: utils_1.Quantity.from(proof.nonce),\n            storageHash: utils_1.Data.from(proof.storageHash),\n            accountProof: proof.accountProof.map(p => utils_1.Data.from(p)),\n            storageProof: proof.storageProof.map(storageProof => ({\n                key: utils_1.Data.from(storageProof.key),\n                proof: storageProof.proof.map(p => utils_1.Data.from(p)),\n                value: utils_1.Quantity.from(storageProof.value)\n            }))\n        };\n    }\n    /**\n     * Returns information about a block by block hash.\n     * @param hash - Hash of a block.\n     * @param transactions - If `true` it returns the full transaction objects, if `false` only the hashes of the\n     * transactions.\n     * @returns The block, `null` if the block doesn't exist.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `transactions`: `Array` - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const block = await provider.request({ method: \"eth_getBlockByHash\", params: [txReceipt.blockHash, true] });\n     * console.log(block);\n     * ```\n     */\n    async eth_getBlockByHash(hash, transactions) {\n        if (typeof transactions === \"undefined\") {\n            transactions = false;\n        }\n        const block = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks\n            .getByHash(hash)\n            .catch(_ => null);\n        return block ? block.toJSON(transactions) : null;\n    }\n    /**\n     * Returns the number of transactions in a block from a block matching the given block number.\n     * @param number - Integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the\n     * default block parameter.\n     * @returns Integer of the number of transactions in the block.\n     * @example\n     * ```javascript\n     * const txCount = await provider.request({ method: \"eth_getBlockTransactionCountByNumber\", params: [\"0x0\"] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getBlockTransactionCountByNumber(blockNumber) {\n        const { blocks } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blockNum = blocks.getEffectiveNumber(blockNumber);\n        const rawBlock = await blocks.getRawByBlockNumber(blockNum);\n        if (!rawBlock)\n            return null;\n        const [, rawTransactions] = (0, rlp_1.decode)(rawBlock);\n        return utils_1.Quantity.from(rawTransactions.length);\n    }\n    /**\n     * Returns the number of transactions in a block from a block matching the given block hash.\n     * @param hash - Hash of a block.\n     * @returns Number of transactions in the block.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const txCount = await provider.request({ method: \"eth_getBlockTransactionCountByHash\", params: [txReceipt.blockHash] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getBlockTransactionCountByHash(hash) {\n        const { blocks } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const block = await blocks.getByHash(hash).catch(_ => null);\n        if (!block)\n            return null;\n        const transactions = block.getTransactions();\n        return utils_1.Quantity.from(transactions.length);\n    }\n    /**\n     * Returns a list of available compilers.\n     * @returns List of available compilers.\n     * @example\n     * ```javascript\n     * const compilers = await provider.send(\"eth_getCompilers\");\n     * console.log(compilers);\n     * ```\n     */\n    async eth_getCompilers() {\n        return [];\n    }\n    /**\n     * Returns information about a transaction by block hash and transaction index position.\n     * @param hash - Hash of a block.\n     * @param index - Integer of the transaction index position.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * const { blockHash, transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByBlockHashAndIndex\", params: [ blockHash, transactionIndex ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByBlockHashAndIndex(hash, index) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const block = await blockchain.blocks\n            .getByHash(hash)\n            .catch(_ => null);\n        if (!block)\n            return null;\n        const transactions = block.getTransactions();\n        return transactions[utils_1.Quantity.toNumber(index)].toJSON(blockchain.common);\n    }\n    /**\n     * Returns information about a transaction by block number and transaction index position.\n     * @param number - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @param index - Integer of the transaction index position.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * const { transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByBlockNumberAndIndex\", params: [ \"latest\", transactionIndex ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByBlockNumberAndIndex(number, index) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const block = await blockchain.blocks.get(number).catch(_ => null);\n        if (!block)\n            return null;\n        const transactions = block.getTransactions();\n        return transactions[utils_1.Quantity.toNumber(index)].toJSON(blockchain.common);\n    }\n    /**\n     * Returns the number of uncles in a block from a block matching the given block hash.\n     * @param hash - Hash of a block.\n     * @returns The number of uncles in a block.\n     * @example\n     * ```javascript\n     * const blockHash = await provider.send(\"eth_getBlockByNumber\", [\"latest\"] );\n     * const uncleCount = await provider.send(\"eth_getUncleCountByBlockHash\", [blockHash] );\n     * console.log(uncleCount);\n     * ```\n     */\n    async eth_getUncleCountByBlockHash(hash) {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns the number of uncles in a block from a block matching the given block hash.\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @returns The number of uncles in a block.\n     * @example\n     * ```javascript\n     * const uncleCount = await provider.send(\"eth_getUncleCountByBlockNumber\", [\"latest\"] );\n     * console.log(uncleCount);\n     * ```\n     */\n    async eth_getUncleCountByBlockNumber(blockNumber) {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns information about a uncle of a block by hash and uncle index position.\n     *\n     * @param hash - Hash of a block.\n     * @param index - The uncle's index position.\n     * @returns A block object or `null` when no block is found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * **NOTE: **The return does not contain a list of transactions in the uncle\n     * block, to get this, make another request to `eth_getBlockByHash`.\n     *\n     * @example\n     * ```javascript\n     * const blockHash = await provider.send(\"eth_getBlockByNumber\", [\"latest\"] );\n     * const block = await provider.send(\"eth_getUncleByBlockHashAndIndex\", [blockHash, \"0x0\"] );\n     * console.log(block);\n     * ```\n     */\n    async eth_getUncleByBlockHashAndIndex(hash, index) {\n        return null;\n    }\n    /**\n     * Returns information about a uncle of a block by hash and uncle index position.\n     *\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @param uncleIndex - The uncle's index position.\n     * @returns A block object or `null` when no block is found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * * **NOTE: **The return does not contain a list of transactions in the uncle\n     * block, to get this, make another request to `eth_getBlockByHash`.\n     *\n     * @example\n     * ```javascript\n     * const block = await provider.send(\"eth_getUncleByBlockNumberAndIndex\", [\"latest\", \"0x0\"] );\n     * console.log(block);\n     * ```\n     */\n    async eth_getUncleByBlockNumberAndIndex(blockNumber, uncleIndex) {\n        return null;\n    }\n    /**\n     * Returns: An Array with the following elements\n     * 1: `DATA`, 32 Bytes - current block header pow-hash\n     * 2: `DATA`, 32 Bytes - the seed hash used for the DAG.\n     * 3: `DATA`, 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty.\n     *\n     * @returns The hash of the current block, the seedHash, and the boundary condition to be met (\"target\").\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"eth_getWork\", [] ));\n     * ```\n     */\n    async eth_getWork() {\n        return [];\n    }\n    /**\n     * Used for submitting a proof-of-work solution.\n     *\n     * @param nonce - The nonce found (64 bits).\n     * @param powHash - The header's pow-hash (256 bits).\n     * @param digest - The mix digest (256 bits).\n     * @returns `true` if the provided solution is valid, otherwise `false`.\n     * @example\n     * ```javascript\n     * const nonce = \"0xe0df4bd14ab39a71\";\n     * const powHash = \"0x0000000000000000000000000000000000000000000000000000000000000001\";\n     * const digest = \"0xb2222a74119abd18dbcb7d1f661c6578b7bbeb4984c50e66ed538347f606b971\";\n     * const result = await provider.request({ method: \"eth_submitWork\", params: [nonce, powHash, digest] });\n     * console.log(result);\n     * ```\n     */\n    async eth_submitWork(nonce, powHash, digest) {\n        return false;\n    }\n    /**\n     * Used for submitting mining hashrate.\n     *\n     * @param hashRate - A hexadecimal string representation (32 bytes) of the hash rate.\n     * @param clientID - A random hexadecimal(32 bytes) ID identifying the client.\n     * @returns `true` if submitting went through successfully and `false` otherwise.\n     * @example\n     * ```javascript\n     * const hashRate = \"0x0000000000000000000000000000000000000000000000000000000000000001\";\n     * const clientId = \"0xb2222a74119abd18dbcb7d1f661c6578b7bbeb4984c50e66ed538347f606b971\";\n     * const result = await provider.request({ method: \"eth_submitHashrate\", params: [hashRate, clientId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_submitHashrate(hashRate, clientID) {\n        return false;\n    }\n    /**\n     * Returns `true` if client is actively mining new blocks.\n     * @returns returns `true` if the client is mining, otherwise `false`.\n     * @example\n     * ```javascript\n     * const isMining = await provider.request({ method: \"eth_mining\", params: [] });\n     * console.log(isMining);\n     * ```\n     */\n    async eth_mining() {\n        // we return the blockchain's started state\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").isStarted();\n    }\n    /**\n     * Returns the number of hashes per second that the node is mining with.\n     * @returns Number of hashes per second.\n     * @example\n     * ```javascript\n     * const hashrate = await provider.request({ method: \"eth_hashrate\", params: [] });\n     * console.log(hashrate);\n     * ```\n     */\n    async eth_hashrate() {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns the current price per gas in wei.\n     * @returns Integer of the current gas price in wei.\n     * @example\n     * ```javascript\n     * const gasPrice = await provider.request({ method: \"eth_gasPrice\", params: [] });\n     * console.log(gasPrice);\n     * ```\n     */\n    async eth_gasPrice() {\n        return __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.defaultGasPrice;\n    }\n    /**\n     * Returns a `maxPriorityFeePerGas` value suitable for quick transaction inclusion.\n     * @returns The maxPriorityFeePerGas in wei.\n     * @example\n     * ```javascript\n     * const suggestedTip = await provider.request({ method: \"eth_maxPriorityFeePerGas\", params: [] });\n     * console.log(suggestedTip);\n     * ```\n     */\n    async eth_maxPriorityFeePerGas() {\n        return utils_1.Quantity.Gwei;\n    }\n    /**\n     * Returns a list of addresses owned by client.\n     * @returns Array of 20 Bytes - addresses owned by the client.\n     * @example\n     * ```javascript\n     * const accounts = await provider.request({ method: \"eth_accounts\", params: [] });\n     * console.log(accounts);\n     * ```\n     */\n    async eth_accounts() {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addresses;\n    }\n    /**\n     * Returns the number of the most recent block.\n     * @returns The current block number the client is on.\n     * @example\n     * ```javascript\n     * const blockNumber = await provider.request({ method: \"eth_blockNumber\" });\n     * console.log(blockNumber);\n     * ```\n     */\n    async eth_blockNumber() {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks.latest.header.number;\n    }\n    /**\n     * Returns the currently configured chain id, a value used in\n     * replay-protected transaction signing as introduced by EIP-155.\n     * @returns The chain id as a string.\n     * @EIP [155 – Simple replay attack protection](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md)\n     *\n     * @example\n     * ```javascript\n     * const chainId = await provider.send(\"eth_chainId\");\n     * console.log(chainId);\n     * ```\n     */\n    async eth_chainId() {\n        return utils_1.Quantity.from(__classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.chainId);\n    }\n    /**\n     * Returns the balance of the account of given address.\n     * @param address - Address to check for balance.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     *\n     * @returns Integer of the account balance in wei.\n     *\n     * @example\n     * ```javascript\n     * const accounts = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const balance = await provider.request({ method: \"eth_getBalance\", params: [accounts[0], \"latest\"] });\n     * console.log(balance);\n     * ```\n     */\n    async eth_getBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").accounts.getBalance(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Returns code at a given address.\n     *\n     * @param address - Address.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\" or \"pending\".\n     * @returns The code from the given address.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const code = await provider.request({ method: \"eth_getCode\", params: [txReceipt.contractAddress, \"latest\"] });\n     * console.log(code);\n     * ```\n     */\n    async eth_getCode(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const { accounts } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        return accounts.getCode(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Returns the value from a storage position at a given address.\n     * @param address - Address of the storage.\n     * @param position - Integer of the position in the storage.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     * @returns The value in storage at the requested position.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const storageValue = await provider.request({ method: \"eth_getStorageAt\", params: [txReceipt.contractAddress, \"0x0\", \"latest\"] });\n     * console.log(storageValue);\n     * ```\n     */\n    async eth_getStorageAt(address, position, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blockNum = blockchain.blocks.getEffectiveNumber(blockNumber);\n        const block = await blockchain.blocks.getRawByBlockNumber(blockNum);\n        if (!block)\n            throw new Error(\"header not found\");\n        const [[, , , blockStateRoot]] = (0, rlp_1.decode)(block);\n        const trie = blockchain.trie.copy(false);\n        trie.setContext(blockStateRoot, null, blockNum);\n        const posBuff = utils_1.Quantity.toBuffer(position);\n        const length = posBuff.length;\n        let paddedPosBuff;\n        if (length < 32) {\n            // storage locations are 32 bytes wide, so we need to expand any value\n            // given to 32 bytes.\n            paddedPosBuff = Buffer.allocUnsafe(32).fill(0);\n            posBuff.copy(paddedPosBuff, 32 - length);\n        }\n        else if (length === 32) {\n            paddedPosBuff = posBuff;\n        }\n        else {\n            // if the position value we're passed is > 32 bytes, truncate it. This is\n            // what geth does.\n            paddedPosBuff = posBuff.slice(-32);\n        }\n        const addressBuf = ethereum_address_1.Address.from(address).toBuffer();\n        const addressData = await trie.get(addressBuf);\n        // An address's stateRoot is stored in the 3rd rlp entry\n        const addressStateRoot = (0, rlp_1.decode)(addressData)[2];\n        trie.setContext(addressStateRoot, addressBuf, blockNum);\n        const value = await trie.get(paddedPosBuff);\n        return utils_1.Data.from((0, rlp_1.decode)(value), 32);\n    }\n    /**\n     * Returns the information about a transaction requested by transaction hash.\n     *\n     * @param transactionHash - Hash of a transaction.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByHash\", params: [ txHash ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByHash(transactionHash) {\n        const { transactions } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const hashBuffer = utils_1.Data.toBuffer(transactionHash);\n        // we must check the database before checking the pending cache, because the\n        // cache is updated _after_ the transaction is already in the database, and\n        // the database contains block info whereas the pending cache doesn't.\n        const transaction = await transactions.get(hashBuffer);\n        if (transaction === null) {\n            // if we can't find it in the list of pending transactions, check the db!\n            const tx = transactions.transactionPool.find(hashBuffer);\n            return tx ? tx.toJSON(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").common) : null;\n        }\n        else {\n            return transaction.toJSON(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").common);\n        }\n    }\n    /**\n     * Returns the receipt of a transaction by transaction hash.\n     *\n     * Note: The receipt is not available for pending transactions.\n     *\n     * @param transactionHash - Hash of a transaction.\n     * @returns Returns the receipt of a transaction by transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     *\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [ txHash ] });\n     * console.log(txReceipt);\n     * ```\n     */\n    async eth_getTransactionReceipt(transactionHash) {\n        const { transactions, transactionReceipts, blocks, common } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const dataHash = utils_1.Data.from(transactionHash);\n        const txHash = dataHash.toBuffer();\n        const transactionPromise = transactions.get(txHash);\n        const receiptPromise = transactionReceipts.get(txHash);\n        const [transaction, receipt] = await Promise.all([\n            transactionPromise,\n            receiptPromise\n        ]);\n        if (transaction) {\n            return receipt.toJSON(transaction, common);\n        }\n        // if we are performing \"strict\" instamining, then check to see if the\n        // transaction is pending so as to warn about the v7 instamine changes\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        if (options.miner.blockTime <= 0 &&\n            options.miner.instamine === \"strict\" &&\n            __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").isStarted()) {\n            const tx = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").transactions.transactionPool.find(txHash);\n            if (tx != null) {\n                options.logging.logger.log(\" > Ganache `eth_getTransactionReceipt` notice: the transaction with hash\\n\" +\n                    ` > \\`${dataHash.toString()}\\` has not\\n` +\n                    \" > yet been mined.\" +\n                    \" See https://trfl.io/v7-instamine for additional information.\");\n            }\n        }\n        return null;\n    }\n    /**\n     * Creates new message call transaction or a contract creation, if the data field contains code.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * console.log(txHash);\n     * ```\n     */\n    async eth_sendTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const fromString = tx.from.toString();\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const isKnownAccount = wallet.knownAccounts.has(fromString);\n        const privateKey = wallet.unlockedAccounts.get(fromString);\n        if (privateKey === undefined) {\n            const msg = isKnownAccount\n                ? \"authentication needed: passphrase or unlock\"\n                : \"sender account not recognized\";\n            throw new Error(msg);\n        }\n        await autofillDefaultTransactionValues(tx, this.eth_estimateGas.bind(this), this.eth_maxPriorityFeePerGas, transaction, blockchain, __classPrivateFieldGet(this, _EthereumApi_options, \"f\"));\n        return blockchain.queueTransaction(tx, privateKey);\n    }\n    /**\n     * Signs a transaction that can be submitted to the network at a later time using `eth_sendRawTransaction`.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The raw, signed transaction.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const signedTx = await provider.request({ method: \"eth_signTransaction\", params: [{ from, to }] });\n     * console.log(signedTx)\n     * ```\n     */\n    async eth_signTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const fromString = tx.from.toString();\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const isKnownAccount = wallet.knownAccounts.has(fromString);\n        const privateKey = wallet.unlockedAccounts.get(fromString);\n        if (privateKey === undefined) {\n            const msg = isKnownAccount\n                ? \"authentication needed: passphrase or unlock\"\n                : \"sender account not recognized\";\n            throw new Error(msg);\n        }\n        tx.signAndHash(privateKey.toBuffer());\n        return utils_1.Data.from(tx.serialized);\n    }\n    /**\n     * Creates new message call transaction or a contract creation for signed transactions.\n     * @param transaction - The signed transaction data.\n     * @returns The transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const signedTx = await provider.request({ method: \"eth_signTransaction\", params: [{ from, to, gas: \"0x5b8d80\", maxFeePerGas: \"0xffffffff\" }] });\n     * const txHash = await provider.send(\"eth_sendRawTransaction\", [signedTx] );\n     * console.log(txHash);\n     * ```\n     */\n    async eth_sendRawTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromString(transaction, blockchain.common);\n        return blockchain.queueTransaction(tx);\n    }\n    /**\n     * The sign method calculates an Ethereum specific signature with:\n     * `sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + message.length + message)))`.\n     *\n     * By adding a prefix to the message makes the calculated signature\n     * recognizable as an Ethereum specific signature. This prevents misuse where a malicious DApp can sign arbitrary data\n     *  (e.g. transaction) and use the signature to impersonate the victim.\n     *\n     * Note the address to sign with must be unlocked.\n     *\n     * @param address - Address to sign with.\n     * @param message - Message to sign.\n     * @returns Signature - a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const msg = \"0x307866666666666666666666\";\n     * const signature = await provider.request({ method: \"eth_sign\", params: [account, msg] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_sign(address, message) {\n        const account = ethereum_address_1.Address.from(address).toString().toLowerCase();\n        const privateKey = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockedAccounts.get(account);\n        if (privateKey == null) {\n            throw new Error(\"cannot sign data; no private key\");\n        }\n        const messageHash = (0, util_1.hashPersonalMessage)(utils_1.Data.toBuffer(message));\n        const { v, r, s } = (0, utils_1.ecsign)(messageHash, privateKey.toBuffer());\n        return (0, util_1.toRpcSig)(v, r, s);\n    }\n    /**\n     * Identical to eth_signTypedData_v4.\n     *\n     * @param address - Address of the account that will sign the messages.\n     * @param typedData - Typed structured data to be signed.\n     * @returns Signature. As in `eth_sign`, it is a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @EIP [712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const typedData = {\n     *  types: {\n     *    EIP712Domain: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'version', type: 'string' },\n     *      { name: 'chainId', type: 'uint256' },\n     *      { name: 'verifyingContract', type: 'address' },\n     *    ],\n     *    Person: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'wallet', type: 'address' }\n     *    ],\n     *    Mail: [\n     *      { name: 'from', type: 'Person' },\n     *      { name: 'to', type: 'Person' },\n     *      { name: 'contents', type: 'string' }\n     *    ],\n     *  },\n     *  primaryType: 'Mail',\n     *  domain: {\n     *    name: 'Ether Mail',\n     *    version: '1',\n     *    chainId: 1,\n     *    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n     *  },\n     *  message: {\n     *    from: {\n     *      name: 'Cow',\n     *      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n     *    },\n     *    to: {\n     *      name: 'Bob',\n     *      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n     *    },\n     *    contents: 'Hello, Bob!',\n     *  },\n     * };\n     * const signature = await provider.request({ method: \"eth_signTypedData\", params: [account, typedData] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_signTypedData(address, typedData) {\n        return this.eth_signTypedData_v4(address, typedData);\n    }\n    /**\n     *\n     * @param address - Address of the account that will sign the messages.\n     * @param typedData - Typed structured data to be signed.\n     * @returns Signature. As in `eth_sign`, it is a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @EIP [712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const typedData = {\n     *  types: {\n     *    EIP712Domain: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'version', type: 'string' },\n     *      { name: 'chainId', type: 'uint256' },\n     *      { name: 'verifyingContract', type: 'address' },\n     *    ],\n     *    Person: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'wallet', type: 'address' }\n     *    ],\n     *    Mail: [\n     *      { name: 'from', type: 'Person' },\n     *      { name: 'to', type: 'Person' },\n     *      { name: 'contents', type: 'string' }\n     *    ],\n     *  },\n     *  primaryType: 'Mail',\n     *  domain: {\n     *    name: 'Ether Mail',\n     *    version: '1',\n     *    chainId: 1,\n     *    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n     *  },\n     *  message: {\n     *    from: {\n     *      name: 'Cow',\n     *      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n     *    },\n     *    to: {\n     *      name: 'Bob',\n     *      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n     *    },\n     *    contents: 'Hello, Bob!',\n     *  },\n     * };\n     * const signature = await provider.request({ method: \"eth_signTypedData_v4\", params: [account, typedData] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_signTypedData_v4(address, typedData) {\n        const account = ethereum_address_1.Address.from(address).toString().toLowerCase();\n        const privateKey = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockedAccounts.get(account);\n        if (privateKey == null) {\n            throw new Error(\"cannot sign data; no private key\");\n        }\n        if (typeof typedData === \"string\") {\n            throw new Error(\"cannot sign data; string sent, expected object\");\n        }\n        if (!typedData.types) {\n            throw new Error(\"cannot sign data; types missing\");\n        }\n        if (!typedData.types.EIP712Domain) {\n            throw new Error(\"cannot sign data; EIP712Domain definition missing\");\n        }\n        if (!typedData.domain) {\n            throw new Error(\"cannot sign data; domain missing\");\n        }\n        if (!typedData.primaryType) {\n            throw new Error(\"cannot sign data; primaryType missing\");\n        }\n        if (!typedData.message) {\n            throw new Error(\"cannot sign data; message missing\");\n        }\n        return (0, eth_sig_util_1.signTypedData_v4)(privateKey.toBuffer(), { data: typedData });\n    }\n    eth_subscribe(subscriptionName, options) {\n        const subscriptions = __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\");\n        switch (subscriptionName) {\n            case \"newHeads\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"block\", (block) => {\n                    const value = block;\n                    const header = value.header;\n                    const result = {\n                        logsBloom: header.logsBloom,\n                        miner: header.miner,\n                        difficulty: header.difficulty,\n                        totalDifficulty: header.totalDifficulty,\n                        extraData: header.extraData,\n                        gasLimit: header.gasLimit,\n                        gasUsed: header.gasUsed,\n                        hash: block.hash(),\n                        mixHash: block.header.mixHash,\n                        nonce: header.nonce,\n                        number: header.number,\n                        parentHash: header.parentHash,\n                        receiptsRoot: header.receiptsRoot,\n                        stateRoot: header.stateRoot,\n                        timestamp: header.timestamp,\n                        transactionsRoot: header.transactionsRoot,\n                        sha3Uncles: header.sha3Uncles\n                    };\n                    if (header.baseFeePerGas !== undefined) {\n                        result.baseFeePerGas = header.baseFeePerGas;\n                    }\n                    if (header.withdrawalsRoot !== undefined) {\n                        result.withdrawalsRoot = header.withdrawalsRoot;\n                    }\n                    promiEvent.emit(\"message\", {\n                        type: \"eth_subscription\",\n                        data: {\n                            result,\n                            subscription: subscription.toString()\n                        }\n                    });\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"logs\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const { addresses, topics } = options\n                    ? (0, filter_parsing_1.parseFilterDetails)(options)\n                    : { addresses: [], topics: [] };\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"blockLogs\", (blockLogs) => {\n                    for (const log of blockLogs.filter(addresses, topics)) {\n                        promiEvent.emit(\"message\", {\n                            type: \"eth_subscription\",\n                            data: {\n                                result: log,\n                                subscription: subscription.toString()\n                            }\n                        });\n                    }\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"newPendingTransactions\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"pendingTransaction\", (transaction) => {\n                    const result = transaction.hash.toString();\n                    promiEvent.emit(\"message\", {\n                        type: \"eth_subscription\",\n                        data: {\n                            result,\n                            subscription: subscription.toString()\n                        }\n                    });\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"syncing\": {\n                // ganache doesn't sync, so doing nothing is perfectly valid.\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\").set(subscription.toString(), () => { });\n                return promiEvent;\n            }\n            default:\n                throw new ethereum_utils_1.CodedError(`no \\\"${subscriptionName}\\\" subscription in eth namespace`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n        }\n    }\n    /**\n     * Cancel a subscription to a particular event. Returns a boolean indicating\n     * if the subscription was successfully cancelled.\n     *\n     * @param subscriptionId - The ID of the subscription to unsubscribe to.\n     * @returns `true` if subscription was cancelled successfully, otherwise `false`.\n     * @example\n     * ```javascript\n     * const subscriptionId = await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const result = await provider.request({ method: \"eth_unsubscribe\", params: [subscriptionId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_unsubscribe(subscriptionId) {\n        const subscriptions = __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\");\n        const unsubscribe = subscriptions.get(subscriptionId);\n        if (unsubscribe) {\n            subscriptions.delete(subscriptionId);\n            unsubscribe();\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Creates a filter in the node, to notify when a new block arrives. To check\n     * if the state has changed, call `eth_getFilterChanges`.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newBlockFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newBlockFilter() {\n        const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"block\", (block) => {\n            value.updates.push(block.hash());\n        });\n        const value = {\n            updates: [],\n            unsubscribe,\n            filter: null,\n            type: ethereum_utils_1.FilterTypes.block\n        };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Creates a filter in the node, to notify when new pending transactions\n     * arrive. To check if the state has changed, call `eth_getFilterChanges`.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newPendingTransactionFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newPendingTransactionFilter() {\n        const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"pendingTransaction\", (transaction) => {\n            value.updates.push(transaction.hash);\n        });\n        const value = {\n            updates: [],\n            unsubscribe,\n            filter: null,\n            type: ethereum_utils_1.FilterTypes.pendingTransaction\n        };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Creates a filter object, based on filter options, to notify when the state\n     * changes (logs). To check if the state has changed, call\n     * `eth_getFilterChanges`.\n     *\n     * If the from `fromBlock` or `toBlock` option are equal to \"latest\" the\n     * filter continually append logs for whatever block is seen as latest at the\n     * time the block was mined, not just for the block that was \"latest\" when the\n     * filter was created.\n     *\n     * ### A note on specifying topic filters:\n     * Topics are order-dependent. A transaction with a log with topics [A, B]\n     * will be matched by the following topic filters:\n     *  * `[]` “anything”\n     *  * `[A]` “A in first position (and anything after)”\n     *  * `[null, B]` “anything in first position AND B in second position (and\n     * anything after)”\n     *  * `[A, B]` “A in first position AND B in second position (and anything\n     * after)”\n     *  * `[[A, B], [A, B]]` “(A OR B) in first position AND (A OR B) in second\n     * position (and anything after)”\n     *\n     * Filter options:\n     * * `fromBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `toBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `address`: `DATA | Array` (optional) - Contract address or a list of addresses from which the logs should originate.\n     * * `topics`: `Array of DATA` (optional) - Array of 32 Bytes `DATA` topics. Topics are order-dependent. Each topic can also\n     * be an array of `DATA` with \"or\" options.\n     *\n     * @param filter - The filter options as seen in source.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newFilter(filter) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        if (filter == null)\n            filter = {};\n        const { addresses, topics } = (0, filter_parsing_1.parseFilterDetails)(filter || {});\n        const unsubscribe = blockchain.on(\"blockLogs\", (blockLogs) => {\n            const blockNumber = blockLogs.blockNumber;\n            // every time we get a blockLogs message we re-check what the filter's\n            // range is. We do this because \"latest\" isn't the latest block at the\n            // time the filter was set up, rather it is the actual latest *mined*\n            // block (that is: not pending)\n            const { fromBlock, toBlock } = (0, filter_parsing_1.parseFilterRange)(filter, blockchain);\n            if (fromBlock <= blockNumber && toBlock >= blockNumber) {\n                value.updates.push(...blockLogs.filter(addresses, topics));\n            }\n        });\n        const value = { updates: [], unsubscribe, filter, type: ethereum_utils_1.FilterTypes.log };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Polling method for a filter, which returns an array of logs, block hashes,\n     * or transaction hashes, depending on the filter type, which occurred since\n     * last poll.\n     *\n     * @param filterId - The filter id.\n     * @returns An array of logs, block hashes, or transaction hashes, depending\n     * on the filter type, which occurred since last poll.\n     *\n     * For filters created with `eth_newBlockFilter` the return are block hashes (`DATA`, 32 Bytes).\n     *\n     * For filters created with `eth_newPendingTransactionFilter` the return are transaction hashes (`DATA`, 32 Bytes).\n     *\n     * For filters created with `eth_newFilter` the return are log objects with the following parameters:\n     * * `removed`: `TAG` - `true` when the log was removed, `false` if its a valid log.\n     * * `logIndex`: `QUANTITY` - Integer of the log index position in the block. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - Integer of the transactions index position. `null` when pending.\n     * * `transactionHash`: `DATA`, 32 Bytes - Hash of the transaction where the log was. `null` when pending.\n     * * `blockHash`: `DATA`, 32 Bytes - Hash of the block where the log was. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The block number where the log was in. `null` when pending.\n     * * `address`: `DATA`, 20 Bytes - The address from which the log originated.\n     * * `data`: `DATA` - Contains one or more 32 Bytes non-indexed arguments of the log.\n     * * `topics`: `Array of DATA` - Array of 0 to 4 32 Bytes `DATA` of indexed log arguments.\n     *\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     console.log(\"Entered Logs contract constructor.\");\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     console.log(\"Called logNTimes with the parameter: %o\", n);\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b5061003c60405180606001604052806022815260200161064b6022913961007160201b6100cd1760201c565b600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a36101f0565b61010d8160405160240161008591906101ce565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061011060201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561016f578082015181840152602081019050610154565b8381111561017e576000848401525b50505050565b6000601f19601f8301169050919050565b60006101a082610135565b6101aa8185610140565b93506101ba818560208601610151565b6101c381610184565b840191505092915050565b600060208201905081810360008301526101e88184610195565b905092915050565b61044c806101ff6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635e19e69f14610030575b600080fd5b61004a60048036038101906100459190610265565b61004c565b005b6100716040518060600160405280602781526020016103f0602791398260ff16610166565b60005b8160ff168160ff1610156100c9578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a380806100c1906102c1565b915050610074565b5050565b610163816040516024016100e19190610384565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b50565b6101fe828260405160240161017c9291906103bf565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b5050565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600080fd5b600060ff82169050919050565b6102428161022c565b811461024d57600080fd5b50565b60008135905061025f81610239565b92915050565b60006020828403121561027b5761027a610227565b5b600061028984828501610250565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102cc8261022c565b915060ff8214156102e0576102df610292565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561032557808201518184015260208101905061030a565b83811115610334576000848401525b50505050565b6000601f19601f8301169050919050565b6000610356826102eb565b61036081856102f6565b9350610370818560208601610307565b6103798161033a565b840191505092915050565b6000602082019050818103600083015261039e818461034b565b905092915050565b6000819050919050565b6103b9816103a6565b82525050565b600060408201905081810360008301526103d9818561034b565b90506103e860208301846103b0565b939250505056fe43616c6c6564206c6f674e54696d657320776974682074686520706172616d657465723a20256fa2646970667358221220efe39b9dc769a10eb54b65df8344ee92d584288e80e1c170636e1ede5dd7c3e064736f6c634300080b0033456e7465726564204c6f677320636f6e747261637420636f6e7374727563746f722e\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     * const filterId = await provider.send(\"eth_newFilter\");\n     *\n     * const subscriptionId = await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     *\n     * const changes = await provider.request({ method: \"eth_getFilterChanges\", params: [filterId] });\n     * console.log(changes);\n     *\n     * await provider.send(\"eth_unsubscribe\", [subscriptionId]);\n     * ```\n     */\n    async eth_getFilterChanges(filterId) {\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(utils_1.Quantity.toString(filterId));\n        if (filter) {\n            const updates = filter.updates;\n            filter.updates = [];\n            return updates;\n        }\n        else {\n            throw new Error(\"filter not found\");\n        }\n    }\n    /**\n     * Uninstalls a filter with given id. Should always be called when watch is\n     * no longer needed.\n     *\n     * @param filterId - The filter id.\n     * @returns `true` if the filter was successfully uninstalled, otherwise\n     * `false`.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newFilter\", params: [] });\n     * const result = await provider.request({ method: \"eth_uninstallFilter\", params: [filterId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_uninstallFilter(filterId) {\n        const id = utils_1.Quantity.toString(filterId);\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(id);\n        if (!filter)\n            return false;\n        filter.unsubscribe();\n        return __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").delete(id);\n    }\n    /**\n     * Returns an array of all logs matching filter with given id.\n     *\n     * @param filterId - The filter id.\n     * @returns Array of log objects, or an empty array.\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     console.log(\"Entered Logs contract constructor.\");\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     console.log(\"Called logNTimes with the parameter: %o\", n);\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b5061003c60405180606001604052806022815260200161064b6022913961007160201b6100cd1760201c565b600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a36101f0565b61010d8160405160240161008591906101ce565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061011060201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561016f578082015181840152602081019050610154565b8381111561017e576000848401525b50505050565b6000601f19601f8301169050919050565b60006101a082610135565b6101aa8185610140565b93506101ba818560208601610151565b6101c381610184565b840191505092915050565b600060208201905081810360008301526101e88184610195565b905092915050565b61044c806101ff6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635e19e69f14610030575b600080fd5b61004a60048036038101906100459190610265565b61004c565b005b6100716040518060600160405280602781526020016103f0602791398260ff16610166565b60005b8160ff168160ff1610156100c9578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a380806100c1906102c1565b915050610074565b5050565b610163816040516024016100e19190610384565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b50565b6101fe828260405160240161017c9291906103bf565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b5050565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600080fd5b600060ff82169050919050565b6102428161022c565b811461024d57600080fd5b50565b60008135905061025f81610239565b92915050565b60006020828403121561027b5761027a610227565b5b600061028984828501610250565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102cc8261022c565b915060ff8214156102e0576102df610292565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561032557808201518184015260208101905061030a565b83811115610334576000848401525b50505050565b6000601f19601f8301169050919050565b6000610356826102eb565b61036081856102f6565b9350610370818560208601610307565b6103798161033a565b840191505092915050565b6000602082019050818103600083015261039e818461034b565b905092915050565b6000819050919050565b6103b9816103a6565b82525050565b600060408201905081810360008301526103d9818561034b565b90506103e860208301846103b0565b939250505056fe43616c6c6564206c6f674e54696d657320776974682074686520706172616d657465723a20256fa2646970667358221220efe39b9dc769a10eb54b65df8344ee92d584288e80e1c170636e1ede5dd7c3e064736f6c634300080b0033456e7465726564204c6f677320636f6e747261637420636f6e7374727563746f722e\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     * const filterId = await provider.send(\"eth_newFilter\");\n     *\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     *\n     * const logs = await provider.request({ method: \"eth_getFilterLogs\", params: [filterId] });\n     * console.log(logs);\n     * ```\n     */\n    async eth_getFilterLogs(filterId) {\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(utils_1.Quantity.toString(filterId));\n        if (filter && filter.type === ethereum_utils_1.FilterTypes.log) {\n            return this.eth_getLogs(filter.filter);\n        }\n        else {\n            throw new Error(\"filter not found\");\n        }\n    }\n    /**\n     * Returns an array of all logs matching a given filter object.\n     *\n     * Filter options:\n     * * `fromBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `toBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `address`: `DATA | Array` (optional) - Contract address or a list of addresses from which the logs should originate.\n     * * `topics`: `Array of DATA` (optional) - Array of 32 Bytes `DATA` topics. Topics are order-dependent. Each topic can also\n     * be an array of `DATA` with \"or\" options.\n     * * `blockHash`: `DATA`, 32 Bytes (optional) - Hash of the block to restrict logs from. If `blockHash` is present,\n     * then neither `fromBlock` or `toBlock` are allowed.\n     *\n     * @param filter - The filter options as seen in source.\n     * @returns Array of log objects, or an empty array.\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     console.log(\"Entered Logs contract constructor.\");\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     console.log(\"Called logNTimes with the parameter: %o\", n);\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b5061003c60405180606001604052806022815260200161064b6022913961007160201b6100cd1760201c565b600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a36101f0565b61010d8160405160240161008591906101ce565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061011060201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561016f578082015181840152602081019050610154565b8381111561017e576000848401525b50505050565b6000601f19601f8301169050919050565b60006101a082610135565b6101aa8185610140565b93506101ba818560208601610151565b6101c381610184565b840191505092915050565b600060208201905081810360008301526101e88184610195565b905092915050565b61044c806101ff6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635e19e69f14610030575b600080fd5b61004a60048036038101906100459190610265565b61004c565b005b6100716040518060600160405280602781526020016103f0602791398260ff16610166565b60005b8160ff168160ff1610156100c9578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a380806100c1906102c1565b915050610074565b5050565b610163816040516024016100e19190610384565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b50565b6101fe828260405160240161017c9291906103bf565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b5050565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600080fd5b600060ff82169050919050565b6102428161022c565b811461024d57600080fd5b50565b60008135905061025f81610239565b92915050565b60006020828403121561027b5761027a610227565b5b600061028984828501610250565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102cc8261022c565b915060ff8214156102e0576102df610292565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561032557808201518184015260208101905061030a565b83811115610334576000848401525b50505050565b6000601f19601f8301169050919050565b6000610356826102eb565b61036081856102f6565b9350610370818560208601610307565b6103798161033a565b840191505092915050565b6000602082019050818103600083015261039e818461034b565b905092915050565b6000819050919050565b6103b9816103a6565b82525050565b600060408201905081810360008301526103d9818561034b565b90506103e860208301846103b0565b939250505056fe43616c6c6564206c6f674e54696d657320776974682074686520706172616d657465723a20256fa2646970667358221220efe39b9dc769a10eb54b65df8344ee92d584288e80e1c170636e1ede5dd7c3e064736f6c634300080b0033456e7465726564204c6f677320636f6e747261637420636f6e7374727563746f722e\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     *\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * const txHash = await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     *\n     * const { contractAddress } = await provider.send(\"eth_getTransactionReceipt\", [txHash] );\n     *\n     * const logs = await provider.request({ method: \"eth_getLogs\", params: [{ address: contractAddress }] });\n     * console.log(logs);\n     * ```\n     */\n    async eth_getLogs(filter) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blockLogs.getLogs(filter);\n    }\n    /**\n     * Returns the number of transactions sent from an address.\n     *\n     * @param address - `DATA`, 20 Bytes - The address to get number of transactions sent from\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * @returns Number of transactions sent from this address.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     *\n     * const txCount = await provider.request({ method: \"eth_getTransactionCount\", params: [ from, \"latest\" ] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getTransactionCount(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").accounts.getNonce(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Executes a new message call immediately without creating a transaction on the block chain.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * State Override object - An address-to-state mapping, where each entry specifies some\n     * state to be ephemerally overridden prior to executing the call. Each address maps to an\n     * object containing:\n     * * `balance`: `QUANTITY` (optional) - The balance to set for the account before executing the call.\n     * * `nonce`: `QUANTITY` (optional) - The nonce to set for the account before executing the call.\n     * * `code`: `DATA` (optional) - The EVM bytecode to set for the account before executing the call.\n     * * `state`: `OBJECT` (optional*) - Key-value mapping to override *all* slots in the account storage before executing the call.\n     * * `stateDiff`: `OBJECT` (optional*) - Key-value mapping to override *individual* slots in the account storage before executing the call.\n     * * *Note - `state` and `stateDiff` fields are mutually exclusive.\n     * @param transaction - The transaction call object as seen in source.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     * @param overrides - State overrides to apply during the simulation.\n     *\n     * @returns The return value of executed contract.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const txObj = { from, gas: \"0x5b8d80\", gasPrice: \"0x1dfd14000\", value:\"0x0\", data: simpleSol };\n     * const slot = \"0x0000000000000000000000000000000000000000000000000000000000000005\"\n     * const overrides = { [from]: { balance: \"0x3e8\", nonce: \"0x5\", code: \"0xbaddad42\", stateDiff: { [slot]: \"0x00000000000000000000000000000000000000000000000000000000baddad42\"}}};\n     * const result = await provider.request({ method: \"eth_call\", params: [txObj, \"latest\", overrides] });\n     * console.log(result);\n     * ```\n     */\n    async eth_call(transaction, blockNumber = ethereum_utils_1.Tag.latest, overrides = {}) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const common = blockchain.common;\n        const blocks = blockchain.blocks;\n        const parentBlock = await blocks.get(blockNumber);\n        const parentHeader = parentBlock.header;\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        let gas;\n        if (typeof transaction.gasLimit === \"undefined\") {\n            if (typeof transaction.gas !== \"undefined\") {\n                gas = utils_1.Quantity.from(transaction.gas);\n            }\n            else {\n                // eth_call isn't subject to regular transaction gas limits by default\n                gas = options.miner.callGasLimit;\n            }\n        }\n        else {\n            gas = utils_1.Quantity.from(transaction.gasLimit);\n        }\n        let data;\n        if (typeof transaction.data === \"undefined\") {\n            if (typeof transaction.input !== \"undefined\") {\n                data = utils_1.Data.from(transaction.input);\n            }\n        }\n        else {\n            data = utils_1.Data.from(transaction.data);\n        }\n        // eth_call doesn't validate that the transaction has a sufficient\n        // \"effectiveGasPrice\". however, if `maxPriorityFeePerGas` or\n        // `maxFeePerGas` values are set, the baseFeePerGas is used to calculate\n        // the effectiveGasPrice, which is used to calculate tx costs/refunds.\n        const baseFeePerGasBigInt = parentBlock.header.baseFeePerGas\n            ? parentBlock.header.baseFeePerGas.toBigInt()\n            : undefined;\n        let gasPrice;\n        const hasGasPrice = typeof transaction.gasPrice !== \"undefined\";\n        // if the original block didn't have a `baseFeePerGas` (baseFeePerGasBigInt\n        // is undefined) then EIP-1559 was not active on that block and we can't use\n        // type 2 fee values (as they rely on the baseFee)\n        if (!common.isActivatedEIP(1559) || baseFeePerGasBigInt === undefined) {\n            gasPrice = utils_1.Quantity.from(hasGasPrice ? 0 : transaction.gasPrice);\n        }\n        else {\n            const hasMaxFeePerGas = typeof transaction.maxFeePerGas !== \"undefined\";\n            const hasMaxPriorityFeePerGas = typeof transaction.maxPriorityFeePerGas !== \"undefined\";\n            if (hasGasPrice && (hasMaxFeePerGas || hasMaxPriorityFeePerGas)) {\n                throw new Error(\"both gasPrice and (maxFeePerGas or maxPriorityFeePerGas) specified\");\n            }\n            // User specified 1559 gas fields (or none), use those\n            let maxFeePerGas = 0n;\n            let maxPriorityFeePerGas = 0n;\n            if (hasMaxFeePerGas) {\n                maxFeePerGas = BigInt(transaction.maxFeePerGas);\n            }\n            if (hasMaxPriorityFeePerGas) {\n                maxPriorityFeePerGas = BigInt(transaction.maxPriorityFeePerGas);\n            }\n            if (maxPriorityFeePerGas > 0 || maxFeePerGas > 0) {\n                const a = maxFeePerGas - baseFeePerGasBigInt;\n                const tip = a < maxPriorityFeePerGas ? a : maxPriorityFeePerGas;\n                gasPrice = utils_1.Quantity.from(baseFeePerGasBigInt + tip);\n            }\n            else {\n                gasPrice = utils_1.Quantity.from(0);\n            }\n        }\n        const block = new ethereum_block_1.RuntimeBlock(blockchain.common, parentHeader.number, parentHeader.parentHash, blockchain.coinbase, gas, parentHeader.gasUsed, parentHeader.timestamp, options.miner.difficulty, parentHeader.totalDifficulty, blockchain.getMixHash(parentHeader.parentHash.toBuffer()), baseFeePerGasBigInt, util_1.KECCAK256_RLP);\n        const simulatedTransaction = {\n            gas,\n            // if we don't have a from address, our caller sut be the configured coinbase address\n            from: transaction.from == null\n                ? blockchain.coinbase\n                : ethereum_address_1.Address.from(transaction.from),\n            to: transaction.to == null ? null : ethereum_address_1.Address.from(transaction.to),\n            gasPrice,\n            value: transaction.value == null ? null : utils_1.Quantity.from(transaction.value),\n            data,\n            block\n        };\n        return blockchain.simulateTransaction(simulatedTransaction, parentBlock, overrides);\n    }\n    /**\n     * Returns a collection of historical block gas data and optional effective fee spent per unit of gas for a given percentile of block gas usage.\n     *\n     * @param blockCount - Range of blocks between 1 and 1024. Will return less than the requested range if not all blocks are available.\n     * @param newestBlock - Highest block of the requested range.\n     * @param rewardPercentiles - A monotonically increasing list of percentile values. For each block in the requested range,\n     * the transactions will be sorted in ascending order by effective tip per gas and the corresponding effective tip for the percentile\n     * will be determined, accounting for gas consumed.\n     * @returns Transaction base fee per gas and effective priority fee per gas for the requested/supported block range\n     *\n     * * `oldestBlock`:  - Lowest number block of the returned range.\n     * * `baseFeePerGas`:  - An array of block base fees per gas. This includes the next block after the newest of the returned range,\n     * because this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks.\n     * * `gasUsedRatio`:  - An array of block gas used ratios. These are calculated as the ratio of `gasUsed` and `gasLimit`.\n     * * `reward`:  - An array of effective priority fee per gas data points from a single block. All zeroes are returned if the\n     * block is empty.\n     *\n     * @EIP [1559 - Fee market change](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1559.md)\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to }] });\n     * const feeHistory = await provider.request({ method: \"eth_feeHistory\", params: [\"0x1\", \"0x1\", [10, 100]] });\n     * console.log(feeHistory);\n     * ```\n     */\n    async eth_feeHistory(blockCount, newestBlock, rewardPercentiles) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const MIN_BLOCKS = 1;\n        const MAX_BLOCKS = 1024;\n        const PRECISION_FLOAT = 1e14;\n        const PAD_PRECISION = 16;\n        const PRECISION_BIG_INT = BigInt(1e16);\n        const newestBlockNumber = blockchain.blocks\n            .getEffectiveNumber(newestBlock)\n            .toBigInt();\n        // blockCount must be within MIN_BLOCKS and MAX_BLOCKS. blockCount > newestBlock is\n        // technically valid per the spec but we cannot go past the Genesis Block. Values\n        // above MAX_BLOCKS are technically within spec, however we cap totalBlocks because\n        // of the resource needs and potential abuse of a very large blockCount.\n        const totalBlocks = Number((0, utils_1.min)((0, utils_1.max)(utils_1.Quantity.toBigInt(blockCount), MIN_BLOCKS), newestBlockNumber + 1n, MAX_BLOCKS));\n        const baseFeePerGas = new Array(totalBlocks);\n        const gasUsedRatio = new Array(totalBlocks);\n        let reward;\n        // percentiles must be unique and in ascending order between 0 and 100\n        if (rewardPercentiles.length > 0) {\n            const ERR_INVALID_PERCENTILE = \"invalid reward percentile: percentiles must be unique and in ascending order\";\n            if (rewardPercentiles[0] < 0)\n                throw new Error(`${ERR_INVALID_PERCENTILE} ${rewardPercentiles[0]}`);\n            if (rewardPercentiles[rewardPercentiles.length - 1] > 100)\n                throw new Error(`${ERR_INVALID_PERCENTILE} ${rewardPercentiles[rewardPercentiles.length - 1]}`);\n            for (let i = 1; i < rewardPercentiles.length; i++) {\n                if (rewardPercentiles[i] <= rewardPercentiles[i - 1]) {\n                    throw new Error(`${ERR_INVALID_PERCENTILE} ${rewardPercentiles[i]} ${rewardPercentiles[i - 1]}`);\n                }\n            }\n            reward = new Array(totalBlocks);\n        }\n        // totalBlocks is inclusive of newestBlock\n        const oldestBlockNumber = newestBlockNumber - BigInt(totalBlocks - 1);\n        let currentBlock;\n        let currentPosition = 0;\n        while (currentPosition < totalBlocks) {\n            currentBlock = await blockchain.blocks.get(utils_1.Quantity.toBuffer(oldestBlockNumber + BigInt(currentPosition)));\n            baseFeePerGas[currentPosition] = currentBlock.header.baseFeePerGas;\n            const gasUsed = currentBlock.header.gasUsed.toBigInt();\n            const gasLimit = currentBlock.header.gasLimit.toBigInt();\n            if (gasUsed === gasLimit) {\n                gasUsedRatio[currentPosition] = 1;\n            }\n            else {\n                gasUsedRatio[currentPosition] = Number(`0.${((gasUsed * PRECISION_BIG_INT) / gasLimit)\n                    .toString()\n                    .padStart(PAD_PRECISION, \"0\")}`);\n            }\n            // For each percentile, find the cost of the unit of gas at that percentage\n            if (reward !== undefined) {\n                const transactions = currentBlock.getTransactions();\n                // If there are no transactions, all reward percentiles are 0.\n                if (transactions.length === 0) {\n                    reward[currentPosition] = rewardPercentiles.map(() => utils_1.Quantity.Zero);\n                }\n                else {\n                    // For all transactions, effectiveGasReward = normalized fee per unit of gas\n                    // earned by the miner regardless of transaction type\n                    const baseFee = baseFeePerGas[currentPosition].toBigInt();\n                    const receipts = await Promise.all(transactions.map(tx => blockchain.transactionReceipts.get(tx.hash.toBuffer())));\n                    // Effective Reward is the amount paid per unit of gas\n                    const effectiveRewardAndGasUsed = transactions\n                        .map((tx, idx) => {\n                        let effectiveGasReward;\n                        if (\"maxPriorityFeePerGas\" in tx) {\n                            const maxPriorityFeePerGas = tx.maxPriorityFeePerGas.toBigInt();\n                            effectiveGasReward = BigInt((0, utils_1.min)(tx.maxFeePerGas.toBigInt() - baseFee, maxPriorityFeePerGas));\n                        }\n                        else {\n                            effectiveGasReward = tx.gasPrice.toBigInt() - baseFee;\n                        }\n                        return {\n                            effectiveGasReward: effectiveGasReward,\n                            gasUsed: utils_1.Quantity.toBigInt(receipts[idx].gasUsed)\n                        };\n                    })\n                        .sort((a, b) => {\n                        if (a.effectiveGasReward > b.effectiveGasReward)\n                            return 1;\n                        if (a.effectiveGasReward < b.effectiveGasReward)\n                            return -1;\n                        return 0;\n                    });\n                    // All of the block transactions are ordered, ascending, from least to greatest by\n                    // the fee the tx paid per unit of gas. For each percentile of block gas consumed,\n                    // what was the fee paid for the unit of gas at that percentile.\n                    reward[currentPosition] = rewardPercentiles.map(percentile => {\n                        let totalGasUsed = 0n;\n                        const targetGas = (gasUsed * BigInt(percentile * PRECISION_FLOAT)) /\n                            PRECISION_BIG_INT;\n                        for (const values of effectiveRewardAndGasUsed) {\n                            totalGasUsed = totalGasUsed + values.gasUsed;\n                            if (targetGas <= totalGasUsed) {\n                                return utils_1.Quantity.from(values.effectiveGasReward);\n                            }\n                        }\n                    });\n                }\n            }\n            currentPosition++;\n        }\n        // baseFeePerGas is calculated based on the header of the previous block, including the block after newestBlock.\n        baseFeePerGas[totalBlocks] = utils_1.Quantity.from(ethereum_block_1.Block.calcNextBaseFee(currentBlock));\n        return {\n            oldestBlock: utils_1.Quantity.from(oldestBlockNumber),\n            baseFeePerGas,\n            gasUsedRatio,\n            reward\n        };\n    }\n    //#endregion\n    //#region debug\n    /**\n     * Attempt to run the transaction in the exact same manner as it was executed\n     * on the network. It will replay any transaction that may have been executed\n     * prior to this one before it will finally attempt to execute the transaction\n     * that corresponds to the given hash.\n     *\n     * In addition to the hash of the transaction you may give it a secondary\n     * optional argument, which specifies the options for this specific call.\n     * The possible options are:\n     *\n     * * `disableStorage`: \\{boolean\\} Setting this to `true` will disable storage capture (default = `false`).\n     * * `disableMemory`: \\{boolean\\} Setting this to `true` will disable memory capture (default = `false`).\n     * * `disableStack`: \\{boolean\\} Setting this to `true` will disable stack capture (default = `false`).\n     *\n     * @param transactionHash - Hash of the transaction to trace.\n     * @param options - See options in source.\n     * @returns Returns the `gas`, `structLogs`, and `returnValue` for the traced transaction.\n     *\n     * The `structLogs` are an array of logs, which contains the following fields:\n     * * `depth`: The execution depth.\n     * * `error`: Information about an error, if one occurred.\n     * * `gas`: The number of gas remaining.\n     * * `gasCost`: The cost of gas in wei.\n     * * `memory`: An array containing the contract's memory data.\n     * * `op`: The current opcode.\n     * * `pc`: The current program counter.\n     * * `stack`: The EVM execution stack.\n     * * `storage`: An object containing the contract's storage data.\n     *\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const transactionTrace = await provider.request({ method: \"debug_traceTransaction\", params: [txHash] });\n     * console.log(transactionTrace);\n     * ```\n     */\n    async debug_traceTransaction(transactionHash, options = {}) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").traceTransaction(transactionHash, options);\n    }\n    // TODO: example doesn't return correct value\n    // Issue: https://github.com/trufflesuite/ganache/issues/3203\n    /**\n     * Attempts to replay the transaction as it was executed on the network and\n     * return storage data given a starting key and max number of entries to return.\n     *\n     * @param blockHash - Hash of a block.\n     * @param transactionIndex - Integer of the transaction index position.\n     * @param contractAddress - Address of the contract.\n     * @param startKey - Hash of the start key for grabbing storage entries.\n     * @param maxResult - Integer of maximum number of storage entries to return.\n     * @returns Returns a storage object with the keys being keccak-256 hashes of the storage keys,\n     * and the values being the raw, unhashed key and value for that specific storage slot. Also\n     * returns a next key which is the keccak-256 hash of the next key in storage for continuous downloading.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const initialTxHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     *\n     * const {contractAddress} = await provider.request({ method: \"eth_getTransactionReceipt\", params: [initialTxHash] });\n     *\n     * // set value to 19\n     * const data = \"0x552410770000000000000000000000000000000000000000000000000000000000000019\";\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to: contractAddress, data }] });\n     *\n     * const { blockHash, transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const storage = await provider.request({ method: \"debug_storageRangeAt\", params: [blockHash, transactionIndex, contractAddress, \"0x01\", 1] });\n     * console.log(storage);\n     * ```\n     */\n    async debug_storageRangeAt(blockHash, transactionIndex, contractAddress, startKey, maxResult) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        if (blockchain.fallback) {\n            throw new Error(\"debug_storageRangeAt is not supported on a forked network. See https://github.com/trufflesuite/ganache/issues/3488 for details.\");\n        }\n        return blockchain.storageRangeAt(blockHash, utils_1.Quantity.toNumber(transactionIndex), contractAddress, startKey, utils_1.Quantity.toNumber(maxResult));\n    }\n    //#endregion\n    //#region personal\n    /**\n     * Returns all the Ethereum account addresses of all keys that have been\n     * added.\n     * @returns The Ethereum account addresses of all keys that have been added.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"personal_listAccounts\"));\n     * ```\n     */\n    async personal_listAccounts() {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addresses;\n    }\n    /**\n     * Generates a new account with private key. Returns the address of the new\n     * account.\n     * @param passphrase - The passphrase to encrypt the private key with.\n     * @returns The new account's address.\n     * @example\n     * ```javascript\n     * const passphrase = \"passphrase\";\n     * const address = await provider.send(\"personal_newAccount\", [passphrase] );\n     * console.log(address);\n     * ```\n     */\n    async personal_newAccount(passphrase) {\n        if (typeof passphrase !== \"string\") {\n            throw new Error(\"missing value for required argument `passphrase`\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const newAccount = wallet.createRandomAccount();\n        const address = newAccount.address;\n        const strAddress = address.toString();\n        await wallet.addToKeyFile(address, newAccount.privateKey, passphrase, true);\n        wallet.addresses.push(strAddress);\n        wallet.knownAccounts.add(strAddress);\n        return newAccount.address;\n    }\n    /**\n     * Imports the given unencrypted private key (hex string) into the key store, encrypting it with the passphrase.\n     *\n     * @param rawKey - The raw, unencrypted private key to import.\n     * @param passphrase - The passphrase to encrypt with.\n     * @returns Returns the address of the new account.\n     * @example\n     * ```javascript\n     * const rawKey = \"0x0123456789012345678901234567890123456789012345678901234567890123\";\n     * const passphrase = \"passphrase\";\n     *\n     * const address = await provider.send(\"personal_importRawKey\",[rawKey, passphrase] );\n     * console.log(address);\n     * ```\n     */\n    async personal_importRawKey(rawKey, passphrase) {\n        if (typeof passphrase !== \"string\") {\n            throw new Error(\"missing value for required argument `passphrase`\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const newAccount = wallet_1.default.createAccountFromPrivateKey(utils_1.Data.from(rawKey));\n        const address = newAccount.address;\n        const strAddress = address.toString();\n        await wallet.addToKeyFile(address, newAccount.privateKey, passphrase, true);\n        wallet.addresses.push(strAddress);\n        wallet.knownAccounts.add(strAddress);\n        return newAccount.address;\n    }\n    /**\n     * Locks the account. The account can no longer be used to send transactions.\n     * @param address - The account address to be locked.\n     * @returns Returns `true` if the account was locked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const [account] = await provider.send(\"personal_listAccounts\");\n     * const isLocked = await provider.send(\"personal_lockAccount\", [account] );\n     * console.log(isLocked);\n     * ```\n     */\n    async personal_lockAccount(address) {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").lockAccount(address.toLowerCase());\n    }\n    /**\n     * Unlocks the account for use.\n     *\n     * The unencrypted key will be held in memory until the unlock duration\n     * expires. The unlock duration defaults to 300 seconds. An explicit duration\n     * of zero seconds unlocks the key until geth exits.\n     *\n     * The account can be used with `eth_sign` and `eth_sendTransaction` while it is\n     * unlocked.\n     * @param address - 20 Bytes - The address of the account to unlock.\n     * @param passphrase - Passphrase to unlock the account.\n     * @param duration - (default: 300) Duration in seconds how long the account\n     * should remain unlocked for. Set to 0 to disable automatic locking.\n     * @returns `true` if it worked. Throws an error or returns `false` if it did not.\n     * @example\n     * ```javascript\n     * // generate an account\n     * const passphrase = \"passphrase\";\n     * const newAccount = await provider.send(\"personal_newAccount\", [passphrase] );\n     * const isUnlocked = await provider.send(\"personal_unlockAccount\", [newAccount, passphrase] );\n     * console.log(isUnlocked);\n     * ```\n     */\n    async personal_unlockAccount(address, passphrase, duration = 300) {\n        const addy = ethereum_address_1.Address.from(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockAccount(addy, passphrase, duration);\n    }\n    /**\n     * Validate the given passphrase and submit transaction.\n     *\n     * The transaction is the same argument as for `eth_sendTransaction` and\n     * contains the from address. If the passphrase can be used to decrypt the\n     * private key belonging to `tx.from` the transaction is verified, signed and\n     * send onto the network. The account is not unlocked globally in the node\n     * and cannot be used in other RPC calls.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param txData - The transaction call object as seen in source.\n     * @param passphrase - The passphrase to decrpyt the private key belonging to `tx.from`.\n     * @returns The transaction hash or if unsuccessful an error.\n     * @example\n     * ```javascript\n     * const passphrase = \"passphrase\";\n     * const newAccount = await provider.send(\"personal_newAccount\", [passphrase] );\n     * // fund the new account\n     * await provider.send(\"evm_setAccountBalance\", [newAccount,\"0xffffffffffffff\"])\n     * const [to] = await provider.send(\"personal_listAccounts\");\n     *\n     * // use account and passphrase to send the transaction\n     * const txHash = await provider.send(\"personal_sendTransaction\", [{ from: newAccount, to, gasLimit: \"0x5b8d80\" }, passphrase] );\n     * console.log(txHash);\n     * ```\n     */\n    async personal_sendTransaction(transaction, passphrase) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        const from = tx.from;\n        if (from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const secretKey = await wallet.getFromKeyFile(tx.from, passphrase);\n        await autofillDefaultTransactionValues(tx, this.eth_estimateGas.bind(this), this.eth_maxPriorityFeePerGas, transaction, blockchain, __classPrivateFieldGet(this, _EthereumApi_options, \"f\"));\n        return blockchain.queueTransaction(tx, utils_1.Data.from(secretKey));\n    }\n    /**\n     * Validates the given passphrase and signs a transaction that can be\n     * submitted to the network at a later time using `eth_sendRawTransaction`.\n     *\n     * The transaction is the same argument as for `eth_signTransaction` and\n     * contains the from address. If the passphrase can be used to decrypt the\n     * private key belonging to `tx.from` the transaction is verified and signed.\n     * The account is not unlocked globally in the node and cannot be used in other RPC calls.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The raw, signed transaction.\n     * @example\n     * ```javascript\n     * const [to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const passphrase = \"passphrase\";\n     * const from = await provider.send(\"personal_newAccount\", [passphrase] );\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const signedTx = await provider.request({ method: \"personal_signTransaction\", params: [{ from, to }, passphrase] });\n     * console.log(signedTx)\n     * ```\n     */\n    async personal_signTransaction(transaction, passphrase) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const secretKey = await wallet.getFromKeyFile(tx.from, passphrase);\n        tx.signAndHash(secretKey);\n        return utils_1.Data.from(tx.serialized);\n    }\n    //#endregion\n    //#region rpc\n    /**\n     * Returns object of RPC modules.\n     * @returns RPC modules.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"rpc_modules\"));\n     * ```\n     */\n    async rpc_modules() {\n        return RPC_MODULES;\n    }\n    //#endregion\n    //#region shh\n    /**\n     * Creates new whisper identity in the client.\n     *\n     * @returns - The address of the new identity.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_newIdentity\"));\n     * ```\n     */\n    async shh_newIdentity() {\n        return \"0x00\";\n    }\n    /**\n     * Checks if the client hold the private keys for a given identity.\n     *\n     * @param address - The identity address to check.\n     * @returns Returns `true` if the client holds the private key for that identity, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_hasIdentity\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_hasIdentity(address) {\n        return false;\n    }\n    /**\n     * Creates a new group.\n     *\n     * @returns The address of the new group.\n     */\n    async shh_newGroup() {\n        return \"0x00\";\n    }\n    /**\n     * Adds a whisper identity to the group.\n     *\n     * @param address - The identity address to add to a group.\n     * @returns `true` if the identity was successfully added to the group, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_addToGroup\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_addToGroup(address) {\n        return false;\n    }\n    /**\n     * Creates filter to notify, when client receives whisper message matching the filter options.\n     *\n     * @param to - (optional) Identity of the receiver. When present it will try to decrypt any incoming message\n     *  if the client holds the private key to this identity.\n     * @param topics - Array of topics which the incoming message's topics should match.\n     * @returns Returns `true` if the identity was successfully added to the group, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_newFilter\", [\"0x0\", []] ));\n     * ```\n     */\n    async shh_newFilter(to, topics) {\n        return false;\n    }\n    /**\n     * Uninstalls a filter with given id. Should always be called when watch is no longer needed.\n     * Additionally filters timeout when they aren't requested with `shh_getFilterChanges` for a period of time.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns `true` if the filter was successfully uninstalled, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_uninstallFilter\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_uninstallFilter(id) {\n        return false;\n    }\n    /**\n     * Polling method for whisper filters. Returns new messages since the last call of this method.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns More Info: https://github.com/ethereum/wiki/wiki/JSON-RPC#shh_getfilterchanges\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_getFilterChanges\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_getFilterChanges(id) {\n        return [];\n    }\n    /**\n     * Get all messages matching a filter. Unlike shh_getFilterChanges this returns all messages.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns See: `shh_getFilterChanges`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_getMessages\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_getMessages(id) {\n        return false;\n    }\n    /**\n     * Creates a whisper message and injects it into the network for distribution.\n     *\n     * @param postData -\n     * @returns Returns `true` if the message was sent, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_post\", [{}] ));\n     * ```\n     */\n    async shh_post(postData) {\n        return false;\n    }\n    /**\n     * Returns the current whisper protocol version.\n     *\n     * @returns The current whisper protocol version.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_version\"));\n     * ```\n     */\n    async shh_version() {\n        return \"2\";\n    }\n    //#endregion\n    //#region txpool\n    /**\n     * Returns the current content of the transaction pool.\n     *\n     * @returns The transactions currently pending or queued in the transaction pool.\n     * @example\n     * ```javascript\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.send(\"miner_stop\")\n     * const pendingTx = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", nonce:\"0x0\" }] });\n     * const queuedTx = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", nonce:\"0x2\" }] });\n     * const pool = await provider.send(\"txpool_content\");\n     * console.log(pool);\n     * ```\n     */\n    async txpool_content() {\n        const { transactions, common } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const { transactionPool: { executables, origins } } = transactions;\n        const processMap = (map) => {\n            let res = {};\n            for (let [_, { array, length }] of map) {\n                for (let i = 0; i < length; ++i) {\n                    const transaction = array[i];\n                    const from = transaction.from.toString();\n                    if (res[from] === undefined) {\n                        res[from] = {};\n                    }\n                    // The nonce keys are actual decimal numbers (as strings) and not\n                    // hex literals (based on what geth returns).\n                    const nonce = transaction.nonce.toBigInt().toString();\n                    res[from][nonce] = transaction.toJSON(common);\n                }\n            }\n            return res;\n        };\n        return {\n            pending: processMap(executables.pending),\n            queued: processMap(origins)\n        };\n    }\n}\n_EthereumApi_getId = new WeakMap(), _EthereumApi_filters = new WeakMap(), _EthereumApi_subscriptions = new WeakMap(), _EthereumApi_options = new WeakMap(), _EthereumApi_blockchain = new WeakMap(), _EthereumApi_wallet = new WeakMap();\nexports.default = EthereumApi;\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"db_putString\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"db_getString\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"db_putHex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"db_getHex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"bzz_hive\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"bzz_info\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"evm_mine\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountNonce\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountBalance\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountCode\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"evm_setAccountStorageAt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"evm_increaseTime\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"evm_setTime\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"evm_revert\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"miner_start\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"miner_stop\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setGasPrice\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setEtherbase\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setExtra\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"web3_clientVersion\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"web3_sha3\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_version\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_listening\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_peerCount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_estimateGas\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_protocolVersion\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_syncing\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_coinbase\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBlockByNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"eth_getProof\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBlockByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getBlockTransactionCountByNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getBlockTransactionCountByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_getCompilers\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getTransactionByBlockHashAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getTransactionByBlockNumberAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getUncleCountByBlockHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getUncleCountByBlockNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getUncleByBlockHashAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getUncleByBlockNumberAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_getWork\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"eth_submitWork\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_submitHashrate\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_mining\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_hashrate\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_gasPrice\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_maxPriorityFeePerGas\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_accounts\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_blockNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_chainId\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBalance\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getCode\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"eth_getStorageAt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getTransactionByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getTransactionReceipt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_sendTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_signTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_sendRawTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_sign\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_signTypedData\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_signTypedData_v4\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_subscribe\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_unsubscribe\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_newBlockFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_newPendingTransactionFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"eth_newFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getFilterChanges\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_uninstallFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getFilterLogs\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getLogs\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getTransactionCount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 3)\n], EthereumApi.prototype, \"eth_call\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"eth_feeHistory\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"debug_traceTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(5)\n], EthereumApi.prototype, \"debug_storageRangeAt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"personal_listAccounts\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"personal_newAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_importRawKey\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"personal_lockAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"personal_unlockAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_sendTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_signTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"rpc_modules\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_newIdentity\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_hasIdentity\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_newGroup\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_addToGroup\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"shh_newFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_uninstallFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_getFilterChanges\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_getMessages\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_post\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_version\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"txpool_content\", null);\n//# sourceMappingURL=api.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Blockchain_state, _Blockchain_miner, _Blockchain_blockBeingSavedPromise, _Blockchain_timer, _Blockchain_emitStepEvent, _Blockchain_database, _Blockchain_options, _Blockchain_instamine, _Blockchain_saveNewBlock, _Blockchain_emitNewBlock, _Blockchain_getTransactionLogOutput, _Blockchain_handleNewBlockData, _Blockchain_readyNextBlock, _Blockchain_isPaused, _Blockchain_commitAccounts, _Blockchain_initializeGenesisBlock, _Blockchain_timeAdjustment, _Blockchain_adjustedTime, _Blockchain_deleteBlockData, _Blockchain_snapshots, _Blockchain_createFastForwardVm, _Blockchain_traceTransaction, _Blockchain_prepareNextBlock;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Status = void 0;\nconst os_1 = require(\"os\");\nconst miner_1 = __importStar(require(\"./miner/miner\"));\nconst database_1 = __importDefault(require(\"./database\"));\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst common_1 = require(\"@ethereumjs/common\");\nconst vm_1 = require(\"@ethereumjs/vm\");\nconst evm_1 = require(\"@ethereumjs/evm\");\nconst utils_1 = require(\"@ganache/utils\");\nconst account_manager_1 = __importDefault(require(\"./data-managers/account-manager\"));\nconst block_manager_1 = __importDefault(require(\"./data-managers/block-manager\"));\nconst blocklog_manager_1 = __importDefault(require(\"./data-managers/blocklog-manager\"));\nconst transaction_manager_1 = __importDefault(require(\"./data-managers/transaction-manager\"));\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst run_call_1 = require(\"./helpers/run-call\");\nconst state_manager_1 = require(\"./forking/state-manager\");\nconst trie_1 = require(\"./helpers/trie\");\nconst trie_2 = require(\"./forking/trie\");\nconst precompiles_1 = require(\"./helpers/precompiles\");\nconst transaction_receipt_manager_1 = __importDefault(require(\"./data-managers/transaction-receipt-manager\"));\nconst provider_events_1 = require(\"./provider-events\");\nconst mcl_wasm_1 = __importDefault(require(\"mcl-wasm\"));\nconst console_log_1 = require(\"@ganache/console.log\");\nconst storage_range_at_1 = require(\"./helpers/storage-range-at\");\nconst state_manager_2 = require(\"./state-manager\");\nconst common_helpers_1 = require(\"./helpers/common-helpers\");\nconst mclInitPromise = mcl_wasm_1.default.init(mcl_wasm_1.default.BLS12_381).then(() => {\n    mcl_wasm_1.default.setMapToMode(mcl_wasm_1.default.IRTF); // set the right map mode; otherwise mapToG2 will return wrong values.\n    mcl_wasm_1.default.verifyOrderG1(true); // subgroup checks for G1\n    mcl_wasm_1.default.verifyOrderG2(true); // subgroup checks for G2\n});\nvar Status;\n(function (Status) {\n    // Flags\n    Status[Status[\"started\"] = 1] = \"started\";\n    Status[Status[\"starting\"] = 2] = \"starting\";\n    Status[Status[\"stopped\"] = 4] = \"stopped\";\n    Status[Status[\"stopping\"] = 8] = \"stopping\";\n    Status[Status[\"paused\"] = 16] = \"paused\"; // 0001 0000\n})(Status || (exports.Status = Status = {}));\n/**\n * Sets the provided VM state manager's state root *without* first\n * checking for checkpoints or flushing the existing cache.\n *\n * Useful if you know the state manager is not in a checkpoint and its internal\n * cache is safe to discard.\n *\n * @param stateManager -\n * @param stateRoot -\n */\nfunction setStateRootSync(stateManager, stateRoot) {\n    stateManager._trie.root(stateRoot);\n    stateManager._cache.clear();\n    stateManager._storageTries = {};\n}\nfunction makeTrie(blockchain, trieDB, root) {\n    if (blockchain.fallback) {\n        return new trie_2.ForkTrie(trieDB, root ? root.toBuffer() : null, blockchain);\n    }\n    else {\n        return new trie_1.GanacheTrie(trieDB, root ? root.toBuffer() : null, blockchain);\n    }\n}\nfunction createCommon(chainId, networkId, hardfork) {\n    const common = common_1.Common.custom({\n        name: \"ganache\",\n        networkId: networkId,\n        chainId: chainId,\n        comment: \"Local test network\",\n        defaultHardfork: hardfork\n    }, \n    // if we were given a chain id that matches a real chain, use it\n    // NOTE: I don't think Common serves a purpose other than instructing the\n    // VM what hardfork is in use (and what EIPs are active). But just incase\n    // things change in the future its configured \"more correctly\" here.\n    { baseChain: utils_1.KNOWN_CHAINIDS.has(chainId) ? chainId : 1 });\n    // the VM likes to listen to \"hardforkChanged\" events from common, but:\n    //  a) we don't currently support changing hardforks\n    //  b) it can cause `MaxListenersExceededWarning`.\n    // Since we don't need it we overwrite .on to make it be quiet.\n    common.on = () => { };\n    return common;\n}\nclass Blockchain extends emittery_1.default {\n    /**\n     * Initializes the underlying Database and handles synchronization between\n     * the API and the database.\n     *\n     * Emits a `ready` event once the database and all dependencies are fully\n     * initialized.\n     * @param options -\n     */\n    constructor(options, coinbase, fallback) {\n        super();\n        _Blockchain_state.set(this, Status.starting);\n        _Blockchain_miner.set(this, void 0);\n        _Blockchain_blockBeingSavedPromise.set(this, void 0);\n        /**\n         * When not instamining (blockTime > 0) this value holds the timeout timer.\n         */\n        _Blockchain_timer.set(this, null);\n        /**\n         * Because step events are expensive to create and emit, CPU-wise, we do it\n         * conditionally.\n         */\n        _Blockchain_emitStepEvent.set(this, false);\n        _Blockchain_database.set(this, void 0);\n        _Blockchain_options.set(this, void 0);\n        _Blockchain_instamine.set(this, void 0);\n        _Blockchain_saveNewBlock.set(this, ({ block, serialized, storageKeys, transactions }) => {\n            const { blocks } = this;\n            blocks.latest = block;\n            return __classPrivateFieldGet(this, _Blockchain_database, \"f\").batch(() => {\n                const blockHash = block.hash();\n                const blockHeader = block.header;\n                const blockNumberQ = blockHeader.number;\n                const blockNumber = blockNumberQ.toBuffer();\n                const blockLogs = ethereum_utils_1.BlockLogs.create(blockHash);\n                const timestamp = blockHeader.timestamp;\n                const timestampStr = new Date(timestamp.toNumber() * 1000).toString();\n                const logOutput = [];\n                transactions.forEach((tx, i) => {\n                    const hash = tx.hash.toBuffer();\n                    const index = utils_1.Quantity.from(i);\n                    // save transaction to the database\n                    // TODO: the block has already done most of the work serializing the tx\n                    // we should reuse it, if possible\n                    // https://github.com/trufflesuite/ganache/issues/4341\n                    const serialized = (0, ethereum_transaction_1.serializeForDb)(tx, blockHash, blockNumberQ, index);\n                    this.transactions.set(hash, serialized);\n                    // save receipt to the database\n                    const receipt = tx.getReceipt();\n                    const encodedReceipt = receipt.serialize(true);\n                    this.transactionReceipts.set(hash, encodedReceipt);\n                    // collect block logs\n                    tx.getLogs().forEach(blockLogs.append.bind(blockLogs, index, tx.hash));\n                    // prepare log output\n                    logOutput.push(__classPrivateFieldGet(this, _Blockchain_getTransactionLogOutput, \"f\").call(this, hash, receipt, blockHeader.number, timestampStr, tx.execException));\n                });\n                // save storage keys to the database\n                storageKeys.forEach(value => {\n                    this.storageKeys.put(value.hashedKey, value.key);\n                });\n                blockLogs.blockNumber = blockHeader.number;\n                // save block logs to the database\n                this.blockLogs.set(blockNumber, blockLogs.serialize());\n                // save block to the database\n                blocks.putBlock(blockNumber, blockHash, serialized);\n                // update the \"latest\" index\n                blocks.updateLatestIndex(blockNumber);\n                // output to the log, if we have data to output\n                if (logOutput.length > 0)\n                    __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(logOutput.join(os_1.EOL));\n                return { block, blockLogs, transactions };\n            });\n        });\n        /**\n         * Emit the block now that everything has been fully saved to the database\n         */\n        _Blockchain_emitNewBlock.set(this, async (blockInfo) => {\n            const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n            const { block, blockLogs, transactions } = blockInfo;\n            transactions.forEach(transaction => {\n                transaction.finalize(\"confirmed\", transaction.execException);\n            });\n            if (options.miner.instamine === \"eager\") {\n                // in eager instamine mode we must delay the broadcast of new blocks\n                await new Promise(resolve => {\n                    // we delay emitting blocks and blockLogs because we need to allow for:\n                    // ```\n                    //  await provider.request({\"method\": \"eth_sendTransaction\"...)\n                    //  await provider.once(\"message\") // <- should work\n                    // ```\n                    // If we don't have this delay here the messages will be sent before\n                    // the call has a chance to listen to the event.\n                    setImmediate(async () => {\n                        // emit block logs first so filters can pick them up before\n                        // block listeners are notified\n                        await Promise.all([\n                            this.emit(\"blockLogs\", blockLogs),\n                            this.emit(\"block\", block)\n                        ]);\n                        resolve(void 0);\n                    });\n                });\n            }\n            else {\n                // emit block logs first so filters can pick them up before\n                // block listeners are notified\n                await Promise.all([\n                    this.emit(\"blockLogs\", blockLogs),\n                    this.emit(\"block\", block)\n                ]);\n            }\n            return blockInfo;\n        });\n        _Blockchain_getTransactionLogOutput.set(this, (hash, receipt, blockNumber, timestamp, error) => {\n            let str = `${os_1.EOL}  Transaction: ${utils_1.Data.from(hash)}${os_1.EOL}`;\n            const contractAddress = receipt.contractAddress;\n            if (contractAddress != null) {\n                str += `  Contract created: ${ethereum_address_1.Address.from(contractAddress)}${os_1.EOL}`;\n            }\n            str += `  Gas usage: ${utils_1.Quantity.toNumber(receipt.raw[1])}\n  Block number: ${blockNumber.toNumber()}\n  Block time: ${timestamp}${os_1.EOL}`;\n            if (error) {\n                str += `  Runtime error: ${error.data.message}${os_1.EOL}`;\n                if (error.data.reason) {\n                    str += `  Revert reason: ${error.data.reason}${os_1.EOL}`;\n                }\n            }\n            return str;\n        });\n        _Blockchain_handleNewBlockData.set(this, async (blockData) => {\n            __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\").then(() => {\n                const saveBlockProm = __classPrivateFieldGet(this, _Blockchain_saveNewBlock, \"f\").call(this, blockData);\n                saveBlockProm.then(__classPrivateFieldGet(this, _Blockchain_emitNewBlock, \"f\"));\n                // blockBeingSavedPromise should await the block being _saved_, but doesn't\n                // need to await the block being emitted.\n                return saveBlockProm;\n            }), \"f\");\n            await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        });\n        _Blockchain_readyNextBlock.set(this, (previousBlock, timestamp) => {\n            const previousHeader = previousBlock.header;\n            const previousNumber = previousHeader.number.toBigInt() || 0n;\n            const minerOptions = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner;\n            if (timestamp == null) {\n                timestamp = __classPrivateFieldGet(this, _Blockchain_adjustedTime, \"f\").call(this, previousHeader.timestamp);\n            }\n            return new ethereum_block_1.RuntimeBlock(this.common, utils_1.Quantity.from(previousNumber + 1n), previousBlock.hash(), this.coinbase, minerOptions.blockGasLimit, utils_1.Quantity.Zero, utils_1.Quantity.from(timestamp), this.isPostMerge ? utils_1.Quantity.Zero : minerOptions.difficulty, previousHeader.totalDifficulty, this.getMixHash(previousBlock.hash().toBuffer()), ethereum_block_1.Block.calcNextBaseFee(previousBlock), util_1.KECCAK256_RLP);\n        });\n        this.isStarted = () => {\n            return __classPrivateFieldGet(this, _Blockchain_state, \"f\") === Status.started;\n        };\n        this.mine = async (maxTransactions, onlyOneBlock = false, timestamp) => {\n            const nextBlock = __classPrivateFieldGet(this, _Blockchain_readyNextBlock, \"f\").call(this, this.blocks.latest, timestamp);\n            const transactions = await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").mine(nextBlock, maxTransactions, onlyOneBlock);\n            await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n            if (__classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement !== \"clock\") {\n                // if block time is incremental, adjustments should only apply once,\n                // otherwise they accumulate with each block.\n                __classPrivateFieldSet(this, _Blockchain_timeAdjustment, 0, \"f\");\n            }\n            else if (timestamp !== undefined) {\n                // when miner.timestampIncrement is a number, the previous block timestamp\n                // is used as a reference for the next block, so this call is not\n                // required.\n                this.setTimeDiff(timestamp * 1000);\n            }\n            return {\n                transactions,\n                blockNumber: nextBlock.header.number\n            };\n        };\n        _Blockchain_isPaused.set(this, () => {\n            return (__classPrivateFieldGet(this, _Blockchain_state, \"f\") & Status.paused) !== 0;\n        });\n        this.createVmFromStateTrie = async (stateTrie, allowUnlimitedContractSize, activatePrecompile, common) => {\n            const blocks = this.blocks;\n            // ethereumjs vm doesn't use the callback style anymore\n            const blockchain = {\n                getBlock: async (number) => {\n                    const block = await blocks\n                        .get(utils_1.Quantity.toBuffer(number))\n                        .catch(_ => null);\n                    return block ? { hash: () => block.hash().toBuffer() } : null;\n                }\n            };\n            // ethereumjs-vm wants to \"copy\" the blockchain when `vm.copy` is called.\n            blockchain.copy = () => {\n                return blockchain;\n            };\n            common = common || this.common;\n            // TODO: prefixCodeHashes should eventually be conditional\n            // https://github.com/trufflesuite/ganache/issues/3701\n            const stateManager = this.fallback\n                ? new state_manager_1.ForkStateManager({\n                    trie: stateTrie,\n                    prefixCodeHashes: false\n                })\n                : new state_manager_2.GanacheStateManager({ trie: stateTrie, prefixCodeHashes: false });\n            const eei = new vm_1.EEI(stateManager, common, blockchain);\n            const evm = new evm_1.EVM({ common, allowUnlimitedContractSize, eei });\n            const vm = await vm_1.VM.create({\n                activatePrecompiles: false,\n                common,\n                blockchain,\n                stateManager,\n                evm\n            });\n            if (activatePrecompile) {\n                await (0, precompiles_1.activatePrecompiles)(vm.eei);\n                if (common.isActivatedEIP(2537)) {\n                    // BLS12-381 curve, not yet included in any supported hardforks\n                    // but probably will be in the Shanghai hardfork\n                    // TODO: remove above comment once Shanghai is supported!\n                    await mclInitPromise; // ensure that mcl is initialized!\n                }\n            }\n            return vm;\n        };\n        _Blockchain_commitAccounts.set(this, (accounts) => {\n            return Promise.all(accounts.map(account => this.trie.put(account.address.toBuffer(), account.serialize())));\n        });\n        _Blockchain_initializeGenesisBlock.set(this, async (timestamp, blockGasLimit, initialAccounts) => {\n            if (this.fallback != null) {\n                const { block: fallbackBlock } = this.fallback;\n                const { miner: minerOptions } = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n                // commit accounts, but for forking.\n                const stateManager = this.vm.stateManager;\n                await stateManager.checkpoint();\n                initialAccounts.forEach(account => {\n                    this.vm.eei.putAccount(account.address, account);\n                });\n                await stateManager.commit();\n                // create the genesis block\n                let baseFeePerGas;\n                if (this.common.isActivatedEIP(1559)) {\n                    if (fallbackBlock.header.baseFeePerGas === undefined) {\n                        baseFeePerGas = ethereum_block_1.Block.INITIAL_BASE_FEE_PER_GAS;\n                    }\n                    else {\n                        baseFeePerGas = fallbackBlock.header.baseFeePerGas.toBigInt();\n                    }\n                }\n                const genesis = new ethereum_block_1.RuntimeBlock(this.common, utils_1.Quantity.from(fallbackBlock.header.number.toBigInt() + 1n), fallbackBlock.hash(), this.coinbase, blockGasLimit, utils_1.Quantity.Zero, utils_1.Quantity.from(timestamp), this.isPostMerge ? utils_1.Quantity.Zero : minerOptions.difficulty, fallbackBlock.header.totalDifficulty, this.getMixHash(fallbackBlock.hash().toBuffer()), baseFeePerGas, util_1.KECCAK256_RLP);\n                // store the genesis block in the database\n                const { block, serialized } = genesis.finalize(util_1.KECCAK256_RLP, util_1.KECCAK256_RLP, utils_1.BUFFER_256_ZERO, this.trie.root(), 0n, minerOptions.extraData, [], new Map());\n                const hash = block.hash();\n                return this.blocks\n                    .putBlock(block.header.number.toBuffer(), hash, serialized)\n                    .then(_ => ({\n                    block,\n                    blockLogs: ethereum_utils_1.BlockLogs.create(hash)\n                }));\n            }\n            await __classPrivateFieldGet(this, _Blockchain_commitAccounts, \"f\").call(this, initialAccounts);\n            // README: block `0` is weird in that a `0` _should_ be hashed as `[]`,\n            // instead of `[0]`, so we set it to `Quantity.Empty` instead of\n            // `Quantity.Zero` here. A few lines down in this function we swap\n            // this `Quantity.Empty` for `Quantity.Zero`. This is all so we don't\n            // have to have a \"treat empty as 0` check in every function that uses the\n            // \"latest\" block (which this genesis block will be for brief moment).\n            const rawBlockNumber = utils_1.Quantity.Empty;\n            // create the genesis block\n            const baseFeePerGas = this.common.isActivatedEIP(1559)\n                ? ethereum_block_1.Block.INITIAL_BASE_FEE_PER_GAS\n                : undefined;\n            const genesis = new ethereum_block_1.RuntimeBlock(this.common, rawBlockNumber, utils_1.Data.from(utils_1.BUFFER_32_ZERO), this.coinbase, blockGasLimit, utils_1.Quantity.Zero, utils_1.Quantity.from(timestamp), this.isPostMerge ? utils_1.Quantity.Zero : __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.difficulty, utils_1.Quantity.Zero, // we start the totalDifficulty at 0\n            // we use the initial trie root as the genesis block's mixHash as it\n            // is deterministic based on initial wallet conditions\n            this.isPostMerge ? (0, utils_1.keccak)(this.trie.root()) : utils_1.BUFFER_32_ZERO, baseFeePerGas, util_1.KECCAK256_RLP);\n            // store the genesis block in the database\n            const { block, serialized } = genesis.finalize(util_1.KECCAK256_RLP, util_1.KECCAK256_RLP, utils_1.BUFFER_256_ZERO, this.trie.root(), 0n, __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.extraData, [], new Map());\n            // README: set the block number to an actual 0 now.\n            block.header.number = utils_1.Quantity.Zero;\n            const hash = block.hash();\n            return this.blocks\n                .putBlock(block.header.number.toBuffer(), hash, serialized)\n                .then(_ => ({\n                block,\n                blockLogs: ethereum_utils_1.BlockLogs.create(hash)\n            }));\n        });\n        /**\n         * The number of milliseconds time should be adjusted by when computing the\n         * \"time\" for a block.\n         */\n        _Blockchain_timeAdjustment.set(this, 0);\n        /**\n         * Returns the timestamp, adjusted by the timeAdjustment offset, in seconds.\n         * @param precedingTimestamp - the timestamp of the block to be used as the\n         * time source if `timestampIncrement` is not \"clock\".\n         */\n        _Blockchain_adjustedTime.set(this, (precedingTimestamp) => {\n            const timeAdjustment = __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\");\n            const timestampIncrement = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement;\n            if (timestampIncrement === \"clock\") {\n                return Math.floor((Date.now() + timeAdjustment) / 1000);\n            }\n            else {\n                return (precedingTimestamp.toNumber() +\n                    Math.floor(timeAdjustment / 1000) +\n                    timestampIncrement.toNumber());\n            }\n        });\n        _Blockchain_deleteBlockData.set(this, async (blocksToDelete, newLatestBlockNumber) => {\n            // if we are forking we need to make sure we clean up the forking related\n            // metadata that isn't stored in the trie\n            if (\"revertMetaData\" in this.trie) {\n                await this.trie.revertMetaData(blocksToDelete[blocksToDelete.length - 1].header.number, blocksToDelete[0].header.number);\n            }\n            await __classPrivateFieldGet(this, _Blockchain_database, \"f\").batch(() => {\n                const { blocks, transactions, transactionReceipts, blockLogs } = this;\n                // point to the new \"latest\" again\n                blocks.updateLatestIndex(newLatestBlockNumber);\n                // clean up old blocks\n                blocksToDelete.forEach(block => {\n                    block.getTransactions().forEach(tx => {\n                        const txHash = tx.hash.toBuffer();\n                        transactions.del(txHash);\n                        transactionReceipts.del(txHash);\n                    });\n                    const blockNum = block.header.number.toBuffer();\n                    blocks.del(blockNum);\n                    blocks.del(block.hash().toBuffer());\n                    blockLogs.del(blockNum);\n                });\n            });\n        });\n        // TODO(stability): this.#snapshots is a potential unbound memory suck. Caller\n        // could call `evm_snapshot` over and over to grow the snapshot stack\n        // indefinitely. `this.#snapshots.blocks` is even worse. To solve this we\n        // might need to store in the db. An unlikely real problem, but possible.\n        _Blockchain_snapshots.set(this, {\n            snaps: [],\n            blocks: null,\n            unsubscribeFromBlocks: null\n        });\n        /**\n         * Creates a new VM with it's internal state set to that of the given `block`,\n         * up to, but _not_ including, the transaction at the given\n         * `transactionIndex`.\n         *\n         * Note: the VM is returned in a \"checkpointed\" state.\n         *\n         * @param transactionIndex\n         * @param trie\n         * @param block\n         */\n        _Blockchain_createFastForwardVm.set(this, async (transactionIndex, trie, block) => {\n            const blocks = this.blocks;\n            // ethereumjs vm doesn't use the callback style anymore\n            const blockchain = {\n                getBlock: async (number) => {\n                    const block = await blocks\n                        .get(utils_1.Quantity.toBuffer(number))\n                        .catch(_ => null);\n                    return block ? { hash: () => block.hash().toBuffer() } : null;\n                }\n            };\n            const common = this.fallback\n                ? this.fallback.getCommonForBlock(this.common, block.header)\n                : this.common;\n            // TODO: prefixCodeHashes should eventually be conditional\n            // https://github.com/trufflesuite/ganache/issues/3701\n            const stateManager = this.fallback\n                ? new state_manager_1.ForkStateManager({\n                    trie: trie,\n                    prefixCodeHashes: false\n                })\n                : new state_manager_2.GanacheStateManager({ trie, prefixCodeHashes: false });\n            const eei = new vm_1.EEI(stateManager, common, blockchain);\n            const evm = new evm_1.EVM({\n                common,\n                allowUnlimitedContractSize: __classPrivateFieldGet(this, _Blockchain_options, \"f\").chain.allowUnlimitedContractSize,\n                eei\n            });\n            const vm = await vm_1.VM.create({\n                activatePrecompiles: false,\n                common,\n                blockchain,\n                stateManager,\n                evm\n            });\n            // Don't even let the vm try to flush the block's _cache to the stateTrie.\n            // When forking some of the data that the traced function may request will\n            // exist only on the main chain. Because we pretty much lie to the VM by\n            // telling it we DO have data in our Trie, when we really don't, it gets\n            // lost during the commit phase when it traverses the \"borrowed\" datum's\n            // trie (as it may not have a valid root). Because this is a trace, and we\n            // don't need to commit the data, duck punching the `flush` method (the\n            // simplest method I could find) is fine.\n            // Remove this and you may see the infamous\n            // `Uncaught TypeError: Cannot read property 'pop' of undefined` error!\n            vm.stateManager._cache.flush = async () => { };\n            // Process the block without committing the data.\n            await vm.stateManager.checkpoint();\n            for (let i = 0; i < transactionIndex; i++) {\n                const tx = block.transactions[i];\n                const transactionEventContext = {};\n                this.emit(\"ganache:vm:tx:before\", {\n                    context: transactionEventContext\n                });\n                await vm.runTx({\n                    skipHardForkValidation: true,\n                    skipNonce: true,\n                    skipBalance: true,\n                    skipBlockGasLimitValidation: true,\n                    tx,\n                    block: block\n                });\n                this.emit(\"ganache:vm:tx:after\", {\n                    context: transactionEventContext\n                });\n            }\n            return vm;\n        });\n        _Blockchain_traceTransaction.set(this, async (transactionIndex, trie, newBlock, options) => {\n            const vm = await __classPrivateFieldGet(this, _Blockchain_createFastForwardVm, \"f\").call(this, transactionIndex, trie, newBlock);\n            let currentDepth = -1;\n            const storageStack = [];\n            const storage = {};\n            let gas = 0n;\n            const structLogs = [];\n            const TraceData = (0, ethereum_utils_1.TraceDataFactory)();\n            const transaction = newBlock.transactions[transactionIndex];\n            const transactionEventContext = {};\n            const stepListener = async (event, next) => {\n                // See these docs:\n                // https://github.com/ethereum/go-ethereum/wiki/Management-APIs\n                if (__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\")) {\n                    this.emit(\"ganache:vm:tx:step\", (0, provider_events_1.makeStepEvent)(transactionEventContext, event));\n                }\n                const gasLeft = event.gasLeft;\n                const totalGasUsedAfterThisStep = transaction.gasLimit - gasLeft;\n                const gasUsedPreviousStep = totalGasUsedAfterThisStep - gas;\n                gas += gasUsedPreviousStep;\n                let memory;\n                if (options.disableMemory === true) {\n                    memory = [];\n                }\n                else {\n                    // We get the memory as one large array.\n                    // Let's cut it up into 32 byte chunks as required by the spec.\n                    const limit = Number(event.memoryWordCount);\n                    memory = Array(limit);\n                    let index = 0;\n                    while (index < limit) {\n                        const offset = index * 32;\n                        const slice = event.memory.subarray(offset, offset + 32);\n                        memory[index++] = TraceData.from(slice);\n                    }\n                }\n                const stack = [];\n                if (options.disableStack !== true) {\n                    for (const stackItem of event.stack) {\n                        stack.push(TraceData.from(utils_1.Quantity.toBuffer(stackItem)));\n                    }\n                }\n                const structLog = {\n                    depth: event.depth + 1,\n                    error: \"\",\n                    gas: utils_1.Quantity.from(gasLeft),\n                    gasCost: 0,\n                    memory,\n                    op: event.opcode.name,\n                    pc: event.pc,\n                    stack,\n                    storage: null\n                };\n                // The gas difference calculated for each step is indicative of gas consumed in\n                // the previous step. Gas consumption in the final step will always be zero.\n                if (structLogs.length) {\n                    structLogs[structLogs.length - 1].gasCost = Number(gasUsedPreviousStep);\n                }\n                if (options.disableStorage === true) {\n                    // Add the struct log as is - nothing more to do.\n                    structLogs.push(structLog);\n                    next();\n                }\n                else {\n                    const { depth: eventDepth } = event;\n                    if (currentDepth > eventDepth) {\n                        storageStack.pop();\n                    }\n                    else if (currentDepth < eventDepth) {\n                        storageStack.push(new ethereum_utils_1.TraceStorageMap());\n                    }\n                    currentDepth = eventDepth;\n                    switch (event.opcode.name) {\n                        case \"SSTORE\": {\n                            const key = stack[stack.length - 1];\n                            const value = stack[stack.length - 2];\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            // Tell vm to move on to the next instruction. See below.\n                            structLogs.push(structLog);\n                            next();\n                            // assign after callback because this storage change actually takes\n                            // effect _after_ this opcode executes\n                            storageStack[eventDepth].set(key, value);\n                            break;\n                        }\n                        case \"SLOAD\": {\n                            const key = stack[stack.length - 1];\n                            const result = await vm.stateManager.getContractStorage(event.address, key.toBuffer());\n                            const value = TraceData.from(result);\n                            storageStack[eventDepth].set(key, value);\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            structLogs.push(structLog);\n                            next();\n                            break;\n                        }\n                        default:\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            structLogs.push(structLog);\n                            next();\n                    }\n                }\n            };\n            vm.evm.events.on(\"step\", stepListener);\n            this.emit(\"ganache:vm:tx:before\", {\n                context: transactionEventContext\n            });\n            await vm.runTx({\n                skipHardForkValidation: true,\n                skipNonce: true,\n                skipBalance: true,\n                skipBlockGasLimitValidation: true,\n                tx: transaction,\n                block: newBlock\n            });\n            this.emit(\"ganache:vm:tx:after\", {\n                context: transactionEventContext\n            });\n            vm.evm.events.removeListener(\"step\", stepListener);\n            // send state results back\n            return {\n                gas: utils_1.Quantity.from(gas),\n                structLogs,\n                returnValue: \"\",\n                storage\n            };\n        });\n        /**\n         * Creates a block based on the given `targetBlock` that contains only the\n         * transactions from `targetBlock` up to and including the transaction at\n         * `transactionIndex`.\n         *\n         * @param targetBlock\n         * @param parentBlock\n         * @param transactionIndex\n         * @returns\n         */\n        _Blockchain_prepareNextBlock.set(this, (targetBlock, parentBlock, transactionIndex) => {\n            targetBlock.header.parentHash;\n            // Prepare the \"next\" block with necessary transactions\n            const newBlock = new ethereum_block_1.RuntimeBlock(this.common, utils_1.Quantity.from((parentBlock.header.number.toBigInt() || 0n) + 1n), parentBlock.hash(), ethereum_address_1.Address.from(parentBlock.header.miner.toString()), parentBlock.header.gasLimit, utils_1.Quantity.Zero, \n            // make sure we use the same timestamp as the target block\n            targetBlock.header.timestamp, this.isPostMerge ? utils_1.Quantity.Zero : __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.difficulty, parentBlock.header.totalDifficulty, this.getMixHash(parentBlock.hash().toBuffer()), ethereum_block_1.Block.calcNextBaseFee(parentBlock), util_1.KECCAK256_RLP);\n            newBlock.transactions = [];\n            newBlock.uncleHeaders = [];\n            const transactions = targetBlock.getTransactions();\n            for (let i = 0; i <= transactionIndex; i++) {\n                const tx = transactions[i];\n                newBlock.transactions.push(tx.toVmTransaction());\n            }\n            return newBlock;\n        });\n        __classPrivateFieldSet(this, _Blockchain_options, options, \"f\");\n        this.fallback = fallback;\n        this.coinbase = coinbase;\n        __classPrivateFieldSet(this, _Blockchain_instamine, !options.miner.blockTime || options.miner.blockTime <= 0, \"f\");\n        __classPrivateFieldSet(this, _Blockchain_database, new database_1.default(options, this), \"f\");\n    }\n    async initialize(initialAccounts) {\n        const database = __classPrivateFieldGet(this, _Blockchain_database, \"f\");\n        const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n        const instamine = __classPrivateFieldGet(this, _Blockchain_instamine, \"f\");\n        try {\n            let common;\n            if (this.fallback) {\n                await this.fallback.initialize();\n                await database.initialize();\n                common = this.common = this.fallback.common;\n                options.fork.blockNumber = this.fallback.blockNumber.toNumber();\n                options.chain.networkId = Number(common.networkId());\n                options.chain.chainId = Number(common.chainId());\n            }\n            else {\n                await database.initialize();\n                common = this.common = createCommon(options.chain.chainId, options.chain.networkId, options.chain.hardfork);\n                if (options.chain.allowUnlimitedInitCodeSize) {\n                    (0, common_helpers_1.removeEIP3860InitCodeSizeLimitCheck)(common);\n                }\n            }\n            this.isPostMerge = this.common.gteHardfork(\"merge\");\n            const blocks = (this.blocks = await block_manager_1.default.initialize(this, common, database.blockIndexes, database.blocks));\n            this.blockLogs = new blocklog_manager_1.default(database.blockLogs, this);\n            this.transactions = new transaction_manager_1.default(options, common, this, database.transactions);\n            this.transactionReceipts = new transaction_receipt_manager_1.default(database.transactionReceipts, this);\n            this.accounts = new account_manager_1.default(this);\n            this.storageKeys = database.storageKeys;\n            // if we have a latest block, use it to set up the trie.\n            const { latest } = blocks;\n            {\n                let stateRoot;\n                if (latest) {\n                    __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, Promise.resolve({\n                        block: latest,\n                        blockLogs: null\n                    }), \"f\");\n                    ({ stateRoot } = latest.header);\n                }\n                else {\n                    stateRoot = null;\n                }\n                this.trie = makeTrie(this, database.trie, stateRoot);\n            }\n            // create VM and listen to step events\n            this.vm = await this.createVmFromStateTrie(this.trie, options.chain.allowUnlimitedContractSize, true);\n            {\n                // Grab current time once to be used in all references to \"now\", to avoid\n                // any discrepancies. See https://github.com/trufflesuite/ganache/issues/3271\n                const startTime = new Date();\n                // if we don't have a time from the user get one now\n                if (options.chain.time == null)\n                    options.chain.time = startTime;\n                // create first block\n                const timestamp = options.chain.time.getTime();\n                const firstBlockTime = Math.floor(timestamp / 1000);\n                // if we are using clock time we need to record the time offset so\n                // other blocks can have timestamps relative to our initial time.\n                if (options.miner.timestampIncrement === \"clock\") {\n                    __classPrivateFieldSet(this, _Blockchain_timeAdjustment, timestamp - +startTime, \"f\");\n                }\n                // if we don't already have a latest block, create a genesis block!\n                if (!latest) {\n                    if (initialAccounts.length > 0) {\n                        await __classPrivateFieldGet(this, _Blockchain_commitAccounts, \"f\").call(this, initialAccounts);\n                    }\n                    __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, __classPrivateFieldGet(this, _Blockchain_initializeGenesisBlock, \"f\").call(this, firstBlockTime, options.miner.blockGasLimit, initialAccounts), \"f\");\n                    blocks.latest = await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\").then(({ block }) => block);\n                    // when we are forking, blocks.earliest is already set to what was\n                    // retrieved from the fork\n                    if (!blocks.earliest) {\n                        blocks.earliest = blocks.latest;\n                    }\n                }\n            }\n            {\n                // configure and start miner\n                const txPool = this.transactions.transactionPool;\n                const minerOpts = options.miner;\n                const miner = (__classPrivateFieldSet(this, _Blockchain_miner, new miner_1.default(minerOpts, txPool.executables, this.vm, __classPrivateFieldGet(this, _Blockchain_readyNextBlock, \"f\")), \"f\"));\n                //#region re-emit miner events:\n                miner.on(\"ganache:vm:tx:before\", event => {\n                    this.emit(\"ganache:vm:tx:before\", event);\n                });\n                miner.on(\"ganache:vm:tx:step\", event => {\n                    if (!__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\"))\n                        return;\n                    this.emit(\"ganache:vm:tx:step\", event);\n                });\n                miner.on(\"ganache:vm:tx:after\", event => {\n                    this.emit(\"ganache:vm:tx:after\", event);\n                });\n                miner.on(\"ganache:vm:tx:console.log\", event => {\n                    options.logging.logger.log(...event.logs);\n                    this.emit(\"ganache:vm:tx:console.log\", event);\n                });\n                //#endregion\n                //#region automatic mining\n                const nullResolved = Promise.resolve(null);\n                const mineAll = (maxTransactions, onlyOneBlock) => __classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this)\n                    ? nullResolved\n                    : this.mine(maxTransactions, onlyOneBlock);\n                if (instamine) {\n                    // insta mining\n                    // whenever the transaction pool is drained mine the txs into blocks\n                    // only one transaction should be added per block\n                    txPool.on(\"drain\", mineAll.bind(null, miner_1.Capacity.Single));\n                }\n                else {\n                    // interval mining\n                    const wait = () => (__classPrivateFieldSet(this, _Blockchain_timer, setTimeout(next, minerOpts.blockTime * 1e3), \"f\"));\n                    // when interval mining, only one block should be mined. the block\n                    // can, however, be filled\n                    const next = () => {\n                        mineAll(miner_1.Capacity.FillBlock, true).then(wait);\n                    };\n                    wait();\n                }\n                //#endregion\n                miner.on(\"block\", __classPrivateFieldGet(this, _Blockchain_handleNewBlockData, \"f\"));\n                this.once(\"stop\").then(() => miner.clearListeners());\n            }\n        }\n        catch (e) {\n            // we failed to start up :-( bail!\n            __classPrivateFieldSet(this, _Blockchain_state, Status.stopping, \"f\");\n            // ignore errors while stopping here, since we are already in an\n            // exceptional case\n            await this.stop().catch(_ => { });\n            throw e;\n        }\n        __classPrivateFieldSet(this, _Blockchain_state, Status.started, \"f\");\n        this.emit(\"ready\");\n    }\n    getMixHash(data) {\n        // mixHash is used as an RNG post merge hardfork\n        return this.isPostMerge ? (0, utils_1.keccak)(data) : utils_1.BUFFER_32_ZERO;\n    }\n    pause() {\n        __classPrivateFieldSet(this, _Blockchain_state, __classPrivateFieldGet(this, _Blockchain_state, \"f\") | Status.paused, \"f\");\n    }\n    resume(_threads = 1) {\n        if (!__classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this)) {\n            __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Warning: startMining called when miner was already started\");\n            return;\n        }\n        // toggles the `paused` bit\n        __classPrivateFieldSet(this, _Blockchain_state, __classPrivateFieldGet(this, _Blockchain_state, \"f\") ^ Status.paused, \"f\");\n        // if we are instamining mine a block right away\n        if (__classPrivateFieldGet(this, _Blockchain_instamine, \"f\")) {\n            return this.mine(miner_1.Capacity.FillBlock);\n        }\n    }\n    /**\n     * @param milliseconds - the number of milliseconds to adjust the time by.\n     * Negative numbers are treated as 0.\n     * @returns the total time offset *in milliseconds*\n     */\n    increaseTime(milliseconds) {\n        if (milliseconds < 0) {\n            milliseconds = 0;\n        }\n        return (__classPrivateFieldSet(this, _Blockchain_timeAdjustment, __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\") + milliseconds, \"f\"));\n    }\n    /**\n     * Adjusts the internal time adjustment such that the provided time is considered the \"current\" time.\n     * @param newTime - the time (in milliseconds) that will be considered the \"current\" time\n     * @returns the total time offset *in milliseconds*\n     */\n    setTimeDiff(newTime) {\n        // when using clock time use Date.now(), otherwise use the timestamp of the\n        // current latest block\n        const currentTime = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement === \"clock\"\n            ? Date.now()\n            : this.blocks.latest.header.timestamp.toNumber() * 1000;\n        return (__classPrivateFieldSet(this, _Blockchain_timeAdjustment, newTime - currentTime, \"f\"));\n    }\n    snapshot() {\n        const snapshots = __classPrivateFieldGet(this, _Blockchain_snapshots, \"f\");\n        const snaps = snapshots.snaps;\n        // Subscription ids are based on the number of active snapshots. Weird? Yes.\n        // But it's the way it's been since the beginning so it just hasn't been\n        // changed. Feel free to change it so ids are unique if it bothers you\n        // enough.\n        const id = snaps.push({\n            block: this.blocks.latest,\n            timeAdjustment: __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\")\n        });\n        // start listening to new blocks if this is the first snapshot\n        if (id === 1) {\n            snapshots.unsubscribeFromBlocks = this.on(\"block\", block => {\n                snapshots.blocks = {\n                    current: block.hash().toBuffer(),\n                    next: snapshots.blocks\n                };\n            });\n        }\n        __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Saved snapshot #\" + id);\n        return id;\n    }\n    async revert(snapshotId) {\n        if (snapshotId.isNull()) {\n            throw new Error(\"invalid snapshotId\");\n        }\n        const rawValue = snapshotId.toBigInt();\n        __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Reverting to snapshot #\" + snapshotId);\n        const snapshots = __classPrivateFieldGet(this, _Blockchain_snapshots, \"f\");\n        const snaps = snapshots.snaps;\n        const snapshotIndex = Number(rawValue - 1n);\n        const snapshot = snaps[snapshotIndex];\n        if (!snapshot) {\n            return false;\n        }\n        // pause processing new transactions...\n        await this.transactions.pause();\n        // then pause the miner, too.\n        await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").pause();\n        // wait for anything in the process of being saved to finish up\n        await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        // Pending transactions are always removed when you revert, even if they\n        // were present before the snapshot was created. Ideally, we'd remove only\n        // the new transactions.. but we'll leave that for another day.\n        this.transactions.clear();\n        const blocks = this.blocks;\n        const currentHash = blocks.latest.hash().toBuffer();\n        const snapshotBlock = snapshot.block;\n        const snapshotHeader = snapshotBlock.header;\n        const snapshotHash = snapshotBlock.hash().toBuffer();\n        // remove this and all stored snapshots after this snapshot\n        snaps.splice(snapshotIndex);\n        // if there are no more listeners, stop listening to new blocks\n        if (snaps.length === 0) {\n            snapshots.unsubscribeFromBlocks();\n        }\n        // if the snapshot's hash is different than the latest block's hash we've\n        // got new blocks to clean up.\n        if (!currentHash.equals(snapshotHash)) {\n            // if we've added blocks since we snapshotted we need to delete them and put\n            // some things back the way they were.\n            const blockPromises = [];\n            let blockList = snapshots.blocks;\n            while (blockList !== null) {\n                if (blockList.current.equals(snapshotHash))\n                    break;\n                blockPromises.push(blocks.getByHash(blockList.current));\n                blockList = blockList.next;\n            }\n            snapshots.blocks = blockList;\n            const blockData = await Promise.all(blockPromises);\n            await __classPrivateFieldGet(this, _Blockchain_deleteBlockData, \"f\").call(this, blockData, snapshotHeader.number.toBuffer());\n            setStateRootSync(this.vm.stateManager, snapshotHeader.stateRoot.toBuffer());\n            blocks.latest = snapshotBlock;\n        }\n        // put our time adjustment back\n        __classPrivateFieldSet(this, _Blockchain_timeAdjustment, snapshot.timeAdjustment, \"f\");\n        // resume mining\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\").resume();\n        // resume processing transactions\n        this.transactions.resume();\n        return true;\n    }\n    async queueTransaction(transaction, secretKey) {\n        // NOTE: this.transactions.add *must* be awaited before returning the\n        // `transaction.hash()`, as the transactionPool may change the transaction\n        // (and thus its hash!)\n        // It may also throw Errors that must be returned to the caller.\n        const isExecutable = (await this.transactions.add(transaction, secretKey)) === true;\n        if (isExecutable) {\n            process.nextTick(this.emit.bind(this), \"pendingTransaction\", transaction);\n        }\n        const { hash } = transaction;\n        const instamine = __classPrivateFieldGet(this, _Blockchain_instamine, \"f\");\n        if (!instamine || __classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this)) {\n            return hash;\n        }\n        else {\n            const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n            // if the transaction is not executable, we just have to return the hash\n            if (instamine && options.miner.instamine === \"eager\") {\n                if (!isExecutable) {\n                    // users have been confused about why ganache \"hangs\" when sending a\n                    // transaction with a \"too-high\" nonce. This message should help them\n                    // understand what's going on.\n                    options.logging.logger.log(`Transaction \"${hash}\" has a too-high nonce; this transaction has been added to the pool, and will be processed when its nonce is reached. See https://github.com/trufflesuite/ganache/issues/4165 for more information.`);\n                }\n                // in eager instamine mode we must wait for the transaction to be saved\n                // before we can return the hash\n                const { status, error } = await transaction.once(\"finalized\");\n                // in eager instamine mode we must throw on all rejected transaction\n                // errors. We must also throw on `confirmed` transactions when\n                // vmErrorsOnRPCResponse is enabled.\n                if (error &&\n                    (status === \"rejected\" || options.chain.vmErrorsOnRPCResponse))\n                    throw error;\n            }\n            return hash;\n        }\n    }\n    async simulateTransaction(transaction, parentBlock, overrides) {\n        let result;\n        const data = transaction.data;\n        let gasLimit = transaction.gas.toBigInt();\n        // subtract out the transaction's base fee from the gas limit before\n        // simulating the tx, because `runCall` doesn't account for raw gas costs.\n        const hasToAddress = transaction.to != null;\n        const to = hasToAddress ? new ethereum_address_1.Address(transaction.to.toBuffer()) : null;\n        const common = this.fallback\n            ? this.fallback.getCommonForBlock(this.common, transaction.block.header)\n            : this.common;\n        const gasLeft = gasLimit - (0, ethereum_transaction_1.calculateIntrinsicGas)(data, hasToAddress, common);\n        const transactionContext = {};\n        this.emit(\"ganache:vm:tx:before\", {\n            context: transactionContext\n        });\n        if (gasLeft >= 0n) {\n            const stateTrie = this.trie.copy(false);\n            stateTrie.setContext(parentBlock.header.stateRoot.toBuffer(), null, parentBlock.header.number);\n            const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n            const vm = await this.createVmFromStateTrie(stateTrie, options.chain.allowUnlimitedContractSize, false, // precompiles have already been initialized in the stateTrie\n            common);\n            // take a checkpoint so the `runCall` never writes to the trie. We don't\n            // commit/revert later because this stateTrie is ephemeral anyway.\n            await vm.eei.checkpoint();\n            vm.evm.events.on(\"step\", (event) => {\n                const logs = (0, console_log_1.maybeGetLogs)(event);\n                if (logs) {\n                    options.logging.logger.log(...logs);\n                    this.emit(\"ganache:vm:tx:console.log\", {\n                        context: transactionContext,\n                        logs\n                    });\n                }\n                if (!__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\"))\n                    return;\n                const ganacheStepEvent = (0, provider_events_1.makeStepEvent)(transactionContext, event);\n                this.emit(\"ganache:vm:tx:step\", ganacheStepEvent);\n            });\n            const caller = transaction.from.toBuffer();\n            const callerAddress = new ethereum_address_1.Address(caller);\n            if (common.isActivatedEIP(2929)) {\n                const eei = vm.eei;\n                // handle Berlin hardfork warm storage reads\n                (0, precompiles_1.warmPrecompiles)(eei);\n                eei.addWarmedAddress(caller);\n                if (to)\n                    eei.addWarmedAddress(to.buf);\n                // shanghai hardfork requires that we warm the coinbase address\n                if (common.isActivatedEIP(3651)) {\n                    eei.addWarmedAddress(transaction.block.header.coinbase.buf);\n                }\n            }\n            // If there are any overrides requested for eth_call, apply\n            // them now before running the simulation.\n            await (0, run_call_1.applySimulationOverrides)(stateTrie, vm, overrides);\n            // we need to update the balance and nonce of the sender _before_\n            // we run this transaction so that things that rely on these values\n            // are correct (like contract creation!).\n            const fromAccount = await vm.eei.getAccount(callerAddress);\n            fromAccount.nonce += 1n;\n            const txCost = gasLimit * transaction.gasPrice.toBigInt();\n            const startBalance = fromAccount.balance;\n            // TODO: should we throw if insufficient funds?\n            fromAccount.balance = txCost > startBalance ? 0n : startBalance - txCost;\n            await vm.eei.putAccount(callerAddress, fromAccount);\n            // finally, run the call\n            result = await vm.evm.runCall({\n                caller: callerAddress,\n                data: transaction.data && transaction.data.toBuffer(),\n                gasPrice: transaction.gasPrice.toBigInt(),\n                gasLimit: gasLeft,\n                to,\n                value: transaction.value == null ? 0n : transaction.value.toBigInt(),\n                block: transaction.block\n            });\n        }\n        else {\n            result = {\n                execResult: {\n                    runState: { programCounter: 0 },\n                    exceptionError: new evm_1.EvmError(evm_1.EvmErrorMessage.OUT_OF_GAS),\n                    returnValue: utils_1.BUFFER_EMPTY\n                }\n            };\n        }\n        this.emit(\"ganache:vm:tx:after\", {\n            context: transactionContext\n        });\n        if (result.execResult.exceptionError) {\n            throw new ethereum_utils_1.CallError(result);\n        }\n        else {\n            return utils_1.Data.from(result.execResult.returnValue || \"0x\");\n        }\n    }\n    /**\n     * traceTransaction\n     *\n     * Run a previously-run transaction in the same state in which it occurred at the time it was run.\n     * This will return the vm-level trace output for debugging purposes.\n     *\n     * Strategy:\n     *\n     *  1. Find block where transaction occurred\n     *  2. Set state root of that block\n     *  3. Rerun every transaction in that block prior to and including the requested transaction\n     *  4. Send trace results back.\n     *\n     * @param transactionHash -\n     * @param options -\n     */\n    async traceTransaction(transactionHash, options) {\n        const transactionHashBuffer = utils_1.Data.toBuffer(transactionHash);\n        // #1 - get block via transaction object\n        const transaction = await this.transactions.get(transactionHashBuffer);\n        if (!transaction) {\n            throw new Error(\"Unknown transaction \" + transactionHash);\n        }\n        const targetBlock = await this.blocks.getByHash(transaction.blockHash.toBuffer());\n        const parentBlock = await this.blocks.getByHash(targetBlock.header.parentHash.toBuffer());\n        const txIndex = transaction.index.toNumber();\n        const newBlock = __classPrivateFieldGet(this, _Blockchain_prepareNextBlock, \"f\").call(this, targetBlock, parentBlock, txIndex);\n        // #2 - Set state root of original block\n        //\n        // TODO: Forking needs the forked block number passed during this step:\n        // https://github.com/trufflesuite/ganache/blob/develop/lib/blockchain_double.js#L917\n        const trie = this.trie.copy();\n        trie.setContext(parentBlock.header.stateRoot.toBuffer(), null, parentBlock.header.number);\n        // #3 - Rerun every transaction in block prior to and including the requested transaction\n        const { gas, structLogs, returnValue, storage } = await __classPrivateFieldGet(this, _Blockchain_traceTransaction, \"f\").call(this, txIndex, trie, newBlock, options);\n        // #4 - Send results back\n        return { gas, structLogs, returnValue, storage };\n    }\n    /**\n     * storageRangeAt\n     *\n     * Returns a contract's storage given a starting key and max number of\n     * entries to return.\n     *\n     *\n     * @param blockHash -\n     * @param txIndex -\n     * @param contractAddress -\n     * @param startKey -\n     * @param maxResult -\n     */\n    async storageRangeAt(blockHash, txIndex, contractAddress, startKey, maxResult) {\n        // get block information\n        const targetBlock = await this.blocks.getByHash(blockHash);\n        // get transaction using txIndex\n        const transactions = targetBlock.getTransactions();\n        const transaction = transactions[txIndex];\n        if (!transaction) {\n            throw new Error(`transaction index ${txIndex} is out of range for block ${blockHash}`);\n        }\n        const parentBlock = await this.blocks.getByHash(targetBlock.header.parentHash.toBuffer());\n        const { trie: trieDb, storageKeys: storageKeysDb } = __classPrivateFieldGet(this, _Blockchain_database, \"f\");\n        const trie = makeTrie(this, trieDb, parentBlock.header.stateRoot);\n        // get the contractAddress account storage trie\n        const contractAddressBuffer = ethereum_address_1.Address.toBuffer(contractAddress);\n        const rawAccount = await trie.get(contractAddressBuffer);\n        if (!rawAccount) {\n            throw new Error(`account ${contractAddress} doesn't exist`);\n        }\n        let storageTrie;\n        if (txIndex === 0) {\n            // there are no transactions to run, so let's just grab what we need\n            // from the last block's trie\n            const [, , stateRoot] = (0, rlp_1.decode)(rawAccount);\n            trie.setContext(stateRoot, contractAddressBuffer, parentBlock.header.number);\n            storageTrie = trie;\n        }\n        else {\n            // prepare block to be run in traceTransaction\n            const newBlock = __classPrivateFieldGet(this, _Blockchain_prepareNextBlock, \"f\").call(this, targetBlock, parentBlock, txIndex);\n            // run every transaction in that block prior to the requested transaction\n            const vm = await __classPrivateFieldGet(this, _Blockchain_createFastForwardVm, \"f\").call(this, txIndex, trie, newBlock);\n            storageTrie = await vm.stateManager.getStorageTrie(contractAddressBuffer);\n        }\n        return await (0, storage_range_at_1.dumpTrieStorageDetails)(utils_1.Data.toBuffer(startKey), maxResult, storageTrie, storageKeysDb);\n    }\n    toggleStepEvent(enable) {\n        __classPrivateFieldSet(this, _Blockchain_emitStepEvent, enable, \"f\");\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\").toggleStepEvent(enable);\n    }\n    /**\n     * Gracefully shuts down the blockchain service and all of its dependencies.\n     */\n    async stop() {\n        // If the blockchain is still initializing we don't want to shut down\n        // yet because there may still be database calls in flight. Leveldb may\n        // cause a segfault due to a race condition between a db write and the close\n        // call.\n        if (__classPrivateFieldGet(this, _Blockchain_state, \"f\") === Status.starting) {\n            await this.once(\"ready\");\n        }\n        __classPrivateFieldSet(this, _Blockchain_state, Status.stopping, \"f\");\n        // stop the polling miner, if necessary\n        clearTimeout(__classPrivateFieldGet(this, _Blockchain_timer, \"f\"));\n        // clean up listeners\n        if (this.vm) {\n            this.vm.events.removeAllListeners();\n            this.vm.evm && this.vm.evm.events.removeAllListeners();\n        }\n        // pause processing new transactions...\n        this.transactions && (await this.transactions.pause());\n        // then pause the miner, too.\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\") && (await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").pause());\n        // wait for anything in the process of being saved to finish up\n        await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        this.fallback && (await this.fallback.close());\n        await this.emit(\"stop\");\n        __classPrivateFieldGet(this, _Blockchain_database, \"f\") && (await __classPrivateFieldGet(this, _Blockchain_database, \"f\").close());\n        __classPrivateFieldSet(this, _Blockchain_state, Status.stopped, \"f\");\n    }\n}\n_Blockchain_state = new WeakMap(), _Blockchain_miner = new WeakMap(), _Blockchain_blockBeingSavedPromise = new WeakMap(), _Blockchain_timer = new WeakMap(), _Blockchain_emitStepEvent = new WeakMap(), _Blockchain_database = new WeakMap(), _Blockchain_options = new WeakMap(), _Blockchain_instamine = new WeakMap(), _Blockchain_saveNewBlock = new WeakMap(), _Blockchain_emitNewBlock = new WeakMap(), _Blockchain_getTransactionLogOutput = new WeakMap(), _Blockchain_handleNewBlockData = new WeakMap(), _Blockchain_readyNextBlock = new WeakMap(), _Blockchain_isPaused = new WeakMap(), _Blockchain_commitAccounts = new WeakMap(), _Blockchain_initializeGenesisBlock = new WeakMap(), _Blockchain_timeAdjustment = new WeakMap(), _Blockchain_adjustedTime = new WeakMap(), _Blockchain_deleteBlockData = new WeakMap(), _Blockchain_snapshots = new WeakMap(), _Blockchain_createFastForwardVm = new WeakMap(), _Blockchain_traceTransaction = new WeakMap(), _Blockchain_prepareNextBlock = new WeakMap();\nexports.default = Blockchain;\n//# sourceMappingURL=blockchain.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _Connector_provider, _Connector_handle;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connector = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst provider_1 = require(\"./provider\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst bufferify_1 = require(\"./helpers/bufferify\");\nfunction isHttp(connection) {\n    return (connection.constructor.name === \"uWS.HttpRequest\" ||\n        connection.constructor.name === \"HttpRequest\");\n}\nclass Connector {\n    get provider() {\n        return __classPrivateFieldGet(this, _Connector_provider, \"f\");\n    }\n    constructor(providerOptions = null, executor) {\n        _Connector_provider.set(this, void 0);\n        this.BUFFERIFY_THRESHOLD = Connector.BUFFERIFY_THRESHOLD;\n        _Connector_handle.set(this, (payload, connection) => {\n            const method = payload.method;\n            if (method === \"eth_subscribe\") {\n                if (isHttp(connection)) {\n                    return Promise.reject(new ethereum_utils_1.CodedError(\"notifications not supported\", utils_1.JsonRpcErrorCode.METHOD_NOT_SUPPORTED));\n                }\n            }\n            const params = payload.params;\n            return __classPrivateFieldGet(this, _Connector_provider, \"f\")._requestRaw({ method, params });\n        });\n        __classPrivateFieldSet(this, _Connector_provider, new provider_1.EthereumProvider(providerOptions, executor), \"f\");\n    }\n    async connect() {\n        await __classPrivateFieldGet(this, _Connector_provider, \"f\").initialize();\n    }\n    parse(message) {\n        try {\n            return JSON.parse(message);\n        }\n        catch (e) {\n            throw new ethereum_utils_1.CodedError(e.message, utils_1.JsonRpcErrorCode.PARSE_ERROR);\n        }\n    }\n    handle(payload, connection) {\n        if (Array.isArray(payload)) {\n            // handle batch transactions\n            const promises = payload.map(payload => __classPrivateFieldGet(this, _Connector_handle, \"f\").call(this, payload, connection)\n                .then(({ value }) => value)\n                .catch(e => e));\n            return Promise.resolve({ value: Promise.all(promises) });\n        }\n        else {\n            return __classPrivateFieldGet(this, _Connector_handle, \"f\").call(this, payload, connection);\n        }\n    }\n    format(results, payload) {\n        if (Array.isArray(payload)) {\n            return JSON.stringify(payload.map((payload, i) => {\n                const result = results[i];\n                if (result instanceof Error) {\n                    return (0, utils_1.makeError)(payload.id, result);\n                }\n                else {\n                    return (0, utils_1.makeResponse)(payload.id, result);\n                }\n            }));\n        }\n        else {\n            const json = (0, utils_1.makeResponse)(payload.id, results);\n            if (payload.method === \"debug_traceTransaction\" &&\n                typeof results === \"object\" &&\n                Array.isArray(results.structLogs) &&\n                // for \"large\" debug_traceTransaction results we convert to individual\n                // parts of the response to Buffers, yielded via a Generator function,\n                // instead of using JSON.stringify. This is necessary because we:\n                //   * avoid V8's maximum string length limit of 1GB\n                //   * avoid and the max Buffer length limit of ~2GB (on 64bit\n                //     architectures).\n                //   * avoid heap allocation failures due to trying to hold too much\n                //     data in memory (which can happen if we don't immediately consume\n                //     the `format` result -- by buffering everything into one array,\n                //     for example)\n                //\n                // We don't do this for everything because the bufferfication is so very\n                // very slow.\n                //\n                // TODO(perf): an even better way of solving this would be to convert\n                // `debug_traceTransaction` to a generator that yields chunks (of\n                // Buffer) as soon as they're available. We could then `write` these\n                // individual chunks immediately and our memory use would stay\n                // relatively low and constant.\n                results.structLogs.length > this.BUFFERIFY_THRESHOLD) {\n                return (0, bufferify_1.bufferify)(json, \"\");\n            }\n            else {\n                return JSON.stringify(json);\n            }\n        }\n    }\n    formatError(error, payload) {\n        const json = (0, utils_1.makeError)(payload && payload.id ? payload.id : null, error);\n        return JSON.stringify(json);\n    }\n    close() {\n        return __classPrivateFieldGet(this, _Connector_provider, \"f\").disconnect();\n    }\n}\nexports.Connector = Connector;\n_Connector_provider = new WeakMap(), _Connector_handle = new WeakMap();\nConnector.BUFFERIFY_THRESHOLD = 100000;\n//# sourceMappingURL=connector.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AccountManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nclass AccountManager {\n    constructor(blockchain) {\n        _AccountManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _AccountManager_blockchain, blockchain, \"f\");\n    }\n    async get(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const raw = await this.getRaw(address, blockNumber);\n        if (raw == null)\n            return null;\n        return ethereum_utils_1.Account.fromBuffer(raw);\n    }\n    async getRaw(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const { trie, blocks } = __classPrivateFieldGet(this, _AccountManager_blockchain, \"f\");\n        // get the block, its state root, and the trie at that state root\n        const { stateRoot, number } = (await blocks.get(blockNumber)).header;\n        const trieCopy = trie.copy(false);\n        trieCopy.setContext(stateRoot.toBuffer(), null, number);\n        // get the account from the trie\n        return await trieCopy.get(address.toBuffer());\n    }\n    async getNonce(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Quantity.Zero;\n        const [nonce] = (0, rlp_1.decode)(data);\n        return nonce.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(nonce);\n    }\n    async getBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Quantity.Zero;\n        const [, balance] = (0, rlp_1.decode)(data);\n        return balance.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(balance);\n    }\n    async getNonceAndBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return { nonce: utils_1.Quantity.Zero, balance: utils_1.Quantity.Zero };\n        const [nonce, balance] = (0, rlp_1.decode)(data);\n        return {\n            nonce: nonce.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(nonce),\n            balance: balance.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(balance)\n        };\n    }\n    async getCode(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Data.Empty;\n        const [, , , codeHash] = (0, rlp_1.decode)(data);\n        if (codeHash.equals(util_1.KECCAK256_NULL))\n            return utils_1.Data.Empty;\n        else\n            return __classPrivateFieldGet(this, _AccountManager_blockchain, \"f\").trie.database().get(codeHash).then(utils_1.Data.from);\n    }\n}\n_AccountManager_blockchain = new WeakMap();\nexports.default = AccountManager;\n//# sourceMappingURL=account-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _BlockManager_blockchain, _BlockManager_common, _BlockManager_blockIndexes;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst LATEST_INDEX_KEY = utils_1.BUFFER_ZERO;\nconst NOTFOUND = 404;\nconst EMPTY_BUFFER = Buffer.from([]);\nclass BlockManager extends manager_1.default {\n    static async initialize(blockchain, common, blockIndexes, base) {\n        const bm = new BlockManager(blockchain, common, blockIndexes, base);\n        await bm.updateTaggedBlocks();\n        return bm;\n    }\n    constructor(blockchain, common, blockIndexes, base) {\n        super(base, ethereum_block_1.Block, common);\n        _BlockManager_blockchain.set(this, void 0);\n        _BlockManager_common.set(this, void 0);\n        _BlockManager_blockIndexes.set(this, void 0);\n        this.fromFallback = async (tagOrBlockNumber) => {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            let blockNumber;\n            if (typeof tagOrBlockNumber === \"string\") {\n                blockNumber = tagOrBlockNumber;\n            }\n            else if (!fallback.isValidForkBlockNumber(tagOrBlockNumber)) {\n                // don't get the block if the requested block is _after_ our fallback's\n                // blocknumber because it doesn't exist in our local chain.\n                return null;\n            }\n            else {\n                blockNumber = tagOrBlockNumber.toString();\n            }\n            const json = await fallback.request(\"eth_getBlockByNumber\", [\n                blockNumber,\n                true\n            ]);\n            if (json == null) {\n                return null;\n            }\n            else {\n                const common = fallback.getCommonForBlock(__classPrivateFieldGet(this, _BlockManager_common, \"f\"), {\n                    number: BigInt(json.number),\n                    timestamp: BigInt(json.timestamp)\n                });\n                return BlockManager.rawFromJSON(json, common);\n            }\n        };\n        __classPrivateFieldSet(this, _BlockManager_blockchain, blockchain, \"f\");\n        __classPrivateFieldSet(this, _BlockManager_common, common, \"f\");\n        __classPrivateFieldSet(this, _BlockManager_blockIndexes, blockIndexes, \"f\");\n    }\n    static rawFromJSON(json, common) {\n        const blockNumber = utils_1.Quantity.toBuffer(json.number);\n        const hasWithdrawals = json.withdrawalsRoot != null;\n        const header = [\n            utils_1.Data.toBuffer(json.parentHash),\n            utils_1.Data.toBuffer(json.sha3Uncles),\n            ethereum_address_1.Address.from(json.miner).toBuffer(),\n            utils_1.Data.toBuffer(json.stateRoot),\n            utils_1.Data.toBuffer(json.transactionsRoot),\n            utils_1.Data.toBuffer(json.receiptsRoot),\n            utils_1.Data.toBuffer(json.logsBloom),\n            utils_1.Quantity.toBuffer(json.difficulty),\n            blockNumber,\n            utils_1.Quantity.toBuffer(json.gasLimit),\n            utils_1.Quantity.toBuffer(json.gasUsed),\n            utils_1.Quantity.toBuffer(json.timestamp),\n            utils_1.Data.toBuffer(json.extraData),\n            utils_1.Data.toBuffer(json.mixHash),\n            utils_1.Data.toBuffer(json.nonce)\n        ];\n        // We can't include the _slots_ for these values in the `header` array\n        // (i.e., set them to `undefined`), when the values are `undefined`, as the\n        // `length` of the array is encoded by the rlp process.\n        if (json.baseFeePerGas) {\n            header[15] = utils_1.Quantity.toBuffer(json.baseFeePerGas);\n            if (hasWithdrawals) {\n                header[16] = utils_1.Data.toBuffer(json.withdrawalsRoot);\n            }\n        }\n        const totalDifficulty = utils_1.Quantity.toBuffer(json.totalDifficulty);\n        const txs = Array(json.transactions.length);\n        const extraTxs = Array(json.transactions.length);\n        const blockHash = utils_1.Data.toBuffer(json.hash);\n        for (let index = 0; index < json.transactions.length; index++) {\n            const txJson = json.transactions[index];\n            const blockExtra = [\n                ethereum_address_1.Address.toBuffer(txJson.from),\n                utils_1.Quantity.toBuffer(txJson.hash)\n            ];\n            const txExtra = [\n                ...blockExtra,\n                blockHash,\n                blockNumber,\n                utils_1.Quantity.toBuffer(index)\n            ];\n            const tx = ethereum_transaction_1.TransactionFactory.fromRpc(txJson, common, txExtra);\n            txs[index] =\n                tx.raw.length === 9\n                    ? tx.raw\n                    : tx.serialized ?? (0, ethereum_transaction_1.encodeWithPrefix)(tx.type.toNumber(), tx.raw);\n            extraTxs[index] = blockExtra;\n        }\n        let start;\n        if (hasWithdrawals) {\n            const extraWithdrawals = Array(json.withdrawals.length);\n            for (let i = 0; i < json.withdrawals.length; i++) {\n                const withdrawal = json.withdrawals[i];\n                extraWithdrawals[i] = [\n                    utils_1.Quantity.toBuffer(withdrawal.index),\n                    utils_1.Quantity.toBuffer(withdrawal.validatorIndex),\n                    ethereum_address_1.Address.toBuffer(withdrawal.address),\n                    utils_1.Quantity.toBuffer(withdrawal.amount)\n                ];\n            }\n            start = [header, txs, [], extraWithdrawals];\n        }\n        else {\n            start = [header, txs, []];\n        }\n        return (0, ethereum_block_1.serialize)(start, [totalDifficulty, extraTxs]).serialized;\n    }\n    getBlockByTag(tag) {\n        switch (tag) {\n            case \"latest\":\n            case \"finalized\":\n            case \"safe\":\n                return this.latest;\n            case \"pending\":\n                // TODO: build a real pending block!\n                return this.latest; // this.createBlock(this.latest.header);\n            case \"earliest\":\n                return this.earliest;\n            default:\n                // the key is probably a hex string, let nature takes its course.\n                break;\n        }\n    }\n    getEffectiveNumber(tagOrBlockNumber = typeof ethereum_utils_1.Tag.latest) {\n        if (typeof tagOrBlockNumber === \"string\") {\n            const block = this.getBlockByTag(tagOrBlockNumber);\n            if (block) {\n                return block.header.number;\n            }\n        }\n        return utils_1.Quantity.from(tagOrBlockNumber);\n    }\n    async getNumberFromHash(hash) {\n        return __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").get(utils_1.Data.toBuffer(hash)).catch(e => {\n            if (e.status === NOTFOUND)\n                return null;\n            throw e;\n        });\n    }\n    async getByHash(hash) {\n        const number = await this.getNumberFromHash(hash);\n        if (number === null) {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            if (fallback) {\n                const json = await fallback.request(\"eth_getBlockByHash\", [\n                    utils_1.Data.from(hash),\n                    true\n                ]);\n                if (json) {\n                    const number = BigInt(json.number);\n                    if (number <= fallback.blockNumber.toBigInt()) {\n                        const common = fallback.getCommonForBlock(__classPrivateFieldGet(this, _BlockManager_common, \"f\"), {\n                            number,\n                            timestamp: BigInt(json.timestamp)\n                        });\n                        return new ethereum_block_1.Block(BlockManager.rawFromJSON(json, common), common);\n                    }\n                }\n            }\n            return null;\n        }\n        else {\n            return this.get(number);\n        }\n    }\n    async getRawByBlockNumber(blockNumber) {\n        // TODO(perf): make the block's raw fields accessible on latest/earliest/pending so\n        // we don't have to fetch them from the db each time a block tag is used.\n        // Issue: https://github.com/trufflesuite/ganache/issues/3481\n        const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n        const numBuf = blockNumber.toBuffer();\n        return this.getRaw(numBuf).then(block => {\n            if (block == null && fallback) {\n                return this.fromFallback(blockNumber);\n            }\n            return block;\n        });\n    }\n    async get(tagOrBlockNumber) {\n        if (typeof tagOrBlockNumber === \"string\") {\n            const block = this.getBlockByTag(tagOrBlockNumber);\n            if (block)\n                return block;\n        }\n        const blockNumber = utils_1.Quantity.from(tagOrBlockNumber);\n        const block = await this.getRaw(blockNumber.toBuffer());\n        const common = __classPrivateFieldGet(this, _BlockManager_common, \"f\");\n        if (block)\n            return new ethereum_block_1.Block(block, common);\n        else {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            if (fallback) {\n                const block = await this.fromFallback(blockNumber);\n                if (block) {\n                    const header = (0, rlp_1.decode)(block)[0];\n                    return new ethereum_block_1.Block(block, fallback.getCommonForBlock(common, {\n                        number: blockNumber.toBigInt(),\n                        timestamp: utils_1.Quantity.toBigInt(header[11])\n                    }));\n                }\n            }\n        }\n        throw new Error(\"header not found\");\n    }\n    /**\n     * Writes the block object to the underlying database.\n     * @param block -\n     */\n    async putBlock(number, hash, serialized) {\n        let key = number;\n        // ensure we can store Block #0 as key \"00\", not \"\"\n        if (EMPTY_BUFFER.equals(key)) {\n            key = Buffer.from([0]);\n        }\n        const secondaryKey = hash.toBuffer();\n        await Promise.all([\n            __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").put(secondaryKey, key),\n            super.set(key, serialized)\n        ]);\n    }\n    /**\n     * Updates the \"latest\" index to point to the given number.\n     * @param number the block number of the latest block\n     */\n    async updateLatestIndex(number) {\n        await __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").put(LATEST_INDEX_KEY, number);\n    }\n    async getEarliest() {\n        const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n        if (fallback) {\n            const json = await fallback.request(\"eth_getBlockByNumber\", [ethereum_utils_1.Tag.earliest, true], \n            // TODO: re-enable cache once this is fixed\n            // https://github.com/trufflesuite/ganache/issues/3773\n            { disableCache: true });\n            if (json) {\n                const common = fallback.getCommonForBlock(__classPrivateFieldGet(this, _BlockManager_common, \"f\"), {\n                    number: BigInt(json.number),\n                    timestamp: BigInt(json.timestamp)\n                });\n                return new ethereum_block_1.Block(BlockManager.rawFromJSON(json, common), common);\n            }\n        }\n        else {\n            // if we're forking, there shouldn't be an earliest block saved to the db,\n            // it's always retrieved from the fork\n            for await (const data of this.base.createValueStream({ limit: 1 })) {\n                return new ethereum_block_1.Block(data, __classPrivateFieldGet(this, _BlockManager_common, \"f\"));\n            }\n        }\n    }\n    /**\n     * Updates the this.latest and this.earliest properties with data\n     * from the database.\n     */\n    async updateTaggedBlocks() {\n        const [earliest, latestBlockNumber] = await Promise.all([\n            this.getEarliest(),\n            __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").get(LATEST_INDEX_KEY).catch(e => null)\n        ]);\n        if (earliest)\n            this.earliest = earliest;\n        if (latestBlockNumber) {\n            this.latest = await this.get(latestBlockNumber);\n        }\n        else {\n            // TODO: remove this section for the Ganache 8.0 release\n            // Ganache v7.0.0 didn't save a pointer to the latest block correctly, so\n            // when a database was restarted it would pull the wrong block. This code\n            // iterates over all data in the data base and finds the block with the\n            // highest block number and updates the database with the pointer so we\n            // don't have to hit this code again next time.\n            this.latest = await (async () => {\n                let latest;\n                for await (const data of this.base.createValueStream()) {\n                    const block = new ethereum_block_1.Block(data, __classPrivateFieldGet(this, _BlockManager_common, \"f\"));\n                    if (!latest ||\n                        block.header.number.toBigInt() > latest.header.number.toBigInt()) {\n                        latest = block;\n                    }\n                }\n                return latest;\n            })();\n            if (this.latest) {\n                // update the LATEST_INDEX_KEY index so we don't have to do this next time\n                await __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\")\n                    .put(LATEST_INDEX_KEY, this.latest.header.number.toBuffer())\n                    .catch(e => null);\n            }\n        }\n    }\n}\n_BlockManager_blockchain = new WeakMap(), _BlockManager_common = new WeakMap(), _BlockManager_blockIndexes = new WeakMap();\nexports.default = BlockManager;\n//# sourceMappingURL=block-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _BlockLogManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst filter_parsing_1 = require(\"../helpers/filter-parsing\");\nclass BlockLogManager extends manager_1.default {\n    constructor(base, blockchain) {\n        super(base, ethereum_utils_1.BlockLogs);\n        _BlockLogManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _BlockLogManager_blockchain, blockchain, \"f\");\n    }\n    async get(key) {\n        const log = await super.get(key);\n        if (log) {\n            log.blockNumber = utils_1.Quantity.from(key);\n        }\n        else if (__classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\").fallback) {\n            const block = utils_1.Quantity.from(key);\n            const res = await __classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\").fallback.request(\"eth_getLogs\", [{ fromBlock: block, toBlock: block }]);\n            return ethereum_utils_1.BlockLogs.fromJSON(res);\n        }\n        return log;\n    }\n    async getLogs(filter) {\n        const blockchain = __classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\");\n        if (\"blockHash\" in filter) {\n            const { addresses, topics } = (0, filter_parsing_1.parseFilterDetails)(filter);\n            const blockNumber = await blockchain.blocks.getNumberFromHash(filter.blockHash);\n            if (!blockNumber)\n                return [];\n            const logs = await this.get(blockNumber);\n            return logs ? [...logs.filter(addresses, topics)] : [];\n        }\n        else {\n            const { addresses, topics, fromBlock, toBlockNumber } = (0, filter_parsing_1.parseFilter)(filter, blockchain);\n            const pendingLogsPromises = [\n                this.get(fromBlock.toBuffer())\n            ];\n            const fromBlockNumber = fromBlock.toNumber();\n            // if we have a range of blocks to search, do that here:\n            if (fromBlockNumber !== toBlockNumber) {\n                // fetch all the blockLogs in-between `fromBlock` and `toBlock` (excluding\n                // from, because we already started fetching that one)\n                for (let i = fromBlockNumber + 1, l = toBlockNumber + 1; i < l; i++) {\n                    pendingLogsPromises.push(this.get(utils_1.Quantity.toBuffer(i)));\n                }\n            }\n            // now filter and compute all the blocks' blockLogs (in block order)\n            return Promise.all(pendingLogsPromises).then(blockLogsRange => {\n                const filteredBlockLogs = [];\n                blockLogsRange.forEach(blockLogs => {\n                    // TODO(perf): this loops over all addresses for every block.\n                    // Maybe make it loop only once?\n                    // Issue: https://github.com/trufflesuite/ganache/issues/3482\n                    if (blockLogs)\n                        filteredBlockLogs.push(...blockLogs.filter(addresses, topics));\n                });\n                return filteredBlockLogs;\n            });\n        }\n    }\n}\n_BlockLogManager_blockchain = new WeakMap();\nexports.default = BlockLogManager;\n//# sourceMappingURL=blocklog-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Manager_Type, _Manager_options;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"@ganache/utils\");\nconst NOTFOUND = 404;\nclass Manager {\n    constructor(base, type, options) {\n        _Manager_Type.set(this, void 0);\n        _Manager_options.set(this, void 0);\n        __classPrivateFieldSet(this, _Manager_Type, type, \"f\");\n        __classPrivateFieldSet(this, _Manager_options, options, \"f\");\n        this.base = base;\n    }\n    getRaw(key) {\n        if (typeof key === \"string\") {\n            key = utils_1.Data.toBuffer(key);\n        }\n        if (key.length === 0) {\n            key = utils_1.BUFFER_ZERO;\n        }\n        return this.base.get(key).catch(e => {\n            if (e.status === NOTFOUND)\n                return null;\n            throw e;\n        });\n    }\n    async get(key) {\n        const raw = await this.getRaw(key);\n        if (!raw)\n            return null;\n        return new (__classPrivateFieldGet(this, _Manager_Type, \"f\"))(raw, __classPrivateFieldGet(this, _Manager_options, \"f\"));\n    }\n    set(key, value) {\n        return this.base.put(key, value);\n    }\n    del(key) {\n        return this.base.del(key);\n    }\n}\n_Manager_Type = new WeakMap(), _Manager_options = new WeakMap();\nexports.default = Manager;\n//# sourceMappingURL=manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionManager_queue, _TransactionManager_paused, _TransactionManager_resumer, _TransactionManager_resolver, _TransactionManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst transaction_pool_1 = __importDefault(require(\"../transaction-pool\"));\nconst promise_queue_1 = __importDefault(require(\"@ganache/promise-queue\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\n// since our Manager needs to receive and Instantiable class with a\n// consistent return type and our transaction factory can return\n// any number of transaction types, we pass in this empty\n// no op class to fool the Manager\nclass NoOp {\n}\nclass TransactionManager extends manager_1.default {\n    constructor(options, common, blockchain, base) {\n        super(base, ethereum_transaction_1.TransactionFactory, common);\n        _TransactionManager_queue.set(this, new promise_queue_1.default());\n        _TransactionManager_paused.set(this, false);\n        _TransactionManager_resumer.set(this, void 0);\n        _TransactionManager_resolver.set(this, void 0);\n        _TransactionManager_blockchain.set(this, void 0);\n        this.fromFallback = async (transactionHash) => {\n            const { fallback } = __classPrivateFieldGet(this, _TransactionManager_blockchain, \"f\");\n            const tx = await fallback.request(\"eth_getTransactionByHash\", [\n                utils_1.Data.toString(transactionHash)\n            ]);\n            if (tx == null)\n                return null;\n            const blockHash = utils_1.Data.from(tx.blockHash, 32);\n            const blockNumber = utils_1.Quantity.from(tx.blockNumber);\n            const index = utils_1.Quantity.from(tx.transactionIndex);\n            // don't get the transaction if the requested transaction is _after_ our\n            // fallback's blocknumber because it doesn't exist in our local chain.\n            if (!fallback.isValidForkBlockNumber(blockNumber))\n                return null;\n            return (0, ethereum_transaction_1.serializeRpcForDb)(tx, blockHash, blockNumber, index);\n        };\n        /**\n         * Resume processing transactions. Has no effect if not paused.\n         */\n        this.resume = () => {\n            if (!__classPrivateFieldGet(this, _TransactionManager_paused, \"f\"))\n                return;\n            __classPrivateFieldSet(this, _TransactionManager_paused, false, \"f\");\n            __classPrivateFieldGet(this, _TransactionManager_resolver, \"f\").call(this);\n        };\n        __classPrivateFieldSet(this, _TransactionManager_blockchain, blockchain, \"f\");\n        this.transactionPool = new transaction_pool_1.default(options, blockchain);\n    }\n    async getRaw(transactionHash) {\n        return super.getRaw(transactionHash).then(block => {\n            if (block == null && __classPrivateFieldGet(this, _TransactionManager_blockchain, \"f\").fallback) {\n                return this.fromFallback(transactionHash);\n            }\n            return block;\n        });\n    }\n    async get(key) {\n        const factory = (await super.get(key));\n        if (!factory)\n            return null;\n        return factory.tx;\n    }\n    /**\n     * Adds the transaction to the transaction pool.\n     *\n     * Returns a promise that is only resolved in the order it was added.\n     *\n     * @param transaction -\n     * @param secretKey -\n     * @returns `true` if the `transaction` is immediately executable, `false` if\n     * it may be valid in the future. Throws if the transaction is invalid.\n     */\n    async add(transaction, secretKey) {\n        if (__classPrivateFieldGet(this, _TransactionManager_paused, \"f\")) {\n            await __classPrivateFieldGet(this, _TransactionManager_resumer, \"f\");\n        }\n        // Because ganache requires determinism, we can't allow varying IO times to\n        // potentially affect the order in which transactions are inserted into the\n        // pool, so we use a FIFO queue to _return_ transaction insertions in the\n        // order the were received.\n        const insertion = this.transactionPool.prepareTransaction(transaction, secretKey);\n        const result = await __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").add(insertion);\n        if (result) {\n            this.transactionPool.drain();\n        }\n        return result;\n    }\n    /**\n     * Immediately ignores all transactions that were in the process of being\n     * added to the pool. These transactions' `push` promises will be resolved\n     * immediately with the value `false` and will _not_ be added to the pool.\n     *\n     * Also clears all transactions that were already added to the pool.\n     *\n     * Transactions that are currently in the process of being mined may still be\n     * mined.\n     */\n    clear() {\n        __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").clear(false);\n        this.transactionPool.clear();\n    }\n    /**\n     * Stop processing _new_ transactions; puts new requests in a queue. Has no\n     * affect if already paused.\n     */\n    async pause() {\n        if (!__classPrivateFieldGet(this, _TransactionManager_paused, \"f\")) {\n            // stop processing new transactions immediately\n            __classPrivateFieldSet(this, _TransactionManager_paused, true, \"f\");\n            __classPrivateFieldSet(this, _TransactionManager_resumer, new Promise(resolve => {\n                __classPrivateFieldSet(this, _TransactionManager_resolver, resolve, \"f\");\n            }), \"f\");\n        }\n        // then wait until all async things we were already processing are done\n        // before returning\n        if (__classPrivateFieldGet(this, _TransactionManager_queue, \"f\").isBusy()) {\n            await __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").emit(\"idle\");\n        }\n    }\n}\n_TransactionManager_queue = new WeakMap(), _TransactionManager_paused = new WeakMap(), _TransactionManager_resumer = new WeakMap(), _TransactionManager_resolver = new WeakMap(), _TransactionManager_blockchain = new WeakMap();\nexports.default = TransactionManager;\n//# sourceMappingURL=transaction-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionReceiptManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nclass TransactionReceiptManager extends manager_1.default {\n    constructor(base, blockchain) {\n        super(base, ethereum_transaction_1.InternalTransactionReceipt);\n        _TransactionReceiptManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _TransactionReceiptManager_blockchain, blockchain, \"f\");\n    }\n    async get(key) {\n        const receipt = await super.get(key);\n        if (receipt) {\n            return receipt;\n        }\n        else if (__classPrivateFieldGet(this, _TransactionReceiptManager_blockchain, \"f\").fallback) {\n            const res = await __classPrivateFieldGet(this, _TransactionReceiptManager_blockchain, \"f\").fallback.request(\"eth_getTransactionReceipt\", [typeof key === \"string\" ? key : utils_1.Data.from(key)]);\n            if (!res)\n                return null;\n            const status = res.status === \"0x1\" ? utils_1.Quantity.One.toBuffer() : utils_1.BUFFER_ZERO;\n            const cumulativeGasUsed = utils_1.Quantity.toBuffer(res.cumulativeGasUsed);\n            const logsBloom = utils_1.Data.toBuffer(res.logsBloom, 256);\n            const logs = res.logs.map(log => [\n                ethereum_address_1.Address.from(log.address).toBuffer(),\n                log.topics.map(topic => utils_1.Data.toBuffer(topic)),\n                Array.isArray(log.data)\n                    ? log.data.map(data => utils_1.Data.toBuffer(data))\n                    : utils_1.Data.toBuffer(log.data)\n            ]);\n            const gasUsed = utils_1.Quantity.toBuffer(res.gasUsed);\n            const contractAddress = res.contractAddress == null\n                ? utils_1.BUFFER_EMPTY\n                : ethereum_address_1.Address.from(res.contractAddress).toBuffer();\n            return ethereum_transaction_1.InternalTransactionReceipt.fromValues(status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress);\n        }\n    }\n}\n_TransactionReceiptManager_blockchain = new WeakMap();\nexports.default = TransactionReceiptManager;\n//# sourceMappingURL=transaction-receipt-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Database_options, _Database_cleanupDirectory, _Database_closed, _Database_rootStore, _Database_cleanup;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst tmp_promise_1 = require(\"tmp-promise\");\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst encoding_down_1 = __importDefault(require(\"encoding-down\"));\nconst leveldown_1 = __importDefault(require(\"leveldown\"));\nconst trie_db_1 = require(\"./trie-db\");\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst levelup = require(\"levelup\");\n(0, tmp_promise_1.setGracefulCleanup)();\nconst tmpOptions = { prefix: \"ganache_\", unsafeCleanup: true };\nconst noop = () => Promise.resolve();\nclass Database extends emittery_1.default {\n    /**\n     * The Database handles the creation of the database, and all access to it.\n     * Once the database has been fully initialized it will emit a `ready`\n     * event.\n     * @param options - Supports one of two options: `db` (a leveldown compliant\n     * store instance) or `dbPath` (the path to store/read the db instance)\n     * @param blockchain -\n     */\n    constructor(options, blockchain) {\n        super();\n        _Database_options.set(this, void 0);\n        _Database_cleanupDirectory.set(this, noop);\n        _Database_closed.set(this, false);\n        this.directory = null;\n        this.db = null;\n        _Database_rootStore.set(this, void 0);\n        this.initialize = async () => {\n            const levelupOptions = {\n                keyEncoding: \"binary\",\n                valueEncoding: \"binary\"\n            };\n            const databaseOptions = __classPrivateFieldGet(this, _Database_options, \"f\").database;\n            const store = databaseOptions.db;\n            let db;\n            let shouldTryMigrate = false;\n            if (store) {\n                __classPrivateFieldSet(this, _Database_rootStore, (0, encoding_down_1.default)(store, levelupOptions), \"f\");\n                db = levelup(__classPrivateFieldGet(this, _Database_rootStore, \"f\"), {});\n                shouldTryMigrate = true;\n            }\n            else {\n                let directory = databaseOptions.dbPath;\n                if (!directory) {\n                    const dirInfo = await (0, tmp_promise_1.dir)(tmpOptions);\n                    directory = dirInfo.path;\n                    __classPrivateFieldSet(this, _Database_cleanupDirectory, dirInfo.cleanup, \"f\");\n                    // don't continue if we closed while we were waiting for the dir\n                    if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                        return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n                }\n                else {\n                    shouldTryMigrate = true;\n                }\n                this.directory = directory;\n                // specify an empty `prefix` for browser-based leveldown (level-js)\n                const leveldownOpts = { prefix: \"\" };\n                const store = (0, encoding_down_1.default)((0, leveldown_1.default)(directory, leveldownOpts), levelupOptions);\n                __classPrivateFieldSet(this, _Database_rootStore, store, \"f\");\n                db = levelup(store);\n            }\n            // don't continue if we closed while we were waiting for the db\n            if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n            const open = db.open();\n            const sublevelTrie = (0, subleveldown_1.default)(db, \"T\", levelupOptions);\n            this.trie = new trie_db_1.TrieDB(sublevelTrie);\n            this.db = db;\n            await open;\n            // don't continue if we closed while we were waiting for it to open\n            if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n            this.blocks = (0, subleveldown_1.default)(db, \"b\", levelupOptions);\n            this.blockIndexes = (0, subleveldown_1.default)(db, \"i\", levelupOptions);\n            this.blockLogs = (0, subleveldown_1.default)(db, \"l\", levelupOptions);\n            this.transactions = (0, subleveldown_1.default)(db, \"t\", levelupOptions);\n            this.transactionReceipts = (0, subleveldown_1.default)(db, \"r\", levelupOptions);\n            this.storageKeys = (0, subleveldown_1.default)(db, \"s\", levelupOptions);\n            // only migrate if we were given a dbPath or a user-defined db\n            if (shouldTryMigrate) {\n                await this.runMigrations();\n            }\n            return this.emit(\"ready\");\n        };\n        /**\n         * Cleans up the database connections and our tmp directory.\n         */\n        _Database_cleanup.set(this, async () => {\n            const db = this.db;\n            if (db) {\n                await new Promise((resolve, reject) => db.close(err => {\n                    if (err)\n                        return void reject(err);\n                    resolve(void 0);\n                }));\n                await Promise.all([\n                    this.blocks.close(),\n                    this.blockIndexes.close(),\n                    this.blockIndexes.close(),\n                    this.transactionReceipts.close(),\n                    this.transactions.close(),\n                    this.storageKeys.close(),\n                    this.trie.close()\n                ]);\n            }\n            return __classPrivateFieldGet(this, _Database_cleanupDirectory, \"f\").call(this);\n        });\n        __classPrivateFieldSet(this, _Database_options, options, \"f\");\n        this.blockchain = blockchain;\n    }\n    /**\n     * Handles migrating the db from one version to another.\n     * @returns\n     */\n    async runMigrations() {\n        let version;\n        try {\n            // note: we only add a version\n            version = await this.db.get(utils_1.VERSION_KEY);\n        }\n        catch {\n            /* not found */\n        }\n        // we've shipped two versions:\n        //  * no version at all (referred to as \"version `null`\")\n        //  * and version: `BUFFER_ZERO` (the first versioned version)\n        // Since we only have the one version we can be lazy right now and just\n        // check if it exists.\n        if (version)\n            return;\n        const logger = __classPrivateFieldGet(this, _Database_options, \"f\").logging.logger;\n        logger.log(\"Migrating database from version `null` to `0`…\");\n        const ops = [\n            //#region MIGRATION 0a\n            // update the db with the version.\n            // since this was not an original field, adding a version if a migration in\n            // and of itself. Future migrations will need conditionally check the\n            // version to apply relevant migrations.\n            { type: \"put\", key: utils_1.VERSION_KEY, value: utils_1.BUFFER_ZERO }\n            //#endregion MIGRATION 0a\n        ];\n        //#region MIGRATION 0b\n        // ============\n        // Fix the `size` field of blocks.\n        //\n        // This migration fixes a bug in version `null` that caused us to compute\n        // the `size` of blocks incorrectly. We save the size to the db, so we need\n        // to recompute it and re-save for all blocks:\n        const stream = this.blocks.createReadStream();\n        const prefix = Buffer.from(this.blocks.db.db.prefix);\n        for await (const data of stream) {\n            const { key, value } = data;\n            ops.push({\n                type: \"put\",\n                key: Buffer.concat([prefix, key]),\n                value: ethereum_block_1.Block.migrate(value)\n            });\n        }\n        //#endregion MIGRATION 0b\n        // save all in one atomic operation:\n        await this.db.batch(ops);\n        logger.log(\"Migration complete\");\n    }\n    /**\n     * Call `batch` to batch `put` and `del` operations within the same\n     * event loop tick of the provided function. All db operations within the\n     * batch _must_ be executed synchronously.\n     * @param fn - Within this function's event loop tick, all `put` and\n     * `del` database operations are applied in a single atomic operation. This\n     * provides a single write call and if any individual put/del's fail the\n     * entire operation fails and no modifications are made.\n     * @returns a Promise that resolves to the return value\n     * of the provided function.\n     */\n    batch(fn) {\n        const rootDb = __classPrivateFieldGet(this, _Database_rootStore, \"f\").db;\n        const batch = this.db.batch();\n        const originalPut = rootDb.put;\n        const originalDel = rootDb.del;\n        rootDb.put = batch.put.bind(batch);\n        rootDb.del = batch.del.bind(batch);\n        let prom;\n        try {\n            const ret = fn();\n            // PSA: don't let vscode (or yourself) rewrite this to `await` the\n            // `batch.write` call. The `finally` block needs to run _before_ the\n            // write promise has resolved.\n            prom = batch.write().then(() => ret);\n        }\n        finally {\n            rootDb.put = originalPut;\n            rootDb.del = originalDel;\n        }\n        return prom;\n    }\n    /**\n     * Gracefully closes the database and cleans up the file system and waits for\n     * it to fully shut down. Emits a `close` event once complete.\n     * Note: only emits `close` once.\n     */\n    async close() {\n        const wasClosed = __classPrivateFieldGet(this, _Database_closed, \"f\");\n        __classPrivateFieldSet(this, _Database_closed, true, \"f\");\n        await __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n        // only emit `close` once\n        if (!wasClosed) {\n            this.emit(\"close\");\n            return;\n        }\n    }\n}\n_Database_options = new WeakMap(), _Database_cleanupDirectory = new WeakMap(), _Database_closed = new WeakMap(), _Database_rootStore = new WeakMap(), _Database_cleanup = new WeakMap();\nexports.default = Database;\n//# sourceMappingURL=database.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkCache = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst cache_1 = require(\"@ethereumjs/statemanager/dist/cache\");\nclass ForkCache extends cache_1.Cache {\n    constructor(trie) {\n        /**\n         * Looks up address in underlying trie.\n         * @param address - Address of account\n         */\n        const lookupAccount = async (address) => {\n            const rlp = await trie.get(address.buf);\n            return rlp ? util_1.Account.fromRlpSerializedAccount(rlp) : new util_1.Account();\n        };\n        super({ getCb: lookupAccount, putCb: trie.put.bind(trie), deleteCb: trie.del.bind(trie) });\n    }\n}\nexports.ForkCache = ForkCache;\n//# sourceMappingURL=cache.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction Deferred() {\n    const deferred = {};\n    deferred.promise = new Promise((resolve, reject) => {\n        deferred.resolve = resolve;\n        deferred.reject = reject;\n    });\n    return deferred;\n}\nexports.default = Deferred;\n//# sourceMappingURL=deferred.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Fork_abortController, _Fork_handler, _Fork_options, _Fork_accounts, _Fork_hardfork, _Fork_setCommonFromChain, _Fork_setBlockDataFromChainAndOptions, _Fork_syncAccounts;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Fork = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst common_1 = require(\"@ethereumjs/common\");\nconst http_handler_1 = require(\"./handlers/http-handler\");\nconst ws_handler_1 = require(\"./handlers/ws-handler\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst block_manager_1 = __importDefault(require(\"../data-managers/block-manager\"));\nconst provider_handler_1 = require(\"./handlers/provider-handler\");\nconst persistent_cache_1 = require(\"./persistent-cache/persistent-cache\");\nconst url_1 = require(\"url\");\nconst common_helpers_1 = require(\"../helpers/common-helpers\");\nasync function fetchChainId(fork) {\n    const chainIdHex = await fork.request(\"eth_chainId\", []);\n    return parseInt(chainIdHex, 16);\n}\nasync function fetchNetworkId(fork) {\n    const networkIdStr = await fork.request(\"net_version\", []);\n    return parseInt(networkIdStr, 10);\n}\nfunction fetchBlockNumber(fork) {\n    // {disableCache: true} required so we never cache the blockNumber, as forking\n    // shouldn't ever cache a method that can change!\n    return fork.request(\"eth_blockNumber\", [], { disableCache: true });\n}\nfunction fetchBlock(fork, blockNumber) {\n    return fork.request(\"eth_getBlockByNumber\", [blockNumber, true]);\n}\nasync function fetchNonce(fork, address, blockNumber) {\n    const nonce = await fork.request(\"eth_getTransactionCount\", [\n        address,\n        blockNumber\n    ]);\n    return utils_1.Quantity.from(nonce);\n}\nclass Fork {\n    constructor(options, accounts) {\n        _Fork_abortController.set(this, new AbortController());\n        _Fork_handler.set(this, void 0);\n        _Fork_options.set(this, void 0);\n        _Fork_accounts.set(this, void 0);\n        _Fork_hardfork.set(this, void 0);\n        _Fork_setCommonFromChain.set(this, async (chainIdPromise) => {\n            const [chainId, networkId] = await Promise.all([\n                chainIdPromise,\n                fetchNetworkId(this)\n            ]);\n            this.chainId = chainId;\n            this.common = common_1.Common.custom({\n                name: \"ganache-fork\",\n                defaultHardfork: __classPrivateFieldGet(this, _Fork_hardfork, \"f\"),\n                // use the remote chain's network id mostly because truffle's debugger\n                // needs it to match in order to fetch sources\n                networkId,\n                // we use ganache's own chain id for blocks _after_ the fork to prevent\n                // replay attacks\n                chainId: __classPrivateFieldGet(this, _Fork_options, \"f\").chain.chainId,\n                comment: \"Local test network fork\"\n            }, { baseChain: utils_1.KNOWN_CHAINIDS.has(chainId) ? chainId : 1 });\n            if (__classPrivateFieldGet(this, _Fork_options, \"f\").chain.allowUnlimitedInitCodeSize) {\n                (0, common_helpers_1.removeEIP3860InitCodeSizeLimitCheck)(this.common);\n            }\n            // disable listeners to common since we don't actually cause any `emit`s,\n            // but other EVM parts to listen and will make node complain about too\n            // many listeners.\n            this.common.on = () => { };\n        });\n        _Fork_setBlockDataFromChainAndOptions.set(this, async (chainIdPromise) => {\n            const { fork: options } = __classPrivateFieldGet(this, _Fork_options, \"f\");\n            const blockNumber = options.blockNumber;\n            if (blockNumber === ethereum_utils_1.Tag.latest) {\n                const [latestBlock, chainId] = await Promise.all([\n                    fetchBlock(this, ethereum_utils_1.Tag.latest),\n                    chainIdPromise\n                ]);\n                let blockNumber = parseInt(latestBlock.number, 16);\n                const effectiveBlockNumber = utils_1.KNOWN_CHAINIDS.has(chainId)\n                    ? Math.max(blockNumber - options.preLatestConfirmations, 0)\n                    : blockNumber;\n                let block;\n                if (effectiveBlockNumber !== blockNumber) {\n                    block = await fetchBlock(this, utils_1.Quantity.from(effectiveBlockNumber));\n                }\n                else {\n                    block = latestBlock;\n                }\n                options.blockNumber = effectiveBlockNumber;\n                this.blockNumber = utils_1.Quantity.from(effectiveBlockNumber);\n                this.stateRoot = utils_1.Data.from(block.stateRoot);\n                await __classPrivateFieldGet(this, _Fork_syncAccounts, \"f\").call(this, this.blockNumber);\n                return block;\n            }\n            else if (blockNumber >= 0) {\n                const qBlockNumber = utils_1.Quantity.from(blockNumber);\n                const [block] = await Promise.all([\n                    fetchBlock(this, qBlockNumber).then(async (block) => {\n                        this.stateRoot = block.stateRoot;\n                        await __classPrivateFieldGet(this, _Fork_syncAccounts, \"f\").call(this, qBlockNumber);\n                        return block;\n                    }),\n                    fetchBlockNumber(this).then((latestBlockNumberHex) => {\n                        const latestBlockNumberInt = parseInt(latestBlockNumberHex, 16);\n                        // if our block number option is _after_ the current block number\n                        // throw, as it likely wasn't intentional and doesn't make sense.\n                        if (blockNumber > latestBlockNumberInt) {\n                            throw new Error(`\\`fork.blockNumber\\` (${options.blockNumber}) must not be greater than the current block number (${latestBlockNumberInt})`);\n                        }\n                        else {\n                            this.blockNumber = qBlockNumber;\n                        }\n                    })\n                ]);\n                return block;\n            }\n            else {\n                throw new Error(`Invalid value for \\`fork.blockNumber\\` option: \"${options.blockNumber}\". Must be a positive integer or the string \"latest\".`);\n            }\n        });\n        _Fork_syncAccounts.set(this, (blockNumber) => {\n            return Promise.all(__classPrivateFieldGet(this, _Fork_accounts, \"f\").map(async (account) => {\n                const nonce = await fetchNonce(this, account.address, blockNumber);\n                account.nonce = nonce;\n            }));\n        });\n        __classPrivateFieldSet(this, _Fork_options, options, \"f\");\n        const forkingOptions = options.fork;\n        __classPrivateFieldSet(this, _Fork_hardfork, options.chain.hardfork, \"f\");\n        __classPrivateFieldSet(this, _Fork_accounts, accounts, \"f\");\n        const { url, network } = forkingOptions;\n        if (url) {\n            const { protocol } = url;\n            switch (protocol) {\n                case \"ws:\":\n                case \"wss:\":\n                    __classPrivateFieldSet(this, _Fork_handler, new ws_handler_1.WsHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n                    break;\n                case \"http:\":\n                case \"https:\":\n                    __classPrivateFieldSet(this, _Fork_handler, new http_handler_1.HttpHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n                    break;\n                default: {\n                    throw new Error(`Unsupported protocol: ${protocol}`);\n                }\n            }\n        }\n        else if (forkingOptions.provider) {\n            __classPrivateFieldSet(this, _Fork_handler, new provider_handler_1.ProviderHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n        }\n        else if (network) {\n            let normalizedNetwork;\n            if (network === \"görli\") {\n                forkingOptions.network = normalizedNetwork = \"goerli\";\n            }\n            else {\n                normalizedNetwork = network;\n            }\n            // Note: `process.env.INFURA_KEY` is replaced by webpack with an infura\n            // key.\n            const infuraKey = process.env.INFURA_KEY;\n            if (!infuraKey) {\n                throw new Error(\"The INFURA_KEY environment variable was not given and is required when using Ganache's integrated archive network feature.\");\n            }\n            // any because the `network` check above narrowed the type to one\n            // that doesn't include `url`, but we still want to add it.\n            forkingOptions.url = new url_1.URL(`wss://${normalizedNetwork}.infura.io/ws/v3/${infuraKey}`);\n            __classPrivateFieldSet(this, _Fork_handler, new ws_handler_1.WsHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n        }\n    }\n    async initialize() {\n        let cacheProm;\n        const { fork: forkOptions, chain: chainOptions, miner: minerOptions } = __classPrivateFieldGet(this, _Fork_options, \"f\");\n        if (forkOptions.deleteCache)\n            await persistent_cache_1.PersistentCache.deleteDb();\n        if (forkOptions.disableCache === false) {\n            // ignore cache start up errors as it is possible there is an `open`\n            // conflict if another ganache fork is running at the time this one is\n            // started. The cache isn't required (though performance will be\n            // degraded without it)\n            cacheProm = persistent_cache_1.PersistentCache.create().catch(_e => null);\n        }\n        else {\n            cacheProm = null;\n        }\n        const chainIdPromise = fetchChainId(this);\n        const [block, cache] = await Promise.all([\n            __classPrivateFieldGet(this, _Fork_setBlockDataFromChainAndOptions, \"f\").call(this, chainIdPromise),\n            cacheProm,\n            __classPrivateFieldGet(this, _Fork_setCommonFromChain, \"f\").call(this, chainIdPromise)\n        ]);\n        const common = this.getCommonForBlock(this.common, {\n            timestamp: BigInt(block.timestamp),\n            number: BigInt(block.number)\n        });\n        this.block = new ethereum_block_1.Block(block_manager_1.default.rawFromJSON(block, common), common);\n        if (!chainOptions.time && minerOptions.timestampIncrement !== \"clock\") {\n            chainOptions.time = new Date((this.block.header.timestamp.toNumber() +\n                minerOptions.timestampIncrement.toNumber()) *\n                1000);\n        }\n        if (cache)\n            await this.initCache(cache);\n    }\n    async initCache(cache) {\n        await cache.initialize(this.block.header.number, this.block.hash(), this.request.bind(this));\n        __classPrivateFieldGet(this, _Fork_handler, \"f\").setCache(cache);\n    }\n    request(method, params, options = { disableCache: false }) {\n        return __classPrivateFieldGet(this, _Fork_handler, \"f\").request(method, params, options);\n    }\n    abort() {\n        return __classPrivateFieldGet(this, _Fork_abortController, \"f\").abort();\n    }\n    close() {\n        return __classPrivateFieldGet(this, _Fork_handler, \"f\").close();\n    }\n    isValidForkBlockNumber(blockNumber) {\n        return blockNumber.toBigInt() <= this.blockNumber.toBigInt();\n    }\n    selectValidForkBlockNumber(blockNumber) {\n        return this.isValidForkBlockNumber(blockNumber)\n            ? blockNumber\n            : this.blockNumber;\n    }\n    /**\n     * If the `blockNumber` is before our `fork.blockNumber`, return a `Common`\n     * instance, applying the rules from the remote chain's `common` via its\n     * original `chainId` (hardforks are applied if they are scheduled on the\n     * given chain on or after the blocknumber or timestamp of the given `block`).\n     * If the remote chain's `chainId` is not \"known\", return a `Common` with our\n     * local `common`'s rules applied, but with the remote chain's `chainId`. If\n     * the block is greater than or equal to our `fork.blockNumber` return\n     * `common`.\n     * @param common -\n     * @param blockNumber -\n     */\n    getCommonForBlock(common, block) {\n        if (block.number <= this.blockNumber.toBigInt()) {\n            // we are at or before our fork block\n            let forkCommon;\n            if (utils_1.KNOWN_CHAINIDS.has(this.chainId)) {\n                // we support this chain id, so let's use its rules\n                let hardfork;\n                // hardforks are iterated from earliest to latest\n                for (const hf of common.hardforks()) {\n                    if (hf.timestamp) {\n                        const hfTimestamp = BigInt(hf.timestamp);\n                        if (block.timestamp >= hfTimestamp) {\n                            hardfork = hf.name;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    else if (hf.block) {\n                        if (block.number >= BigInt(hf.block)) {\n                            hardfork = hf.name;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n                forkCommon = new common_1.Common({ chain: this.chainId, hardfork });\n            }\n            else {\n                // we don't know about this chain or hardfork, so just carry on per usual,\n                // but with the fork's chainId (instead of our local chainId)\n                forkCommon = common_1.Common.custom({\n                    chainId: this.chainId,\n                    defaultHardfork: common.hardfork()\n                }, { baseChain: 1 });\n            }\n            if (__classPrivateFieldGet(this, _Fork_options, \"f\").chain.allowUnlimitedInitCodeSize) {\n                (0, common_helpers_1.removeEIP3860InitCodeSizeLimitCheck)(forkCommon);\n            }\n            return forkCommon;\n        }\n        else {\n            return common;\n        }\n    }\n}\nexports.Fork = Fork;\n_Fork_abortController = new WeakMap(), _Fork_handler = new WeakMap(), _Fork_options = new WeakMap(), _Fork_accounts = new WeakMap(), _Fork_hardfork = new WeakMap(), _Fork_setCommonFromChain = new WeakMap(), _Fork_setBlockDataFromChainAndOptions = new WeakMap(), _Fork_syncAccounts = new WeakMap();\n//# sourceMappingURL=fork.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseHandler = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst rate_limiter_1 = __importDefault(require(\"../rate-limiter/rate-limiter\"));\nconst lru_cache_1 = __importDefault(require(\"lru-cache\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst INVALID_RESPONSE = \"Invalid response from fork provider: \";\nconst INVALID_AUTH_ERROR = \"Authentication via both username/password (Basic) and JWT (Bearer) is not possible\";\nconst WINDOW_SECONDS = 30;\nclass BaseHandler {\n    constructor(options, abortSignal) {\n        this.id = 1;\n        this.requestCache = new Map();\n        this.fireForget = new Set();\n        const forkingOptions = options.fork;\n        const { requestsPerSecond, url, userAgent, origin } = forkingOptions;\n        this.abortSignal = abortSignal;\n        this.limiter = new rate_limiter_1.default(\n        // convert `requestsPerSecond` to \"requests per window\"\n        requestsPerSecond * WINDOW_SECONDS, WINDOW_SECONDS * 1000, abortSignal);\n        this.valueCache = new lru_cache_1.default({\n            max: 1073741824,\n            length: (value, key) => {\n                return value.length + key.length;\n            }\n        });\n        // we don't need header-related things if we are using a provider\n        // instead of a url since we aren't in charge of sending requests at the\n        // header level.\n        if (url) {\n            const headers = {\n                \"user-agent\": userAgent\n            };\n            if (origin) {\n                headers[\"origin\"] = origin;\n            }\n            // we set our own Authentication headers, so username and password must be\n            // removed from the url. (The values have already been copied to the options)\n            url.password = url.username = \"\";\n            const isInfura = url.host.endsWith(\".infura.io\");\n            BaseHandler.setAuthHeaders(forkingOptions, headers);\n            BaseHandler.setUserHeaders(forkingOptions, headers, !isInfura);\n            this.headers = headers;\n        }\n    }\n    setCache(cache) {\n        this.persistentCache = cache;\n    }\n    /**\n     * Adds Authorization headers from the given options to the provided `headers`\n     * object. Overwrites an existing `Authorization` header value.\n     *\n     * @param options -\n     * @param headers -\n     */\n    static setAuthHeaders(options, headers) {\n        if (options.username != null || options.password != null) {\n            if (options.jwt != null)\n                throw new Error(INVALID_AUTH_ERROR);\n            headers.authorization = `Basic ${Buffer.from(`${options.username || \"\"}:${options.password || \"\"}`).toString(\"base64\")}`;\n        }\n        else if (options.jwt) {\n            headers.authorization = `Bearer ${options.jwt}`;\n        }\n    }\n    /**\n     * Adds user provided headers to the provided `headers`\n     * object.\n     *\n     * If the headers already contain an existing `Authorization` header\n     * value and the incoming values have compatible schemes\n     * (Bearer===Bearer, Basic===Basic) the values are merged. Note: if the\n     * `permitMultiAuth` option is `false` Bearer tokens can not be merged.\n     *\n     * @param options -\n     * @param headers -\n     * @param permitMultiAuth -\n     */\n    static setUserHeaders(options, headers, permitMultiAuth) {\n        // copy the user-provided headers over to the connection's headers\n        const userHeaders = options.headers;\n        if (userHeaders) {\n            for (let i = 0, l = userHeaders.length; i < l; i++) {\n                let { name, value } = userHeaders[i];\n                const key = name.toLowerCase();\n                // if the user specified multiple Authentication headers (.e.g, via\n                // username/password or the jwt field) we need to join them when\n                // they are both of the same scheme, otherwise we throw an exception.\n                if (key === \"authorization\" && \"authorization\" in headers) {\n                    if (!permitMultiAuth) {\n                        throw new Error(`Authentication with multiple auth-params is not allowed.`);\n                    }\n                    const currentScheme = headers.authorization.split(\" \", 1)[0];\n                    const [incomingScheme, authParams] = value.split(/\\.(?:.+)/);\n                    if (incomingScheme.toLowerCase() === currentScheme.toLowerCase()) {\n                        headers.authorization += \",\" + authParams;\n                    }\n                    else {\n                        throw new Error(`Authentication via both ${currentScheme} and ${incomingScheme} is not allowed.`);\n                    }\n                }\n                else {\n                    headers[key] = value;\n                }\n            }\n        }\n    }\n    getFromMemCache(key) {\n        const cachedRequest = this.requestCache.get(key);\n        if (cachedRequest !== undefined)\n            return cachedRequest;\n        const cachedValue = this.valueCache.get(key);\n        if (cachedValue !== undefined)\n            return JSON.parse(cachedValue).result;\n    }\n    async getFromSlowCache(method, params, key) {\n        if (!this.persistentCache)\n            return;\n        const raw = await this.persistentCache.get(method, params, key).catch(e => {\n            if (e.notFound)\n                return null;\n            // I/O or other error, throw as things are getting weird and the cache may\n            // have lost integrity\n            throw e;\n        });\n        if (raw != null)\n            return { result: JSON.parse(raw).result, raw };\n    }\n    async queueRequest(method, params, key, send, options = { disableCache: false }) {\n        if (!options.disableCache) {\n            const memCached = this.getFromMemCache(key);\n            if (memCached !== undefined)\n                return memCached;\n            const diskCached = await this.getFromSlowCache(method, params, key);\n            if (diskCached !== undefined) {\n                this.valueCache.set(key, Buffer.from(diskCached.raw));\n                return diskCached.result;\n            }\n        }\n        const promise = this.limiter\n            .handle(send)\n            .then(async ({ response, raw }) => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            if ((0, utils_1.hasOwn)(response, \"result\")) {\n                if (!options.disableCache) {\n                    // cache non-error responses only\n                    this.valueCache.set(key, raw);\n                    // swallow errors for the persistentCache, since it's not vital that\n                    // it always works\n                    if (this.persistentCache) {\n                        const prom = this.persistentCache\n                            .put(method, params, key, typeof raw === \"string\" ? Buffer.from(raw) : raw)\n                            .catch(_ => {\n                            // the cache.put may fail if the db is closed while a request\n                            // is in flight. This is a \"fire and forget\" method.\n                        });\n                        // track these unawaited `puts`\n                        this.fireForget.add(prom);\n                        // clean up once complete\n                        prom.finally(() => {\n                            this.fireForget.delete(prom);\n                        });\n                    }\n                }\n                return response.result;\n            }\n            else if ((0, utils_1.hasOwn)(response, \"error\") && response.error != null) {\n                const { error } = response;\n                throw new ethereum_utils_1.CodedError(error.message, error.code);\n            }\n            throw new Error(`${INVALID_RESPONSE}\\`${JSON.stringify(response)}\\``);\n        });\n        this.requestCache.set(key, promise);\n        return await promise;\n    }\n    async close() {\n        await Promise.all(this.fireForget.keys());\n        this.persistentCache && (await this.persistentCache.close());\n    }\n}\nexports.BaseHandler = BaseHandler;\nBaseHandler.JSONRPC_PREFIX = '{\"jsonrpc\":\"2.0\",\"id\":';\n//# sourceMappingURL=base-handler.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpHandler = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\n// TODO: support http2\n// Issue: https://github.com/trufflesuite/ganache/issues/3474\nconst http_1 = __importStar(require(\"http\"));\nconst https_1 = __importStar(require(\"https\"));\nconst base_handler_1 = require(\"./base-handler\");\nconst deferred_1 = __importDefault(require(\"../deferred\"));\n// Work around a node v20.0.0, v20.1.0, and v20.2.0 bug. The issue was fixed\n// in v20.3.0.\n// https://github.com/nodejs/node/issues/47822#issuecomment-1564708870\n// Safe to remove once support for Node v20 is dropped.\nif (\n// webpack will replace process.env.IS_BROWSER with a boolean\n!process.env.IS_BROWSER &&\n    process.versions &&\n    // check for `node` in case we want to use this in deno/bun/etc\n    process.versions.node &&\n    process.versions.node.match(/20\\.[0-2]\\.0/)) {\n    require(\"net\").setDefaultAutoSelectFamily(false);\n}\nconst { JSONRPC_PREFIX } = base_handler_1.BaseHandler;\nclass HttpHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        this.url = options.fork.url;\n        this.headers.accept = this.headers[\"content-type\"] = \"application/json\";\n        if (this.url.protocol === \"http:\") {\n            this._request = http_1.default.request;\n            this.agent = new http_1.Agent({\n                keepAlive: true,\n                scheduling: \"fifo\"\n            });\n        }\n        else {\n            this._request = https_1.default.request;\n            this.agent = new https_1.Agent({\n                keepAlive: true,\n                scheduling: \"fifo\"\n            });\n        }\n    }\n    async handleLengthedResponse(res, length) {\n        return await new Promise((resolve, reject) => {\n            const buffer = Buffer.allocUnsafe(length);\n            let offset = 0;\n            function data(message) {\n                const messageLength = message.length;\n                // note: Node will NOT send us more data than the content-length header\n                // denotes, so we don't have to worry about it.\n                message.copy(buffer, offset, 0, messageLength);\n                offset += messageLength;\n            }\n            function end() {\n                // note: Node doesn't check if the content-length matches (we might\n                // receive less data than expected), so we do that here\n                if (offset !== length) {\n                    // if we didn't receive enough data, throw\n                    reject(new Error(\"content-length mismatch\"));\n                }\n                else {\n                    resolve(buffer);\n                }\n            }\n            res.on(\"data\", data);\n            res.on(\"end\", end);\n            res.on(\"error\", reject);\n        });\n    }\n    async handleChunkedResponse(res) {\n        const chunks = [];\n        let totalLength = 0;\n        for await (let chunk of res) {\n            chunks.push(chunk);\n            totalLength += chunk.length;\n        }\n        return chunks.length === 1 ? chunks[0] : Buffer.concat(chunks, totalLength);\n    }\n    async request(method, params, options = { disableCache: false }) {\n        const key = JSON.stringify({ method, params });\n        const { protocol, hostname: host, port, pathname, search } = this.url;\n        const requestOptions = {\n            protocol,\n            host,\n            port,\n            path: pathname + search,\n            headers: this.headers,\n            method: \"POST\",\n            agent: this.agent,\n            // Node v15 supports AbortSignals directly\n            signal: this.abortSignal\n        };\n        const send = () => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            const deferred = (0, deferred_1.default)();\n            const postData = `${JSONRPC_PREFIX}${this.id++},${key.slice(1)}`;\n            this.headers[\"content-length\"] = postData.length;\n            const req = this._request(requestOptions);\n            req.on(\"response\", res => {\n                const { headers } = res;\n                let buffer;\n                // in the browser we can't detect if the response is compressed (gzip),\n                // but it doesn't matter since the browser has decompressed already\n                // anyway\n                if (process.env.IS_BROWSER) {\n                    buffer = this.handleChunkedResponse(res);\n                }\n                else {\n                    // if we have a transfer-encoding we don't care about \"content-length\"\n                    // (per HTTP spec). We also don't care about invalid lengths\n                    if (\"transfer-encoding\" in headers) {\n                        buffer = this.handleChunkedResponse(res);\n                    }\n                    else {\n                        const length = headers[\"content-length\"] / 1;\n                        if (isNaN(length) || length <= 0) {\n                            buffer = this.handleChunkedResponse(res);\n                        }\n                        else {\n                            // we have a content-length; use it to pre-allocate the required memory\n                            buffer = this.handleLengthedResponse(res, length);\n                        }\n                    }\n                }\n                // TODO: handle invalid JSON (throws on parse)?\n                // Issue: https://github.com/trufflesuite/ganache/issues/3475\n                buffer.then(buffer => {\n                    try {\n                        deferred.resolve({\n                            response: JSON.parse(buffer),\n                            raw: buffer\n                        });\n                    }\n                    catch {\n                        const resStr = buffer.toString();\n                        let shortStr;\n                        if (resStr.length > 340) {\n                            // truncate long errors so we don't blow up the user's logs\n                            shortStr = resStr.slice(0, 320) + \"…\";\n                        }\n                        else {\n                            shortStr = resStr;\n                        }\n                        let msg = `Invalid JSON response from fork provider:\\n\\n ${shortStr}`;\n                        if ((resStr.startsWith(\"invalid project id\") ||\n                            resStr.startsWith(\"project id required in the url\")) &&\n                            this.url.host.endsWith(\"infura.io\")) {\n                            msg += `\\n\\nThe provided fork url, ${this.url}, may be an invalid or incorrect Infura endpoint.`;\n                            msg += `\\nVisit https://infura.io/docs/ethereum for Infura documentation.`;\n                        }\n                        deferred.reject(new Error(msg));\n                    }\n                });\n            });\n            // after 5 seconds of idle abort the request\n            req.setTimeout(5000, req.abort.bind(req));\n            req.on(\"error\", deferred.reject);\n            req.write(postData);\n            req.end();\n            return deferred.promise.finally(() => this.requestCache.delete(key));\n        };\n        return await this.queueRequest(method, params, key, send, options);\n    }\n}\nexports.HttpHandler = HttpHandler;\n//# sourceMappingURL=http-handler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProviderHandler = void 0;\nconst base_handler_1 = require(\"./base-handler\");\nclass ProviderHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        const provider = options.fork.provider;\n        if (typeof provider.request === \"function\") {\n            this._request = async (method, params) => {\n                try {\n                    const result = await provider.request({ method, params });\n                    const response = { result };\n                    return { response, raw: JSON.stringify(response) };\n                }\n                catch (error) {\n                    // if this doesn't appear to be a JSON-RPC \"coded\" error it might be\n                    // a network level error, or something else we don't know how to\n                    // handle. Throw so stack traces are preserved.\n                    if (typeof error.code !== \"number\")\n                        throw error;\n                    return {\n                        response: { error },\n                        raw: null\n                    };\n                }\n            };\n        }\n        else if (typeof provider.send === \"function\") {\n            this._request = async (method, params) => {\n                return await new Promise((resolve, reject) => {\n                    const request = {\n                        id: this.id++,\n                        jsonrpc: \"2.0\",\n                        method,\n                        params\n                    };\n                    provider.send(request, (err, response) => {\n                        if (err)\n                            return void reject(err);\n                        resolve({\n                            response,\n                            raw: JSON.stringify(response)\n                        });\n                    });\n                });\n            };\n        }\n        else {\n            throw new Error(\"Forking `provider` must be EIP-1193 compatible\");\n        }\n    }\n    async request(method, params, options = { disableCache: false }) {\n        // format params via JSON stringification because the params might\n        // be Quantity or Data, which aren't valid as `params` themselves,\n        // but when JSON stringified they are\n        const strParams = JSON.stringify(params);\n        return await this.queueRequest(method, params, `${method}:${strParams}`, () => this._request(method, JSON.parse(strParams)), options);\n    }\n}\nexports.ProviderHandler = ProviderHandler;\n//# sourceMappingURL=provider-handler.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsHandler = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ws_1 = __importDefault(require(\"ws\"));\nconst base_handler_1 = require(\"./base-handler\");\nconst deferred_1 = __importDefault(require(\"../deferred\"));\nconst { JSONRPC_PREFIX } = base_handler_1.BaseHandler;\nclass WsHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        this.inFlightRequests = new Map();\n        const { fork: { url, origin }, logging } = options;\n        this.connection = new ws_1.default(url.toString(), {\n            origin,\n            headers: this.headers\n        });\n        // `nodebuffer` is already the default, but I just wanted to be explicit\n        // here because when `nodebuffer` is the binaryType the `message` event's\n        // data type is guaranteed to be a `Buffer`. We don't need to check for\n        // different types of data.\n        // I mention all this because if `arraybuffer` or `fragment` is used for the\n        // binaryType the `\"message\"` event's `data` may end up being\n        // `ArrayBuffer | Buffer`, or `Buffer[] | Buffer`, respectively.\n        // If you need to change this, you probably need to change our `onMessage`\n        // handler too.\n        this.connection.binaryType = \"nodebuffer\";\n        this.open = this.connect(this.connection, logging);\n        this.connection.onclose = () => {\n            // try to connect again...\n            // Issue: https://github.com/trufflesuite/ganache/issues/3476\n            // TODO: backoff and eventually fail\n            // Issue: https://github.com/trufflesuite/ganache/issues/3477\n            this.open = this.connect(this.connection, logging);\n        };\n        this.abortSignal.addEventListener(\"abort\", () => {\n            this.connection.onclose = null;\n            this.connection.close(1000);\n        });\n        this.connection.onmessage = this.onMessage.bind(this);\n    }\n    async request(method, params, options = { disableCache: false }) {\n        await this.open;\n        if (this.abortSignal.aborted)\n            return Promise.reject(new ethereum_utils_1.AbortError());\n        const key = JSON.stringify({ method, params });\n        const send = () => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            const messageId = this.id++;\n            const deferred = (0, deferred_1.default)();\n            // TODO: timeout an in-flight request after some amount of time\n            // Issue: https://github.com/trufflesuite/ganache/issues/3478\n            this.inFlightRequests.set(messageId, deferred);\n            this.connection.send(`${JSONRPC_PREFIX}${messageId},${key.slice(1)}`);\n            return deferred.promise.finally(() => this.requestCache.delete(key));\n        };\n        return await this.queueRequest(method, params, key, send, options);\n    }\n    onMessage(event) {\n        if (event.type !== \"message\")\n            return;\n        // data is always a `Buffer` because the websocket's binaryType is set to\n        // `nodebuffer`\n        const raw = event.data;\n        // TODO: handle invalid JSON (throws on parse)?\n        // Issue: https://github.com/trufflesuite/ganache/issues/3479\n        const response = JSON.parse(raw);\n        const id = response.id;\n        const prom = this.inFlightRequests.get(id);\n        if (prom) {\n            this.inFlightRequests.delete(id);\n            prom.resolve({ response, raw: raw });\n        }\n    }\n    connect(connection, logging) {\n        let open = new Promise((resolve, reject) => {\n            connection.onopen = resolve;\n            connection.onerror = reject;\n        });\n        open.then(() => {\n            connection.onopen = null;\n            connection.onerror = null;\n        }, err => {\n            logging.logger.log(err);\n        });\n        return open;\n    }\n    async close() {\n        await super.close();\n        this.connection.close();\n    }\n}\nexports.WsHandler = WsHandler;\n//# sourceMappingURL=ws-handler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nfunction encode(parts) {\n    const l = parts.length;\n    let totalLength = 0;\n    const pieces = [];\n    for (let i = 0; i < l; i++) {\n        const part = parts[i];\n        if (part === null) {\n            totalLength += 2; // {length of the length} (`1`) + {length} (`0`)\n            pieces.push([utils_1.BUFFER_ZERO, utils_1.BUFFER_EMPTY]);\n        }\n        else {\n            const length = part.length;\n            const lengthBuffer = utils_1.Quantity.toBuffer(length);\n            const lengthLength = lengthBuffer.length;\n            totalLength += 1 + lengthLength + length;\n            pieces.push([lengthBuffer, part]);\n        }\n    }\n    const encoded = Buffer.allocUnsafe(totalLength);\n    let offset = 0;\n    for (let i = 0; i < l; i++) {\n        const [lengthBuffer, part] = pieces[i];\n        const lengthLength = lengthBuffer.length;\n        encoded[offset++] = lengthLength;\n        lengthBuffer.copy(encoded, offset, 0, lengthLength);\n        part.copy(encoded, (offset += lengthLength), 0, part.length);\n        offset += part.length;\n    }\n    return encoded;\n}\nexports.encode = encode;\nfunction decode(encoded) {\n    const parts = [];\n    for (let i = 0, l = encoded.length; i < l;) {\n        const lengthLength = encoded[i++];\n        const length = utils_1.Quantity.from(encoded.slice(i, (i += lengthLength))).toNumber();\n        parts.push(encoded.slice(i, (i += length)));\n    }\n    return parts;\n}\nexports.decode = decode;\n//# sourceMappingURL=lexicographic-key-codec.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Ancestry = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst tree_1 = require(\"./tree\");\nclass Ancestry {\n    constructor(db, parent) {\n        /**\n         * Prevents fetching the same key from the database simultaneously.\n         */\n        this.cacheLock = new Map();\n        this.db = db;\n        if (parent == null) {\n            this.next = null;\n            this.knownAncestors = new Set();\n        }\n        else {\n            this.next = parent.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)\n                ? null\n                : parent.closestKnownAncestor;\n            this.knownAncestors = new Set([parent.hash.toString(\"hex\")]);\n        }\n    }\n    async loadNextAncestor(next) {\n        const k = next.toString(\"hex\");\n        if (this.cacheLock.has(k)) {\n            throw new Error(\"couldn't load next ancestor as it is locked\");\n        }\n        let resolver;\n        this.cacheLock.set(k, new Promise(resolve => {\n            resolver = resolve;\n        }));\n        const value = await this.db.get(next);\n        const node = tree_1.Tree.deserialize(next, value);\n        this.next = node.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)\n            ? null\n            : node.closestKnownAncestor;\n        this.knownAncestors.add(node.hash.toString(\"hex\"));\n        this.cacheLock.delete(k);\n        resolver();\n    }\n    async has(key) {\n        const strKey = key.toString(\"hex\");\n        if (this.knownAncestors.has(strKey)) {\n            return true;\n        }\n        else if (this.next) {\n            const cacheLock = this.cacheLock.get(this.next.toString(\"hex\"));\n            if (cacheLock) {\n                await cacheLock;\n                return this.has(key);\n            }\n            await this.loadNextAncestor(this.next);\n            return this.has(key);\n        }\n        else {\n            return false;\n        }\n    }\n}\nexports.Ancestry = Ancestry;\n//# sourceMappingURL=ancestry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBlockByNumber = exports.findClosestDescendants = exports.findClosestAncestor = exports.findRelated = exports.resolveTargetAndClosestAncestor = exports.setDbVersion = exports.getBlockNumberFromParams = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst tree_1 = require(\"./tree\");\nfunction getBlockNumberFromParams(method, params) {\n    // get the request's block number\n    switch (method) {\n        case \"eth_getBlockByNumber\":\n            return params[0];\n        case \"eth_getTransactionCount\":\n        case \"eth_getCode\":\n        case \"eth_getBalance\":\n            return params[1];\n        case \"eth_getStorageAt\":\n            return params[2];\n        default:\n            return null;\n    }\n}\nexports.getBlockNumberFromParams = getBlockNumberFromParams;\nasync function setDbVersion(db, version) {\n    // set the version if the DB was just created, or error if we already have\n    // a version, but it isn't what we expected\n    try {\n        const recordedVersion = await db.get(utils_1.VERSION_KEY);\n        if (!version.equals(recordedVersion)) {\n            // in the future this is where database migrations would go\n            throw new Error(`Persistent cache version \"${version.toString()}\"\" is not understood.`);\n        }\n    }\n    catch (e) {\n        if (!e.notFound)\n            throw e;\n        // if we didn't have a `version` key we need to set one\n        await db.put(utils_1.VERSION_KEY, version);\n    }\n}\nexports.setDbVersion = setDbVersion;\nasync function resolveTargetAndClosestAncestor(db, request, targetHeight, targetHash) {\n    let targetBlock;\n    let closestAncestor;\n    let previousClosestAncestor;\n    try {\n        const key = tree_1.Tree.encodeKey(targetHeight, targetHash);\n        targetBlock = tree_1.Tree.deserialize(key, await db.get(key));\n        if (targetBlock.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)) {\n            // we are the genesis/earliest block\n            closestAncestor = null;\n            previousClosestAncestor = null;\n        }\n        else {\n            previousClosestAncestor = tree_1.Tree.deserialize(targetBlock.closestKnownAncestor, await db.get(targetBlock.closestKnownAncestor));\n            // check if we are still the closest known ancestor\n            closestAncestor =\n                (await findClosestAncestor(db, request, targetHeight, previousClosestAncestor.key)) || previousClosestAncestor;\n        }\n    }\n    catch (e) {\n        // something bad happened (I/O failure?), bail\n        if (!e.notFound)\n            throw e;\n        previousClosestAncestor = null;\n        // we couldn't find our target block in the database so we need to figure\n        // out it's relationships via the blockchain.\n        // In order to avoid requesting the \"earliest\" block unnecessarily, we\n        // assume the \"earliest\" block can't be before block 0 (which seems like a\n        // reasonable assumption to me!).\n        // If our target is block `0` then we can't have a closest ancestor since\n        // we are the first block\n        if (targetHeight.toBigInt() === 0n) {\n            closestAncestor = null;\n            targetBlock = new tree_1.Tree(targetHeight, targetHash);\n        }\n        else {\n            const earliestBlock = await getBlockByNumber(request, ethereum_utils_1.Tag.earliest);\n            if (!earliestBlock)\n                throw new Error('Could not find \"earliest\" block.');\n            const { hash: earliestHash, number: earliestNumber } = earliestBlock;\n            const hash = utils_1.Data.from(earliestHash, 32);\n            const earliest = new tree_1.Tree(utils_1.Quantity.from(earliestNumber), hash);\n            closestAncestor =\n                (await findClosestAncestor(db, request, targetHeight, earliest.key)) ||\n                    earliest;\n            targetBlock = new tree_1.Tree(targetHeight, targetHash, closestAncestor.key);\n        }\n    }\n    return {\n        targetBlock,\n        closestAncestor,\n        previousClosestAncestor\n    };\n}\nexports.resolveTargetAndClosestAncestor = resolveTargetAndClosestAncestor;\nasync function* findRelated(db, request, options) {\n    const readStream = db.createReadStream({\n        keys: true,\n        values: true,\n        ...options\n    });\n    for await (const pair of readStream) {\n        const { key, value } = pair;\n        const node = tree_1.Tree.deserialize(key, value);\n        const { height: candidateHeight } = node.decodeKey();\n        const block = await getBlockByNumber(request, candidateHeight);\n        // if the chain has a block at this height, and the hash of the\n        // block is the same as the one in the db we've found our closest\n        // ancestor!\n        if (block != null && block.hash === utils_1.Data.toString(node.hash)) {\n            yield node;\n        }\n    }\n}\nexports.findRelated = findRelated;\n/**\n *\n * @param height - Search only before this block height (exclusive)\n * @param upTo - Search up to this key (inclusive)\n * @returns the closest known ancestor, or `upTo` if we know of no ancestors\n */\nasync function findClosestAncestor(db, request, height, upTo) {\n    const generator = findRelated(db, request, {\n        gte: upTo,\n        lt: tree_1.Tree.encodeKey(height, utils_1.Data.Empty),\n        reverse: true\n    });\n    const first = await generator.next();\n    await generator.return();\n    return first.value;\n}\nexports.findClosestAncestor = findClosestAncestor;\n/**\n *\n * @param height - Search only after this block height (exclusive)\n * @returns the closest known descendants, or null\n */\nasync function* findClosestDescendants(db, request, height) {\n    const generator = findRelated(db, request, {\n        gte: tree_1.Tree.encodeKey(utils_1.Quantity.from(height.toBigInt() + 1n), utils_1.Data.Empty),\n        reverse: false\n    });\n    for await (const node of generator) {\n        yield node;\n    }\n}\nexports.findClosestDescendants = findClosestDescendants;\nasync function getBlockByNumber(request, blockNumber) {\n    return await request(\"eth_getBlockByNumber\", [blockNumber.toString(), false]);\n}\nexports.getBlockByNumber = getBlockByNumber;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PersistentCache = void 0;\nconst tree_1 = require(\"./tree\");\nconst fs_1 = require(\"fs\");\nconst env_paths_1 = __importDefault(require(\"env-paths\"));\nconst leveldown_1 = __importDefault(require(\"leveldown\"));\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst encoding_down_1 = __importDefault(require(\"encoding-down\"));\nconst lexico = __importStar(require(\"../lexicographic-key-codec\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ancestry_1 = require(\"./ancestry\");\nconst helpers_1 = require(\"./helpers\");\nconst levelup = require(\"levelup\");\nconst levelupOptions = {\n    keyEncoding: \"binary\",\n    valueEncoding: \"binary\"\n};\nconst leveldownOpts = { prefix: \"\" };\nconst maxValueByteBuffer = Buffer.from([0xff]);\n/**\n * A leveldb-backed cache that enables associating immutable data as it existed\n * at a specific height on a blockchain.\n *\n * The design affords faster db reads (one read to get known closest ancestors\n * and descendants) and fast db writes (one write per node in a relationship).\n */\nclass PersistentCache {\n    constructor() {\n        this.version = utils_1.BUFFER_ZERO;\n        /**\n         * `reBalancePromise` is used at shutdown to ensure we are done balancing the\n         * tree\n         *\n         */\n        this._reBalancePromise = null;\n        this.status = \"open\";\n    }\n    static async deleteDb(dbSuffix) {\n        return new Promise((resolve, reject) => {\n            const directory = PersistentCache.getDbDirectory(dbSuffix);\n            leveldown_1.default.destroy(directory, err => {\n                if (err)\n                    return void reject(err);\n                resolve(void 0);\n            });\n        });\n    }\n    /**\n     * Serializes the entire database world state into a JSON tree\n     */\n    static async serializeDb(dbSuffix) {\n        const cache = await PersistentCache.create(dbSuffix);\n        return await new Promise(async (resolve) => {\n            const rs = cache.ancestorDb.createReadStream({\n                gte: utils_1.BUFFER_ZERO,\n                keys: true,\n                values: true\n            });\n            const tree = {};\n            const collection = {};\n            for await (const data of rs) {\n                const { key, value } = data;\n                const node = tree_1.Tree.deserialize(key, value);\n                node.height = node.decodeKey().height.toNumber();\n                const keyHex = key.toString(\"hex\");\n                const parentKeyHex = node.closestKnownAncestor.toString(\"hex\");\n                collection[keyHex] = node;\n                if (node.closestKnownAncestor.length === 0) {\n                    tree[keyHex] = node;\n                }\n                else {\n                    const descendants = collection[parentKeyHex].descendants || {};\n                    descendants[keyHex] = node;\n                    collection[parentKeyHex].descendants = descendants;\n                }\n                node.hash = utils_1.Data.toString(node.hash);\n                node.parent =\n                    node.closestKnownAncestor.length > 0\n                        ? utils_1.Data.toString(collection[parentKeyHex].hash)\n                        : null;\n                delete node.key;\n                // delete node.hash;\n                delete node.closestKnownDescendants;\n                delete node.closestKnownAncestor;\n            }\n            await cache.close();\n            resolve(JSON.parse(JSON.stringify(tree)));\n        });\n    }\n    static getDbDirectory(suffix = \"\") {\n        const { data: directory } = (0, env_paths_1.default)(\"Ganache/db\", {\n            suffix\n        });\n        return directory;\n    }\n    static async create(dbSuffix) {\n        const cache = new PersistentCache();\n        const directory = PersistentCache.getDbDirectory(dbSuffix);\n        await fs_1.promises.mkdir(directory, { recursive: true });\n        const store = (0, encoding_down_1.default)((0, leveldown_1.default)(directory, leveldownOpts), levelupOptions);\n        const db = await new Promise((resolve, reject) => {\n            const db = levelup(store, (err) => {\n                if (err)\n                    return void reject(err);\n                resolve(db);\n            });\n        });\n        cache.db = db;\n        cache.cacheDb = (0, subleveldown_1.default)(db, \"c\", levelupOptions);\n        cache.ancestorDb = (0, subleveldown_1.default)(db, \"a\", levelupOptions);\n        await cache.cacheDb.open();\n        await cache.ancestorDb.open();\n        await (0, helpers_1.setDbVersion)(cache.db, cache.version);\n        return cache;\n    }\n    async initialize(height, hash, request) {\n        this.hashBuffer = hash.toBuffer();\n        this.request = request;\n        const { targetBlock, closestAncestor, previousClosestAncestor } = await (0, helpers_1.resolveTargetAndClosestAncestor)(this.ancestorDb, this.request, height, hash);\n        this.ancestry = new ancestry_1.Ancestry(this.ancestorDb, closestAncestor);\n        const atomicBatch = this.ancestorDb.batch();\n        // if we changed closest ancestors remove our targetBlock from the previous\n        // ancestor so our target block doesn't appear in the database more than\n        // once, and update our targetBlock to point to this new ancestor\n        if (previousClosestAncestor &&\n            !previousClosestAncestor.key.equals(closestAncestor.key)) {\n            targetBlock.closestKnownAncestor = closestAncestor.key;\n            const index = previousClosestAncestor.closestKnownDescendants.findIndex(buf => buf.equals(targetBlock.key));\n            previousClosestAncestor.closestKnownDescendants.splice(index, 1);\n            atomicBatch.put(previousClosestAncestor.key, previousClosestAncestor.serialize());\n        }\n        let allKnownDescendants = [...targetBlock.closestKnownDescendants];\n        // if we don't have a closestAncestor it because the target block is block 0\n        if (closestAncestor == null) {\n            atomicBatch.put(targetBlock.key, targetBlock.serialize());\n        }\n        else {\n            const ancestorsDescendants = [targetBlock.key];\n            await Promise.all(closestAncestor.closestKnownDescendants.map(async (descendantKey) => {\n                // don't match ourself\n                if (descendantKey.equals(targetBlock.key))\n                    return;\n                const { height: descendantHeight } = tree_1.Tree.decodeKey(descendantKey);\n                // if the block number is less than our own it can't be our descendant\n                if (descendantHeight.toBigInt() <= height.toBigInt()) {\n                    ancestorsDescendants.push(descendantKey);\n                    return;\n                }\n                const descendantValue = await this.ancestorDb.get(descendantKey);\n                const descendantNode = tree_1.Tree.deserialize(descendantKey, descendantValue);\n                const descendantRawBlock = await this.getBlock(descendantHeight);\n                // if the block doesn't exist on our chain, it can't be our child,\n                // keep it in the parent\n                if (descendantRawBlock == null ||\n                    descendantRawBlock.hash !== utils_1.Data.toString(descendantNode.hash, 32)) {\n                    ancestorsDescendants.push(descendantKey);\n                }\n                else {\n                    targetBlock.closestKnownDescendants.push(descendantNode.key);\n                    // keep track of *all* known descendants so we don't bother\n                    // checking if they are a known closest descendant later on\n                    allKnownDescendants.push(...descendantNode.closestKnownDescendants);\n                    descendantNode.closestKnownAncestor = targetBlock.key;\n                    // update the descendant node with its newly assigned\n                    // closestKnownAncestor\n                    atomicBatch.put(descendantNode.key, descendantNode.serialize());\n                }\n            }));\n            closestAncestor.closestKnownDescendants = ancestorsDescendants;\n            atomicBatch.put(closestAncestor.key, closestAncestor.serialize());\n        }\n        // TODO(perf): we always re-save the targetBlock but could optimize to only\n        // resave if it is needed.\n        // Issue: https://github.com/trufflesuite/ganache/issues/3485\n        atomicBatch.put(targetBlock.key, targetBlock.serialize());\n        await atomicBatch.write();\n        // we DO want to re-balance the descendants, but we don't want to wait for\n        // it because it can't effect our current fork block's cache results since\n        // these caches will be for blocks higher than our own fork block\n        // Do not `await` this.\n        this._reBalancePromise = this.reBalanceDescendantTree(height, targetBlock, allKnownDescendants)\n            // we don't care if it fails because this is an optimization that only\n            // matters for _future_ runs of ganache for blocks beyond our current fork\n            // block\n            .catch(_ => { })\n            .finally(() => {\n            this._reBalancePromise = null;\n        });\n    }\n    async getBlock(height) {\n        return await (0, helpers_1.getBlockByNumber)(this.request, height);\n    }\n    async reBalanceDescendantTree(height, targetBlock, allKnownDescendants) {\n        const atomicBatch = this.ancestorDb.batch();\n        const closestKnownDescendants = targetBlock.closestKnownDescendants;\n        const startSize = closestKnownDescendants.length;\n        for await (const maybeDescendant of (0, helpers_1.findClosestDescendants)(this.ancestorDb, this.request, height)) {\n            const key = maybeDescendant.key;\n            // don't match with our own self\n            if (targetBlock.key.equals(key))\n                continue;\n            // this possibleDescendent's descendants can't be our direct descendants\n            // because trees can't merge\n            allKnownDescendants.push(...maybeDescendant.closestKnownDescendants);\n            // if this already is a descendent of ours we can skip it\n            if (closestKnownDescendants.some(d => d.equals(key)))\n                continue;\n            // if this already is a descendent of one of our descendants skip it\n            if (allKnownDescendants.some(d => d.equals(key)))\n                continue;\n            // move the descendant from the parent to the target\n            const parentTree = tree_1.Tree.deserialize(maybeDescendant.closestKnownAncestor, await this.ancestorDb.get(maybeDescendant.closestKnownAncestor));\n            parentTree.closestKnownDescendants.splice(parentTree.closestKnownDescendants.findIndex(d => d.equals(key)), 1);\n            maybeDescendant.closestKnownAncestor = targetBlock.key;\n            closestKnownDescendants.push(maybeDescendant.key);\n            atomicBatch.put(parentTree.key, parentTree.serialize());\n            atomicBatch.put(maybeDescendant.key, maybeDescendant.serialize());\n            // if the cache has been closed stop doing work so we can flush what we\n            // have to the database; descendant resolution shouldn't prevent us from\n            // fulling closing.\n            if (this.status === \"closed\") {\n                break;\n            }\n        }\n        // only write if we have changes to write\n        if (startSize !== closestKnownDescendants.length) {\n            atomicBatch.put(targetBlock.key, targetBlock.serialize());\n            // check `this.ancestorDb.isOpen()` as we don't need to try to write if\n            // the db was shutdown in the meantime. This can happen if ganache was\n            // closed while we were still updating the descendants\n            if (atomicBatch.length > 0 && this.ancestorDb.isOpen())\n                await atomicBatch.write();\n        }\n    }\n    async get(method, params, key) {\n        const blockNumber = (0, helpers_1.getBlockNumberFromParams)(method, params);\n        if (blockNumber == null)\n            return;\n        const height = utils_1.Quantity.from(blockNumber);\n        const bufKey = Buffer.from(key);\n        const start = lexico.encode([height.toBuffer(), bufKey]);\n        const end = Buffer.concat([start, maxValueByteBuffer]);\n        const readStream = this.cacheDb.createReadStream({\n            gt: start,\n            lt: end,\n            keys: true,\n            values: true\n        });\n        for await (const data of readStream) {\n            const { key: k, value } = data;\n            const [_height, _key, blockHash] = lexico.decode(k);\n            // if our key no longer matches make sure we don't keep searching\n            if (!_key.equals(bufKey))\n                return;\n            if (this.hashBuffer.equals(blockHash) ||\n                (await this.ancestry.has(blockHash))) {\n                return value;\n            }\n        }\n    }\n    async put(method, params, key, value) {\n        const blockNumber = (0, helpers_1.getBlockNumberFromParams)(method, params);\n        if (blockNumber == null)\n            return false;\n        const height = utils_1.Quantity.from(blockNumber);\n        const dbKey = lexico.encode([\n            height.toBuffer(),\n            Buffer.from(key),\n            this.hashBuffer\n        ]);\n        await this.cacheDb.put(dbKey, value);\n        return true;\n    }\n    async close() {\n        if (this.status === \"closed\")\n            return;\n        this.status = \"closed\";\n        if (this.cacheDb) {\n            await this.cacheDb.close();\n        }\n        if (this.ancestorDb) {\n            await this._reBalancePromise;\n            await this.ancestorDb.close();\n        }\n        if (this.db) {\n            await this.db.close();\n        }\n    }\n}\nexports.PersistentCache = PersistentCache;\n//# sourceMappingURL=persistent-cache.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tree = void 0;\nconst lexico = __importStar(require(\"../lexicographic-key-codec\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp = __importStar(require(\"@ganache/rlp\"));\n/**\n * A tree: https://en.wikipedia.org/wiki/Rose_tree\n * One parent, multiple children\n */\nclass Tree {\n    constructor(height, hash, closestKnownAncestor = utils_1.BUFFER_EMPTY) {\n        this.closestKnownDescendants = [];\n        this.key = Tree.encodeKey(height, hash);\n        this.hash = hash.toBuffer();\n        this.closestKnownAncestor = closestKnownAncestor;\n    }\n    serialize() {\n        return rlp.encode([\n            this.hash,\n            this.closestKnownAncestor,\n            this.closestKnownDescendants\n        ]);\n    }\n    decodeKey() {\n        return Tree.decodeKey(this.key);\n    }\n    static decodeKey(key) {\n        const [height, hash] = lexico.decode(key);\n        return {\n            height: utils_1.Quantity.from(height),\n            hash: utils_1.Data.from(hash)\n        };\n    }\n    static deserialize(key, value) {\n        const [hash, parent, children] = rlp.decode(value);\n        const tree = Object.create(Tree.prototype);\n        tree.key = key;\n        tree.hash = hash;\n        tree.closestKnownAncestor = parent;\n        tree.closestKnownDescendants = children;\n        return tree;\n    }\n    static encodeKey(height, hash) {\n        return lexico.encode([height.toBuffer(), hash.toBuffer()]);\n    }\n}\nexports.Tree = Tree;\n//# sourceMappingURL=tree.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LimitCounter = void 0;\n/**\n * @param timestamp -\n * @returns the milliseconds that have elapsed since `timestamp`\n */\nfunction timeSince(timestamp) {\n    return Date.now() - timestamp;\n}\nclass LimitCounter {\n    constructor(windowLength) {\n        this.counters = new Map();\n        this.windowLength = windowLength;\n    }\n    evict() {\n        const d = this.windowLength * 3;\n        if (timeSince(this.lastEvict) < d) {\n            return;\n        }\n        this.lastEvict = Date.now();\n        const counters = this.counters;\n        counters.forEach((v, k) => {\n            if (timeSince(v.updatedAt) >= d) {\n                counters.delete(k);\n            }\n        });\n    }\n    increment(currentWindow) {\n        this.evict();\n        let v = this.counters.get(currentWindow);\n        if (v == null) {\n            this.counters.set(currentWindow, { value: 1, updatedAt: Date.now() });\n        }\n        else {\n            v.value += 1;\n            v.updatedAt = Date.now();\n        }\n    }\n    get(currentWindow, previousWindow) {\n        let curr = this.counters.get(currentWindow);\n        if (curr == null) {\n            curr = { value: 0, updatedAt: Date.now() };\n        }\n        let prev = this.counters.get(previousWindow);\n        if (prev == null) {\n            prev = { value: 0, updatedAt: Date.now() };\n        }\n        return [curr.value, prev.value];\n    }\n}\nexports.LimitCounter = LimitCounter;\n//# sourceMappingURL=limit-counter.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst semaphore_1 = __importDefault(require(\"semaphore\"));\nconst limit_counter_1 = require(\"./limit-counter\");\n/**\n * Sleeps the specified number of milliseconds, then resolves the Promise.\n * Rejects with an `AbortError` if the provided `signal` is already aborted. If\n * the signal's `\"abort\"` event is invoked while sleeping, the the promise\n * rejects with an `AbortError`.\n *\n * @param ms - the number of milliseconds to wait before resolving\n * @param abortSignal - the\n * @returns a promise that resolves when `ms`milliseconds have elapsed, or\n * rejects if the `signal` is aborted.\n */\nconst sleep = (ms, signal) => {\n    if (signal.aborted)\n        return Promise.reject(new ethereum_utils_1.AbortError());\n    return new Promise((resolve, reject) => {\n        function abort() {\n            clearTimeout(timer);\n            signal.removeEventListener(\"abort\", abort);\n            reject(new ethereum_utils_1.AbortError());\n        }\n        const timer = setTimeout(() => {\n            signal.removeEventListener(\"abort\", abort);\n            resolve();\n        }, ms);\n        signal.addEventListener(\"abort\", abort);\n    });\n};\n/**\n * @param timestamp -\n * @param duration -\n * @returns the result of rounding `timestamp` toward zero to a multiple of\n * `duration`.\n */\nfunction timeTruncate(timestamp, duration) {\n    return timestamp - (timestamp % duration);\n}\n/**\n * @param result -\n * @returns true if the result is a JSON-RPC LIMIT_EXCEEDED error\n */\nfunction isExceededLimitError(response) {\n    return ((0, utils_1.hasOwn)(response, \"error\") &&\n        response.error != null &&\n        response.error.code === utils_1.JsonRpcErrorCode.LIMIT_EXCEEDED);\n}\n/**\n * A sliding window rate limiter.\n *\n * Rate estimation from\n * https://blog.cloudflare.com/counting-things-a-lot-of-different-things/\n *\n * Let's say we set a limit of 50 requests per minute. The counter can be\n * thought of like this:\n *\n * ```ascii\n *         ╔══════════════════════════════════╗\n *         ║   sampling period: 60 seconds    ║\n * ╭───────╫────────────────────────┬─────────╫──────────────────────╮\n * │       ║previous minute         │         current minute         │\n * │       ║  42 requests           │         ║18 requests           │\n * ╰───────╫────────────────────────┼─────────╫──────────────────────╯\n *         ║         45 secs        │ 15 secs ║\n *         ╚════════════════════════╧═════════╝\n * ```\n *\n * In this situation, we did 18 requests during the current minute, which\n * started 15 seconds ago, and 42 requests during the entire previous minute.\n * Based on this information, the rate approximation is calculated like this:\n *\n * ```javascript\n * rate = (42 * (45 / 60)) + 18\n *      = (42 * 0.75) + 18\n *      = 49.5 // requests\n *\n *      = 59.5 // requests\n * ```\n *\n * One more request during the next second and the rate limiter will kick in.\n *\n * This algorithm assumes a constant rate of requests during the previous\n * sampling period (which can be any time span), so the result is only\n * an approximation of the actual rate, but it is quick to calculate and\n * lightweight.\n */\nclass RateLimiter {\n    constructor(requestLimit, windowSizeMs, abortSignal) {\n        this.sem = (0, semaphore_1.default)(1);\n        this.take = () => new Promise(resolve => this.sem.take(resolve));\n        this.mustBackoff = null;\n        this.counter = 0;\n        this.requestLimit = requestLimit;\n        // the rate limiter splits the window in 2 to measure the RPS\n        this.windowSizeMs = windowSizeMs / 2;\n        this.limitCounter = new limit_counter_1.LimitCounter(this.windowSizeMs);\n        this.abortSignal = abortSignal;\n    }\n    /**\n     * @param now -\n     * @param currentWindow -\n     * @returns the current request rate and the allowed execution time of the\n     * next request\n     */\n    status(now, currentWindow) {\n        const limit = this.requestLimit;\n        const windowSizeMs = this.windowSizeMs;\n        const currWindow = currentWindow;\n        const prevWindow = currWindow - windowSizeMs;\n        const [currCount, prevCount] = this.limitCounter.get(currWindow, prevWindow);\n        let rate;\n        if (prevCount === 0) {\n            rate = currCount;\n        }\n        else {\n            // use the average for the previous window, plus everything for this\n            // window\n            rate =\n                prevCount * ((windowSizeMs - (now - currWindow)) / windowSizeMs) +\n                    currCount;\n        }\n        // limit <= 0 means the limiter is disabled\n        if (limit > 0 && rate + 1 > limit) {\n            const nextCount = currCount + 1;\n            const nextLimit = limit + 1;\n            const next = prevCount === 0\n                ? currWindow + windowSizeMs + windowSizeMs / nextLimit\n                : (windowSizeMs * (prevCount + nextCount - nextLimit)) / prevCount +\n                    currWindow;\n            return { rate, next };\n        }\n        return { rate, next: now };\n    }\n    /**\n     * Executes the given fn within the confines of the configured rate limit. If\n     * the function's return value is a JSON-RPC LIMIT_EXCEEDED error, it will\n     * automatically retry with the given `backoff_seconds`\n     * @param fn -\n     */\n    async handle(fn) {\n        // allow scheduling one fn at a time\n        await this.take();\n        try {\n            return await this.schedule(fn);\n        }\n        finally {\n            this.sem.leave();\n        }\n    }\n    async schedule(fn) {\n        const signal = this.abortSignal;\n        while (true) {\n            if (signal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            if (this.mustBackoff)\n                await this.mustBackoff;\n            const now = Date.now();\n            const currentWindow = timeTruncate(now, this.windowSizeMs);\n            const { rate, next } = this.status(now, currentWindow);\n            // process.stdout.write(\n            //   `rate: ${rate}, wait: ${next - now}              \\r`\n            // );\n            // if this request would be over the rate limit and the amount of time\n            // we'd need to back off is > 1ms we need to schedule this in the future\n            if (rate + 1 > this.requestLimit && next > now) {\n                await sleep(Date.now() - next, signal);\n            }\n            else {\n                this.limitCounter.increment(currentWindow);\n                const result = await fn();\n                if (isExceededLimitError(result.response)) {\n                    if ((0, utils_1.hasOwn)(result.response.error.data, \"rate\")) {\n                        const backoffSeconds = result.response.error.data.rate.backoff_seconds;\n                        // console.log(`backing off for ${backoffSeconds}`);\n                        // console.log(result.error.data.rate);\n                        // TODO: I need to make all in-flight requests that will soon return\n                        // a LIMIT_EXCEEDED error behave, otherwise we'll just send ALL\n                        // requests back to Infura simultaneously after their initial 30\n                        // backoff_seconds have elapsed.\n                        // Issue: https://github.com/trufflesuite/ganache/issues/3480\n                        //\n                        // When we are *not* self-rate limited (meaning fork.rps isn't set)\n                        // we need to be able to go at full speed until we are, and THEN we\n                        // need to go at whatever infura wants.\n                        //\n                        // TODO: TODO: ask infura to add the X-Rate-Limit* headers to all\n                        // HTTP responses so we can poll for info to help us avoid ever\n                        // getting rate limited in the first place.\n                        // this is part of an attempt at solving the above comment\n                        this.requestLimit =\n                            result.response.error.data.rate.allowed_rps *\n                                (this.windowSizeMs / 1000);\n                        const limiter = (this.mustBackoff = sleep(backoffSeconds * 1000, signal));\n                        await this.mustBackoff;\n                        if (this.mustBackoff === limiter) {\n                            this.mustBackoff = null;\n                        }\n                        continue;\n                    }\n                    else {\n                        // we don't know how to parse this error, so we do nothing, I guess?\n                    }\n                }\n                return result;\n            }\n        }\n    }\n}\nexports.default = RateLimiter;\n//# sourceMappingURL=rate-limiter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkStateManager = void 0;\nconst rlp_1 = require(\"@ganache/rlp\");\nconst cache_1 = require(\"./cache\");\nconst state_manager_1 = require(\"../state-manager\");\n/**\n * Interface for getting and setting data from an underlying\n * state trie.\n */\nclass ForkStateManager extends state_manager_1.GanacheStateManager {\n    /**\n     * Instantiate the StateManager interface.\n     */\n    constructor(opts) {\n        super(opts);\n        this._cache = new cache_1.ForkCache(opts.trie);\n        this.prefixCodeHashes = opts.prefixCodeHashes || false;\n    }\n    /**\n     * Copies the current instance of the `StateManager`\n     * at the last fully committed point, i.e. as if all current\n     * checkpoints were reverted.\n     */\n    copy() {\n        return new ForkStateManager({\n            trie: this._trie.copy(false),\n            prefixCodeHashes: this.prefixCodeHashes\n        });\n    }\n    /**\n     * Creates a storage trie from the primary storage trie\n     * for an account and saves this in the storage cache.\n     * @private\n     */\n    async _lookupStorageTrie(address) {\n        // from state trie\n        const account = await this.getAccount(address);\n        const storageTrie = this._trie.copy(true);\n        storageTrie.setContext(account.storageRoot, address.buf, storageTrie.blockNumber);\n        // we copy checkpoints over only for the metadata checkpoints, not the trie\n        // checkpoints.\n        storageTrie.database().checkpoints = [];\n        return storageTrie;\n    }\n    /**\n     * Gets the storage value associated with the provided `address` and `key`.\n     * This method returns the shortest representation of the stored value.\n     * @param address - Address of the account to get the storage for\n     * @param key - Key in the account's storage to get the value for. Must be 32\n     * bytes long.\n     * @returns {Promise<Buffer>} - The storage value for the account\n     * corresponding to the provided address at the provided key. If this does not\n     * exist an empty `Buffer` is returned.\n     */\n    async getContractStorage(address, key) {\n        const trie = (await this._getStorageTrie(address));\n        const value = await trie.get(key);\n        return (0, rlp_1.decode)(value);\n    }\n}\nexports.ForkStateManager = ForkStateManager;\n//# sourceMappingURL=state-manager.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkTrie = void 0;\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst utils_1 = require(\"@ganache/utils\");\nconst trie_1 = require(\"../helpers/trie\");\nconst trie_2 = require(\"@ethereumjs/trie\");\nconst lexico = __importStar(require(\"./lexicographic-key-codec\"));\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst trie_db_1 = require(\"../trie-db\");\nconst DELETED_VALUE = Buffer.allocUnsafe(1).fill(1);\nconst GET_CODE = \"eth_getCode\";\nconst GET_NONCE = \"eth_getTransactionCount\";\nconst GET_BALANCE = \"eth_getBalance\";\nconst GET_STORAGE_AT = \"eth_getStorageAt\";\nconst MetadataSingletons = new WeakMap();\nconst LEVELDOWN_OPTIONS = {\n    keyEncoding: \"binary\",\n    valueEncoding: \"binary\"\n};\nfunction isEqualKey(encodedKey, address, key) {\n    const decodedKey = lexico.decode(encodedKey);\n    const [_, keyAddress, deletedKey] = decodedKey;\n    return keyAddress.equals(address) && deletedKey.equals(key);\n}\nclass ForkTrie extends trie_1.GanacheTrie {\n    constructor(db, root, blockchain) {\n        super(db, root, blockchain);\n        this.address = null;\n        this.isPreForkBlock = false;\n        /**\n         * Gets an account from the fork/fallback.\n         *\n         * @param address - the address of the account\n         * @param blockNumber - the block number at which to query the fork/fallback.\n         * @param stateRoot - the state root at the given blockNumber\n         */\n        this.accountFromFallback = async (address, blockNumber) => {\n            const { fallback } = this.blockchain;\n            const number = this.blockchain.fallback.selectValidForkBlockNumber(blockNumber);\n            // get nonce, balance, and code from the fork/fallback\n            const codeProm = fallback.request(GET_CODE, [address, number]);\n            const promises = [\n                fallback.request(GET_NONCE, [address, number]),\n                fallback.request(GET_BALANCE, [address, number]),\n                null\n            ];\n            // create an account so we can serialize everything later\n            const account = new ethereum_utils_1.Account(address);\n            // because code requires additional asynchronous processing, we await and\n            // process it ASAP\n            try {\n                const codeHex = await codeProm;\n                if (codeHex !== \"0x\") {\n                    const code = utils_1.Data.toBuffer(codeHex);\n                    // the codeHash is just the keccak hash of the code itself\n                    account.codeHash = (0, utils_1.keccak)(code);\n                    if (!account.codeHash.equals(util_1.KECCAK256_NULL)) {\n                        // insert the code directly into the database with a key of `codeHash`\n                        promises[2] = this.db.put(account.codeHash, code);\n                    }\n                }\n            }\n            catch (e) {\n                // Since we fired off some promises that may throw themselves we need to\n                // catch these errors and discard them.\n                Promise.all(promises).catch(e => { });\n                throw e;\n            }\n            // finally, set the `nonce` and `balance` on the account before returning\n            // the serialized data\n            const [nonce, balance] = await Promise.all(promises);\n            account.nonce =\n                nonce === \"0x0\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(nonce, true);\n            account.balance =\n                balance === \"0x0\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(balance);\n            return account.serialize();\n        };\n        this.storageFromFallback = async (address, key, blockNumber) => {\n            const result = await this.blockchain.fallback.request(GET_STORAGE_AT, [\n                `0x${address.toString(\"hex\")}`,\n                `0x${key.toString(\"hex\")}`,\n                this.blockchain.fallback.selectValidForkBlockNumber(blockNumber)\n            ]);\n            if (!result)\n                return null;\n            // remove the `0x` and all leading 0 pairs:\n            const compressed = result.replace(/^0x(00)*/, \"\");\n            const buf = Buffer.from(compressed, \"hex\");\n            return (0, rlp_1.encode)(buf);\n        };\n        this.accounts = blockchain.accounts;\n        this.blockNumber = this.blockchain.fallback.blockNumber;\n        this.forkBlockNumber = this.blockNumber.toBigInt();\n        let metadataDB = MetadataSingletons.get(db);\n        if (!metadataDB) {\n            metadataDB = db.sublevel(\"f\", LEVELDOWN_OPTIONS);\n            MetadataSingletons.set(db, metadataDB);\n        }\n        this.metadataDB = metadataDB;\n        this.checkpointedMetadata = new trie_2.CheckpointDB(new trie_db_1.TrieDB(this.metadataDB));\n    }\n    checkpoint() {\n        super.checkpoint();\n        this.checkpointedMetadata.checkpoint(this.root());\n    }\n    async commit() {\n        await Promise.all([super.commit(), this.checkpointedMetadata.commit()]);\n    }\n    async revert() {\n        await Promise.all([super.revert(), this.checkpointedMetadata.revert()]);\n    }\n    setContext(stateRoot, address, blockNumber) {\n        this._root = stateRoot;\n        this.address = address;\n        this.blockNumber = blockNumber;\n        this.isPreForkBlock = blockNumber.toBigInt() < this.forkBlockNumber;\n    }\n    async put(key, val) {\n        return super.put(key, val);\n    }\n    /**\n     * Removes saved metadata from the given block range (inclusive)\n     * @param startBlockNumber - (inclusive)\n     * @param endBlockNumber - (inclusive)\n     */\n    async revertMetaData(startBlockNumber, endBlockNumber) {\n        const db = this.metadataDB;\n        const stream = db.createKeyStream({\n            gte: lexico.encode([startBlockNumber.toBuffer()]),\n            lt: lexico.encode([\n                utils_1.Quantity.from(endBlockNumber.toBigInt() + 1n).toBuffer()\n            ])\n        });\n        const batch = db.batch();\n        for await (const key of stream) {\n            batch.del(key);\n        }\n        await batch.write();\n    }\n    createDelKey(key) {\n        const blockNum = this.blockNumber.toBuffer();\n        return lexico.encode([blockNum, this.address, key]);\n    }\n    /**\n     * Checks if the key was deleted (locally -- not on the fork)\n     * @param key -\n     */\n    async keyWasDeleted(key) {\n        const selfAddress = this.address === null ? utils_1.BUFFER_EMPTY : this.address;\n        // check the uncommitted checkpoints for deleted keys before\n        // checking the database itself\n        // TODO(perf): there is probably a better/faster way of doing this for the\n        // common case.\n        // Issue: https://github.com/trufflesuite/ganache/issues/3483\n        const { checkpoints } = this.checkpointedMetadata;\n        for (let i = checkpoints.length - 1; i >= 0; i--) {\n            for (let [encodedKeyStr, value] of checkpoints[i].keyValueMap.entries()) {\n                if (!value || !value.equals(DELETED_VALUE))\n                    continue;\n                const encodedKey = Buffer.from(encodedKeyStr, \"binary\");\n                if (isEqualKey(encodedKey, selfAddress, key))\n                    return true;\n            }\n        }\n        // since we didn't find proof of deletion in a checkpoint let's check the\n        // database for it.\n        // We start searching from our database key (blockNum + address + key)\n        // down to the earliest block we know about.\n        // TODO(perf): this is just going to be slow once we get lots of keys\n        // because it just checks every single key we've ever deleted (before this\n        // one).\n        // Issue: https://github.com/trufflesuite/ganache/issues/3484\n        const db = this.metadataDB;\n        const stream = db.createReadStream({\n            lte: this.createDelKey(key),\n            reverse: true\n        });\n        for await (const data of stream) {\n            const { key: encodedKey, value } = data;\n            if (!value || !value.equals(DELETED_VALUE))\n                continue;\n            if (isEqualKey(encodedKey, selfAddress, key))\n                return true;\n        }\n        // we didn't find proof of deletion so we return `false`\n        return false;\n    }\n    // note: this function is a slightly modified version of\n    // https://github.com/ethereumjs/ethereumjs-monorepo/blob/34f3dcdf37d2fbeffeb41dc3de693f59b91c46bc/packages/trie/src/trie/trie.ts#L218\n    async del(key) {\n        await this._lock.acquire();\n        // we only track if the key was deleted (locally) for state tries _after_\n        // the fork block because we can't possibly delete keys _before_ the fork\n        // block, since those happened before ganache was even started\n        // This little optimization can cut debug_traceTransaction time _in half_.\n        if (!this.isPreForkBlock) {\n            const delKey = this.createDelKey(key);\n            const metaDataPutPromise = this.checkpointedMetadata.put(delKey, DELETED_VALUE);\n            const hash = (0, utils_1.keccak)(key);\n            const { node, stack } = await this.findPath(hash);\n            if (node) {\n                await this._deleteNode(hash, stack);\n                await this.persistRoot();\n            }\n            await metaDataPutPromise;\n        }\n        else {\n            const hash = (0, utils_1.keccak)(key);\n            const { node, stack } = await this.findPath(hash);\n            if (node) {\n                await this._deleteNode(hash, stack);\n                await this.persistRoot();\n            }\n        }\n        this._lock.release();\n    }\n    async get(key) {\n        const value = await super.get(key);\n        if (value != null)\n            return value;\n        // since we don't have this key in our local trie check if we've have\n        // deleted it (locally)\n        // we only check if the key was deleted (locally) for state tries _after_\n        // the fork block because we can't possibly delete keys _before_ the fork\n        // block, since those happened before ganache was even started\n        // This little optimization can cut debug_traceTransaction time _in half_.\n        if (!this.isPreForkBlock && (await this.keyWasDeleted(key)))\n            return null;\n        if (this.address === null) {\n            // if the trie context's address isn't set, our key represents an address:\n            return this.accountFromFallback(ethereum_address_1.Address.from(key), this.blockNumber);\n        }\n        else {\n            // otherwise the key represents storage at the given address:\n            return this.storageFromFallback(this.address, key, this.blockNumber);\n        }\n    }\n    /**\n     * Returns a copy of the underlying trie with the interface of ForkTrie.\n     * @param includeCheckpoints - If true and during a checkpoint, the copy will\n     * contain the checkpointing metadata and will use the same scratch as\n     * underlying db.\n     */\n    copy(includeCheckpoints = true) {\n        const secureTrie = new ForkTrie(this.db.copy(), this.root(), this.blockchain);\n        secureTrie.accounts = this.accounts;\n        secureTrie.address = this.address;\n        secureTrie.blockNumber = this.blockNumber;\n        if (includeCheckpoints && this.hasCheckpoints()) {\n            secureTrie._db.checkpoints = [...this._db.checkpoints];\n            // Our metadata checkpoints need to be the same reference to the\n            // parent's metadata checkpoints so that we can continue to track these\n            // changes on this copy, otherwise deletions made to a contract's storage\n            // may not be tracked.\n            // Note: db.checkpoints don't need this same treatment because of the way\n            // the statemanager uses a contract's trie: it doesn't ever save to it.\n            // Instead, it saves to its own internal cache, which eventually gets\n            // reverted or committed (flushed). Our metadata doesn't utilize a central\n            // cache.\n            secureTrie.checkpointedMetadata.checkpoints =\n                this.checkpointedMetadata.checkpoints;\n        }\n        return secureTrie;\n    }\n}\nexports.ForkTrie = ForkTrie;\n//# sourceMappingURL=trie.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveFromIndex = exports.deriveFromPath = exports.createAccountFromSeed = exports.createAccountGeneratorFromSeedAndPath = void 0;\nconst crypto_1 = require(\"crypto\");\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst HARDENED_OFFSET = 0x80000000;\nconst MASTER_SECRET = Buffer.from(\"Bitcoin seed\", \"utf8\");\nfunction createAccountGeneratorFromSeedAndPath(seedBuffer, hdPath) {\n    const parent = createAccountFromSeed(seedBuffer);\n    const path = deriveFromPath(hdPath, parent);\n    return (index) => {\n        return deriveFromIndex(index, path);\n    };\n}\nexports.createAccountGeneratorFromSeedAndPath = createAccountGeneratorFromSeedAndPath;\nfunction createAccountFromSeed(seedBuffer) {\n    const I = (0, crypto_1.createHmac)(\"sha512\", MASTER_SECRET).update(seedBuffer).digest();\n    const privateKey = I.slice(0, 32);\n    const chainCode = I.slice(32);\n    const publicKey = makePublicKey(privateKey);\n    return {\n        privateKey,\n        chainCode,\n        publicKey\n    };\n}\nexports.createAccountFromSeed = createAccountFromSeed;\nfunction deriveFromPath(fullPath, child) {\n    fullPath.forEach(function (c, i) {\n        if (i === 0) {\n            if (!/^[mM]{1}/.test(c)) {\n                throw new Error('Path must start with \"m\" or \"M\"');\n            }\n            return;\n        }\n        const hardened = c.length > 1 && c[c.length - 1] === \"'\";\n        let childIndex = parseInt(c, 10);\n        if (childIndex >= HARDENED_OFFSET)\n            throw new Error(\"Invalid index\");\n        if (hardened)\n            childIndex += HARDENED_OFFSET;\n        child = deriveChild(childIndex, hardened, child.privateKey, child.publicKey, child.chainCode);\n    });\n    return child;\n}\nexports.deriveFromPath = deriveFromPath;\nfunction deriveFromIndex(index, child) {\n    if (index >= HARDENED_OFFSET)\n        throw new Error(\"Invalid index\");\n    return deriveChild(index, false, child.privateKey, child.publicKey, child.chainCode);\n}\nexports.deriveFromIndex = deriveFromIndex;\nfunction makePublicKey(privateKey) {\n    const publicKey = Buffer.allocUnsafe(33);\n    switch (secp256k1_1.default.publicKeyCreate(publicKey, privateKey)) {\n        case 0:\n            return publicKey;\n        case 1:\n            throw new Error(\"Private Key is invalid\");\n        case 2:\n            throw new Error(\"Public Key serialization error\");\n    }\n}\n/**\n * A buffer of size 4 that can be reused as long as all changes are consumed\n * within the same event loop.\n */\nconst SHARED_BUFFER_4 = Buffer.allocUnsafe(4);\nfunction deriveChild(index, isHardened, privateKey, publicKey, chainCode) {\n    const indexBuffer = SHARED_BUFFER_4;\n    indexBuffer.writeUInt32BE(index, 0);\n    let data;\n    const privateKeyLength = privateKey.length;\n    if (isHardened) {\n        // Hardened child\n        // privateKeyLength + 1 (BUFFER_ZERO.length) + 4 (indexBuffer.length)\n        const dataLength = privateKeyLength + 1 + 4;\n        data = Buffer.concat([utils_1.BUFFER_ZERO, privateKey, indexBuffer], dataLength);\n    }\n    else {\n        // Normal child\n        data = Buffer.concat([publicKey, indexBuffer], publicKey.length + 4);\n    }\n    const I = (0, crypto_1.createHmac)(\"sha512\", chainCode).update(data).digest();\n    const IL = I.slice(0, 32);\n    try {\n        const newPrivK = Buffer.allocUnsafe(privateKeyLength);\n        privateKey.copy(newPrivK, 0, 0, privateKeyLength);\n        switch (secp256k1_1.default.privateKeyTweakAdd(newPrivK, IL)) {\n            case 0:\n                return {\n                    privateKey: newPrivK,\n                    publicKey: makePublicKey(newPrivK),\n                    chainCode: I.slice(32)\n                };\n            case 1:\n                throw new Error(\"The tweak was out of range or the resulted private key is invalid\");\n        }\n    }\n    catch {\n        return deriveChild(index + 1, isHardened, privateKey, publicKey, chainCode);\n    }\n}\n//# sourceMappingURL=hdkey.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertArgLength = void 0;\nfunction assertArgLength(min, max = min) {\n    return function (target, propertyKey, descriptor) {\n        const original = descriptor.value;\n        descriptor.value = function () {\n            const length = arguments.length;\n            if (length < min || length > max) {\n                throw new Error(`Incorrect number of arguments. '${String(propertyKey)}' requires ${min === max\n                    ? `exactly ${min} ${min === 1 ? \"argument\" : \"arguments\"}.`\n                    : `between ${min} and ${max} arguments.`}`);\n            }\n            return Reflect.apply(original, this, arguments);\n        };\n        return descriptor;\n    };\n}\nexports.assertArgLength = assertArgLength;\n//# sourceMappingURL=assert-arg-length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferify = void 0;\nconst PARTS = Buffer.from('[]{},\"\":null');\nconst SQUARE_BRACKET_PAIR = PARTS.slice(0, 2);\nconst SQUARE_BRACKET_OPEN = SQUARE_BRACKET_PAIR.slice(0, 1);\nconst SQUARE_BRACKET_CLOSE = SQUARE_BRACKET_PAIR.slice(1, 2);\nconst CURLY_BRACKET_PAIR = PARTS.slice(2, 4);\nconst CURLY_BRACKET_OPEN = CURLY_BRACKET_PAIR.slice(0, 1);\nconst CURLY_BRACKET_CLOSE = CURLY_BRACKET_PAIR.slice(1, 2);\nconst COMMA_QUOTE = PARTS.slice(4, 6);\nconst COMMA = COMMA_QUOTE.slice(0, 1);\nconst QUOTE_PAIR = PARTS.slice(5, 7);\nconst QUOTE_COLON = PARTS.slice(6, 8);\nconst COLON = QUOTE_COLON.slice(1, 2);\nconst NULL = PARTS.slice(8, 12);\nconst _EMPTY = PARTS.slice(0, 0);\nconst toStr = Object.prototype.toString;\nconst isObj = (val) => toStr.call(val) === \"[object Object]\";\nfunction numberToBuffer(value) {\n    const str = value.toString();\n    const { length } = str;\n    if (length > 0) {\n        const buf = Buffer.allocUnsafe(length);\n        buf.utf8Write(str, 0, length);\n        return buf;\n    }\n    else {\n        return _EMPTY;\n    }\n}\nfunction stringToQuotedBuffer(value) {\n    const { length } = value;\n    if (length > 0) {\n        const buf = Buffer.allocUnsafe(length + 2); // + 2 for the quotation marks\n        buf[0] = 34; // DOUBLE QUOTE\n        buf[length + 1] = 34; // DOUBLE QUOTE\n        buf.utf8Write(value, 1, length);\n        return buf;\n    }\n    else {\n        return QUOTE_PAIR;\n    }\n}\nfunction* arrayToBuffer(value) {\n    const { length } = value;\n    if (length === 0) {\n        yield SQUARE_BRACKET_PAIR;\n        return;\n    }\n    else {\n        yield SQUARE_BRACKET_OPEN;\n        // sends the first array value:\n        for (const chunkified of bufferify(value[0], \"0\")) {\n            // if the value ends up being nothing (undefined), return null\n            yield chunkified.length === 0 ? NULL : chunkified;\n        }\n        // sends the rest of the array values:\n        for (let i = 1; i < length; i++) {\n            yield COMMA;\n            for (const chunkified of bufferify(value[i], i.toString())) {\n                // if the value ends up being nothing (undefined), return null\n                yield chunkified.length === 0 ? NULL : chunkified;\n            }\n        }\n        yield SQUARE_BRACKET_CLOSE;\n        return;\n    }\n}\nfunction bufferToQuotedBuffer(value) {\n    const { length } = value;\n    const buf = Buffer.allocUnsafe(length + 2);\n    buf[0] = 34;\n    value.copy(buf, 1, 0, length);\n    buf[length + 1] = 34;\n    return buf;\n}\nfunction* objectToBuffer(obj, nameOrIndex) {\n    if (\"toJSON\" in obj) {\n        yield* bufferify(obj.toJSON(nameOrIndex), nameOrIndex);\n        return;\n    }\n    let yieldedOpen = false;\n    for (const key in obj) {\n        const value = obj[key];\n        let yieldPrefix = true;\n        for (const chunkified of bufferify(value, key)) {\n            // if the chunkified value ends up being nothing (undefined) ignore\n            // the property\n            const chunkLength = chunkified.length;\n            if (chunkLength === 0)\n                continue;\n            // only yield the prefix once per `key`\n            if (yieldPrefix) {\n                yieldPrefix = false;\n                const quotedKey = stringToQuotedBuffer(key);\n                if (!yieldedOpen) {\n                    yield Buffer.concat([\n                        CURLY_BRACKET_OPEN,\n                        quotedKey,\n                        COLON,\n                        chunkified\n                    ]);\n                    yieldedOpen = true;\n                }\n                else {\n                    yield Buffer.concat([COMMA, quotedKey, COLON, chunkified]);\n                }\n            }\n            else {\n                yield chunkified;\n            }\n        }\n    }\n    // if we yielded the\n    if (yieldedOpen) {\n        yield CURLY_BRACKET_CLOSE;\n        return;\n    }\n    else {\n        yield CURLY_BRACKET_PAIR;\n        return;\n    }\n}\n/**\n * Converts a JavaScript value to a JavaScript Object Notation (JSON) Buffer\n * (utf-8 encoded).\n *\n * This is a hack. It:\n *  * Does not support circular references.\n *  * Does not support double quotes within Object keys; only alphanumerics are\n *    considered safe to use\n *  * Probably doesn't support non-ASCII characters\n *  * Is only tested on transaction traces\n *\n * Only useful if the `JSON.stringify`ed version would create a string larger\n * than what the JavaScript engine can handle.\n *\n * What is the maximum string size in Node/V8? It depends on the version! Some\n * versions are 256MB, some are ~1GB, and others are ~0.5GB.\n * See: https://stackoverflow.com/a/47781288/160173\n *\n * CAUTION: This method is approx 3 - 20 times slower than using:\n * `Buffer.from(JSON.stringify(value), \"utf-8\")`\n *\n * @param value - A JavaScript value, usually an object or array, to be converted.\n * @param nameOrIndex - JSON.stringify calls an object's toJSON method, and this\n * property is used by internal recursive calls to bufferify.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#tojson_behavior\n */\nfunction* bufferify(value, nameOrIndex) {\n    const type = typeof value;\n    if (type === \"number\" || type === \"boolean\") {\n        yield numberToBuffer(value);\n    }\n    else if (type === \"string\") {\n        yield stringToQuotedBuffer(value);\n    }\n    else if (Buffer.isBuffer(value)) {\n        yield bufferToQuotedBuffer(value);\n    }\n    else if (Array.isArray(value)) {\n        yield* arrayToBuffer(value);\n    }\n    else if (isObj(value)) {\n        yield* objectToBuffer(value, nameOrIndex);\n    }\n    else if (value === null) {\n        yield NULL;\n    }\n    else if (type === \"undefined\") {\n        // nothing is returned for undefined\n        yield _EMPTY;\n    }\n    else if (\"toJSON\" in value && typeof value.toJSON === \"function\") {\n        yield* bufferify(value.toJSON(), nameOrIndex);\n    }\n    else {\n        throw new Error(\"unsupported value in bufferify\");\n    }\n}\nexports.bufferify = bufferify;\n//# sourceMappingURL=bufferify.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.changeCommonParamValue = exports.removeEIP3860InitCodeSizeLimitCheck = void 0;\n/**\n * Effectively removes the 3860 InitCode Size Limit check by increasing the init\n * code size to Number.MAX_SAFE_INTEGER.\n *\n * This number works because an initcode can practically never be that large\n * (approx 9 PetaBytes!).\n *\n * @param common\n * @returns\n */\nfunction removeEIP3860InitCodeSizeLimitCheck(common) {\n    // this is a hack until EJS ships `allowUnlimitedInitCodeSize` option https://github.com/ethereumjs/ethereumjs-monorepo/issues/2588\n    return changeCommonParamValue(common, 3860, \"vm\", \"maxInitCodeSize\", \n    // we'd use Infinity if we could, but that's not a valid BigInt\n    BigInt(Number.MAX_SAFE_INTEGER));\n}\nexports.removeEIP3860InitCodeSizeLimitCheck = removeEIP3860InitCodeSizeLimitCheck;\nfunction changeCommonParamValue(common, eip, topic, name, value) {\n    const original = common.paramByEIP.bind(common);\n    common.paramByEIP = function (paramTopic, paramName, paramEip) {\n        if (paramTopic === topic && paramName === name && paramEip === eip) {\n            return value;\n        }\n        return original.call(common, paramTopic, paramName, paramEip);\n    };\n}\nexports.changeCommonParamValue = changeCommonParamValue;\n//# sourceMappingURL=common-helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseFilter = exports.parseFilterRange = exports.parseFilterDetails = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nfunction parseFilterDetails(filter) {\n    // `filter.address` may be a single address or an array\n    const addresses = filter.address\n        ? (Array.isArray(filter.address) ? filter.address : [filter.address]).map(a => ethereum_address_1.Address.from(a.toLowerCase()).toBuffer())\n        : [];\n    const topics = filter.topics ? filter.topics : [];\n    return { addresses, topics };\n}\nexports.parseFilterDetails = parseFilterDetails;\nfunction parseFilterRange(filter, blockchain) {\n    const latestBlock = blockchain.blocks.latest.header.number;\n    const fromBlock = blockchain.blocks.getEffectiveNumber(filter.fromBlock || ethereum_utils_1.Tag.latest);\n    const latestBlockNumber = latestBlock.toNumber();\n    const toBlock = blockchain.blocks.getEffectiveNumber(filter.toBlock || ethereum_utils_1.Tag.latest);\n    let toBlockNumber;\n    // don't search after the \"latest\" block, unless it's \"pending\", of course.\n    if (toBlock > latestBlock) {\n        toBlockNumber = latestBlockNumber;\n    }\n    else {\n        toBlockNumber = toBlock.toNumber();\n    }\n    return {\n        fromBlock,\n        toBlock,\n        toBlockNumber\n    };\n}\nexports.parseFilterRange = parseFilterRange;\nfunction parseFilter(filter = { address: [], topics: [] }, blockchain) {\n    const { addresses, topics } = parseFilterDetails(filter);\n    const { fromBlock, toBlock, toBlockNumber } = parseFilterRange(filter, blockchain);\n    return {\n        addresses,\n        fromBlock,\n        toBlock,\n        toBlockNumber,\n        topics\n    };\n}\nexports.parseFilter = parseFilter;\n//# sourceMappingURL=filter-parsing.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst bn = (val = 0) => new bn_js_1.default(val);\nconst STIPEND = bn(2300);\nconst bigIntToBN = (val) => {\n    return new bn_js_1.default(val.toString());\n};\nconst MULTIPLE = 64 / 63;\nconst check = (set) => (opname) => set.has(opname);\nconst isCall = check(new Set([\"CALL\", \"DELEGATECALL\", \"STATICCALL\", \"CALLCODE\"]));\nconst isCallOrCallcode = check(new Set([\"CALL\", \"CALLCODE\"]));\nconst isCreate = check(new Set([\"CREATE\", \"CREATE2\"]));\nconst isTerminator = check(new Set([\"STOP\", \"RETURN\", \"REVERT\", \"INVALID\", \"SELFDESTRUCT\"]));\nconst stepTracker = () => {\n    const sysOps = [];\n    const allOps = [];\n    const preCompile = new Set();\n    let preCompileCheck = false;\n    let precompileCallDepth = 0;\n    return {\n        collect: (info) => {\n            if (preCompileCheck) {\n                if (info.depth === precompileCallDepth) {\n                    // If the current depth is unchanged.\n                    // we record its position.\n                    preCompile.add(allOps.length - 1);\n                }\n                // Reset the flag immediately here\n                preCompileCheck = false;\n            }\n            if (isCall(info.opcode.name)) {\n                info.stack = [...info.stack];\n                preCompileCheck = true;\n                precompileCallDepth = info.depth;\n                sysOps.push({\n                    index: allOps.length,\n                    depth: info.depth,\n                    name: info.opcode.name\n                });\n            }\n            else if (isCreate(info.opcode.name) || isTerminator(info.opcode.name)) {\n                sysOps.push({\n                    index: allOps.length,\n                    depth: info.depth,\n                    name: info.opcode.name\n                });\n            }\n            // This goes last so we can use the length for the index ^\n            allOps.push(info);\n        },\n        isPrecompile: (index) => preCompile.has(index),\n        done: () => !allOps.length ||\n            sysOps.length < 2 ||\n            !isTerminator(allOps[allOps.length - 1].opcode.name),\n        ops: allOps,\n        systemOps: sysOps\n    };\n};\nconst estimateGas = async (generateVM, runArgs, callback) => {\n    const vm = await generateVM();\n    exactimate(vm, runArgs, (err, result) => {\n        if (err)\n            return callback(err);\n        binSearch(generateVM, runArgs, result, (err, result) => {\n            if (err)\n                return callback(err);\n            callback(null, result);\n        });\n    });\n};\nconst binSearch = async (generateVM, runArgs, result, callback) => {\n    const MAX = bigIntToBN(runArgs.block.header.gasLimit);\n    const gasRefund = result.execResult.gasRefund;\n    const startingGas = gasRefund\n        ? bigIntToBN(result.gasEstimate + gasRefund)\n        : bigIntToBN(result.gasEstimate);\n    const range = { lo: startingGas, hi: startingGas };\n    const isEnoughGas = async (gas) => {\n        const vm = await generateVM(); // Generate fresh VM\n        runArgs.tx.gasLimit = utils_1.Quantity.toBigInt(gas.toArrayLike(Buffer));\n        await vm.stateManager.checkpoint();\n        const result = await vm\n            .runTx(runArgs)\n            .catch(vmerr => ({ vmerr }));\n        await vm.stateManager.revert();\n        return !(\"vmerr\" in result) && !result.execResult.exceptionError;\n    };\n    if (!(await isEnoughGas(range.hi))) {\n        do {\n            range.hi = range.hi.muln(MULTIPLE);\n        } while (!(await isEnoughGas(range.hi)));\n        while (range.lo.addn(1).lt(range.hi)) {\n            const mid = range.lo.add(range.hi).divn(2);\n            if (await isEnoughGas(mid)) {\n                range.hi = mid;\n            }\n            else {\n                range.lo = mid;\n            }\n        }\n        if (range.hi.gte(MAX)) {\n            if (!(await isEnoughGas(range.hi))) {\n                return callback(new Error(\"gas required exceeds allowance or always failing transaction\"));\n            }\n        }\n    }\n    result.gasEstimate = utils_1.Quantity.toBigInt(range.hi.toArrayLike(Buffer));\n    callback(null, result);\n};\nconst exactimate = async (vm, runArgs, callback) => {\n    const steps = stepTracker();\n    vm.evm.events.on(\"step\", steps.collect);\n    const Context = (index, fee) => {\n        const base = index === 0;\n        let start = index;\n        let stop = 0;\n        const cost = bn();\n        let sixtyFloorths = bn();\n        const op = steps.ops[index];\n        const next = steps.ops[index + 1];\n        const intermediateCost = bigIntToBN(op.gasLeft - next.gasLeft);\n        const callingFee = fee || bn();\n        let compositeContext = false;\n        function addGas(val) {\n            // Add to our current context, but accounted for in sixtyfloorths\n            if (sixtyFloorths.gtn(0)) {\n                if (val.gte(sixtyFloorths)) {\n                    sixtyFloorths = bn();\n                }\n                else {\n                    sixtyFloorths.isub(val);\n                }\n            }\n            cost.iadd(val);\n        }\n        return {\n            start: () => start,\n            stop: () => stop,\n            setStart: (val) => {\n                start = val;\n                compositeContext = true;\n            },\n            setStop: (val) => {\n                stop = val;\n            },\n            getCost: () => ({ cost, sixtyFloorths }),\n            transfer: ctx => {\n                const values = ctx.getCost();\n                addGas(values.cost);\n                sixtyFloorths.iadd(values.sixtyFloorths);\n            },\n            addSixtyFloorth: (sixtyFloorth) => {\n                sixtyFloorths.iadd(sixtyFloorth);\n            },\n            addRange: (fee = bn()) => {\n                const range = steps.ops[base || compositeContext ? start : start + 1].gasLeft -\n                    steps.ops[stop].gasLeft;\n                // only occurs on stack increasing ops\n                addGas(bigIntToBN(range).add(fee));\n            },\n            finalizeRange: () => {\n                let range;\n                // if we have a composite context and we are NOT at the final terminator\n                if (compositeContext && stop !== steps.ops.length - 1) {\n                    range = bigIntToBN(steps.ops[start].gasLeft - steps.ops[stop - 1].gasLeft);\n                    addGas(range);\n                    const tail = bigIntToBN(steps.ops[stop - 1].gasLeft - steps.ops[stop].gasLeft);\n                    range = tail.add(intermediateCost);\n                }\n                else {\n                    range = bigIntToBN(steps.ops[start].gasLeft - steps.ops[stop].gasLeft);\n                }\n                range.isub(callingFee);\n                addGas(range);\n                if (isCallOrCallcode(op.opcode.name) &&\n                    !(op.stack[op.stack.length - 3] === 0n)) {\n                    cost.iadd(sixtyFloorths);\n                    const innerCost = bigIntToBN(next.gasLeft - steps.ops[stop - 1].gasLeft);\n                    if (innerCost.gt(STIPEND)) {\n                        sixtyFloorths = cost.divn(63);\n                    }\n                    else if (innerCost.lte(STIPEND)) {\n                        sixtyFloorths = STIPEND.sub(innerCost);\n                    }\n                }\n                else if (stop !== steps.ops.length - 1) {\n                    cost.iadd(sixtyFloorths);\n                    sixtyFloorths = cost.divn(63);\n                }\n            }\n        };\n    };\n    const getTotal = () => {\n        const sysops = steps.systemOps;\n        const ops = steps.ops;\n        const opIndex = cursor => sysops[cursor].index;\n        const stack = [];\n        let cursor = 0;\n        let context = Context(0);\n        while (cursor < sysops.length) {\n            const currentIndex = opIndex(cursor);\n            const current = ops[currentIndex];\n            const name = current.opcode.name;\n            if (isCall(name) || isCreate(name)) {\n                if (steps.isPrecompile(currentIndex)) {\n                    context.setStop(currentIndex + 1);\n                    context.addRange();\n                    context.setStart(currentIndex + 1);\n                    context.addSixtyFloorth(STIPEND);\n                }\n                else {\n                    context.setStop(currentIndex);\n                    const feeBn = bn(current.opcode.fee);\n                    context.addRange(feeBn);\n                    stack.push(context);\n                    context = Context(currentIndex, feeBn); // setup next context\n                }\n            }\n            else if (isTerminator(name)) {\n                // only on the last operation\n                context.setStop(currentIndex + 1 < steps.ops.length ? currentIndex + 1 : currentIndex);\n                context.finalizeRange();\n                const ctx = stack.pop();\n                if (ctx) {\n                    ctx.transfer(context);\n                    context = ctx;\n                    context.setStart(currentIndex + 1);\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                throw new Error(\"INVALID OPCODE\");\n            }\n            cursor++;\n        }\n        const gas = context.getCost();\n        return gas.cost.add(gas.sixtyFloorths);\n    };\n    await vm.stateManager.checkpoint();\n    const result = await vm\n        .runTx(runArgs)\n        .catch(vmerr => ({ vmerr }));\n    await vm.stateManager.revert();\n    if (\"vmerr\" in result) {\n        const vmerr = result.vmerr;\n        return callback(vmerr);\n    }\n    else if (result.execResult.exceptionError) {\n        const error = new ethereum_utils_1.RuntimeError(\n        // erroneous gas estimations don't have meaningful hashes\n        utils_1.Quantity.Empty, result, ethereum_utils_1.RETURN_TYPES.RETURN_VALUE);\n        return callback(error, result);\n    }\n    else {\n        const ret = result;\n        if (steps.done()) {\n            const estimate = result.totalGasSpent;\n            ret.gasEstimate = estimate;\n        }\n        else {\n            const gasLeftStart = steps.ops[0].gasLeft;\n            const gasLeftEnd = steps.ops[steps.ops.length - 1].gasLeft;\n            const actualUsed = bigIntToBN(gasLeftStart - gasLeftEnd);\n            const sixtyFloorths = getTotal().sub(actualUsed);\n            ret.gasEstimate =\n                result.totalGasSpent +\n                    utils_1.Quantity.toBigInt(sixtyFloorths.toArrayLike(Buffer));\n        }\n        callback(null, ret);\n    }\n};\nexports.default = estimateGas;\n//# sourceMappingURL=gas-estimator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.warmPrecompiles = exports.activatePrecompiles = void 0;\nconst NUM_PRECOMPILES = 18;\n/**\n * An account with a balance of 1\n */\nconst SERIALIZED_PRECOMPILE = Uint8Array.from([\n    248, 68, 128, 1, 160, 86, 232, 31, 23, 27, 204, 85, 166, 255, 131, 69, 230,\n    146, 192, 248, 110, 91, 72, 224, 27, 153, 108, 173, 192, 1, 98, 47, 181, 227,\n    99, 180, 33, 160, 197, 210, 70, 1, 134, 247, 35, 60, 146, 126, 125, 178, 220,\n    199, 3, 192, 229, 0, 182, 83, 202, 130, 39, 59, 123, 250, 216, 4, 93, 133,\n    164, 112\n]);\nconst PRECOMPILED_ACCOUNT = {\n    serialize: () => SERIALIZED_PRECOMPILE\n};\nconst accountCache = [];\nconst makeAccount = (i) => {\n    if (accountCache[i])\n        return accountCache[i];\n    // 20 bytes, the first 19 are 0, the last byte is the address\n    const buf = Buffer.allocUnsafe(20).fill(0, 0, 19);\n    buf[19] = i;\n    return (accountCache[i] = { buf });\n};\n/**\n * Puts the precompile accounts into the state tree\n * @param eei -\n */\nconst activatePrecompiles = async (eei) => {\n    await eei.checkpoint();\n    for (let i = 1; i <= NUM_PRECOMPILES; i++) {\n        const account = makeAccount(i);\n        eei.putAccount(account, PRECOMPILED_ACCOUNT);\n    }\n    await eei.commit();\n};\nexports.activatePrecompiles = activatePrecompiles;\n/**\n * Puts the precompile accounts into the warmed addresses\n * @param eei -\n */\nconst warmPrecompiles = async (eei) => {\n    for (let i = 1; i <= NUM_PRECOMPILES; i++) {\n        const account = makeAccount(i);\n        eei.addWarmedAddress(account.buf);\n    }\n};\nexports.warmPrecompiles = warmPrecompiles;\n//# sourceMappingURL=precompiles.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applySimulationOverrides = exports.runCall = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst util_1 = require(\"@ethereumjs/util\");\n/**\n * Executes a message/transaction against the vm.\n * @param vm -\n * @param transaction -\n * @param gasLeft -\n * @returns\n */\nfunction runCall(vm, transaction, gasLeft) {\n    const caller = transaction.from;\n    const to = transaction.to ?? null;\n    const value = transaction.value == null ? 0n : transaction.value.toBigInt();\n    vm.evm.runCall({\n        origin: caller,\n        block: transaction.block,\n        gasPrice: transaction.gasPrice.toBigInt(),\n        caller,\n        gasLimit: gasLeft,\n        to,\n        value,\n        data: transaction.data && transaction.data.toBuffer()\n    });\n}\nexports.runCall = runCall;\nconst validateStorageOverride = (slot, value, fieldName) => {\n    // assume Quantity will handle other types, these are just special string cases\n    if (typeof slot === \"string\" && slot !== \"\" && slot.indexOf(\"0x\") === 0) {\n        // assume we're starting with 0x cause Quantity will verify if not\n        if (slot.length != 66) {\n            throw new Error(`${fieldName} override slot must be a 64 character hex string. Received ${slot.length - 2} character string.`);\n        }\n    }\n    if (value === null || value === undefined) {\n        throw new Error(`${fieldName} override data not valid. Received: ${value}`);\n    }\n    // assume Quantity will handle other types, these are just special string cases\n    if (typeof value === \"string\" && value !== \"\" && value.indexOf(\"0x\") === 0) {\n        if (value.length != 66) {\n            throw new Error(`${fieldName} override data must be a 64 character hex string. Received ${value.length - 2} character string.`);\n        }\n    }\n};\nasync function applySimulationOverrides(stateTrie, vm, overrides) {\n    const eei = vm.eei;\n    for (const address in overrides) {\n        if (!(0, utils_1.hasOwn)(overrides, address))\n            continue;\n        const { balance, nonce, code, state, stateDiff } = overrides[address];\n        const vmAddr = ethereum_address_1.Address.from(address);\n        // group together overrides that update the account\n        if (nonce != null || balance != null || code != null) {\n            const account = await eei.getAccount(vmAddr);\n            if (nonce != null) {\n                account.nonce = nonce === \"\" ? 0n : utils_1.Quantity.toBigInt(nonce);\n            }\n            if (balance != null) {\n                account.balance = balance === \"\" ? 0n : utils_1.Quantity.toBigInt(balance);\n            }\n            if (code != null) {\n                // geth treats empty strings as \"0x\" code for overrides\n                const codeBuffer = utils_1.Data.toBuffer(code === \"\" ? \"0x\" : code);\n                // The ethereumjs-vm StateManager does not allow to set empty code,\n                // therefore we will manually set the code hash when \"clearing\" the contract code\n                const codeHash = codeBuffer.length > 0 ? (0, utils_1.keccak)(codeBuffer) : util_1.KECCAK256_NULL;\n                account.codeHash = codeHash;\n                await stateTrie.database().put(codeHash, codeBuffer);\n            }\n            await eei.putAccount(vmAddr, account);\n        }\n        // group together overrides that update storage\n        if (state || stateDiff) {\n            if (state) {\n                // state and stateDiff fields are mutually exclusive\n                if (stateDiff) {\n                    throw new Error(\"both state and stateDiff overrides specified\");\n                }\n                // it's possible that the user fed an override with a valid address\n                // and slot, but not a value we can actually set in the storage. if\n                // so, we don't want to set the storage, and we also don't want to\n                // clear it out\n                let clearedState = false;\n                for (const slot in state) {\n                    if (!(0, utils_1.hasOwn)(state, slot))\n                        continue;\n                    const value = state[slot];\n                    validateStorageOverride(slot, value, \"State\");\n                    if (!clearedState) {\n                        // override.state clears all storage and sets just the specified slots\n                        await eei.clearContractStorage(vmAddr);\n                        clearedState = true;\n                    }\n                    const slotBuf = utils_1.Data.toBuffer(slot, 32);\n                    const valueBuf = utils_1.Data.toBuffer(value);\n                    await eei.putContractStorage(vmAddr, slotBuf, valueBuf);\n                }\n            }\n            else {\n                for (const slot in stateDiff) {\n                    // don't set storage for invalid values\n                    if (!(0, utils_1.hasOwn)(stateDiff, slot))\n                        continue;\n                    const value = stateDiff[slot];\n                    validateStorageOverride(slot, value, \"StateDiff\");\n                    const slotBuf = utils_1.Data.toBuffer(slot, 32);\n                    const valueBuf = utils_1.Data.toBuffer(value);\n                    await eei.putContractStorage(vmAddr, slotBuf, valueBuf);\n                }\n            }\n        }\n    }\n}\nexports.applySimulationOverrides = applySimulationOverrides;\n//# sourceMappingURL=run-call.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dumpTrieStorageDetails = exports.getStorage = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\n/**\n * Compares `a` with `b` and returns a boolean indicating whether `a` comes\n * before `b` in sort order. Comparison is based on the actual sequence of bytes\n * in each `Buffer`.\n *\n * * `true` is returned if `a` comes before `b`\n * * `false` is returned if `a` is equal to, or comes after `b`\n *\n * @param a A `Buffer` with which to compare `b`.\n * @param b A `Buffer` with which to compare `a`.\n */\nconst compare = (a, b) => a.compare(b) < 0;\n/**\n * Iterates over all keys in the trie, drops keys that sort before `startKey`,\n * sorts them, and then returns them in sorted order, along with their values.\n *\n * The `keys` and `values` fields may contain more than `maxKeys` records. The\n * `length` property must be used determine which keys are relevant.\n *\n * The value property is the raw value, it has not been RLP decoded.\n *\n * `nextKey` is set if there are more than `maxKeys` after `startKey`.\n *\n * @param trie\n * @param startKey\n * @param maxKeys\n * @returns\n */\nasync function getHashedKeysWithValues(trie, startKey, maxKeys) {\n    return await new Promise((resolve, reject) => {\n        const keys = [];\n        const values = [];\n        trie\n            .createReadStream()\n            .on(\"data\", function onData({ key, value }) {\n            // ignore anything that comes before our starting point\n            if (startKey.compare(key) > 0)\n                return;\n            // insert the key exactly where it needs to go in the array\n            const position = (0, utils_1.findInsertPosition)(keys, key, compare);\n            // ignore if the value couldn't possibly be relevant (array is full, and\n            // this element sorts after the last element we already have)\n            // note we _want_ to collect 1 more key than `maxKeys` so we can return\n            // `nextKey` if necessary\n            if (position > maxKeys)\n                return;\n            keys.splice(position, 0, key);\n            values.splice(position, 0, value);\n        })\n            .on(\"end\", function onEnd() {\n            const length = keys.length;\n            if (length > maxKeys) {\n                // we have too many keys, set the `length` to `maxKeys` and return a\n                // `nextKey`:\n                const nextKey = utils_1.Data.from(keys[maxKeys]);\n                resolve({\n                    keys,\n                    length: maxKeys,\n                    nextKey,\n                    values\n                });\n            }\n            else {\n                resolve({\n                    keys,\n                    length,\n                    nextKey: null,\n                    values\n                });\n            }\n        })\n            .on(\"error\", reject);\n    });\n}\n/**\n * Given an array of keccak256 hashed `keys` and RLP encoded `values` pairs,\n * look up the \"raw\" (unhashed) key in the given `database` for each pair,\n * returning a `Record` of `StorageRecord`s for each pair where the Record key\n * is the hashed key and the `Record`'s value is another `Record` where the key\n * is the \"raw\" key and the value is the RLP decoded `value`.\n *\n * @param hashedKeys - the hash keys\n * @param values - the RLP encode values\n * @param count - the number of pairs from hashedKeys/values to process\n * @param database - the database containing the `hashedKey -> rawKey` index.\n */\nasync function getStorage(hashedKeys, values, count, database) {\n    const storage = {};\n    const promises = [];\n    for (let i = 0; i < count; i++) {\n        const hashedKey = hashedKeys[i];\n        promises.push(\n        // get the \"raw\" key using the *hashed* key\n        database.get(hashedKey).then((rawKey) => {\n            storage[utils_1.Data.toString(hashedKey, 32)] = {\n                key: utils_1.Data.from(rawKey, 32),\n                value: utils_1.Data.from((0, rlp_1.decode)(values[i]), 32)\n            };\n        }));\n    }\n    await Promise.all(promises);\n    return storage;\n}\nexports.getStorage = getStorage;\n/**\n * Returns storage within the given `storageTrie` given a `startKey` and max\n * number of entries to return (`maxKeys`).\n *\n * `ethereumjs-vm` has a `dumpStorage(account)` method, but we need to honor\n * `startKey` and `maxKeys`, and we do that by not loading every key and\n * value into memory, which `dumpStorage` would do.\n *\n * @param startKey\n * @param maxKeys\n * @param storageTrie\n * @param database\n */\nasync function dumpTrieStorageDetails(startKey, maxKeys, storageTrie, database) {\n    const { keys, length, nextKey, values } = await getHashedKeysWithValues(storageTrie, startKey, maxKeys);\n    return {\n        storage: await getStorage(keys, values, length, database),\n        nextKey\n    };\n}\nexports.dumpTrieStorageDetails = dumpTrieStorageDetails;\n//# sourceMappingURL=storage-range-at.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GanacheTrie = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst trie_1 = require(\"@ethereumjs/trie\");\nconst keyHashingFunction = (msg) => {\n    return (0, utils_1.keccak)(Buffer.from(msg.buffer, msg.byteOffset, msg.length));\n};\nclass GanacheTrie extends trie_1.Trie {\n    constructor(db, root, blockchain) {\n        super({\n            db,\n            root,\n            useRootPersistence: true,\n            useKeyHashing: true,\n            useKeyHashingFunction: keyHashingFunction\n        });\n        this.blockchain = blockchain;\n        this.db = db;\n    }\n    setContext(stateRoot, address, blockNumber) {\n        this.root(stateRoot);\n    }\n    /**\n     * Returns a copy of the underlying trie with the interface of GanacheTrie.\n     * @param includeCheckpoints - If true and during a checkpoint, the copy will contain the checkpointing metadata and will use the same scratch as underlying db.\n     */\n    copy(includeCheckpoints = true) {\n        const secureTrie = new GanacheTrie(this.db.copy(), this.root(), this.blockchain);\n        if (includeCheckpoints && this.hasCheckpoints()) {\n            secureTrie._db.checkpoints = [...this._db.checkpoints];\n        }\n        return secureTrie;\n    }\n}\nexports.GanacheTrie = GanacheTrie;\n//# sourceMappingURL=trie.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Miner_currentlyExecutingPrice, _Miner_origins, _Miner_pending, _Miner_isBusy, _Miner_paused, _Miner_resumer, _Miner_currentBlockBaseFeePerGas, _Miner_resolver, _Miner_emitStepEvent, _Miner_executables, _Miner_options, _Miner_vm, _Miner_createBlock, _Miner_priced, _Miner_mine, _Miner_mineTxs, _Miner_runTx, _Miner_removeBestAndOrigin, _Miner_reset, _Miner_setPricedHeap, _Miner_updatePricedHeap;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Capacity = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst trie_1 = require(\"@ethereumjs/trie\");\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst replace_from_heap_1 = __importDefault(require(\"./replace-from-heap\"));\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst provider_events_1 = require(\"../provider-events\");\nconst console_log_1 = require(\"@ganache/console.log\");\n/**\n * How many transactions should be in the block.\n */\nvar Capacity;\n(function (Capacity) {\n    /**\n     * Keep mining transactions until there are no more transactions that can fit\n     * in the block, or there are no transactions left to mine.\n     */\n    Capacity[Capacity[\"FillBlock\"] = -1] = \"FillBlock\";\n    /**\n     * Mine an empty block, even if there are executable transactions available to\n     * mine.\n     */\n    Capacity[Capacity[\"Empty\"] = 0] = \"Empty\";\n    /**\n     * Mine a block with a single transaction, or empty if there are no executable\n     * transactions available to mine.\n     */\n    Capacity[Capacity[\"Single\"] = 1] = \"Single\";\n})(Capacity || (exports.Capacity = Capacity = {}));\nconst updateBloom = (blockBloom, bloom) => {\n    let i = 256;\n    while (--i)\n        blockBloom[i] |= bloom[i];\n};\nconst sortByPrice = (values, a, b) => values[a].effectiveGasPrice > values[b].effectiveGasPrice;\nconst refresher = (item, context) => item.updateEffectiveGasPrice(context);\nclass Miner extends emittery_1.default {\n    async pause() {\n        if (!__classPrivateFieldGet(this, _Miner_paused, \"f\")) {\n            __classPrivateFieldSet(this, _Miner_paused, true, \"f\");\n            __classPrivateFieldSet(this, _Miner_resumer, new Promise(resolve => {\n                __classPrivateFieldSet(this, _Miner_resolver, resolve, \"f\");\n            }), \"f\");\n        }\n        if (__classPrivateFieldGet(this, _Miner_isBusy, \"f\")) {\n            await this.once(\"idle\");\n        }\n    }\n    resume() {\n        if (!__classPrivateFieldGet(this, _Miner_paused, \"f\"))\n            return;\n        __classPrivateFieldSet(this, _Miner_paused, false, \"f\");\n        __classPrivateFieldGet(this, _Miner_resolver, \"f\").call(this);\n    }\n    /*\n     * @param executables - A live Map of pending transactions from the transaction\n     * pool. The miner will update this Map by removing the best transactions\n     * and putting them in new blocks.\n     */\n    constructor(options, executables, vm, createBlock) {\n        super();\n        _Miner_currentlyExecutingPrice.set(this, 0n);\n        _Miner_origins.set(this, new Set());\n        _Miner_pending.set(this, void 0);\n        _Miner_isBusy.set(this, false);\n        _Miner_paused.set(this, false);\n        _Miner_resumer.set(this, void 0);\n        _Miner_currentBlockBaseFeePerGas.set(this, void 0);\n        _Miner_resolver.set(this, void 0);\n        /**\n         * Because step events are expensive, CPU-wise, to create and emit we only do\n         * it conditionally.\n         */\n        _Miner_emitStepEvent.set(this, false);\n        _Miner_executables.set(this, void 0);\n        _Miner_options.set(this, void 0);\n        _Miner_vm.set(this, void 0);\n        _Miner_createBlock.set(this, void 0);\n        // create a Heap that sorts by gasPrice\n        _Miner_priced.set(this, new utils_1.Heap(sortByPrice, refresher));\n        _Miner_mine.set(this, async (block, maxTransactions = Capacity.FillBlock, onlyOneBlock = false) => {\n            const { block: lastBlock, transactions } = await __classPrivateFieldGet(this, _Miner_mineTxs, \"f\").call(this, block, maxTransactions, onlyOneBlock);\n            // if there are more txs to mine, start mining them without awaiting their\n            // result.\n            if (__classPrivateFieldGet(this, _Miner_pending, \"f\")) {\n                __classPrivateFieldGet(this, _Miner_setPricedHeap, \"f\").call(this);\n                __classPrivateFieldSet(this, _Miner_pending, false, \"f\");\n                if (!onlyOneBlock && __classPrivateFieldGet(this, _Miner_priced, \"f\").length > 0) {\n                    const nextBlock = __classPrivateFieldGet(this, _Miner_createBlock, \"f\").call(this, lastBlock);\n                    await __classPrivateFieldGet(this, _Miner_mine, \"f\").call(this, nextBlock, maxTransactions);\n                }\n            }\n            return transactions;\n        });\n        _Miner_mineTxs.set(this, async (runtimeBlock, maxTransactions, onlyOneBlock) => {\n            let block;\n            const vm = __classPrivateFieldGet(this, _Miner_vm, \"f\");\n            const { pending, inProgress } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const options = __classPrivateFieldGet(this, _Miner_options, \"f\");\n            let keepMining = true;\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            const storageKeys = new Map();\n            let blockTransactions;\n            do {\n                keepMining = false;\n                __classPrivateFieldSet(this, _Miner_isBusy, true, \"f\");\n                blockTransactions = [];\n                const transactionsTrie = new trie_1.Trie();\n                const receiptTrie = new trie_1.Trie();\n                // don't mine anything at all if maxTransactions is `0`\n                if (maxTransactions === Capacity.Empty) {\n                    await vm.stateManager.checkpoint();\n                    await vm.stateManager.commit();\n                    const finalizedBlockData = runtimeBlock.finalize(transactionsTrie.root(), receiptTrie.root(), utils_1.BUFFER_256_ZERO, vm.stateManager._trie.root(), 0n, // gas used\n                    options.extraData, [], storageKeys);\n                    this.emit(\"block\", finalizedBlockData);\n                    __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    return { block: finalizedBlockData.block, transactions: [] };\n                }\n                let numTransactions = 0;\n                let blockGasLeft = options.blockGasLimit.toBigInt();\n                let blockGasUsed = 0n;\n                const blockBloom = Buffer.allocUnsafe(256).fill(0);\n                const promises = [];\n                // Set a block-level checkpoint so our unsaved trie doesn't update the\n                // vm's \"live\" trie.\n                await vm.stateManager.checkpoint();\n                const TraceData = (0, ethereum_utils_1.TraceDataFactory)();\n                // We need to listen for any SSTORE opcodes so we can grab the raw, unhashed version\n                // of the storage key and save it to the db along with it's keccak hashed version of\n                // the storage key. Why you might ask? So we can reference the raw version in\n                // debug_storageRangeAt.\n                const stepListener = (event) => {\n                    if (event.opcode.name === \"SSTORE\") {\n                        const key = TraceData.from(utils_1.Quantity.toBuffer(event.stack[event.stack.length - 1])).toBuffer();\n                        const hashedKey = (0, utils_1.keccak)(key);\n                        storageKeys.set(hashedKey.toString(), { key, hashedKey });\n                    }\n                };\n                vm.evm.events.on(\"step\", stepListener);\n                // Run until we run out of items, or until the inner loop stops us.\n                // we don't call `shift()` here because we will may need to `replace`\n                // this `best` transaction with the next best transaction from the same\n                // origin later.\n                let best;\n                while ((best = priced.peek())) {\n                    const origin = best.from.toString();\n                    if (best.calculateIntrinsicGas() > blockGasLeft) {\n                        // if the current best transaction can't possibly fit in this block\n                        // go ahead and run the next best transaction, ignoring all other\n                        // pending transactions from this account for this block.\n                        //  * We don't replace this \"best\" transaction with another from the\n                        // same account.\n                        //  * We do \"unlock\" this transaction in the transaction pool's `pending`\n                        // queue so it can be replaced, if needed.\n                        best.locked = false;\n                        __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                        continue;\n                    }\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, best.effectiveGasPrice.toBigInt(), \"f\");\n                    // Set a transaction-level checkpoint so we can undo state changes in\n                    // the case where the transaction is rejected by the VM.\n                    await vm.stateManager.checkpoint();\n                    // Set the internal trie's block number (for forking)\n                    vm.stateManager._trie.blockNumber = utils_1.Quantity.from(runtimeBlock.header.number);\n                    const result = await __classPrivateFieldGet(this, _Miner_runTx, \"f\").call(this, best, runtimeBlock, origin, pending);\n                    if (result !== null) {\n                        const gasUsed = result.totalGasSpent;\n                        if (blockGasLeft >= gasUsed) {\n                            // if the transaction will fit in the block, commit it!\n                            await vm.stateManager.commit();\n                            blockTransactions[numTransactions] = best;\n                            blockGasLeft -= gasUsed;\n                            blockGasUsed += gasUsed;\n                            // calculate receipt and tx tries\n                            const txKey = (0, rlp_1.encode)(numTransactions === 0\n                                ? utils_1.BUFFER_EMPTY\n                                : (0, utils_1.uintToBuffer)(numTransactions));\n                            promises.push(transactionsTrie.put(txKey, best.serialized));\n                            const receipt = best.fillFromResult(result, blockGasUsed);\n                            promises.push(receiptTrie.put(txKey, receipt));\n                            // update the block's bloom\n                            updateBloom(blockBloom, result.bloom.bitvector);\n                            numTransactions++;\n                            const pendingOrigin = pending.get(origin);\n                            inProgress.add(best);\n                            best.once(\"finalized\").then(() => {\n                                // it is in the database (or thrown out) so delete it from the\n                                // `inProgress` Set\n                                inProgress.delete(best);\n                            });\n                            // since this transaction was successful, remove it from the \"pending\"\n                            // transaction pool.\n                            const hasMoreFromOrigin = pendingOrigin.removeBest();\n                            if (hasMoreFromOrigin) {\n                                // remove the newest (`best`) tx from this account's pending queue\n                                // as we know we can fit another transaction in the block. Stick\n                                // this tx into our `priced` heap.\n                                keepMining = (0, replace_from_heap_1.default)(priced, pendingOrigin);\n                            }\n                            else {\n                                // since we don't have any more txs from this account, just get the\n                                // next best transaction sorted in our `priced` heap.\n                                keepMining = __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                            }\n                            // if we:\n                            //  * don't have enough gas left for even the smallest of transactions\n                            //  * Or if we've mined enough transactions\n                            // we're done with this block!\n                            // notice: when `maxTransactions` is `-1` (AKA infinite), `numTransactions === maxTransactions`\n                            // will always return false, so this comparison works out fine.\n                            if (blockGasLeft <= ethereum_transaction_1.Params.TRANSACTION_GAS ||\n                                numTransactions === maxTransactions) {\n                                break;\n                            }\n                        }\n                        else {\n                            // didn't fit in the current block\n                            await vm.stateManager.revert();\n                            // unlock the transaction so the transaction pool can reconsider this\n                            // transaction\n                            best.locked = false;\n                            // didn't fit. remove it from the priced transactions without replacing\n                            // it with another from the account. This transaction will have to be\n                            // run again in another block.\n                            keepMining = priced.removeBest();\n                        }\n                    }\n                    else {\n                        // no result means the transaction is an \"always failing tx\", so we\n                        // revert its changes here.\n                        // Note: we don't clean up (`removeBest`, etc) because `runTx`'s\n                        // error handler does the clean up itself.\n                        await vm.stateManager.revert();\n                    }\n                }\n                await Promise.all(promises);\n                await vm.stateManager.commit();\n                vm.evm.events.removeListener(\"step\", stepListener);\n                const finalizedBlockData = runtimeBlock.finalize(transactionsTrie.root(), receiptTrie.root(), blockBloom, vm.stateManager._trie.root(), blockGasUsed, options.extraData, blockTransactions, storageKeys);\n                block = finalizedBlockData.block;\n                this.emit(\"block\", finalizedBlockData);\n                if (onlyOneBlock) {\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, 0n, \"f\");\n                    __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    break;\n                }\n                else {\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, 0n, \"f\");\n                    __classPrivateFieldGet(this, _Miner_updatePricedHeap, \"f\").call(this);\n                    if (priced.length !== 0) {\n                        runtimeBlock = __classPrivateFieldGet(this, _Miner_createBlock, \"f\").call(this, block);\n                        // if baseFeePerGas is undefined, we are pre london hard fork.\n                        // no need to refresh the order of the heap because all Txs only have gasPrice.\n                        if (__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\") !== undefined) {\n                            priced.refresh(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                        }\n                    }\n                    else {\n                        // reset the miner\n                        __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    }\n                }\n            } while (keepMining);\n            return { block, transactions: blockTransactions };\n        });\n        _Miner_runTx.set(this, async (tx, block, origin, pending) => {\n            const context = {};\n            const vm = __classPrivateFieldGet(this, _Miner_vm, \"f\");\n            this.emit(\"ganache:vm:tx:before\", { context });\n            // we always listen to the step event even if `#emitStepEvent` is false in\n            // case the user starts listening in the middle of the transaction.\n            const stepListener = (event) => {\n                const logs = (0, console_log_1.maybeGetLogs)(event);\n                if (logs)\n                    this.emit(\"ganache:vm:tx:console.log\", { context, logs });\n                if (!__classPrivateFieldGet(this, _Miner_emitStepEvent, \"f\"))\n                    return;\n                this.emit(\"ganache:vm:tx:step\", (0, provider_events_1.makeStepEvent)(context, event));\n            };\n            vm.evm.events.on(\"step\", stepListener);\n            try {\n                return await vm.runTx({\n                    skipHardForkValidation: true,\n                    tx: tx.toVmTransaction(),\n                    block: block\n                });\n            }\n            catch (err) {\n                const errorMessage = err.message;\n                // We do NOT want to re-run this transaction.\n                // Update the `priced` heap with the next best transaction from this\n                // account\n                const pendingOrigin = pending.get(origin);\n                if (pendingOrigin.removeBest()) {\n                    (0, replace_from_heap_1.default)(__classPrivateFieldGet(this, _Miner_priced, \"f\"), pendingOrigin);\n                }\n                else {\n                    // if there are no more transactions from this origin remove this tx\n                    // from the priced heap and clear out it's origin so it can accept new\n                    // transactions from this origin.\n                    __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                }\n                const e = {\n                    execResult: {\n                        runState: { programCounter: 0 },\n                        exceptionError: { error: errorMessage },\n                        returnValue: utils_1.BUFFER_EMPTY\n                    }\n                };\n                const error = new ethereum_utils_1.RuntimeError(tx.hash, e, ethereum_utils_1.RETURN_TYPES.TRANSACTION_HASH);\n                tx.finalize(\"rejected\", error);\n                return null;\n            }\n            finally {\n                vm.evm.events.removeListener(\"step\", stepListener);\n                this.emit(\"ganache:vm:tx:after\", { context });\n            }\n        });\n        _Miner_removeBestAndOrigin.set(this, (origin) => {\n            __classPrivateFieldGet(this, _Miner_origins, \"f\").delete(origin);\n            return __classPrivateFieldGet(this, _Miner_priced, \"f\").removeBest();\n        });\n        _Miner_reset.set(this, () => {\n            __classPrivateFieldGet(this, _Miner_origins, \"f\").clear();\n            // HACK: see: https://github.com/trufflesuite/ganache/issues/3093\n            //\n            //When the priced heap is reset, meaning we're clearing out the heap\n            // and origins list to be set again when the miner is called, loop over\n            // the priced heap transactions and \"unlock\" them (set tx.locked = false)\n            //\n            // The real fix would include fixing the use of locked, as it's\n            // currently overloaded to mean \"is in priced heap\" and also \"is being\n            // mined\".\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            const length = priced.length;\n            const pricedArray = priced.array;\n            for (let i = 0; i < length; i++) {\n                const bestFromOrigin = pricedArray[i];\n                bestFromOrigin.locked = false;\n            }\n            priced.clear();\n            __classPrivateFieldSet(this, _Miner_isBusy, false, \"f\");\n        });\n        /**\n         * Adds one transaction from each origin into the \"priced\" heap, which\n         * sorts each tx by gasPrice (high to low)\n         */\n        _Miner_setPricedHeap.set(this, () => {\n            const { pending } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const origins = __classPrivateFieldGet(this, _Miner_origins, \"f\");\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            for (let mapping of pending) {\n                const heap = mapping[1];\n                const next = heap.peek();\n                if (next && !next.locked) {\n                    const origin = next.from.toString();\n                    origins.add(origin);\n                    next.updateEffectiveGasPrice(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                    priced.push(next);\n                    next.locked = true;\n                }\n            }\n        });\n        /**\n         * Updates the \"priced\" heap with transactions from origins it doesn't yet\n         * contain.\n         */\n        _Miner_updatePricedHeap.set(this, () => {\n            const { pending } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const origins = __classPrivateFieldGet(this, _Miner_origins, \"f\");\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            // Note: the `pending` Map passed here is \"live\", meaning it is constantly\n            // being updated by the `transactionPool`. This allows us to begin\n            // processing a block with the _current_ pending transactions, and while\n            // that is processing, to receive new transactions, updating our `priced`\n            // heap with these new pending transactions.\n            for (let mapping of pending) {\n                const heap = mapping[1];\n                const next = heap.peek();\n                if (next && !next.locked) {\n                    const price = next.effectiveGasPrice.toBigInt();\n                    if (__classPrivateFieldGet(this, _Miner_currentlyExecutingPrice, \"f\") > price) {\n                        // don't insert a transaction into the miner's `priced` heap\n                        // if it will be better than its last\n                        continue;\n                    }\n                    const origin = next.from.toString();\n                    if (origins.has(origin)) {\n                        // don't insert a transaction into the miner's `priced` heap if it\n                        // has already queued up transactions for that origin\n                        continue;\n                    }\n                    origins.add(origin);\n                    next.updateEffectiveGasPrice(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                    priced.push(next);\n                    next.locked = true;\n                }\n            }\n        });\n        __classPrivateFieldSet(this, _Miner_vm, vm, \"f\");\n        __classPrivateFieldSet(this, _Miner_options, options, \"f\");\n        __classPrivateFieldSet(this, _Miner_executables, executables, \"f\");\n        __classPrivateFieldSet(this, _Miner_createBlock, (previousBlock) => {\n            const newBlock = createBlock(previousBlock);\n            __classPrivateFieldSet(this, _Miner_currentBlockBaseFeePerGas, newBlock.header.baseFeePerGas, \"f\");\n            return newBlock;\n        }, \"f\");\n        // initialize the heap with an empty array\n        __classPrivateFieldGet(this, _Miner_priced, \"f\").init([]);\n    }\n    /**\n     * @param maxTransactions: - maximum number of transactions per block. If `-1`,\n     * unlimited.\n     * @param onlyOneBlock: - set to `true` if only 1 block should be mined.\n     *\n     * @returns the transactions mined in the _first_ block\n     */\n    async mine(block, maxTransactions = Capacity.FillBlock, onlyOneBlock = false) {\n        if (__classPrivateFieldGet(this, _Miner_paused, \"f\")) {\n            await __classPrivateFieldGet(this, _Miner_resumer, \"f\");\n        }\n        // only allow mining a single block at a time (per miner)\n        if (__classPrivateFieldGet(this, _Miner_isBusy, \"f\")) {\n            // if we are currently mining a block, set the `pending` property\n            // so the miner knows it can immediately start mining another block once\n            // it is done with its current work.\n            __classPrivateFieldSet(this, _Miner_pending, true, \"f\");\n            __classPrivateFieldGet(this, _Miner_updatePricedHeap, \"f\").call(this);\n            return;\n        }\n        else {\n            __classPrivateFieldSet(this, _Miner_currentBlockBaseFeePerGas, block.header.baseFeePerGas, \"f\");\n            __classPrivateFieldGet(this, _Miner_setPricedHeap, \"f\").call(this);\n            const result = await __classPrivateFieldGet(this, _Miner_mine, \"f\").call(this, block, maxTransactions, onlyOneBlock);\n            this.emit(\"idle\");\n            return result;\n        }\n    }\n    toggleStepEvent(enable) {\n        __classPrivateFieldSet(this, _Miner_emitStepEvent, enable, \"f\");\n    }\n}\n_Miner_currentlyExecutingPrice = new WeakMap(), _Miner_origins = new WeakMap(), _Miner_pending = new WeakMap(), _Miner_isBusy = new WeakMap(), _Miner_paused = new WeakMap(), _Miner_resumer = new WeakMap(), _Miner_currentBlockBaseFeePerGas = new WeakMap(), _Miner_resolver = new WeakMap(), _Miner_emitStepEvent = new WeakMap(), _Miner_executables = new WeakMap(), _Miner_options = new WeakMap(), _Miner_vm = new WeakMap(), _Miner_createBlock = new WeakMap(), _Miner_priced = new WeakMap(), _Miner_mine = new WeakMap(), _Miner_mineTxs = new WeakMap(), _Miner_runTx = new WeakMap(), _Miner_removeBestAndOrigin = new WeakMap(), _Miner_reset = new WeakMap(), _Miner_setPricedHeap = new WeakMap(), _Miner_updatePricedHeap = new WeakMap();\nexports.default = Miner;\n//# sourceMappingURL=miner.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction replaceFromHeap(priced, source) {\n    // get the next best for this account, removing from the source Heap:\n    const next = source.peek();\n    if (next) {\n        // remove the current best priced transaction from this account and replace\n        // it with the account's next lowest nonce transaction:\n        priced.replaceBest(next);\n        next.locked = true;\n        return true;\n    }\n    else {\n        // since we don't have a next, just remove this item from priced\n        return priced.removeBest();\n    }\n}\nexports.default = replaceFromHeap;\n//# sourceMappingURL=replace-from-heap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeStepEvent = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nfunction normalizeEvent(event) {\n    const { account, memory: originalMemory, opcode } = event;\n    const memoryLength = originalMemory.length;\n    // We need to copy some buffers so the user can't mutate them on us:\n    // Instead of making a bunch of individual buffers, we just make 1 and then\n    // fill it in as needed.\n    const sharedBuffer = Buffer.allocUnsafe(104 + memoryLength);\n    account.storageRoot.copy(sharedBuffer, 0, 0, 32); // always 32 bytes\n    account.codeHash.copy(sharedBuffer, 32, 0, 32); // always 32 bytes\n    event.address.buf.copy(sharedBuffer, 64, 0, 20); // always 20 bytes\n    event.codeAddress.buf.copy(sharedBuffer, 84, 0, 20); // always 20 bytes\n    const stateRoot = sharedBuffer.slice(0, 32);\n    const codeHash = sharedBuffer.slice(32, 64);\n    const address = sharedBuffer.slice(64, 84);\n    const codeAddress = sharedBuffer.slice(84, 104);\n    let memory;\n    if (memoryLength !== 0) {\n        originalMemory.copy(sharedBuffer, 104, 0, memoryLength);\n        memory = sharedBuffer.slice(104, 104 + memoryLength);\n    }\n    else {\n        memory = utils_1.BUFFER_ZERO;\n    }\n    return {\n        account: {\n            nonce: account.nonce,\n            balance: account.balance,\n            stateRoot,\n            codeHash\n        },\n        address,\n        codeAddress,\n        depth: BigInt(event.depth),\n        gasLeft: event.gasLeft,\n        gasRefund: event.gasRefund,\n        memory,\n        memoryWordCount: event.memoryWordCount,\n        opcode: {\n            name: opcode.name,\n            fee: opcode.fee\n        },\n        pc: BigInt(event.pc),\n        returnStack: event.returnStack.map(r => r),\n        stack: event.stack.map(s => s)\n    };\n}\nfunction makeStepEvent(context, event) {\n    return {\n        context,\n        data: normalizeEvent(event)\n    };\n}\nexports.makeStepEvent = makeStepEvent;\n//# sourceMappingURL=provider-events.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _EthereumProvider_options, _EthereumProvider_api, _EthereumProvider_wallet, _EthereumProvider_executor, _EthereumProvider_blockchain, _EthereumProvider_send, _EthereumProvider_logRequest, _EthereumProvider_legacySendPayloads, _EthereumProvider_legacySendPayload;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumProvider = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst api_1 = __importDefault(require(\"./api\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_options_1 = require(\"@ganache/ethereum-options\");\nconst lodash_clonedeep_1 = __importDefault(require(\"lodash.clonedeep\"));\nconst wallet_1 = __importDefault(require(\"./wallet\"));\nconst blockchain_1 = __importDefault(require(\"./blockchain\"));\nconst fork_1 = require(\"./forking/fork\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nfunction parseCoinbase(coinbase, initialAccounts) {\n    switch (typeof coinbase) {\n        case \"object\":\n            return coinbase;\n        case \"number\":\n            const account = initialAccounts[coinbase];\n            if (account) {\n                return account.address;\n            }\n            else {\n                throw new Error(`invalid coinbase address index: ${coinbase}`);\n            }\n        case \"string\":\n            return ethereum_address_1.Address.from(coinbase);\n        default: {\n            throw new Error(`coinbase address must be string or number, received: ${coinbase}`);\n        }\n    }\n}\n/**\n * Detects when a ganache:vm:tx:step listener is active and signals the onChange\n * function when the status changes\n * @param provider -\n * @param onChange -\n */\nfunction hookEventSystem(provider, onChange) {\n    let listenerCount = 0;\n    provider.on(emittery_1.default.listenerAdded, ({ eventName }) => {\n        if (eventName === \"ganache:vm:tx:step\" || eventName === undefined) {\n            if (listenerCount === 0) {\n                onChange(true);\n            }\n            listenerCount++;\n        }\n    });\n    provider.on(emittery_1.default.listenerRemoved, ({ eventName }) => {\n        if (eventName === \"ganache:vm:tx:step\" || eventName === undefined) {\n            listenerCount--;\n            if (listenerCount === 0) {\n                onChange(false);\n            }\n        }\n    });\n}\nclass EthereumProvider extends emittery_1.default {\n    constructor(options = {}, executor) {\n        super();\n        _EthereumProvider_options.set(this, void 0);\n        _EthereumProvider_api.set(this, void 0);\n        _EthereumProvider_wallet.set(this, void 0);\n        _EthereumProvider_executor.set(this, void 0);\n        _EthereumProvider_blockchain.set(this, void 0);\n        /**\n         * Remove an event subscription\n         */\n        this.removeListener = this.off;\n        _EthereumProvider_send.set(this, (arg1, arg2) => {\n            let method;\n            let params;\n            let response;\n            if (typeof arg1 === \"string\") {\n                // this signature is (not) non-standard and is only a ganache thing!!!\n                // we should probably remove it, but I really like it so I haven't yet.\n                method = arg1;\n                params = arg2;\n                response = this.request({ method, params });\n            }\n            else if (typeof arg2 === \"function\") {\n                // handle backward compatibility with callback-style ganache-core\n                if (Array.isArray(arg1)) {\n                    const callback = arg2;\n                    __classPrivateFieldGet(this, _EthereumProvider_legacySendPayloads, \"f\").call(this, arg1).then(({ error, result }) => {\n                        callback(error, result);\n                    });\n                }\n                else {\n                    const callback = arg2;\n                    __classPrivateFieldGet(this, _EthereumProvider_legacySendPayload, \"f\").call(this, arg1).then(({ error, result }) => {\n                        callback(error, result);\n                    });\n                }\n            }\n            else {\n                throw new Error(\"No callback provided to provider's send function. As of web3 1.0, provider.send \" +\n                    \"is no longer synchronous and must be passed a callback as its final argument.\");\n            }\n            return response;\n        });\n        _EthereumProvider_logRequest.set(this, (method, params) => {\n            const options = __classPrivateFieldGet(this, _EthereumProvider_options, \"f\");\n            if (options.logging.verbose) {\n                options.logging.logger.log(`   >  ${method}: ${params == null\n                    ? params\n                    : JSON.stringify(params, null, 2).split(\"\\n\").join(\"\\n   > \")}`);\n            }\n            else {\n                options.logging.logger.log(method);\n            }\n        });\n        /**\n         * Disconnect the provider instance. This will cause the underlying blockchain to be stopped, and any pending\n         * tasks to be rejected. Emits a `disconnect` event once successfully disconnected.\n         * @returns Fullfills with `undefined` once the provider has been disconnected.\n         */\n        this.disconnect = async () => {\n            // executor.stop() will stop accepting new tasks, but will not wait for inflight tasks. These may reject with\n            // (unhelpful) internal errors. See https://github.com/trufflesuite/ganache/issues/3499\n            __classPrivateFieldGet(this, _EthereumProvider_executor, \"f\").stop();\n            await __classPrivateFieldGet(this, _EthereumProvider_blockchain, \"f\").stop();\n            await __classPrivateFieldGet(this, _EthereumProvider_options, \"f\").logging.logger.close();\n            __classPrivateFieldGet(this, _EthereumProvider_executor, \"f\").end();\n            this.emit(\"disconnect\");\n        };\n        //#region legacy\n        _EthereumProvider_legacySendPayloads.set(this, (payloads) => {\n            return Promise.all(payloads.map(__classPrivateFieldGet(this, _EthereumProvider_legacySendPayload, \"f\"))).then(results => {\n                let mainError = null;\n                const responses = [];\n                results.forEach(({ error, result }, i) => {\n                    responses.push(result);\n                    if (error) {\n                        if (mainError == null) {\n                            mainError = new Error(\"Batch error:\");\n                        }\n                        mainError.errors[i] = error;\n                    }\n                });\n                return { error: mainError, result: responses };\n            });\n        });\n        _EthereumProvider_legacySendPayload.set(this, async (payload) => {\n            const method = payload.method;\n            const params = payload.params;\n            try {\n                const result = await this.request({ method, params });\n                return {\n                    error: null,\n                    result: (0, utils_1.makeResponse)(payload.id, JSON.parse(JSON.stringify(result)))\n                };\n            }\n            catch (error) {\n                let result;\n                // In order to provide `vmErrorsOnRPCResponse`, the `error` might have\n                // a `result` property that we need to move to the result field. Yes,\n                // it's super weird behavior!\n                if ((0, utils_1.hasOwn)(error, \"result\")) {\n                    result = error.result;\n                    delete error.result;\n                }\n                return { error, result: (0, utils_1.makeError)(payload.id, error, result) };\n            }\n        });\n        __classPrivateFieldSet(this, _EthereumProvider_executor, executor, \"f\");\n        const providerOptions = (__classPrivateFieldSet(this, _EthereumProvider_options, ethereum_options_1.EthereumOptionsConfig.normalize(options), \"f\"));\n        const wallet = (__classPrivateFieldSet(this, _EthereumProvider_wallet, new wallet_1.default(providerOptions.wallet, providerOptions.logging), \"f\"));\n        const accounts = wallet.initialAccounts;\n        const fork = providerOptions.fork.url ||\n            providerOptions.fork.provider ||\n            providerOptions.fork.network;\n        const fallback = fork ? new fork_1.Fork(providerOptions, accounts) : null;\n        const coinbase = parseCoinbase(providerOptions.miner.coinbase, accounts);\n        const blockchain = new blockchain_1.default(providerOptions, coinbase, fallback);\n        __classPrivateFieldSet(this, _EthereumProvider_blockchain, blockchain, \"f\");\n        blockchain.on(\"ganache:vm:tx:before\", event => {\n            this.emit(\"ganache:vm:tx:before\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:step\", event => {\n            this.emit(\"ganache:vm:tx:step\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:after\", event => {\n            this.emit(\"ganache:vm:tx:after\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:console.log\", event => {\n            this.emit(\"ganache:vm:tx:console.log\", event);\n        });\n        hookEventSystem(this, (enable) => {\n            blockchain.toggleStepEvent(enable);\n        });\n        __classPrivateFieldSet(this, _EthereumProvider_api, new api_1.default(providerOptions, wallet, blockchain), \"f\");\n    }\n    async initialize() {\n        await __classPrivateFieldGet(this, _EthereumProvider_blockchain, \"f\").initialize(__classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\").initialAccounts);\n        this.emit(\"connect\");\n    }\n    /**\n     * Returns the options, including defaults and generated, used to start Ganache.\n     */\n    getOptions() {\n        return (0, lodash_clonedeep_1.default)(__classPrivateFieldGet(this, _EthereumProvider_options, \"f\"));\n    }\n    /**\n     * Returns the unlocked accounts\n     */\n    getInitialAccounts() {\n        const accounts = {};\n        const wallet = __classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\");\n        const unlockedAccounts = __classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\").unlockedAccounts;\n        wallet.initialAccounts.forEach(account => {\n            const address = account.address.toString();\n            accounts[address] = {\n                secretKey: account.privateKey.toString(),\n                balance: account.balance.toBigInt(),\n                unlocked: unlockedAccounts.has(address)\n            };\n        });\n        return accounts;\n    }\n    send(arg1, arg2) {\n        return __classPrivateFieldGet(this, _EthereumProvider_send, \"f\").call(this, arg1, arg2);\n    }\n    sendAsync(arg1, arg2) {\n        __classPrivateFieldGet(this, _EthereumProvider_send, \"f\").call(this, arg1, arg2);\n    }\n    /**\n     * EIP-1193 style request method\n     * @param args -\n     * @returns A Promise that resolves with the method's result or rejects with a CodedError\n     * @EIP [1193](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md)\n     */\n    async request(args) {\n        const rawResult = await this._requestRaw(args);\n        const value = await rawResult.value;\n        return JSON.parse(JSON.stringify(value));\n    }\n    /**\n     * INTERNAL. Used when the caller wants to access the original `PromiEvent`,\n     * which would otherwise be flattened into a regular Promise through the\n     * Promise chain.\n     * @param request - the request\n     */\n    async _requestRaw({ method, params }) {\n        __classPrivateFieldGet(this, _EthereumProvider_logRequest, \"f\").call(this, method, params);\n        const result = await __classPrivateFieldGet(this, _EthereumProvider_executor, \"f\").execute(__classPrivateFieldGet(this, _EthereumProvider_api, \"f\"), method, params);\n        const promise = result.value;\n        if (promise instanceof utils_1.PromiEvent) {\n            promise.on(\"message\", data => {\n                const normalizedData = JSON.parse(JSON.stringify(data));\n                // EIP-1193\n                this.emit(\"message\", normalizedData);\n                // legacy\n                this.emit(\"data\", {\n                    jsonrpc: \"2.0\",\n                    method: \"eth_subscription\",\n                    params: normalizedData.data\n                });\n            });\n        }\n        const value = promise.catch((error) => {\n            if (__classPrivateFieldGet(this, _EthereumProvider_options, \"f\").chain.vmErrorsOnRPCResponse) {\n                if ((0, utils_1.hasOwn)(error, \"result\")) {\n                    // stringify the result here\n                    // TODO: not sure why the stringification is even needed.\n                    error.result = JSON.parse(JSON.stringify(error.result));\n                }\n            }\n            // then rethrow\n            throw error;\n        });\n        return { value: value };\n    }\n}\nexports.EthereumProvider = EthereumProvider;\n_EthereumProvider_options = new WeakMap(), _EthereumProvider_api = new WeakMap(), _EthereumProvider_wallet = new WeakMap(), _EthereumProvider_executor = new WeakMap(), _EthereumProvider_blockchain = new WeakMap(), _EthereumProvider_send = new WeakMap(), _EthereumProvider_logRequest = new WeakMap(), _EthereumProvider_legacySendPayloads = new WeakMap(), _EthereumProvider_legacySendPayload = new WeakMap();\n//# sourceMappingURL=provider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GanacheStateManager = void 0;\nconst statemanager_1 = require(\"@ethereumjs/statemanager\");\nclass GanacheStateManager extends statemanager_1.DefaultStateManager {\n    async getStorageTrie(address) {\n        return await this._getStorageTrie({ buf: address });\n    }\n}\nexports.GanacheStateManager = GanacheStateManager;\n//# sourceMappingURL=state-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionPool_options, _TransactionPool_priceBump, _TransactionPool_blockchain, _TransactionPool_accountPromises, _TransactionPool_validateTransaction;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TriageOption = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\n/**\n * Checks if the `replacer` is eligible to replace the `replacee` transaction\n * in the transaction pool queue. Replacement eligibility requires that\n * the transactions have the same nonce and the `replacer` has a gas price\n * that is `gasPrice * priceBump` better than our `replacee`.\n * @param replacee -\n * @param replaceeNonce -\n * @param replacerNonce -\n * @param replacerGasPrice -\n * @param priceBump -\n */\nfunction shouldReplace(replacee, replacerNonce, replacer, priceBump) {\n    const replaceeNonce = replacee.nonce.toBigInt();\n    // if the nonces differ, our replacer is not eligible to replace\n    if (replaceeNonce !== replacerNonce) {\n        return false;\n    }\n    // if the transaction being replaced is in the middle of being mined, we can't\n    // replpace it so let's back out early\n    if (replacee.locked) {\n        throw new ethereum_utils_1.CodedError(ethereum_utils_1.TRANSACTION_LOCKED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n    }\n    const replacerTip = \"maxPriorityFeePerGas\" in replacer\n        ? replacer.maxPriorityFeePerGas.toBigInt()\n        : replacer.effectiveGasPrice.toBigInt();\n    const replacerMaxFee = \"maxFeePerGas\" in replacer\n        ? replacer.maxFeePerGas.toBigInt()\n        : replacer.effectiveGasPrice.toBigInt();\n    const replaceeTip = \"maxPriorityFeePerGas\" in replacee\n        ? replacee.maxPriorityFeePerGas.toBigInt()\n        : replacee.effectiveGasPrice.toBigInt();\n    const replaceeMaxFee = \"maxFeePerGas\" in replacee\n        ? replacee.maxFeePerGas.toBigInt()\n        : replacee.effectiveGasPrice.toBigInt();\n    const tipPremium = replaceeTip + (replaceeTip * priceBump) / 100n;\n    const maxFeePremium = replaceeMaxFee + (replaceeMaxFee * priceBump) / 100n;\n    // if both the tip and max fee of the new transaction aren't\n    // `priceBumpPercent` more than the existing transaction, this transaction is\n    // underpriced\n    if (replacerTip < tipPremium || replacerMaxFee < maxFeePremium) {\n        throw new ethereum_utils_1.CodedError(ethereum_utils_1.UNDERPRICED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n    }\n    else {\n        return true;\n    }\n}\nfunction byNonce(values, a, b) {\n    return ((values[b].nonce.toBigInt() || 0n) > (values[a].nonce.toBigInt() || 0n));\n}\n/**\n * Used to track a transaction's placement in the transaction pool based off\n * of the its nonce.\n */\nvar TriageOption;\n(function (TriageOption) {\n    /**\n     * Default value. A tx will be added to the future queue if it is not yet\n     * executable based off of the transaction's nonce.\n     */\n    TriageOption[TriageOption[\"FutureQueue\"] = 0] = \"FutureQueue\";\n    /**\n     * The transaction is currently executable based off the transaction's nonce.\n     */\n    TriageOption[TriageOption[\"Executable\"] = 1] = \"Executable\";\n    /**\n     * The transaction is currently executable, has the same nonce as a pending\n     * transaction of the same origin, and has a gas price that is high enough to\n     * replace the currently pending transaction.\n     */\n    TriageOption[TriageOption[\"ReplacesPendingExecutable\"] = 2] = \"ReplacesPendingExecutable\";\n    /**\n     * The transaction is not currently executable but has the same nonce as a\n     * future queued transaction of the same origin and has a gas price that is\n     * high enough to replace the future queued transaction.\n     */\n    TriageOption[TriageOption[\"ReplacesFutureTransaction\"] = 3] = \"ReplacesFutureTransaction\";\n})(TriageOption || (exports.TriageOption = TriageOption = {}));\nclass TransactionPool extends emittery_1.default {\n    constructor(options, blockchain, origins = new Map()) {\n        super();\n        _TransactionPool_options.set(this, void 0);\n        /**\n         * Minimum price bump percentage needed to replace a transaction that already exists in the transaction pool.\n         */\n        _TransactionPool_priceBump.set(this, void 0);\n        _TransactionPool_blockchain.set(this, void 0);\n        this.executables = {\n            inProgress: new Set(),\n            pending: new Map()\n        };\n        _TransactionPool_accountPromises.set(this, new Map());\n        this.drain = () => {\n            // notify listeners (the blockchain, then the miner, eventually) that we\n            // have executable transactions ready\n            this.emit(\"drain\");\n        };\n        _TransactionPool_validateTransaction.set(this, (transaction) => {\n            // Check the transaction doesn't exceed the current block limit gas.\n            if (transaction.gas > __classPrivateFieldGet(this, _TransactionPool_options, \"f\").miner.blockGasLimit) {\n                return new ethereum_utils_1.CodedError(ethereum_utils_1.GAS_LIMIT, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            // Should supply enough intrinsic gas\n            const gas = transaction.calculateIntrinsicGas();\n            if (gas === -1n || transaction.gas.toBigInt() < gas) {\n                return new ethereum_utils_1.CodedError(ethereum_utils_1.INTRINSIC_GAS_TOO_LOW, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            if (transaction.to == null &&\n                transaction.data &&\n                __classPrivateFieldGet(this, _TransactionPool_options, \"f\").chain.allowUnlimitedInitCodeSize === false &&\n                __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").common.isActivatedEIP(3860) &&\n                // this is contract creation transaction and it is subject to EIP-3860\n                // which limits the size of initcode to 49152\n                transaction.data.valueOf().length > 49152) {\n                return new ethereum_utils_1.CodedError(ethereum_utils_1.INITCODE_TOO_LARGE, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            return null;\n        });\n        __classPrivateFieldSet(this, _TransactionPool_blockchain, blockchain, \"f\");\n        __classPrivateFieldSet(this, _TransactionPool_options, options, \"f\");\n        this.origins = origins;\n        __classPrivateFieldSet(this, _TransactionPool_priceBump, options.miner.priceBump, \"f\");\n    }\n    /**\n     * Inserts a transaction into the pending queue, if executable, or future pool\n     * if not.\n     *\n     * @param transaction -\n     * @param secretKey -\n     * @returns data that can be used to drain the queue\n     */\n    async prepareTransaction(transaction, secretKey) {\n        let err;\n        err = __classPrivateFieldGet(this, _TransactionPool_validateTransaction, \"f\").call(this, transaction);\n        if (err != null) {\n            throw err;\n        }\n        const from = transaction.from;\n        let txNonce;\n        if (!transaction.nonce.isNull()) {\n            txNonce = transaction.nonce.toBigInt();\n        }\n        const origin = from.toString();\n        // We await the `transactorNoncePromise` async request to ensure we process\n        // transactions in FIFO order *by account*. We look up accounts because\n        // ganache fills in missing nonces automatically, and we need to do it in\n        // order.\n        // The trick here is that we might actually get the next nonce from the\n        // account's pending executable transactions, not the account...\n        // But another transaction might currently be getting the nonce from the\n        // account, if it is, we need to wait for it to be done doing that. Hence:\n        let transactorPromise = __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").get(origin);\n        if (transactorPromise) {\n            await transactorPromise;\n        }\n        // if the user called sendTransaction or sendRawTransaction, effectiveGasPrice\n        // hasn't been set yet on the tx. calculating the effectiveGasPrice requires\n        // the block context, so we need to set it outside of the transaction. this\n        // value is updated in the miner as we're more sure of what block the tx will\n        // actually go on, but we still need to set it here to check for valid\n        // transaction replacements of same origin/nonce transactions\n        if (!transaction.effectiveGasPrice &&\n            __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").common.isActivatedEIP(1559)) {\n            const baseFeePerGas = ethereum_block_1.Block.calcNextBaseFee(__classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").blocks.latest);\n            transaction.updateEffectiveGasPrice(baseFeePerGas);\n        }\n        // we should _probably_ cache `highestNonce`, but it's actually a really hard thing to cache as the current highest\n        // nonce might be invalidated (like if the sender doesn't have enough funds), so we'd have to go back to the previous\n        // highest nonce... but what if that previous highest nonce was also invalidated?! we have to go back to the... you\n        // get the picture.\n        // So... we currently do things sub-optimally:\n        // if we currently have txs in `executableOriginTransactions`, we iterate over them to find the highest nonce\n        // and use that. Otherwise, we just fetch it from the database.\n        // Beware! There might still be race conditions here:\n        //  * if the highest tx executes, which causes it to be removed from the `executableOriginTransactions` heap,\n        // then a new tx comes in _before_ the block is persisted to the database, the nonce might be of the second\n        // tx would be too low.\n        //  * rough idea for a fix: transactions have a `finalize` method that is called _after_ the tx is saved. Maybe\n        // when tx's are executed their nonce is moved to a `highNonceByOrigin` map? We'd check this map in addition to the\n        // `executableOriginTransactions` map, always taking the highest of the two.\n        let highestNonce = 0n;\n        if (!transactorPromise) {\n            transactorPromise = __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").accounts.getNonceAndBalance(from);\n            __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").set(origin, transactorPromise);\n            transactorPromise.then(() => {\n                __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").delete(origin);\n            });\n        }\n        const transactor = await transactorPromise;\n        const cost = transaction.gas.toBigInt() * transaction.maxGasPrice().toBigInt() +\n            transaction.value.toBigInt();\n        if (transactor.balance.toBigInt() < cost) {\n            throw new ethereum_utils_1.CodedError(ethereum_utils_1.INSUFFICIENT_FUNDS, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n        }\n        const origins = this.origins;\n        const queuedOriginTransactions = origins.get(origin);\n        let transactionPlacement = TriageOption.FutureQueue;\n        const executables = this.executables.pending;\n        let executableOriginTransactions = executables.get(origin);\n        const priceBump = __classPrivateFieldGet(this, _TransactionPool_priceBump, \"f\");\n        let length;\n        if (executableOriginTransactions &&\n            (length = executableOriginTransactions.length)) {\n            // check if a transaction with the same nonce is in the origin's\n            // executables queue already. Replace the matching transaction or throw this\n            // new transaction away as necessary.\n            const pendingArray = executableOriginTransactions.array;\n            // Notice: we're iterating over the raw heap array, which isn't\n            // necessarily sorted\n            for (let i = 0; i < length; i++) {\n                const pendingTx = pendingArray[i];\n                if (shouldReplace(pendingTx, txNonce, transaction, priceBump)) {\n                    // do an in-place replace without triggering a re-sort because we\n                    // already know where this transaction should go in this \"byNonce\"\n                    // heap.\n                    pendingArray[i] = transaction;\n                    // we don't want to mark this transaction as \"executable\" and thus\n                    // have it added to the pool again. so use this flag to skip\n                    // a re-queue.\n                    transactionPlacement = TriageOption.ReplacesPendingExecutable;\n                    pendingTx.finalize(\"rejected\", new ethereum_utils_1.CodedError(ethereum_utils_1.REPLACED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED));\n                    break;\n                }\n                // track the highest nonce for all transactions pending from this\n                // origin. If this transaction can't be used as a replacement, it will\n                // use this next highest nonce.\n                const pendingTxNonce = pendingTx.nonce.toBigInt();\n                if (pendingTxNonce > highestNonce)\n                    highestNonce = pendingTxNonce;\n            }\n            if (txNonce === void 0) {\n                // if we aren't signed and don't have a transactionNonce yet set it now\n                txNonce = highestNonce + 1n;\n                transaction.nonce = utils_2.Quantity.from(txNonce);\n                transactionPlacement = TriageOption.Executable;\n            }\n            else if (txNonce === highestNonce + 1n) {\n                // if our transaction's nonce is 1 higher than the last transaction in the\n                // origin's heap we are executable.\n                transactionPlacement = TriageOption.Executable;\n            }\n        }\n        else {\n            // since we don't have any executable transactions at the moment, we need\n            // to find our nonce from the account itself...\n            const transactorNonce = transactor.nonce.toBigInt();\n            if (txNonce === void 0) {\n                // if we don't have a transactionNonce, just use the account's next\n                // nonce and mark as executable\n                txNonce = transactorNonce ? transactorNonce : 0n;\n                transaction.nonce = utils_2.Quantity.from(txNonce);\n                transactionPlacement = TriageOption.Executable;\n            }\n            else if (txNonce < transactorNonce) {\n                // it's an error if the transaction's nonce is <= the persisted nonce\n                throw new ethereum_utils_1.CodedError(`the tx doesn't have the correct nonce. account has nonce of: ${transactorNonce} tx has nonce of: ${txNonce}`, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            else if (txNonce === transactorNonce) {\n                transactionPlacement = TriageOption.Executable;\n            }\n        }\n        // we have future transactions for this origin, this transaction is not yet\n        // executable, and this transaction is not replacing a previously queued/\n        // executable transaction, then this is potentially eligible to replace a\n        // future transaction\n        if (queuedOriginTransactions &&\n            transactionPlacement !== TriageOption.Executable &&\n            transactionPlacement !== TriageOption.ReplacesPendingExecutable &&\n            (length = queuedOriginTransactions.length)) {\n            // check if a transaction with the same nonce is in the origin's\n            // future queue already. Replace the matching transaction or throw this\n            // new transaction away as necessary.\n            const queuedArray = queuedOriginTransactions.array;\n            // Notice: we're iterating over the raw heap array, which isn't\n            // necessarily sorted\n            for (let i = 0; i < length; i++) {\n                const queuedTx = queuedArray[i];\n                if (shouldReplace(queuedTx, txNonce, transaction, priceBump)) {\n                    // do an in-place replace without triggering a re-sort because we\n                    // already know where this transaction should go in this \"byNonce\"\n                    // heap.\n                    queuedArray[i] = transaction;\n                    // we don't want to mark this transaction as \"FutureQueue\" and thus\n                    // have it added to the pool again. so use this flag to skip\n                    // a re-queue.\n                    transactionPlacement = TriageOption.ReplacesFutureTransaction;\n                    queuedTx.finalize(\"rejected\", new ethereum_utils_1.CodedError(ethereum_utils_1.REPLACED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED));\n                    break;\n                }\n            }\n        }\n        // now that we know we have a transaction nonce we can sign the transaction\n        // (if we have the secret key)\n        if (secretKey) {\n            transaction.signAndHash(secretKey.toBuffer());\n        }\n        switch (transactionPlacement) {\n            case TriageOption.Executable:\n                // if it is executable add it to the executables queue\n                if (executableOriginTransactions) {\n                    executableOriginTransactions.push(transaction);\n                }\n                else {\n                    // if we don't yet have an executables queue for this origin make one now\n                    executableOriginTransactions = utils_1.Heap.from(transaction, byNonce);\n                    executables.set(origin, executableOriginTransactions);\n                }\n                // Now we need to drain any queued transactions that were previously\n                // not executable due to nonce gaps into the origin's queue...\n                if (queuedOriginTransactions) {\n                    let nextExpectedNonce = txNonce + 1n;\n                    while (true) {\n                        const nextTx = queuedOriginTransactions.peek();\n                        const nextTxNonce = nextTx.nonce.toBigInt() || 0n;\n                        if (nextTxNonce !== nextExpectedNonce) {\n                            break;\n                        }\n                        // we've got a an executable nonce! Put it in the executables queue.\n                        executableOriginTransactions.push(nextTx);\n                        // And then remove this transaction from its origin's queue\n                        if (!queuedOriginTransactions.removeBest()) {\n                            // removeBest() returns `false` when there are no more items after\n                            // the removed item. Let's do some cleanup when that happens.\n                            origins.delete(origin);\n                            break;\n                        }\n                        nextExpectedNonce += 1n;\n                    }\n                }\n                return true;\n            case TriageOption.FutureQueue:\n                // otherwise, put it in the future queue\n                if (queuedOriginTransactions) {\n                    queuedOriginTransactions.push(transaction);\n                }\n                else {\n                    origins.set(origin, utils_1.Heap.from(transaction, byNonce));\n                }\n                return false;\n            case TriageOption.ReplacesPendingExecutable:\n                // we've replaced the best transaction from this origin for this nonce,\n                // and it is executable\n                return true;\n            case TriageOption.ReplacesFutureTransaction:\n                // we've replaced the best transaction from this origin for a future\n                // nonce, so this one isn't executable\n                return false;\n        }\n    }\n    clear() {\n        this.origins.clear();\n        __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").clear();\n        this.executables.pending.clear();\n    }\n    /**\n     * Returns the transaction matching the given hash.\n     *\n     * This isn't the fastest thing... but querying for pending transactions is\n     * likely rare, so leaving this slow so other code paths can be faster might\n     * be okay.\n     *\n     * @param transactionHash -\n     */\n    find(transactionHash) {\n        const { pending, inProgress } = this.executables;\n        // first search pending transactions\n        for (let [_, transactions] of this.origins) {\n            if (transactions === undefined)\n                continue;\n            const arr = transactions.array;\n            for (let i = 0; i < transactions.length; i++) {\n                const tx = arr[i];\n                if (tx.hash.toBuffer().equals(transactionHash)) {\n                    return tx;\n                }\n            }\n        }\n        // then transactions eligible for execution\n        for (let [_, transactions] of pending) {\n            const arr = transactions.array;\n            for (let i = 0; i < transactions.length; i++) {\n                const tx = arr[i];\n                if (tx.hash.toBuffer().equals(transactionHash)) {\n                    return tx;\n                }\n            }\n        }\n        // and finally transactions that have just been processed, but not yet saved\n        for (let tx of inProgress) {\n            if (tx.hash.toBuffer().equals(transactionHash)) {\n                return tx;\n            }\n        }\n        return null;\n    }\n}\n_TransactionPool_options = new WeakMap(), _TransactionPool_priceBump = new WeakMap(), _TransactionPool_blockchain = new WeakMap(), _TransactionPool_accountPromises = new WeakMap(), _TransactionPool_validateTransaction = new WeakMap();\nexports.default = TransactionPool;\n//# sourceMappingURL=transaction-pool.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrieDB = void 0;\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst ENCODING_OPTS = { keyEncoding: \"binary\", valueEncoding: \"binary\" };\n/**\n * `@ethereumjs/trie` requires that any database passed to it implements a `DB`.\n * The `DB` interface defines the minimum set of database access methods that\n * ethereumjs needs internally. We implement that interface in `TrieDB`, as well\n * as a few other methods that we use in Ganache internally.\n */\nclass TrieDB {\n    constructor(db) {\n        this._db = db;\n    }\n    async get(key) {\n        let value = null;\n        try {\n            value = await this._db.get(key, ENCODING_OPTS);\n        }\n        catch (error) {\n            if (error.notFound) {\n                // not found, returning null\n            }\n            else {\n                throw error;\n            }\n        }\n        return value;\n    }\n    async put(key, val) {\n        await this._db.put(key, val, ENCODING_OPTS);\n    }\n    async del(key) {\n        await this._db.del(key, ENCODING_OPTS);\n    }\n    async batch(opStack) {\n        await this._db.batch(opStack, ENCODING_OPTS);\n    }\n    copy() {\n        return new TrieDB(this._db);\n    }\n    async close() {\n        await this._db.close();\n    }\n    sublevel(prefix, options) {\n        return (0, subleveldown_1.default)(this._db, prefix, options);\n    }\n    createReadStream(options) {\n        return this._db.createReadStream(options);\n    }\n}\nexports.TrieDB = TrieDB;\n//# sourceMappingURL=trie-db.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Wallet_randomRng, _Wallet_randomBytes, _Wallet_initializeAccounts, _Wallet_intializeAccountFromKey, _Wallet_initializeAccountWithoutKey, _Wallet_initializeAccount, _Wallet_lockAccount;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst hdkey_1 = require(\"./hdkey\");\nconst utils_1 = require(\"@ganache/utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst secp256k1_1 = __importStar(require(\"@ganache/secp256k1\"));\nconst bip39_1 = require(\"bip39\");\nconst seedrandom_1 = require(\"seedrandom\");\nconst crypto_1 = __importDefault(require(\"crypto\"));\nconst fs_1 = require(\"fs\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst TWELVE_255s = Buffer.allocUnsafe(12).fill(255);\n//#region Constants\nconst SCRYPT_PARAMS = {\n    dklen: 32,\n    n: 1024,\n    p: 8,\n    r: 1\n};\nconst CIPHER = \"aes-128-ctr\";\nconst MAX_ACCOUNTS = 100000;\nconst scrypt = (...args) => {\n    return new Promise((resolve, reject) => {\n        crypto_1.default.scrypt.call(crypto_1.default, ...args, (err, derivedKey) => {\n            if (err) {\n                return void reject(err);\n            }\n            return resolve(derivedKey);\n        });\n    });\n};\nconst scryptSync = (...args) => {\n    return crypto_1.default.scryptSync.call(crypto_1.default, ...args);\n};\n/**\n * A Buffer that can be reused by `uncompressedPublicKeyToAddress`.\n */\nconst SHARED_BUFFER = Buffer.allocUnsafe(65);\nconst uncompressedPublicKeyToAddress = (uncompressedPublicKey) => {\n    const status = secp256k1_1.default.publicKeyConvert(SHARED_BUFFER, uncompressedPublicKey);\n    switch (status) {\n        case 0:\n            return ethereum_address_1.Address.from((0, utils_1.keccak)(SHARED_BUFFER.slice(1)).slice(-20));\n        case 1:\n            throw new Error(\"Public Key could not be parsed\");\n        case 2:\n            throw new Error(\"Public Key serialization error\");\n    }\n};\nconst asUUID = (uuid) => {\n    return `${uuid.toString(\"hex\", 0, 4)}-${uuid.toString(\"hex\", 4, 6)}-${uuid.toString(\"hex\", 6, 8)}-${uuid.toString(\"hex\", 8, 10)}-${uuid.toString(\"hex\", 10)}`;\n};\nclass Wallet {\n    constructor(opts, logging) {\n        this.knownAccounts = new Set();\n        this.keyFiles = new Map();\n        this.unlockedAccounts = new Map();\n        this.lockTimers = new Map();\n        _Wallet_randomRng.set(this, void 0);\n        _Wallet_randomBytes.set(this, (length) => {\n            // Since this is a mock RPC library, the rng doesn't need to be\n            // cryptographically secure, and determinism is desired.\n            const buf = Buffer.allocUnsafe(length);\n            const rand = __classPrivateFieldGet(this, _Wallet_randomRng, \"f\");\n            for (let i = 0; i < length; i++) {\n                buf[i] = (rand() * 256) | 0; // generates a random number from 0 to 255\n            }\n            return buf;\n        });\n        _Wallet_initializeAccounts.set(this, (options) => {\n            const makeAccountAtIndex = (0, hdkey_1.createAccountGeneratorFromSeedAndPath)((0, bip39_1.mnemonicToSeedSync)(options.mnemonic, null), options.hdPath);\n            // convert a potentially fractional balance of Ether to WEI\n            const balanceParts = options.defaultBalance.toString().split(\".\", 2);\n            const significand = BigInt(balanceParts[0]);\n            const fractionalStr = balanceParts[1] || \"0\";\n            const fractional = BigInt(fractionalStr);\n            const magnitude = 10n ** BigInt(fractionalStr.length);\n            const defaultBalanceInWei = utils_1.WEI * significand + fractional * (utils_1.WEI / magnitude);\n            const etherInWei = utils_1.Quantity.from(defaultBalanceInWei);\n            const accounts = new Map();\n            const givenAccounts = options.accounts;\n            let accountsLength;\n            if (givenAccounts && (accountsLength = givenAccounts.length) !== 0) {\n                for (let i = 0; i < accountsLength; i++) {\n                    const givenAccount = givenAccounts[i];\n                    const secretKey = givenAccount.secretKey;\n                    let account;\n                    if (secretKey) {\n                        const balance = utils_1.Quantity.from(givenAccount.balance);\n                        account = __classPrivateFieldGet(this, _Wallet_intializeAccountFromKey, \"f\").call(this, balance, secretKey, options);\n                    }\n                    else {\n                        const acct = makeAccountAtIndex(i);\n                        account = __classPrivateFieldGet(this, _Wallet_initializeAccountWithoutKey, \"f\").call(this, etherInWei, acct, options);\n                    }\n                    accounts.set(account.address.toString(), account);\n                }\n            }\n            else {\n                const numberOfAccounts = options.totalAccounts;\n                if (numberOfAccounts != null) {\n                    for (let i = 0; i < numberOfAccounts; i++) {\n                        const acct = makeAccountAtIndex(i);\n                        const account = __classPrivateFieldGet(this, _Wallet_initializeAccountWithoutKey, \"f\").call(this, etherInWei, acct, options);\n                        accounts.set(account.address.toString(), account);\n                    }\n                }\n            }\n            return accounts;\n        });\n        _Wallet_intializeAccountFromKey.set(this, (balance, secretKey, options) => {\n            const privateKey = utils_1.Data.from(secretKey);\n            const account = Wallet.createAccountFromPrivateKey(privateKey);\n            account.balance = balance;\n            const address = account.address;\n            __classPrivateFieldGet(this, _Wallet_initializeAccount, \"f\").call(this, address, privateKey, options);\n            return account;\n        });\n        _Wallet_initializeAccountWithoutKey.set(this, (balance, acct, options) => {\n            const address = uncompressedPublicKeyToAddress(acct.publicKey);\n            const privateKey = utils_1.Data.from(acct.privateKey);\n            const account = Wallet.createAccount(balance, privateKey, address);\n            __classPrivateFieldGet(this, _Wallet_initializeAccount, \"f\").call(this, address, privateKey, options);\n            return account;\n        });\n        _Wallet_initializeAccount.set(this, (address, privateKey, options) => {\n            const { passphrase, lock: lockAccounts } = options;\n            const knownAccounts = this.knownAccounts;\n            this.addToKeyFileSync(address, privateKey, passphrase, lockAccounts);\n            const strAddress = address.toString();\n            knownAccounts.add(strAddress);\n            // if the `lock` option has been not been set, we're safe to add this\n            // account to unlockedAccounts\n            if (!lockAccounts) {\n                this.unlockedAccounts.set(strAddress, privateKey);\n            }\n        });\n        _Wallet_lockAccount.set(this, (lowerAddress) => {\n            this.lockTimers.delete(lowerAddress);\n            this.unlockedAccounts.delete(lowerAddress);\n            return true;\n        });\n        if (opts.totalAccounts > MAX_ACCOUNTS) {\n            logging.logger.log(`wallet.totalAccounts exceeds MAX_ACCOUNTS (${MAX_ACCOUNTS}) and may affect performance.`);\n        }\n        // create a RNG from our initial starting conditions (opts.mnemonic)\n        __classPrivateFieldSet(this, _Wallet_randomRng, (0, seedrandom_1.alea)(\"ganache \" + opts.mnemonic), \"f\");\n        const initialAccounts = __classPrivateFieldGet(this, _Wallet_initializeAccounts, \"f\").call(this, opts);\n        this.initialAccounts = Array.from(initialAccounts.values());\n        this.addresses = Array.from(initialAccounts.keys());\n        const l = this.initialAccounts.length;\n        const unlockedAccounts = this.unlockedAccounts;\n        //#region Unlocked Accounts\n        const givenUnlockedAccounts = opts.unlockedAccounts;\n        if (givenUnlockedAccounts) {\n            const ul = givenUnlockedAccounts.length;\n            for (let i = 0; i < ul; i++) {\n                let arg = givenUnlockedAccounts[i];\n                let address;\n                let privateKey;\n                switch (typeof arg) {\n                    case \"string\":\n                        // `toLowerCase` so we handle uppercase `0X` formats\n                        const addressOrIndex = arg.toLowerCase();\n                        if (addressOrIndex.indexOf(\"0x\") === 0) {\n                            address = addressOrIndex;\n                            const account = initialAccounts.get(address);\n                            if (account) {\n                                privateKey = account.privateKey;\n                            }\n                            else {\n                                // this wasn't one of our initial accounts, so make a priv key.\n                                privateKey = this.createFakePrivateKey(address);\n                                // add the account to the list of addresses because we want\n                                // `eth_accounts` to return this account.\n                                this.addresses.push(address);\n                            }\n                            break;\n                        }\n                        else {\n                            // try to convert the arg string to a number.\n                            // don't use parseInt because strings like `\"123abc\"` parse\n                            // to `123`, and there is probably an error on the user's side we'd\n                            // want to uncover.\n                            const index = arg - 0;\n                            // if we don't have a valid number, or the number isn't a valid JS\n                            // integer (no bigints or decimals, please), throw an error.\n                            if (!Number.isSafeInteger(index)) {\n                                throw new Error(`Invalid value in wallet.unlockedAccounts: ${arg}`);\n                            }\n                            arg = index;\n                            // not `break`ing here because I want this to fall through to the\n                            //  `\"number\"` case below.\n                            // Refactor it if you want.\n                            // break; // no break, please.\n                        }\n                    case \"number\":\n                        const account = this.initialAccounts[arg];\n                        if (account == null) {\n                            throw new Error(`Account at index ${arg} not found. Max index available is ${l - 1}.`);\n                        }\n                        address = account.address.toString().toLowerCase();\n                        privateKey = account.privateKey;\n                        break;\n                    default:\n                        throw new Error(`Invalid value specified in unlocked_accounts`);\n                }\n                if (unlockedAccounts.has(address))\n                    continue;\n                unlockedAccounts.set(address, privateKey);\n            }\n        }\n        //#endregion\n        //#region save accounts to disk\n        if (opts.accountKeysPath != null) {\n            const fileData = {\n                addresses: {},\n                private_keys: {}\n            };\n            unlockedAccounts.forEach((privateKey, address) => {\n                fileData.addresses[address] = address;\n                fileData.private_keys[address] = privateKey;\n            });\n            // WARNING: Do not turn this to an async method without\n            // making a Wallet.initialize() function and calling it via\n            // Provider.initialize(). No async methods in constructors.\n            // writeFileSync here is acceptable.\n            (0, fs_1.writeFileSync)(opts.accountKeysPath, JSON.stringify(fileData));\n        }\n        //#endregion\n    }\n    async encrypt(privateKey, passphrase) {\n        const random = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 32 + 16 + 16);\n        const salt = random.slice(0, 32); // first 32 bytes\n        const iv = random.slice(32, 32 + 16); // next 16 bytes\n        const uuid = random.slice(32 + 16); // last 16 bytes\n        const derivedKey = await scrypt(passphrase, salt, SCRYPT_PARAMS.dklen, {\n            ...SCRYPT_PARAMS,\n            N: SCRYPT_PARAMS.n\n        });\n        return this.finishEncryption(derivedKey, privateKey, salt, iv, uuid);\n    }\n    /**\n     * Syncronous version of the `encrypt` function.\n     * @param privateKey -\n     * @param passphrase -\n     */\n    encryptSync(privateKey, passphrase) {\n        const random = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 32 + 16 + 16);\n        const salt = random.slice(0, 32); // first 32 bytes\n        const iv = random.slice(32, 32 + 16); // next 16 bytes\n        const uuid = random.slice(32 + 16); // last 16 bytes\n        const derivedKey = scryptSync(passphrase, salt, SCRYPT_PARAMS.dklen, {\n            ...SCRYPT_PARAMS,\n            N: SCRYPT_PARAMS.n\n        });\n        return this.finishEncryption(derivedKey, privateKey, salt, iv, uuid);\n    }\n    finishEncryption(derivedKey, privateKey, salt, iv, uuid) {\n        const cipher = crypto_1.default.createCipheriv(CIPHER, derivedKey.slice(0, 16), iv);\n        const ciphertext = Buffer.concat([\n            cipher.update(privateKey.toBuffer()),\n            cipher.final()\n        ]);\n        const mac = (0, utils_1.keccak)(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n        return {\n            crypto: {\n                cipher: CIPHER,\n                ciphertext: utils_1.Data.from(ciphertext),\n                cipherparams: {\n                    iv: utils_1.Data.from(iv)\n                },\n                kdf: \"scrypt\",\n                kdfParams: {\n                    ...SCRYPT_PARAMS,\n                    salt: utils_1.Data.from(salt)\n                },\n                mac: utils_1.Data.from(mac)\n            },\n            id: asUUID(uuid),\n            version: 3\n        };\n    }\n    async decrypt(keyfile, passphrase) {\n        const crypt = keyfile.crypto;\n        if (crypt.cipher !== CIPHER) {\n            throw new Error(`keyfile cypher must be \"${CIPHER}\"`);\n        }\n        if (crypt.kdf !== \"scrypt\") {\n            throw new Error(`keyfile kdf must be \"script\"`);\n        }\n        const kdfParams = crypt.kdfParams;\n        const salt = kdfParams.salt;\n        const mac = crypt.mac;\n        const ciphertext = crypt.ciphertext.toBuffer();\n        let derivedKey;\n        let localMac;\n        if (passphrase != null) {\n            try {\n                derivedKey = await scrypt(passphrase, salt.toBuffer(), kdfParams.dklen, { ...kdfParams, N: kdfParams.n });\n                localMac = (0, utils_1.keccak)(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n            }\n            catch {\n                localMac = null;\n            }\n        }\n        if (!localMac || !mac.toBuffer().equals(localMac)) {\n            throw new Error(\"could not decrypt key with given passphrase\");\n        }\n        const decipher = crypto_1.default.createDecipheriv(crypt.cipher, derivedKey.slice(0, 16), crypt.cipherparams.iv.toBuffer());\n        const plaintext = decipher.update(ciphertext);\n        return plaintext;\n    }\n    /**\n     * Stores a mapping of addresses to either encrypted (if a passphrase is used\n     * or the user specified --lock option) or unencrypted private keys.\n     * @param address - The address whose private key is being stored.\n     * @param privateKey - The passphrase to store.\n     * @param passphrase - The passphrase to use to encrypt the private key. If\n     * passphrase is empty, the private key will not be encrypted.\n     * @param lock - Flag to specify that accounts should be encrypted regardless\n     * of if the passphrase is empty.\n     */\n    async addToKeyFile(address, privateKey, passphrase, lock) {\n        // NOTE: we are avoiding encrypting the keys for an account if the\n        // passphrase is blank purely for startup performance reasons.\n        if (passphrase || lock) {\n            this.keyFiles.set(address.toString(), {\n                encrypted: true,\n                key: await this.encrypt(privateKey, passphrase)\n            });\n        }\n        else {\n            this.keyFiles.set(address.toString(), {\n                encrypted: false,\n                key: privateKey.toBuffer()\n            });\n        }\n    }\n    /**\n     * Synchronus version of `addToKeyFile`.\n     * Stores a mapping of addresses to either encrypted (if a passphrase is used\n     * or the user specified --lock option) or unencrypted private keys.\n     * @param address - The address whose private key is being stored.\n     * @param privateKey - The passphrase to store.\n     * @param passphrase - The passphrase to use to encrypt the private key. If\n     * passphrase is empty, the private key will not be encrypted.\n     * @param lock - Flag to specify that accounts should be encrypted regardless\n     * of if the passphrase is empty.\n     */\n    addToKeyFileSync(address, privateKey, passphrase, lock) {\n        // NOTE: we are avoiding encrypting the keys for an account if the\n        // passphrase is blank purely for startup performance reasons.\n        if (passphrase || lock) {\n            this.keyFiles.set(address.toString(), {\n                encrypted: true,\n                key: this.encryptSync(privateKey, passphrase)\n            });\n        }\n        else {\n            this.keyFiles.set(address.toString(), {\n                encrypted: false,\n                key: privateKey.toBuffer()\n            });\n        }\n    }\n    /**\n     * Fetches the private key for a specific address. If the keyFile is encrypted\n     * for the address, the passphrase is used to decrypt.\n     * @param address - The address whose private key is to be fetched.\n     * @param passphrase - The passphrase used to decrypt the private key.\n     */\n    async getFromKeyFile(address, passphrase) {\n        const keyFile = this.keyFiles.get(address.toString());\n        if (keyFile === undefined || keyFile === null) {\n            throw new Error(\"no key for given address or file\");\n        }\n        if (keyFile.encrypted === true) {\n            return this.decrypt(keyFile.key, passphrase);\n        }\n        else {\n            // if the keyFile is not marked as encrypted, they should provide no\n            // passphrase. so we'll make it look like they gave the \"wrong\" passphrase\n            // by throwing the same error that's thrown when decrypting\n            if (passphrase) {\n                throw new Error('could not decrypt key with given passphrase (default passphrase for accounts created at startup is \"\")');\n            }\n            else {\n                return keyFile.key;\n            }\n        }\n    }\n    static createAccount(balance, privateKey, address) {\n        const account = new ethereum_utils_1.Account(address);\n        account.privateKey = privateKey;\n        account.balance = balance;\n        return account;\n    }\n    static createAccountFromPrivateKey(privateKey) {\n        const address = ethereum_address_1.Address.from((0, util_1.privateToAddress)(privateKey.toBuffer()));\n        const account = new ethereum_utils_1.Account(address);\n        account.privateKey = privateKey;\n        return account;\n    }\n    createRandomAccount() {\n        // create some seeded deterministic psuedo-randomness based on the chain's\n        // initial starting conditions\n        const seed = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 128);\n        const acct = (0, hdkey_1.createAccountFromSeed)(seed);\n        const address = uncompressedPublicKeyToAddress(acct.publicKey);\n        const privateKey = utils_1.Data.from(acct.privateKey);\n        return Wallet.createAccount(utils_1.Quantity.Zero, privateKey, address);\n    }\n    async unlockAccount(address, passphrase, duration) {\n        const lowerAddress = address.toString();\n        const secretKey = await this.getFromKeyFile(address, passphrase);\n        const existingTimer = this.lockTimers.get(lowerAddress);\n        if (existingTimer) {\n            clearTimeout(existingTimer);\n        }\n        // a duration <= 0 will remain unlocked\n        const durationMs = (duration * 1000) | 0;\n        if (durationMs > 0) {\n            const timeout = setTimeout(__classPrivateFieldGet(this, _Wallet_lockAccount, \"f\"), durationMs, lowerAddress);\n            (0, utils_1.unref)(timeout);\n            this.lockTimers.set(lowerAddress, timeout);\n        }\n        this.unlockedAccounts.set(lowerAddress, utils_1.Data.from(secretKey));\n        return true;\n    }\n    async addUnknownAccount(address, passphrase) {\n        const lowerAddress = address.toString();\n        // if we \"know\" about this account, it cannot be added this way\n        if (this.knownAccounts.has(lowerAddress)) {\n            return false;\n        }\n        // this is an unknown account, so we do not have a private key. instead,\n        // we'll need to create a fake one.\n        const privateKey = this.createFakePrivateKey(lowerAddress);\n        await this.addToKeyFile(address, privateKey, passphrase, true);\n        this.knownAccounts.add(lowerAddress);\n        this.addresses.push(lowerAddress);\n        return true;\n    }\n    async removeKnownAccount(address, passphrase) {\n        const lowerAddress = address.toString();\n        // if we don't \"know\" about this account, it cannot be removed\n        if (!this.knownAccounts.has(lowerAddress)) {\n            return false;\n        }\n        const privateKey = await this.getFromKeyFile(address, passphrase);\n        // we don't actually care what the private key is, we just need to know that\n        // the passphrase they supplied is the right one. (empty string is a valid\n        // privateKey for added, previously unknown accounts)\n        if (privateKey != null) {\n            this.keyFiles.delete(lowerAddress);\n            this.knownAccounts.delete(lowerAddress);\n            this.addresses.splice(this.addresses.indexOf(lowerAddress), 1);\n            this.lockTimers.delete(lowerAddress);\n            this.unlockedAccounts.delete(lowerAddress);\n            return true;\n        }\n        else {\n            throw new Error(\"could not find private key for address/passphrase combination\");\n        }\n    }\n    createFakePrivateKey(address) {\n        let fakePrivateKey;\n        const addressBuf = ethereum_address_1.Address.from(address).toBuffer();\n        if (addressBuf.equals(utils_1.ACCOUNT_ZERO)) {\n            // allow signing with the 0x0 address...\n            // always sign with the same fake key, a 31 `0`s followed by a single\n            // `1`. The key is arbitrary. It just must not be all `0`s and must be\n            // deterministic.\n            // see: https://github.com/ethereumjs/ethereumjs-monorepo/issues/829#issue-674385636\n            fakePrivateKey = Buffer.allocUnsafe(32).fill(0, 0, 31);\n            fakePrivateKey[31] = 1;\n        }\n        else {\n            // Private keys must not be greater than *or equal to*:\n            // 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141, and\n            // if they are that large then signing of the transaction (ecdsaSign) will\n            // fail.\n            // Historically, we've just concatenated the address with part of itself,\n            // to make something long enough to use as a private key, so we can't\n            // change the default/legacy behavior now. But for addresses that would\n            // generate an invalid private key we must use a different approach. If\n            // the legacy way of generating a private key results in a key that is too\n            // large\n            //\n            const first12 = addressBuf.slice(0, 12);\n            fakePrivateKey = Buffer.concat([addressBuf, first12]);\n            // BigInt is slow, so only do it if we might need to, which we usually\n            // never will.\n            // Since we already have a slice of the first 12 bytes let's use it to\n            // help check if we might overflow the max secp256k1 key value. If the\n            // first 12 bytes, the most significant digits of the key, are all `255`\n            // then there is a chance that the fakePrivateKey will be too large.\n            // `Buffer.compare` is a native method in V8, so it should be pretty fast.\n            // example: the address `0xffffffffffff{anything can go here}` generates a\n            // bad fakePrivateKey but, `0xfffffffffffe{anything can go here}` never\n            // will. There are obviously many chances for a false positive, but the\n            // next condition in the `while` loop will catch those.\n            if (first12.compare(TWELVE_255s) === 0) {\n                while (BigInt(`0x${fakePrivateKey.toString(\"hex\")}`) >= secp256k1_1.SECP256K1_N) {\n                    // keccak returns a 32 byte hash of the input data, which is the exact\n                    // length we need for a private key.\n                    // note: if keccak can return its own input as its output, then this\n                    // loops forever. The chances of this happening are impossibly low, so\n                    // it's not worth the effort to check, but it would be interesting if\n                    // someone reported an issue that can cause this for a specific\n                    // address!\n                    fakePrivateKey = (0, utils_1.keccak)(fakePrivateKey);\n                }\n            }\n        }\n        return utils_1.Data.from(fakePrivateKey);\n    }\n    lockAccount(lowerAddress) {\n        if (!this.unlockedAccounts.has(lowerAddress))\n            return false;\n        clearTimeout(this.lockTimers.get(lowerAddress));\n        return __classPrivateFieldGet(this, _Wallet_lockAccount, \"f\").call(this, lowerAddress);\n    }\n}\n_Wallet_randomRng = new WeakMap(), _Wallet_randomBytes = new WeakMap(), _Wallet_initializeAccounts = new WeakMap(), _Wallet_intializeAccountFromKey = new WeakMap(), _Wallet_initializeAccountWithoutKey = new WeakMap(), _Wallet_initializeAccount = new WeakMap(), _Wallet_lockAccount = new WeakMap();\nexports.default = Wallet;\n//# sourceMappingURL=wallet.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-options\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChainOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst HARDFORKS = [\n    \"constantinople\",\n    \"byzantium\",\n    \"petersburg\",\n    \"istanbul\",\n    \"muirGlacier\",\n    \"berlin\",\n    \"london\",\n    \"arrowGlacier\",\n    \"grayGlacier\",\n    \"merge\",\n    \"shanghai\"\n];\nexports.ChainOptions = {\n    allowUnlimitedContractSize: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Allows unlimited contract sizes. Setting this to `true` will cause ganache to behave differently than production environments.\",\n        default: () => false,\n        legacyName: \"allowUnlimitedContractSize\",\n        cliType: \"boolean\"\n    },\n    allowUnlimitedInitCodeSize: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Allows unlimited initcode (`transaction.data`) sizes. Setting this to `true` will cause ganache to behave differently than production environments.\",\n        default: () => false,\n        cliType: \"boolean\"\n    },\n    asyncRequestProcessing: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"When set to `false` only one request will be processed at a time.\",\n        default: () => true,\n        legacyName: \"asyncRequestProcessing\",\n        cliType: \"boolean\"\n    },\n    chainId: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The currently configured chain id.\",\n        default: () => 1337,\n        legacyName: \"chainId\",\n        cliType: \"number\"\n    },\n    networkId: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The id of the network returned by the RPC method `net_version`.\",\n        default: () => Date.now(),\n        defaultDescription: \"System time at process start or Network ID of forked blockchain if configured.\",\n        legacyName: \"network_id\",\n        cliAliases: [\"i\", \"networkId\"],\n        cliType: \"number\"\n    },\n    time: {\n        normalize: rawInput => (rawInput !== undefined ? new Date(rawInput) : null),\n        cliDescription: \"Date that the first block should start.\",\n        legacyName: \"time\",\n        cliAliases: [\"t\", \"time\"],\n        cliType: \"string\",\n        cliCoerce: (input) => {\n            // try parsing the input as a number, if it works use the number\n            // otherwise pass the string along\n            const asNum = input / 1;\n            if (isNaN(asNum)) {\n                return input;\n            }\n            else {\n                return asNum;\n            }\n        }\n    },\n    hardfork: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set the hardfork rules for the EVM.\",\n        default: () => \"shanghai\",\n        legacyName: \"hardfork\",\n        cliAliases: [\"k\", \"hardfork\"],\n        cliType: \"string\",\n        cliChoices: HARDFORKS\n    },\n    vmErrorsOnRPCResponse: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Whether to report runtime errors from EVM code as RPC errors.\",\n        default: () => false,\n        legacyName: \"vmErrorsOnRPCResponse\",\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=chain-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatabaseOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.DatabaseOptions = {\n    db: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify an alternative database instance, like MemDOWN\",\n        disableInCLI: true,\n        legacyName: \"db\",\n        conflicts: [\"dbPath\"]\n    },\n    dbPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify a path to a directory to save the chain database.\",\n        legacyName: \"db_path\",\n        cliAliases: [\"db\", \"db_path\"],\n        cliType: \"string\",\n        conflicts: [\"db\"]\n    }\n};\n//# sourceMappingURL=database-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkOptions = exports.KNOWN_NETWORKS = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst url_1 = require(\"url\");\nconst version = process.env.VERSION || \"DEV\";\n// we aren't going to treat block numbers as a bigint, so we don't want to\n// accept block numbers we can't add to\nconst MAX_BLOCK_NUMBER = Math.floor(Number.MAX_SAFE_INTEGER / 2);\nexports.KNOWN_NETWORKS = [\n    \"mainnet\",\n    \"goerli\",\n    \"görli\",\n    \"sepolia\"\n];\nconst reColonSplit = /:\\s?(?:.+)/;\nfunction coerceHeaders(headers, input) {\n    // split *1* time on the first colon, this also ignores leading whitespace\n    // from the value per RFC7230\n    const [name, value] = input.split(reColonSplit);\n    headers.push({ name, value });\n    return headers;\n}\nconst ALLOWED_PROTOCOLS = [\"ws:\", \"wss:\", \"http:\", \"https:\"];\nconst arrayToOxfordList = (arr, conjunction = \"and\") => {\n    const last = arr.pop();\n    switch (arr.length) {\n        case 0:\n            return \"\";\n        case 1:\n            return last;\n        case 2:\n            return arr[0] + ` ${conjunction} ` + last;\n        default:\n            return arr.join(\", \") + `, ${conjunction} ` + last;\n    }\n};\nexports.ForkOptions = {\n    // url's definition _must_ come before blockNumber, username, and password\n    // as the defaults are processed in order, and they rely on the `fork.url`\n    url: {\n        normalize: rawInput => {\n            // because `url` is an alias of `fork`, along with `provider` and\n            // `network` the runtime type isn't always going to be `\"string\"`\n            if (typeof rawInput !== \"string\" ||\n                exports.KNOWN_NETWORKS.includes(rawInput)) {\n                // if the string matches a network name ignore it\n                return;\n            }\n            let url = new url_1.URL(rawInput);\n            const path = url.pathname + url.search;\n            const lastIndex = path.lastIndexOf(\"@\");\n            // pull the blockNumber out of the URL\n            if (lastIndex !== -1) {\n                // remove everything after the last @\n                url = new url_1.URL(path.substr(0, lastIndex), url);\n                const blockNumber = path.substr(lastIndex + 1);\n                if (blockNumber && blockNumber !== ethereum_utils_1.Tag.latest) {\n                    // don't use parseInt because strings like `\"123abc\"` parse\n                    // to `123`, and there is probably an error on the user's side we'd\n                    // want to uncover.\n                    const asNum = blockNumber - 0;\n                    // don't allow invalid, negative, or decimals\n                    if (isNaN(asNum) ||\n                        asNum < 0 ||\n                        (asNum | 0) !== asNum ||\n                        asNum > MAX_BLOCK_NUMBER) {\n                        console.warn(`Ignoring invalid block number in fork url: \"${blockNumber}\". Block number must be an integer from [0 - ${MAX_BLOCK_NUMBER}].`);\n                    }\n                    else {\n                        url._blockNumber = asNum;\n                    }\n                }\n                if (!ALLOWED_PROTOCOLS.includes(url.protocol)) {\n                    throw new Error(`Invalid protocol for fork url: ${url.protocol}. Supported protocols are: ${arrayToOxfordList(ALLOWED_PROTOCOLS)}.`);\n                }\n            }\n            return url;\n        },\n        cliDescription: `Fork from another currently running Ethereum client at a given block. Input should be the URL of the node, e.g. \\`\"http://localhost:1337\"\\`. You can optionally specify the block to fork from using an @ sign: \\`\"http://localhost:1337@8675309\"\\`.\n\nYou can specify Basic Authentication credentials in the URL as well. e.g., \\`\"wss://user:password@example.com/\"\\`. If you need to use an Infura Project Secret, you would use it like this: \\`\"wss://:{YOUR-PROJECT-SECRET}@mainnet.infura.com/...\"\\`\n\nAlternatively, you can use the \\`fork.username\\` and \\`fork.password\\` options.`,\n        legacyName: \"fork\",\n        cliAliases: [\"f\", \"fork\"],\n        conflicts: [\"provider\", \"network\"]\n    },\n    provider: {\n        normalize: rawInput => {\n            // because `provider` is an alias of `fork`, along with `network` and\n            // `url` the runtime type isn't always going to match the TypeScript type.\n            // if rawInput is a string it will be handled by the `url` or `network`\n            // handlers.\n            if (typeof rawInput === \"string\" || // like `--fork http://url` (url shorthand)\n                (typeof rawInput === \"object\" &&\n                    (typeof rawInput.url === \"string\" || // like `--fork.url http://url`\n                        typeof rawInput.url === \"boolean\" || // like `--fork` (implied \"mainnet\" network shorthand)\n                        typeof rawInput.network === \"string\" || // like `--fork.network mainnet`\n                        typeof rawInput.network === \"boolean\")) // like `--fork.network true`\n            ) {\n                return;\n            }\n            else {\n                return rawInput;\n            }\n        },\n        cliDescription: \"Specify an EIP-1193 provider to use instead of a url.\",\n        disableInCLI: true,\n        legacyName: \"fork\",\n        conflicts: [\"url\", \"network\"]\n    },\n    network: {\n        normalize: rawInput => {\n            // because `network` is an alias of `fork`, along with `provider` and\n            // `url` the runtime type isn't always going to be `\"string\"`\n            if (typeof rawInput === \"string\" && exports.KNOWN_NETWORKS.includes(rawInput))\n                return rawInput;\n            if (\n            // handle `ganache --fork` case, which gets weird because both url\n            // and network can use the `--fork` flag (the `url` handler ignores\n            // non-strings, like `true` and strings that match our known networks)\n            typeof rawInput === \"object\" &&\n                \"url\" in rawInput) {\n                const { url } = rawInput;\n                if (url === true) {\n                    return \"mainnet\";\n                }\n                else if (exports.KNOWN_NETWORKS.includes(url)) {\n                    return rawInput.url;\n                }\n            }\n        },\n        cliDescription: `A network name to fork from; uses Infura's archive nodes.\n\nUse the shorthand command \\`ganache --fork\\` to automatically fork from Mainnet at the latest block.\n`,\n        cliChoices: exports.KNOWN_NETWORKS,\n        legacyName: \"fork\",\n        conflicts: [\"url\", \"provider\"]\n    },\n    blockNumber: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Block number the provider should fork from.\",\n        legacyName: \"fork_block_number\",\n        default: ({ url, provider, network }) => {\n            if (url) {\n                // use the url's _blockNumber, if present, otherwise use \"latest\"\n                if (url._blockNumber) {\n                    return url._blockNumber;\n                }\n                else {\n                    return ethereum_utils_1.Tag.latest;\n                }\n            }\n            else if (provider || network) {\n                return ethereum_utils_1.Tag.latest;\n            }\n            else {\n                return;\n            }\n        },\n        defaultDescription: `Latest block number`\n        //implies: [\"url\"]\n    },\n    preLatestConfirmations: {\n        normalize: helpers_1.normalize,\n        cliDescription: 'When the `fork.blockNumber` is set to \"latest\" (default), the number of blocks before the remote node\\'s \"latest\" block to fork from.',\n        default: () => 5,\n        defaultDescription: \"5\",\n        cliType: \"number\"\n    },\n    username: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Username to use for Basic Authentication. Does not require setting \\`fork.password\\`.\n\nWhen combined with \\`fork.password\\`, is shorthand for \\`fork: { headers: { \"Authorization\": \"Basic {ENCODED-BASIC-HEADER}\" } }\\`\n\nIf the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ this Basic token.`,\n        default: ({ url }) => {\n            // use the url's username, if present\n            if (url) {\n                if (url.username) {\n                    return url.username;\n                }\n            }\n        },\n        defaultDescription: \"\"\n        //implies: [\"url\"]\n    },\n    password: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Password to use for Basic Authentication. Does not require setting \\`fork.username\\`.\n\nWhen combined with \\`fork.username\\`, is shorthand for \\`fork: { headers: { \"Authorization\": \"Basic {ENCODED-BASIC-HEADER}\" } }\\`\n\nIf the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ this Basic token.`,\n        default: ({ url }) => {\n            // use the url's password, if present\n            if (url) {\n                if (url.password) {\n                    return url.password;\n                }\n            }\n        },\n        defaultDescription: \"\"\n        //implies: [\"url\"]\n    },\n    jwt: {\n        normalize: helpers_1.normalize,\n        cliDescription: `_Encoded_ JSON Web Token (JWT) used for authenticating to some servers.\n\nShorthand for \\`fork: { headers: { \"Authorization\": \"Bearer {YOUR-ENCODED-JWT}\" } }\\`\n\n If the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ the JWT Bearer token.`\n        //implies: [\"url\"]\n    },\n    userAgent: {\n        normalize: helpers_1.normalize,\n        cliDescription: `The User-Agent header sent to the fork on each request.\n\nSent as Api-User-Agent when used in the browser.\n\nWill be overridden by a \\`\"User-Agent\"\\` defined in the \\`fork.headers\\` option, if provided.`,\n        default: () => {\n            return `Ganache/${version} (https://www.trufflesuite.com/ganache; ganache<at>trufflesuite.com)`;\n        }\n        // implies: [\"url\"]\n    },\n    origin: {\n        normalize: helpers_1.normalize,\n        cliDescription: `The Origin header sent to the fork on each request.\n\nIgnored in the browser.\n\nWill be overridden by an \\`\"Origin\"\\` value defined in the \\`fork.headers\\` option, if provided.`\n        //implies: [\"url\"]\n    },\n    headers: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Headers to supply on each request to the forked provider.\n\nHeaders set here override headers set by other options, unless otherwise specified.\n\nDefaults to: \\`[\"User-Agent: Ganache/VERSION (https://www.trufflesuite.com/ganache; ganache<at>trufflesuite.com)\"]\\``,\n        cliType: \"array:string\",\n        implies: [\"url\"],\n        cliCoerce: rawInput => rawInput.reduce(coerceHeaders, [])\n    },\n    requestsPerSecond: {\n        normalize(rawValue) {\n            if (rawValue < 0) {\n                throw new Error(`fork.requestsPerSecond is invalid: \"${rawValue}\"; must be a positive number`);\n            }\n            return rawValue;\n        },\n        default: () => 0,\n        cliDescription: \"Restrict the number of requests per second sent to the fork provider. `0` means no limit is applied.\",\n        cliType: \"number\"\n        //implies: [\"url\"]\n    },\n    disableCache: {\n        normalize: helpers_1.normalize,\n        default: () => false,\n        cliDescription: \"Disables caching of all forking requests.\",\n        cliType: \"boolean\"\n    },\n    deleteCache: {\n        normalize: helpers_1.normalize,\n        default: () => false,\n        cliDescription: \"Deletes the persistent cache before starting.\",\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=fork-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = void 0;\nconst normalize = (rawInput) => rawInput;\nexports.normalize = normalize;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumOptionsConfig = exports.EthereumDefaults = void 0;\nconst chain_options_1 = require(\"./chain-options\");\nconst database_options_1 = require(\"./database-options\");\nconst logging_options_1 = require(\"./logging-options\");\nconst miner_options_1 = require(\"./miner-options\");\nconst wallet_options_1 = require(\"./wallet-options\");\nconst fork_options_1 = require(\"./fork-options\");\nconst options_1 = require(\"@ganache/options\");\nexports.EthereumDefaults = {\n    chain: chain_options_1.ChainOptions,\n    database: database_options_1.DatabaseOptions,\n    logging: logging_options_1.LoggingOptions,\n    miner: miner_options_1.MinerOptions,\n    wallet: wallet_options_1.WalletOptions,\n    fork: fork_options_1.ForkOptions\n};\nexports.EthereumOptionsConfig = new options_1.OptionsConfig(exports.EthereumDefaults);\n__exportStar(require(\"./chain-options\"), exports);\n__exportStar(require(\"./database-options\"), exports);\n__exportStar(require(\"./helpers\"), exports);\n__exportStar(require(\"./logging-options\"), exports);\n__exportStar(require(\"./miner-options\"), exports);\n__exportStar(require(\"./wallet-options\"), exports);\n__exportStar(require(\"./fork-options\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst fs_1 = require(\"fs\");\nconst utils_1 = require(\"@ganache/utils\");\nconst os_1 = require(\"os\");\nexports.LoggingOptions = {\n    debug: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to log EVM opcodes.\",\n        default: () => false,\n        legacyName: \"debug\",\n        cliType: \"boolean\"\n    },\n    quiet: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to disable writing logs to `logger.log` (`stdout` by default).\",\n        default: () => false,\n        cliAliases: [\"q\", \"quiet\"],\n        cliType: \"boolean\"\n    },\n    verbose: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to log detailed RPC requests.\",\n        default: () => false,\n        legacyName: \"verbose\",\n        cliAliases: [\"v\", \"verbose\"],\n        cliType: \"boolean\"\n    },\n    file: {\n        normalize: (raw) => {\n            let descriptor;\n            try {\n                descriptor = (0, fs_1.openSync)(raw, \"a\");\n            }\n            catch (err) {\n                const details = err.message;\n                throw new Error(`Failed to open log file ${raw}. Please check if the file path is valid and if the process has write permissions to the directory.${os_1.EOL}${details}`);\n            }\n            return descriptor;\n        },\n        cliDescription: \"The file to append logs to.\",\n        cliType: \"string\"\n    },\n    logger: {\n        normalize: (logger, config) => {\n            return (0, utils_1.createLogger)({\n                file: config.file,\n                baseLogger: logger\n            });\n        },\n        cliDescription: \"An object, like `console`, that implements a `log` function.\",\n        disableInCLI: true,\n        default: config => {\n            const baseLogger = config.quiet ? { log: () => { } } : console;\n            return (0, utils_1.createLogger)({\n                file: config.file,\n                baseLogger\n            });\n        },\n        legacyName: \"logger\"\n    }\n};\n//# sourceMappingURL=logging-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MinerOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\n/**\n * Attempts to convert strings that don't start with `0x` to a BigInt\n *\n * @param str - a string that represents a bigint, number, or hexadecimal value\n */\nconst toBigIntOrString = (str) => {\n    if (str.startsWith(\"0x\")) {\n        return str;\n    }\n    else {\n        return BigInt(str);\n    }\n};\n/**\n * Handles defaultTransactionGasLimit special case of 'estimate' for tx value.\n *\n * @param str - the string literal 'estimate' or string that that represents a bigint, number, or hexadecimal value.\n */\nconst estimateOrToBigIntOrString = (str) => {\n    if (str === \"estimate\") {\n        return str;\n    }\n    else {\n        return toBigIntOrString(str);\n    }\n};\n/**\n * Attempts to convert strings that don't start with `0x` to a number\n *\n * @param str - a string that represents a number, or hexadecimal value\n */\nconst toNumberOrString = (str) => {\n    if (str.startsWith(\"0x\")) {\n        return str;\n    }\n    else {\n        return parseInt(str);\n    }\n};\n// The `normalize` property expects a function with a signature of\n// `normalize(value, config)`, but `Quantity.from(value, nullable)` doesn't\n// match, so we wrap the `from` method in a function that matches the signature.\n// We only instantiate the wrapper function once to avoid unnecessary function\n// allocations.\nconst normalizeQuantity = value => utils_1.Quantity.from(value);\nexports.MinerOptions = {\n    blockTime: {\n        normalize: rawInput => {\n            if (rawInput < 0) {\n                throw new Error(\"miner.blockTime must be 0 or a positive number.\");\n            }\n            return rawInput;\n        },\n        cliDescription: 'Sets the `blockTime` in seconds for automatic mining. A blockTime of `0` enables \"instamine mode\", where new executable transactions will be mined instantly.',\n        default: () => 0,\n        legacyName: \"blockTime\",\n        cliAliases: [\"b\", \"blockTime\"],\n        cliType: \"number\"\n    },\n    timestampIncrement: {\n        normalize: rawType => rawType === \"clock\" ? \"clock\" : utils_1.Quantity.from(BigInt(rawType)),\n        cliDescription: 'The amount of time, in seconds, to add to the `timestamp` of each new block header. By default the value is `\"clock\"`, which uses your system clock time as the timestamp for each block.',\n        default: () => \"clock\",\n        cliType: \"string\"\n    },\n    defaultGasPrice: {\n        normalize: normalizeQuantity,\n        cliDescription: \"Sets the default gas price in WEI for transactions if not otherwise specified.\",\n        default: () => utils_1.Quantity.from(2000000000),\n        legacyName: \"gasPrice\",\n        cliAliases: [\"g\", \"gasPrice\"],\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    blockGasLimit: {\n        normalize: normalizeQuantity,\n        cliDescription: \"Sets the block gas limit in WEI.\",\n        default: () => utils_1.Quantity.from(30000000),\n        legacyName: \"gasLimit\",\n        cliAliases: [\"l\", \"gasLimit\"],\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    defaultTransactionGasLimit: {\n        normalize: rawType => rawType === \"estimate\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(rawType),\n        cliDescription: 'Sets the default transaction gas limit in WEI. Set to \"estimate\" to use an estimate (slows down transaction execution by 40%+).',\n        default: () => utils_1.Quantity.from(90000),\n        cliType: \"string\",\n        cliCoerce: estimateOrToBigIntOrString\n    },\n    difficulty: {\n        normalize: normalizeQuantity,\n        cliDescription: \"Sets the block difficulty. Value is always 0 after the merge hardfork.\",\n        default: () => utils_1.Quantity.One,\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    callGasLimit: {\n        normalize: normalizeQuantity,\n        cliDescription: \"Sets the transaction gas limit in WEI for `eth_call` and `eth_estimateGas` calls.\",\n        default: () => utils_1.Quantity.from(50000000),\n        legacyName: \"callGasLimit\",\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    instamine: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Set the instamine mode to either \"eager\" (default) or \"strict\".\n * In \"eager\" mode a transaction will be included in a block before its hash is returned to the caller.\n * In \"strict\" mode a transaction's hash is returned to the caller before the transaction is included in a block.\n\\`instamine\\` has no effect if \\`blockTime\\` is *not* \\`0\\` (the default).`,\n        default: () => \"eager\",\n        legacyName: \"instamine\",\n        cliAliases: [\"instamine\"],\n        cliType: \"string\",\n        cliChoices: [\"eager\", \"strict\"]\n    },\n    coinbase: {\n        normalize: rawType => {\n            return typeof rawType === \"number\" ? rawType : ethereum_address_1.Address.from(rawType);\n        },\n        cliDescription: \"Sets the address where mining rewards will go.\",\n        cliType: \"string\",\n        cliCoerce: toNumberOrString,\n        default: () => ethereum_address_1.Address.from(utils_1.ACCOUNT_ZERO)\n    },\n    extraData: {\n        normalize: (extra) => {\n            const bytes = utils_1.Data.from(extra);\n            if (bytes.toBuffer().length > 32) {\n                throw new Error(`extra exceeds max length. ${bytes.toBuffer().length} > 32`);\n            }\n            return bytes;\n        },\n        cliDescription: \"Set the extraData block header field a miner can include.\",\n        default: () => utils_1.Data.Empty,\n        cliType: \"string\"\n    },\n    priceBump: {\n        normalize: BigInt,\n        cliDescription: \"Minimum price bump percentage needed to replace a transaction that already exists in the transaction pool.\",\n        default: () => 10n,\n        cliType: \"string\"\n    }\n};\n//# sourceMappingURL=miner-options.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nconst bip39_1 = require(\"bip39\");\n// Don't change! We need maintain original determinism since the beginning\nconst DeterministicSeedPhrase = \"TestRPC is awesome!\";\nconst unseededRng = (0, seedrandom_1.default)();\n/**\n * WARNING: to maintain compatibility with ganache v2 this RNG only generates\n * numbers from 0-254 instead of 0-255! Hence the name, `notVeryRandomBytes`\n * @param length -\n * @param rng -\n */\nfunction notVeryRandomBytes(length, rng) {\n    const buf = Buffer.allocUnsafe(length);\n    for (let i = 0; i < length; i++) {\n        buf[i] = (rng() * 255) | 0;\n    }\n    return buf;\n}\nconst randomAlphaNumericString = (() => {\n    const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const alphabetLength = alphabet.length;\n    return (length, rng) => {\n        let text = \"\";\n        for (let i = 0; i < length; i++) {\n            text += alphabet[(rng() * alphabetLength) | 0];\n        }\n        return text;\n    };\n})();\nexports.WalletOptions = {\n    accounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Account data in the form \\`<private_key>,<initial_balance>\\`, can be specified multiple times. Note that private keys are 64 characters long and must be entered as an 0x-prefixed hex string. Balance can either be input as an integer, or as a 0x-prefixed hex string with either form specifying the initial balance in wei.`,\n        legacyName: \"accounts\",\n        cliAliases: [\"account\"],\n        cliType: \"array:string\",\n        cliCoerce: rawInput => {\n            return rawInput.map(accountString => {\n                // split *1* time on the first comma\n                const [secretKey, balance] = accountString.split(/,(.+)/);\n                return {\n                    secretKey,\n                    balance: BigInt(balance)\n                };\n            });\n        },\n        conflicts: [\"totalAccounts\"]\n    },\n    totalAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Number of accounts to generate at startup.\",\n        default: config => (config.accounts == null ? 10 : 0),\n        legacyName: \"total_accounts\",\n        cliAliases: [\"a\", \"accounts\"],\n        cliType: \"number\",\n        conflicts: [\"accounts\"]\n    },\n    deterministic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use pre-defined, deterministic seed.\",\n        default: () => false,\n        cliAliases: [\"d\", \"deterministic\"],\n        cliType: \"boolean\",\n        conflicts: [\"mnemonic\", \"seed\"]\n    },\n    seed: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Seed to use to generate a mnemonic.\",\n        // The order of the options matter here! `wallet.deterministic`\n        // needs to be prior to `wallet.seed` for `config.deterministic`\n        // below to be set correctly\n        default: config => config.deterministic === true\n            ? DeterministicSeedPhrase\n            : randomAlphaNumericString(10, unseededRng),\n        defaultDescription: \"Random value, unless wallet.deterministic is specified\",\n        legacyName: \"seed\",\n        cliAliases: [\"s\", \"seed\"],\n        cliType: \"string\",\n        conflicts: [\"mnemonic\", \"deterministic\"]\n    },\n    mnemonic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use a specific HD wallet mnemonic to generate initial addresses.\",\n        // The order of the options matter here! `wallet.seed`\n        // needs to be prior to `wallet.mnemonic` for `config.seed`\n        // below to be set correctly\n        default: config => (0, bip39_1.entropyToMnemonic)(notVeryRandomBytes(16, (0, seedrandom_1.default)(config.seed))),\n        defaultDescription: \"Generated from wallet.seed\",\n        legacyName: \"mnemonic\",\n        cliAliases: [\"m\", \"mnemonic\"],\n        cliType: \"string\",\n        conflicts: [\"seed\", \"deterministic\"]\n    },\n    unlockedAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Array of addresses or address indexes specifying which accounts should be unlocked.\",\n        legacyName: \"unlocked_accounts\",\n        cliAliases: [\"u\", \"unlock\"],\n        cliType: \"array:string\"\n    },\n    lock: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Lock available accounts by default (good for third party transaction signing).\",\n        default: () => false,\n        legacyName: \"secure\",\n        cliAliases: [\"n\", \"secure\", \"lock\"],\n        cliType: \"boolean\"\n    },\n    passphrase: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Passphrase to use when locking accounts.\",\n        default: () => \"\",\n        cliAliases: [\"passphrase\"],\n        cliType: \"string\"\n    },\n    accountKeysPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specifies a file to save accounts and private keys to, for testing.\",\n        legacyName: \"account_keys_path\",\n        cliAliases: [\"account_keys_path\", \"acctKeys\"],\n        cliType: \"string\"\n    },\n    defaultBalance: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The default account balance, specified in ether.\",\n        default: () => 1000,\n        legacyName: \"default_balance_ether\",\n        cliAliases: [\"e\", \"defaultBalanceEther\"],\n        cliType: \"number\"\n    },\n    hdPath: {\n        normalize: (path) => {\n            return path.split(\"/\");\n        },\n        cliDescription: \"The hierarchical deterministic path to use when generating accounts.\",\n        default: () => [\"m\", \"44'\", \"60'\", \"0'\", \"0\"],\n        legacyName: \"hd_path\",\n        cliType: \"string\"\n    }\n};\n//# sourceMappingURL=wallet-options.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-transaction\n *\n * @author David Murdoch\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/eip2930-access-list-transaction\"), exports);\n__exportStar(require(\"./src/eip1559-fee-market-transaction\"), exports);\n__exportStar(require(\"./src/base-transaction\"), exports);\n__exportStar(require(\"./src/hardfork\"), exports);\n__exportStar(require(\"./src/legacy-transaction\"), exports);\n__exportStar(require(\"./src/params\"), exports);\n__exportStar(require(\"./src/raw\"), exports);\n__exportStar(require(\"./src/signing\"), exports);\n__exportStar(require(\"./src/rpc-transaction\"), exports);\n__exportStar(require(\"./src/runtime-transaction\"), exports);\n__exportStar(require(\"./src/transaction-receipt\"), exports);\n__exportStar(require(\"./src/transaction-factory\"), exports);\n__exportStar(require(\"./src/transaction-types\"), exports);\n__exportStar(require(\"./src/vm-transaction\"), exports);\n__exportStar(require(\"./src/transaction-serialization\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccessLists = exports.isAccessList = void 0;\nconst tx_1 = require(\"@ethereumjs/tx\");\nvar tx_2 = require(\"@ethereumjs/tx\");\nObject.defineProperty(exports, \"isAccessList\", { enumerable: true, get: function () { return tx_2.isAccessList; } });\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst params_1 = require(\"./params\");\nconst STORAGE_KEY_LENGTH = 32;\n/*\n  As per https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2930.md\n\n  AccessLists must be in the form of:\n  [[{20 bytes}, [{32 bytes}...]]...]\n  where ... implies \"zero or more of the thing to the left\"\n*/\nclass AccessLists {\n    static getAccessListData(accessList) {\n        let AccessListJSON;\n        let bufferAccessList;\n        let slots = 0;\n        const accessListStorageKeyCost = params_1.Params.ACCESS_LIST_STORAGE_KEY_GAS;\n        const accessListAddressCost = params_1.Params.ACCESS_LIST_ADDRESS_GAS;\n        if (accessList && (0, tx_1.isAccessList)(accessList)) {\n            AccessListJSON = accessList;\n            const newAccessList = [];\n            for (let i = 0; i < accessList.length; i++) {\n                const item = accessList[i];\n                const addressBuffer = ethereum_address_1.Address.toBuffer(item.address);\n                const storageItems = [];\n                const storageKeysLength = item.storageKeys.length;\n                slots += storageKeysLength;\n                for (let index = 0; index < storageKeysLength; index++) {\n                    storageItems.push(utils_1.Data.toBuffer(item.storageKeys[index], STORAGE_KEY_LENGTH));\n                }\n                newAccessList.push([addressBuffer, storageItems]);\n            }\n            bufferAccessList = newAccessList;\n        }\n        else {\n            bufferAccessList = accessList ? accessList : [];\n            // build the JSON\n            const json = [];\n            for (let i = 0; i < bufferAccessList.length; i++) {\n                const data = bufferAccessList[i];\n                const address = ethereum_address_1.Address.toString(data[0]);\n                const storageKeys = [];\n                const storageKeysLength = data[1].length;\n                slots += storageKeysLength;\n                for (let item = 0; item < storageKeysLength; item++) {\n                    storageKeys.push(utils_1.Data.toString(data[1][item], STORAGE_KEY_LENGTH));\n                }\n                const jsonItem = {\n                    address,\n                    storageKeys\n                };\n                json.push(jsonItem);\n            }\n            AccessListJSON = json;\n        }\n        const dataFee = BigInt(bufferAccessList.length * accessListAddressCost +\n            slots * accessListStorageKeyCost);\n        return {\n            AccessListJSON,\n            accessList: bufferAccessList,\n            dataFeeEIP2930: dataFee\n        };\n    }\n}\nexports.AccessLists = AccessLists;\n//# sourceMappingURL=access-lists.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTransaction = exports.calculateIntrinsicGas = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst params_1 = require(\"./params\");\nconst MAX_UINT64 = 1n << (64n - 1n);\n/**\n * Compute the 'intrinsic gas' for a message with the given data.\n * @param data - The transaction's data\n * @param hasToAddress - boolean,\n * @param common - The Common use to determine gas costs\n * @returns The absolute minimum amount of gas this transaction will consume,\n * or `-1` if the data in invalid (gas consumption would exceed `MAX_UINT64`\n * (`(2n ** 64n) - 1n`).\n */\nconst calculateIntrinsicGas = (data, hasToAddress, common) => {\n    const hardfork = common.hardfork();\n    let gas;\n    // set the starting gas for the transaction\n    if (hasToAddress) {\n        gas = params_1.Params.TRANSACTION_GAS;\n    }\n    else {\n        // if it doesn't have a \"to\" address this is a contract creation and it costs\n        // `TRANSACTION_CREATION_GAS`.\n        gas = params_1.Params.TRANSACTION_CREATION_GAS;\n    }\n    if (data) {\n        const input = data.toBuffer();\n        // Bump the required gas by the amount of transactional data\n        const dataLength = input.byteLength;\n        if (dataLength > 0) {\n            const TRANSACTION_DATA_NON_ZERO_GAS = params_1.Params.TRANSACTION_DATA_NON_ZERO_GAS.get(hardfork);\n            const TRANSACTION_DATA_ZERO_GAS = params_1.Params.TRANSACTION_DATA_ZERO_GAS;\n            // Zero and non-zero bytes are priced differently\n            let nonZeroBytes = 0n;\n            for (const b of input) {\n                if (b !== 0) {\n                    nonZeroBytes++;\n                }\n            }\n            // Make sure we don't exceed uint64 for all data combinations.\n            // TODO: make sure these upper-bound checks are safe to remove, then\n            // remove if so.\n            // Issue: https://github.com/trufflesuite/ganache/issues/3486\n            // NOTE: This is an upper-bounds limit ported from geth that doesn't\n            // make sense for Ethereum, as exceeding the upper bound would require\n            // something like 200+ Petabytes of data.\n            // https://github.com/ethereum/go-ethereum/blob/cf856ea1ad96ac39ea477087822479b63417036a/core/state_transition.go#L106-L141\n            //\n            // explanation:\n            // `(MAX_UINT64 - gas) / TRANSACTION_DATA_NON_ZERO_GAS` is the maximum\n            // number of \"non-zero bytes\" geth can handle.\n            if ((MAX_UINT64 - gas) / TRANSACTION_DATA_NON_ZERO_GAS < nonZeroBytes) {\n                return -1n;\n            }\n            gas += nonZeroBytes * TRANSACTION_DATA_NON_ZERO_GAS;\n            const bigDataLength = BigInt(dataLength);\n            const zeroBytes = bigDataLength - nonZeroBytes;\n            // explanation:\n            // `(MAX_UINT64 - gas) / TRANSACTION_DATA_ZERO_GAS` is the maximum number\n            // of \"zero bytes\" geth can handle after subtracting out the cost of\n            // the \"non-zero bytes\"\n            if ((MAX_UINT64 - gas) / TRANSACTION_DATA_ZERO_GAS < zeroBytes) {\n                return -1n;\n            }\n            gas += zeroBytes * TRANSACTION_DATA_ZERO_GAS;\n            // after shanghai contract creation costs a little more\n            if (!hasToAddress && common.isActivatedEIP(3860)) {\n                const lenWords = (bigDataLength + 31n) / 32n;\n                gas += lenWords * params_1.Params.INITCODE_WORD_GAS;\n            }\n        }\n    }\n    return gas;\n};\nexports.calculateIntrinsicGas = calculateIntrinsicGas;\nclass BaseTransaction {\n    constructor(common, extra) {\n        this.common = common;\n        if (extra) {\n            this.setExtra(extra);\n        }\n    }\n    setExtra(raw) {\n        const [from, hash, blockHash, blockNumber, index, effectiveGasPrice] = raw;\n        this.from = ethereum_address_1.Address.from(from);\n        this.hash = utils_1.Data.from(hash, 32);\n        this.blockHash = utils_1.Data.from(blockHash, 32);\n        this.blockNumber = utils_1.Quantity.from(blockNumber);\n        this.index = utils_1.Quantity.from(index);\n        this.effectiveGasPrice = utils_1.Quantity.from(effectiveGasPrice);\n    }\n    calculateIntrinsicGas() {\n        const hasToAddress = this.to != null && !this.to.toBuffer().equals(utils_1.BUFFER_EMPTY);\n        return (0, exports.calculateIntrinsicGas)(this.data, hasToAddress, this.common);\n    }\n}\nexports.BaseTransaction = BaseTransaction;\n//# sourceMappingURL=base-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIP1559FeeMarketTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst access_lists_1 = require(\"./access-lists\");\nconst signing_1 = require(\"./signing\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst bigIntMin = (...args) => args.reduce((m, e) => (e < m ? e : m));\nconst CAPABILITIES = [2718, 2930, 1559];\nclass EIP1559FeeMarketTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x2\");\n        this.yParity = utils_1.Quantity.from(\"0x0\");\n        if (Array.isArray(data)) {\n            this.chainId = utils_1.Quantity.from(data[0]);\n            this.nonce = utils_1.Quantity.from(data[1]);\n            this.maxPriorityFeePerGas = utils_1.Quantity.from(data[2]);\n            this.maxFeePerGas = utils_1.Quantity.from(data[3]);\n            this.gas = utils_1.Quantity.from(data[4]);\n            this.to = data[5].length == 0 ? null : ethereum_address_1.Address.from(data[5]);\n            this.value = utils_1.Quantity.from(data[6]);\n            this.data = utils_1.Data.from(data[7]);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data[8]);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.yParity = this.v = utils_1.Quantity.from(data[9]);\n            this.r = utils_1.Quantity.from(data[10]);\n            this.s = utils_1.Quantity.from(data[11]);\n            this.raw = data;\n            if (!extra) {\n                // TODO(hack): we use the presence of `extra` to determine if this data\n                // come from the \"database\" or not. Transactions that come from the\n                // database must not be validated since they may come from a fork.\n                if (common.chainId() !== this.chainId.toBigInt()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toNumber()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n                const { from, serialized, hash } = this.computeIntrinsics(this.v, this.raw);\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n            }\n        }\n        else {\n            if (data.chainId) {\n                this.chainId = utils_1.Quantity.from(data.chainId);\n            }\n            else {\n                this.chainId = utils_1.Quantity.from(common.chainId());\n            }\n            this.maxPriorityFeePerGas = utils_1.Quantity.from(data.maxPriorityFeePerGas);\n            this.maxFeePerGas = utils_1.Quantity.from(data.maxFeePerGas);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data.accessList);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.validateAndSetSignature(data);\n            this.yParity = this.v;\n        }\n    }\n    maxGasPrice() {\n        return this.maxFeePerGas;\n    }\n    toJSON(_common) {\n        return {\n            type: this.type,\n            hash: this.hash,\n            chainId: this.chainId,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to,\n            value: this.value,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasPrice: this.effectiveGasPrice,\n            gas: this.gas,\n            input: this.data,\n            accessList: this.accessListJSON,\n            v: this.v,\n            r: this.r,\n            s: this.s,\n            yParity: this.yParity\n        };\n    }\n    static fromTxData(data, common, extra) {\n        return new EIP1559FeeMarketTransaction(data, common, extra);\n    }\n    toVmTransaction() {\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            nonce: this.nonce.toBigInt(),\n            common: this.common,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas.toBigInt(),\n            maxFeePerGas: this.maxFeePerGas.toBigInt(),\n            gasLimit: this.gas.toBigInt(),\n            to: this.to,\n            value: this.value.toBigInt(),\n            data,\n            AccessListJSON: this.accessListJSON,\n            getSenderAddress: () => this.from,\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                return this.calculateIntrinsicGas();\n            },\n            getUpfrontCost: (baseFee = 0n) => {\n                const { gas, maxPriorityFeePerGas, maxFeePerGas, value } = this;\n                const maxPriorityFeePerGasBI = maxPriorityFeePerGas.toBigInt();\n                const maxFeePerGasBI = maxFeePerGas.toBigInt();\n                const gasLimitBI = gas.toBigInt();\n                const valueBI = value.toBigInt();\n                const inclusionFeePerGas = bigIntMin(maxPriorityFeePerGasBI, maxFeePerGasBI - baseFee);\n                const gasPrice = inclusionFeePerGas + baseFee;\n                return gasLimitBI * gasPrice + valueBI;\n            },\n            supports: (capability) => {\n                return CAPABILITIES.includes(capability);\n            }\n        };\n    }\n    calculateIntrinsicGas() {\n        return super.calculateIntrinsicGas() + this.accessListDataFee;\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        const raw = this.toEthRawTransaction(utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO);\n        const data = (0, rlp_1.encodeRange)(raw, 0, 9);\n        const dataLength = data.length;\n        const msgHash = (0, utils_1.keccak)((0, signing_1.digestWithPrefix)(2, [data.output], dataLength));\n        const sig = (0, utils_1.ecsign)(msgHash, privateKey);\n        this.yParity = this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[9] = this.v.toBuffer();\n        raw[10] = this.r.toBuffer();\n        raw[11] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 9, 3);\n        const ranges = [data.output, encodedSignature.output];\n        const length = dataLength + encodedSignature.length;\n        // serialized is type concatenated with the rest of the data rlp encoded\n        this.serialized = (0, signing_1.digestWithPrefix)(2, ranges, length);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.chainId.toBuffer(),\n            this.nonce.toBuffer(),\n            this.maxPriorityFeePerGas.toBuffer(),\n            this.maxFeePerGas.toBuffer(),\n            this.gas.toBuffer(),\n            this.to ? this.to.toBuffer() : utils_1.BUFFER_EMPTY,\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            this.accessList,\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw) {\n        return (0, signing_1.computeIntrinsicsFeeMarketTx)(v, raw);\n    }\n    updateEffectiveGasPrice(baseFeePerGas) {\n        const maxFeePerGas = this.maxFeePerGas.toBigInt();\n        const maxPriorityFeePerGas = this.maxPriorityFeePerGas.toBigInt();\n        const a = maxFeePerGas - baseFeePerGas;\n        const tip = a < maxPriorityFeePerGas ? a : maxPriorityFeePerGas;\n        this.effectiveGasPrice = utils_1.Quantity.from(baseFeePerGas + tip);\n    }\n}\nexports.EIP1559FeeMarketTransaction = EIP1559FeeMarketTransaction;\n//# sourceMappingURL=eip1559-fee-market-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIP2930AccessListTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst access_lists_1 = require(\"./access-lists\");\nconst signing_1 = require(\"./signing\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst CAPABILITIES = [2718, 2930];\nclass EIP2930AccessListTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x1\");\n        this.yParity = utils_1.Quantity.from(\"0x0\");\n        if (Array.isArray(data)) {\n            this.chainId = utils_1.Quantity.from(data[0]);\n            this.nonce = utils_1.Quantity.from(data[1]);\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data[2]);\n            this.gas = utils_1.Quantity.from(data[3]);\n            this.to = data[4].length == 0 ? null : ethereum_address_1.Address.from(data[4]);\n            this.value = utils_1.Quantity.from(data[5]);\n            this.data = utils_1.Data.from(data[6]);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data[7]);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.yParity = this.v = utils_1.Quantity.from(data[8]);\n            this.r = utils_1.Quantity.from(data[9]);\n            this.s = utils_1.Quantity.from(data[10]);\n            this.raw = data;\n            if (!extra) {\n                // TODO(hack): we use the presence of `extra` to determine if this data\n                // come from the \"database\" or not. Transactions that come from the\n                // database must not be validated since they may come from a fork.\n                if (common.chainId() !== this.chainId.toBigInt()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toBigInt()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n                const { from, serialized, hash } = this.computeIntrinsics(this.v, this.raw);\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n            }\n        }\n        else {\n            if (data.chainId) {\n                this.chainId = utils_1.Quantity.from(data.chainId);\n                if (this.common.chainId() !== this.chainId.toBigInt()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toNumber()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n            }\n            else {\n                this.chainId = utils_1.Quantity.from(common.chainId());\n            }\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data.gasPrice);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data.accessList);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.validateAndSetSignature(data);\n            this.yParity = this.v;\n        }\n    }\n    maxGasPrice() {\n        return this.gasPrice;\n    }\n    toJSON(_common) {\n        return {\n            hash: this.hash,\n            type: this.type,\n            chainId: this.chainId,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to,\n            value: this.value,\n            gas: this.gas,\n            gasPrice: this.gasPrice,\n            input: this.data,\n            accessList: this.accessListJSON,\n            v: this.v,\n            r: this.r,\n            s: this.s,\n            yParity: this.v\n        };\n    }\n    static fromTxData(data, common, extra) {\n        return new EIP2930AccessListTransaction(data, common, extra);\n    }\n    toVmTransaction() {\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            nonce: this.nonce.toBigInt(),\n            common: this.common,\n            gasPrice: this.gasPrice.toBigInt(),\n            gasLimit: this.gas.toBigInt(),\n            to: this.to,\n            value: this.value.toBigInt(),\n            data,\n            AccessListJSON: this.accessListJSON,\n            getSenderAddress: () => this.from,\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                return this.calculateIntrinsicGas();\n            },\n            getUpfrontCost: () => {\n                const { gas, gasPrice, value } = this;\n                return gas.toBigInt() * gasPrice.toBigInt() + value.toBigInt();\n            },\n            supports: (capability) => {\n                return CAPABILITIES.includes(capability);\n            }\n        };\n    }\n    calculateIntrinsicGas() {\n        return super.calculateIntrinsicGas() + this.accessListDataFee;\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        const raw = this.toEthRawTransaction(utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO);\n        const data = (0, rlp_1.encodeRange)(raw, 0, 8);\n        const dataLength = data.length;\n        const msgHash = (0, utils_1.keccak)((0, signing_1.digestWithPrefix)(1, [data.output], dataLength));\n        const sig = (0, utils_1.ecsign)(msgHash, privateKey);\n        this.yParity = this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[8] = this.v.toBuffer();\n        raw[9] = this.r.toBuffer();\n        raw[10] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 8, 3);\n        const ranges = [data.output, encodedSignature.output];\n        const length = dataLength + encodedSignature.length;\n        // serialized is type concatenated with the rest of the data rlp encoded\n        this.serialized = (0, signing_1.digestWithPrefix)(1, ranges, length);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.chainId.toBuffer(),\n            this.nonce.toBuffer(),\n            this.gasPrice.toBuffer(),\n            this.gas.toBuffer(),\n            this.to ? this.to.toBuffer() : utils_1.BUFFER_EMPTY,\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            this.accessList,\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw) {\n        return (0, signing_1.computeIntrinsicsAccessListTx)(v, raw);\n    }\n    updateEffectiveGasPrice() { }\n}\nexports.EIP2930AccessListTransaction = EIP2930AccessListTransaction;\n//# sourceMappingURL=eip2930-access-list-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=hardfork.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LegacyTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst signing_1 = require(\"./signing\");\nclass LegacyTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x0\");\n        if (Array.isArray(data)) {\n            this.nonce = utils_1.Quantity.from(data[0]);\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data[1]);\n            this.gas = utils_1.Quantity.from(data[2]);\n            this.to = data[3].length == 0 ? null : ethereum_address_1.Address.from(data[3]);\n            this.value = utils_1.Quantity.from(data[4]);\n            this.data = utils_1.Data.from(data[5]);\n            this.v = utils_1.Quantity.from(data[6]);\n            this.r = utils_1.Quantity.from(data[7]);\n            this.s = utils_1.Quantity.from(data[8]);\n            this.raw = data;\n            if (!extra) {\n                // TODO(hack): Transactions that come from the database must not be\n                // validated since they may come from a fork.\n                const { from, serialized, hash } = this.computeIntrinsics(this.v, this.raw, this.common.chainId());\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n            }\n        }\n        else {\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data.gasPrice);\n            this.validateAndSetSignature(data);\n        }\n    }\n    maxGasPrice() {\n        return this.gasPrice;\n    }\n    toJSON(common) {\n        const json = {\n            hash: this.hash,\n            type: this.type,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to,\n            value: this.value,\n            gas: this.gas,\n            gasPrice: this.gasPrice,\n            input: this.data,\n            v: this.v,\n            r: this.r,\n            s: this.s\n        };\n        if ((this.common || common).isActivatedEIP(2718)) {\n            json.type = this.type;\n        }\n        return json;\n    }\n    static fromTxData(data, common, extra) {\n        return new LegacyTransaction(data, common, extra);\n    }\n    static fromEIP2930AccessListTransaction(data, common) {\n        if (Array.isArray(data)) {\n            // remove 1st item, chainId, and 7th item, accessList\n            return new LegacyTransaction(data.slice(1, 7).concat(data.slice(8)), common);\n        }\n        return new LegacyTransaction(data, common);\n    }\n    toVmTransaction() {\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            common: this.common,\n            nonce: this.nonce.toBigInt(),\n            gasPrice: this.gasPrice.toBigInt(),\n            gasLimit: this.gas.toBigInt(),\n            to: this.to,\n            value: this.value.toBigInt(),\n            data,\n            getSenderAddress: () => this.from,\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                return this.calculateIntrinsicGas();\n            },\n            getUpfrontCost: () => {\n                const { gas, gasPrice, value } = this;\n                return gas.toBigInt() * gasPrice.toBigInt() + value.toBigInt();\n            },\n            supports: (capability) => {\n                return false;\n            }\n        };\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        // only legacy transactions can work with EIP-155 deactivated.\n        // (EIP-2930 and EIP-1559 made EIP-155 obsolete and this logic isn't needed\n        // for those transactions)\n        const eip155IsActive = this.common.gteHardfork(\"spuriousDragon\");\n        let chainId;\n        let raw;\n        let data;\n        let dataLength;\n        let sig;\n        if (eip155IsActive) {\n            chainId = utils_1.Quantity.toBuffer(this.common.chainId());\n            raw = this.toEthRawTransaction(chainId, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY);\n            data = (0, rlp_1.encodeRange)(raw, 0, 6);\n            dataLength = data.length;\n            const ending = (0, rlp_1.encodeRange)(raw, 6, 3);\n            const msgHash = (0, utils_1.keccak)((0, rlp_1.digest)([data.output, ending.output], dataLength + ending.length));\n            sig = (0, utils_1.ecsignLegacy)(msgHash, privateKey, this.common.chainId());\n        }\n        else {\n            raw = this.toEthRawTransaction(utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY);\n            data = (0, rlp_1.encodeRange)(raw, 0, 6);\n            dataLength = data.length;\n            const msgHash = (0, utils_1.keccak)((0, rlp_1.digest)([data.output], dataLength));\n            sig = (0, utils_1.ecsignLegacy)(msgHash, privateKey);\n        }\n        this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[6] = this.v.toBuffer();\n        raw[7] = this.r.toBuffer();\n        raw[8] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 6, 3);\n        const ranges = [data.output, encodedSignature.output];\n        const length = dataLength + encodedSignature.length;\n        // serialized is the rlp encoded raw data\n        this.serialized = (0, rlp_1.digest)(ranges, length);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.nonce.toBuffer(),\n            this.gasPrice.toBuffer(),\n            this.gas.toBuffer(),\n            this.to ? this.to.toBuffer() : utils_1.BUFFER_EMPTY,\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw, chainId) {\n        return (0, signing_1.computeIntrinsicsLegacyTx)(v, raw, chainId);\n    }\n    updateEffectiveGasPrice() { }\n}\nexports.LegacyTransaction = LegacyTransaction;\n//# sourceMappingURL=legacy-transaction.js.map","\"use strict\";\n// NOTE these params may need to be changed at each hardfork\n// they can be tracked here: https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/common/src/hardforks/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Params = void 0;\nexports.Params = {\n    /**\n     *  Per transaction not creating a contract. NOTE: Not payable on data of calls between transactions.\n     */\n    TRANSACTION_GAS: 21000n,\n    /**\n     * Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions.\n     * Ganache supports eth_call and debuging old transactions that should be run\n     * in the context of their original hardfork, so hardforks we don't support\n     * are listed here.\n     */\n    TRANSACTION_DATA_NON_ZERO_GAS: new Map([\n        [\"chainstart\", 68n],\n        [\"homestead\", 68n],\n        [\"dao\", 68n],\n        [\"tangerineWhistle\", 68n],\n        [\"spuriousDragon\", 68n],\n        [\"byzantium\", 68n],\n        [\"constantinople\", 68n],\n        [\"petersburg\", 68n],\n        [\"istanbul\", 16n],\n        [\"muirGlacier\", 16n],\n        [\"berlin\", 16n],\n        [\"london\", 16n],\n        [\"arrowGlacier\", 16n],\n        [\"grayGlacier\", 16n],\n        [\"merge\", 16n],\n        [\"mergeForkIdTransition\", 16n],\n        [\"shanghai\", 16n]\n    ]),\n    /**\n     * Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions.\n     */\n    TRANSACTION_DATA_ZERO_GAS: 4n,\n    /**\n     * Fee for creation a transaction (includes base fee of `TRANSACTION_GAS`)\n     */\n    TRANSACTION_CREATION_GAS: 53000n,\n    /**\n     * Only used after shanghai hardFork, `initcode` per byte cost is 0.0625.\n     * While fractional gas costs are not permitted in the EVM, we can approximate\n     * it by charging per-word.\n     */\n    INITCODE_WORD_GAS: 2n,\n    /**\n     * Gas cost per address in an EIP-2930 Access List transaction\n     */\n    ACCESS_LIST_ADDRESS_GAS: 2400,\n    /**\n     * Gas cost per storage key in an EIP-2930 Access List transaction\n     */\n    ACCESS_LIST_STORAGE_KEY_GAS: 1900\n};\n//# sourceMappingURL=params.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=raw.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionType = void 0;\nvar TransactionType;\n(function (TransactionType) {\n    TransactionType[TransactionType[\"Legacy\"] = 0] = \"Legacy\";\n    TransactionType[TransactionType[\"EIP2930AccessList\"] = 1] = \"EIP2930AccessList\";\n    //todo: this should be EIP1559FeeMarket\n    //https://github.com/trufflesuite/ganache/issues/4462\n    TransactionType[TransactionType[\"EIP1559AccessList\"] = 2] = \"EIP1559AccessList\";\n})(TransactionType || (exports.TransactionType = TransactionType = {}));\n//# sourceMappingURL=rpc-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeTransaction = exports.hasPartialSignature = exports.toValidLengthAddress = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst base_transaction_1 = require(\"./base-transaction\");\nconst transaction_receipt_1 = require(\"./transaction-receipt\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst toValidLengthAddress = (address, fieldName) => {\n    const buffer = utils_1.Data.toBuffer(address);\n    if (buffer.byteLength !== ethereum_address_1.Address.ByteLength) {\n        throw new Error(`The field ${fieldName} must have byte length of ${ethereum_address_1.Address.ByteLength}`);\n    }\n    return ethereum_address_1.Address.from(buffer);\n};\nexports.toValidLengthAddress = toValidLengthAddress;\nconst hasPartialSignature = (data) => {\n    return data[\"v\"] != null || data[\"r\"] != null || data[\"s\"] != null;\n};\nexports.hasPartialSignature = hasPartialSignature;\nconst ONE_BUFFER = utils_1.Quantity.One.toBuffer();\n/**\n * A RuntimeTransaction can be changed; its hash is not finalized and it is not\n * yet part of a block.\n */\nclass RuntimeTransaction extends base_transaction_1.BaseTransaction {\n    constructor(data, common, extra) {\n        super(common, extra);\n        /**\n         * used by the miner to mark if this transaction is eligible for reordering or\n         * removal\n         */\n        this.locked = false;\n        this.validateAndSetSignature = (data) => {\n            // If we have v, r, or s validate and use them\n            if ((0, exports.hasPartialSignature)(data)) {\n                if (data.v == null || data.r == null || data.s == null) {\n                    throw new Error(\"Transaction signature is incomplete; v, r, and s are required.\");\n                }\n                // if we have a signature the `nonce` field is required\n                if (data.nonce == null) {\n                    throw new Error(\"Signed transaction is incomplete; nonce is required.\");\n                }\n                this.v = utils_1.Quantity.from(data.v, true);\n                this.r = utils_1.Quantity.from(data.r, true);\n                this.s = utils_1.Quantity.from(data.s, true);\n                // compute the `hash` and the `from` address\n                const raw = this.toEthRawTransaction(this.v.toBuffer(), this.r.toBuffer(), this.s.toBuffer());\n                this.raw = raw;\n                if (!this.from) {\n                    const { from, serialized, hash } = this.computeIntrinsics(this.v, raw, this.common.chainId());\n                    // if the user specified a `from` address in addition to the  `v`, `r`,\n                    //  and `s` values, make sure the `from` address matches\n                    if (data.from !== null) {\n                        const userFrom = (0, exports.toValidLengthAddress)(data.from, \"from\");\n                        if (!from.toBuffer().equals(userFrom.toBuffer())) {\n                            throw new Error(\"Transaction is signed and contains a `from` field, but the signature doesn't match.\");\n                        }\n                    }\n                    this.from = from;\n                    this.serialized = serialized;\n                    this.hash = hash;\n                }\n            }\n            else if (data.from != null) {\n                // we don't have a signature yet, so we just need to record the `from`\n                // address for now. The TransactionPool will fill in the `hash` and\n                // `raw` fields during signing\n                this.from = (0, exports.toValidLengthAddress)(data.from, \"from\");\n            }\n        };\n        let finalizer;\n        this.finalized = new Promise(resolve => {\n            finalizer = (...args) => process.nextTick(resolve, ...args);\n        });\n        this.finalizer = finalizer;\n        if (!Array.isArray(data)) {\n            // handle JSON\n            this.nonce = utils_1.Quantity.from(data.nonce, true);\n            this.gas = utils_1.Quantity.from(data.gas == null ? data.gasLimit : data.gas);\n            this.to = data.to == null ? null : (0, exports.toValidLengthAddress)(data.to, \"to\");\n            this.value = utils_1.Quantity.from(data.value || 0);\n            const dataVal = data.data == null\n                ? data.input == null\n                    ? \"0x\"\n                    : data.input\n                : data.data;\n            this.data = utils_1.Data.from(dataVal);\n        }\n    }\n    /**\n     * Initializes the receipt and logs\n     * @param result -\n     * @returns RLP encoded data for use in a transaction trie\n     */\n    fillFromResult(result, cumulativeGasUsed) {\n        const vmResult = result.execResult;\n        const execException = vmResult.exceptionError;\n        let status;\n        if (execException) {\n            status = utils_1.BUFFER_ZERO;\n            this.execException = new ethereum_utils_1.RuntimeError(this.hash, result, ethereum_utils_1.RETURN_TYPES.TRANSACTION_HASH);\n        }\n        else {\n            status = ONE_BUFFER;\n        }\n        const receipt = (this.receipt = transaction_receipt_1.InternalTransactionReceipt.fromValues(status, utils_1.Quantity.toBuffer(cumulativeGasUsed), result.bloom.bitvector, (this.logs = vmResult.logs || []), utils_1.Quantity.toBuffer(result.totalGasSpent), result.createdAddress ? result.createdAddress.buf : null, this.type));\n        return receipt.serialize(false);\n    }\n    getReceipt() {\n        return this.receipt;\n    }\n    getLogs() {\n        return this.logs;\n    }\n    /**\n     * Returns a Promise that is resolved with the confirmation status and, if\n     * appropriate, an error property.\n     *\n     * Note: it is possible to be confirmed AND have an error\n     *\n     * @param _event - \"finalized\"\n     */\n    once(_event) {\n        return this.finalized;\n    }\n    /**\n     * Mark this transaction as finalized, notifying all past and future\n     * \"finalized\" event subscribers.\n     *\n     * Note:\n     *\n     * @param status -\n     * @param error -\n     */\n    finalize(status, error = null) {\n        // resolves the `#finalized` promise\n        this.finalizer({ status, error });\n    }\n}\nexports.RuntimeTransaction = RuntimeTransaction;\n//# sourceMappingURL=runtime-transaction.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeIntrinsicsFeeMarketTx = exports.computeIntrinsicsAccessListTx = exports.digestWithPrefix = exports.encodeWithPrefix = exports.computeIntrinsicsLegacyTx = exports.computeFromAddress = exports.publicKeyConvert = exports.ecdsaRecover = exports.isValidSigRecovery = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\n/**\n * Copies `length` bytes from `source` to the `target`, filling remaining\n * bytes beyond `length - source.length` with `0`. Fills to the left.\n *\n * ```typescript\n * const source = Buffer.from([1, 2, 3]);\n * const target = Buffer.from([9, 9, 9, 9, 9, 9]);\n * copyOrFill(source, target, 1, 4);\n * // target.equals(Buffer.from([9, 0, 1, 2, 3, 9]));\n * //                               ^  ^  ^  ^\n * ```\n *\n * @param source - A Buffer to copy from.\n * @param target - A Buffer to copy into.\n * @param targetStart - The offset within `target` at which to begin writing.\n * @param length - The amount of bytes to copy or fill into the `target`.\n */\nfunction copyOrFill(source, target, targetStart, length) {\n    if (source.byteLength > length)\n        throw new Error(\"Invalid signature\");\n    // first, copy zeroes\n    const numZeroes = length - source.byteLength;\n    const endZeroes = targetStart + numZeroes;\n    let i = targetStart;\n    for (; i < endZeroes; i++) {\n        target[i] = 0;\n    }\n    // then copy the source into the target:\n    let end = targetStart + length;\n    const sourceOffset = targetStart + numZeroes;\n    for (; i < end; i++) {\n        target[i] = source[i - sourceOffset];\n    }\n}\nconst isValidSigRecovery = (recovery) => {\n    return recovery === 1 || recovery === 0;\n};\nexports.isValidSigRecovery = isValidSigRecovery;\n/**\n *\n * @param sharedBuffer - A Buffer, where bytes 0 - 97 are to be used by this function\n * @param r -\n * @param s -\n * @param msgHash -\n * @param recovery -\n */\nconst ecdsaRecover = (partialRlp, sharedBuffer, v, chainId, rBuf, sBuf) => {\n    let data;\n    let recid;\n    const eip155V = chainId * 2n + 35n;\n    const isEip155 = v === eip155V || v === eip155V + 1n;\n    if (isEip155) {\n        const chainBuf = (0, utils_1.bigIntToBuffer)(chainId);\n        const extras = [chainBuf, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY];\n        const epilogue = (0, rlp_1.encodeRange)(extras, 0, 3);\n        data = (0, rlp_1.digest)([partialRlp.output, epilogue.output], partialRlp.length + epilogue.length);\n        recid = Number(v - eip155V);\n    }\n    else {\n        data = (0, rlp_1.digest)([partialRlp.output], partialRlp.length);\n        recid = Number(v) - 27;\n    }\n    return _ecdsaRecover(data, sharedBuffer, rBuf, sBuf, recid);\n};\nexports.ecdsaRecover = ecdsaRecover;\nfunction _ecdsaRecover(data, sharedBuffer, rBuf, sBuf, recid) {\n    if (!(0, exports.isValidSigRecovery)(recid)) {\n        throw new Error(\"Invalid signature v value\");\n    }\n    const message = (0, utils_1.keccak)(data);\n    const signature = sharedBuffer.slice(0, 64);\n    copyOrFill(rBuf, signature, 0, 32);\n    copyOrFill(sBuf, signature, 32, 32);\n    const output = sharedBuffer.slice(0, 33);\n    const success = secp256k1_1.default.ecdsaRecover(output, signature, recid, message);\n    if (success !== 0) {\n        throw new Error(\"Invalid Signature\");\n    }\n    return output;\n}\n/**\n *\n * @param sharedBuffer - A Buffer, bytes 0 - 65 will be overwritten\n * @param senderPubKey -\n */\nconst publicKeyConvert = (sharedBuffer, senderPubKey) => {\n    const publicKey = sharedBuffer.slice(0, 65);\n    const result = secp256k1_1.default.publicKeyConvert(publicKey, senderPubKey);\n    if (result !== 0) {\n        throw new Error(\"Invalid Signature\");\n    }\n    return publicKey;\n};\nexports.publicKeyConvert = publicKeyConvert;\n/**\n * A Buffer that can be reused by `computeFromAddress`.\n */\nconst SHARED_BUFFER = Buffer.allocUnsafe(65);\nconst computeFromAddress = (partialRlp, v, rBuf, sBuf, chainId) => {\n    const senderPubKey = (0, exports.ecdsaRecover)(partialRlp, SHARED_BUFFER, v, chainId, rBuf, sBuf);\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    return ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.slice(1)).slice(-20));\n};\nexports.computeFromAddress = computeFromAddress;\nconst computeIntrinsicsLegacyTx = (v, raw, chainId) => {\n    const encodedData = (0, rlp_1.encodeRange)(raw, 0, 6);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 6, 3);\n    const ranges = [encodedData.output, encodedSignature.output];\n    const length = encodedData.length + encodedSignature.length;\n    const serialized = (0, rlp_1.digest)(ranges, length);\n    return {\n        from: (0, exports.computeFromAddress)(encodedData, v.toBigInt(), raw[7], raw[8], chainId),\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized\n    };\n};\nexports.computeIntrinsicsLegacyTx = computeIntrinsicsLegacyTx;\n/**\n * Allocates a buffer of size + 1, to be used by `digest`.\n * The extra byte is used to store the transaction type.\n * The tx type is stored in the first byte of the buffer.\n * @param size\n * @returns\n */\nconst allocUnsafePrefix = (size) => Buffer.allocUnsafe(size + 1);\n/**\n * Encodes the given `raw` data and prepends the `prefix` to the output Buffer.\n * @param prefix must be smaller than 0x7f https://eips.ethereum.org/EIPS/eip-2718#transactiontype-only-goes-up-to-0x7f\n * @param raw\n * @returns\n */\nconst encodeWithPrefix = (prefix, raw) => {\n    const encodedData = (0, rlp_1.encodeRange)(raw, 0, raw.length);\n    const ranges = [encodedData.output];\n    const length = encodedData.length;\n    return (0, exports.digestWithPrefix)(prefix, ranges, length);\n};\nexports.encodeWithPrefix = encodeWithPrefix;\n/**\n * Digests the rlp `ranges` and prepends the `prefix` to the output Buffer.\n *\n * This function avoids the need to copy the output of `digest` into a new\n * prefixed buffer by over provisioning the initial output buffer.\n * @param prefix must be smaller than 0x7f https://eips.ethereum.org/EIPS/eip-2718#transactiontype-only-goes-up-to-0x7f\n * @param ranges\n * @param length\n * @returns\n */\nconst digestWithPrefix = (prefix, ranges, length) => {\n    // digest the ranges using the provided allocUnsafe function at an offset of `1`\n    const output = (0, rlp_1.digest)(ranges, length, 1, allocUnsafePrefix);\n    // set the first byte to the prefix\n    output[0] = prefix;\n    return output;\n};\nexports.digestWithPrefix = digestWithPrefix;\nconst computeIntrinsicsAccessListTx = (v, raw) => {\n    const encodedData = (0, rlp_1.encodeRange)(raw, 0, 8);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 8, 3);\n    const ranges = [encodedData.output, encodedSignature.output];\n    const length = encodedData.length + encodedSignature.length;\n    const serialized = (0, exports.digestWithPrefix)(1, ranges, length);\n    const data = (0, exports.digestWithPrefix)(1, [encodedData.output], encodedData.length);\n    const senderPubKey = _ecdsaRecover(data, SHARED_BUFFER, raw[9], raw[10], v.toNumber());\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    const from = ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.subarray(1)).subarray(-20));\n    return {\n        from: from,\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized\n    };\n};\nexports.computeIntrinsicsAccessListTx = computeIntrinsicsAccessListTx;\nconst computeIntrinsicsFeeMarketTx = (v, raw) => {\n    const encodedData = (0, rlp_1.encodeRange)(raw, 0, 9);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 9, 3);\n    const ranges = [encodedData.output, encodedSignature.output];\n    const length = encodedData.length + encodedSignature.length;\n    const serialized = (0, exports.digestWithPrefix)(2, ranges, length);\n    const data = (0, exports.digestWithPrefix)(2, [encodedData.output], encodedData.length);\n    const senderPubKey = _ecdsaRecover(data, SHARED_BUFFER, raw[10], raw[11], v.toNumber());\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    const from = ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.slice(1)).slice(-20));\n    return {\n        from: from,\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized\n    };\n};\nexports.computeIntrinsicsFeeMarketTx = computeIntrinsicsFeeMarketTx;\n//# sourceMappingURL=signing.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionFactory = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst legacy_transaction_1 = require(\"./legacy-transaction\");\nconst eip2930_access_list_transaction_1 = require(\"./eip2930-access-list-transaction\");\nconst rpc_transaction_1 = require(\"./rpc-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst eip1559_fee_market_transaction_1 = require(\"./eip1559-fee-market-transaction\");\nconst secp256k1_1 = require(\"@ganache/secp256k1\");\n/**\n * @param common\n * @param tx\n * @throws\n */\nfunction assertValidTransactionSValue(common, tx) {\n    // Transaction signatures whose s-value is greater than secp256k1n/2 are\n    // invalid after EIP-2 hardfork (homestead). See: https://eips.ethereum.org/EIPS/eip-2\n    if (tx.s &&\n        tx.s.toBigInt() >= secp256k1_1.SECP256K1_MAX_PRIVATE_KEY_DIV_2 &&\n        // EIP-2 is in homestead, but we can't use isActivatedEIP(2) because\n        // Common doesn't have that information for this hardfork.\n        common.gteHardfork(\"homestead\")) {\n        throw new Error(\"Invalid Signature: s-values greater than secp256k1n/2 are considered invalid\");\n    }\n}\nclass TransactionFactory {\n    constructor(raw, common) {\n        const [txData, extra] = (0, rlp_1.decode)(raw);\n        this.tx = TransactionFactory.fromDatabaseTx(txData, common, extra);\n    }\n    /**\n     * Validates the txType against active hardforks and EIPs. May\n     * coerce transactions to a transaction type that differs from the specified\n     * txType. For example, if the txType is EIP2930AccessList but the hardfork\n     * is before EIP-2930 is activated, the txType will be coerced to Legacy.\n     *\n     * @param txData\n     * @param txType\n     * @param common\n     * @param extra\n     * @returns\n     */\n    static _fromUnsafeUserData(txData, txType, common, extra) {\n        // if tx type envelope isn't available yet on this HF,\n        // return legacy txs as is and convert typed txs to legacy\n        if (!common.isActivatedEIP(2718)) {\n            return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n        }\n        else if (!common.isActivatedEIP(1559)) {\n            if (txType === rpc_transaction_1.TransactionType.Legacy) {\n                return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n            }\n            else if (txType === rpc_transaction_1.TransactionType.EIP2930AccessList) {\n                if (common.isActivatedEIP(2930)) {\n                    return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData((txData), common, extra);\n                }\n                else {\n                    // TODO: I believe this is unreachable with current architecture.\n                    // If 2718 is supported, so is 2930.\n                    // Issue: https://github.com/trufflesuite/ganache/issues/3487\n                    throw new ethereum_utils_1.CodedError(`EIP 2930 is not activated.`, utils_1.JsonRpcErrorCode.INVALID_PARAMS);\n                }\n            }\n            else if (txType === rpc_transaction_1.TransactionType.EIP1559AccessList) {\n                throw new ethereum_utils_1.CodedError(`EIP 1559 is not activated.`, utils_1.JsonRpcErrorCode.INVALID_PARAMS);\n            }\n        }\n        // eip 1559, 2930, and 2718 are activated\n        else {\n            // we can assume that all database transactions came from us, so\n            // the type doesn't need to be normalized.\n            if (Array.isArray(txData)) {\n                if (txType === rpc_transaction_1.TransactionType.Legacy) {\n                    return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === rpc_transaction_1.TransactionType.EIP2930AccessList) {\n                    return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === rpc_transaction_1.TransactionType.EIP1559AccessList) {\n                    return eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData, common, extra);\n                }\n            }\n            else {\n                const toEIP1559 = (txType === rpc_transaction_1.TransactionType.Legacy ||\n                    txType === rpc_transaction_1.TransactionType.EIP2930AccessList) &&\n                    txData.gasPrice === undefined;\n                if (txType === rpc_transaction_1.TransactionType.EIP1559AccessList || toEIP1559) {\n                    const tx = eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData, common, extra);\n                    if (toEIP1559) {\n                        // they didn't specify the type as eip-1559 (type 2), so we are\n                        // upgrading it. BUT, there's still a chance they sent us this data,\n                        // so we don't want to overwrite it.\n                        if (!txData.maxFeePerGas) {\n                            tx.maxFeePerGas = utils_1.Quantity.from(null);\n                        }\n                        if (!txData.maxPriorityFeePerGas) {\n                            tx.maxPriorityFeePerGas = utils_1.Quantity.Gwei;\n                        }\n                    }\n                    return tx;\n                }\n                else if (txType === rpc_transaction_1.TransactionType.Legacy) {\n                    return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === rpc_transaction_1.TransactionType.EIP2930AccessList) {\n                    // if no access list is provided, we convert to legacy\n                    if (txData.accessList === undefined) {\n                        return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                    }\n                    else {\n                        return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n                    }\n                }\n            }\n        }\n        throw new ethereum_utils_1.CodedError(`Tx instantiation with supplied type not supported`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The rpc transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromRpc(txData, common, extra) {\n        const txType = this.typeOfRPC(txData);\n        const tx = this._fromUnsafeUserData(txData, txType, common, extra);\n        assertValidTransactionSValue(common, tx);\n        return tx;\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The raw transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromDatabaseTx(txData, common, extra) {\n        const txType = this.typeOfRaw(txData);\n        switch (txType) {\n            case rpc_transaction_1.TransactionType.EIP1559AccessList:\n                return eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData.slice(1), common, extra);\n            case rpc_transaction_1.TransactionType.Legacy:\n                return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n            case rpc_transaction_1.TransactionType.EIP2930AccessList:\n                return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData.slice(1), common, extra);\n            default:\n                throw new ethereum_utils_1.CodedError(`Transactions with supplied type ${txType} not supported`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n        }\n    }\n    /**\n     * Create a transaction from a `txData` object without the type field in the first position (for type 1 and 2 txs)\n     *\n     * This method should only be used with \"safe\" data that doesn't need to be validated against the active hardforks or\n     * EIPs. In other words: it should come from a fork, or from the database.\n     *\n     * @tparam txTYpe - The type of txData. Throws if the the type is not supported.\n     * @param txData - The raw transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     * @param extra\n     */\n    static fromSafeTypeAndTxData(txType, txData, common, extra) {\n        switch (txType) {\n            case rpc_transaction_1.TransactionType.EIP1559AccessList:\n                return eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData, common, extra);\n            case rpc_transaction_1.TransactionType.Legacy:\n                return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n            case rpc_transaction_1.TransactionType.EIP2930AccessList:\n                return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n            default:\n                throw new ethereum_utils_1.CodedError(`Transactions with supplied type ${txType} not supported`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n        }\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * When transaction types are activated (EIP 2718) the txData will be checked\n     * for a transaction envelope (first byte < 192) before determining the\n     * decoding strategy, otherwise it will be decoded as a Legacy Transaction. If\n     * the transaction contains a transaction envelop, but EIP 2718 is not active\n     * decoding will fail and an exception will be thrown.\n     *\n     * @param txData - The raw hex string transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromString(txData, common) {\n        let data = utils_1.Data.toBuffer(txData);\n        const type = data[0];\n        const txType = this.typeOf(type);\n        let tx;\n        if (common.isActivatedEIP(2718)) {\n            let raw;\n            try {\n                raw = (0, rlp_1.decode)(txType === rpc_transaction_1.TransactionType.Legacy ? data : data.slice(1));\n            }\n            catch (e) {\n                throw new Error(\"Could not decode transaction: \" + e.message);\n            }\n            tx = this._fromUnsafeUserData(raw, txType, common);\n        }\n        else {\n            let raw;\n            try {\n                raw = (0, rlp_1.decode)(data);\n            }\n            catch (e) {\n                throw new Error(\"Could not decode transaction: \" + e.message);\n            }\n            tx = this._fromUnsafeUserData(raw, rpc_transaction_1.TransactionType.Legacy, common);\n        }\n        assertValidTransactionSValue(common, tx);\n        return tx;\n    }\n    static typeOf(type) {\n        if (type === rpc_transaction_1.TransactionType.EIP1559AccessList ||\n            type === rpc_transaction_1.TransactionType.EIP2930AccessList) {\n            return type;\n        }\n        else {\n            return rpc_transaction_1.TransactionType.Legacy;\n        }\n    }\n    /**\n     * Pulls the type out of the raw transaction data, which is the first byte of\n     * the raw data, unless the data is a legacy transaction (raw.length === 9),\n     * in which case the type is `0`.\n     *\n     * This does not validate the type, it just returns it.\n     *\n     * @param raw\n     * @returns\n     */\n    static typeOfRaw(raw) {\n        // LegacyTransactions won't have the type up front to parse\n        if (raw.length === 9) {\n            return rpc_transaction_1.TransactionType.Legacy;\n        }\n        return raw[0][0];\n    }\n    static typeOfRPC(rpc) {\n        if (!(\"type\" in rpc) || rpc.type === undefined) {\n            return rpc_transaction_1.TransactionType.Legacy;\n        }\n        else {\n            // The type must be a hex value\n            const txType = parseInt(rpc.type, 16);\n            return this.typeOf(txType);\n        }\n    }\n}\nexports.TransactionFactory = TransactionFactory;\n//# sourceMappingURL=transaction-factory.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _InternalTransactionReceipt_init;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalTransactionReceipt = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst utils_1 = require(\"@ganache/utils\");\nconst STATUSES = [utils_1.Quantity.Zero, utils_1.Quantity.One];\nclass InternalTransactionReceipt {\n    constructor(data) {\n        _InternalTransactionReceipt_init.set(this, (status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress = null, type = null) => {\n            this.raw = [status, cumulativeGasUsed, logsBloom, logs];\n            this.contractAddress = contractAddress;\n            this.gasUsed = gasUsed;\n            this.txType = type;\n        });\n        if (data) {\n            const decoded = (0, rlp_1.decode)(data);\n            __classPrivateFieldGet(this, _InternalTransactionReceipt_init, \"f\").call(this, decoded[0], decoded[1], decoded[2], decoded[3], decoded[4], decoded[5]);\n        }\n    }\n    static fromValues(status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress, type = null) {\n        const receipt = new InternalTransactionReceipt();\n        __classPrivateFieldGet(receipt, _InternalTransactionReceipt_init, \"f\").call(receipt, status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress, type);\n        return receipt;\n    }\n    serialize(all) {\n        if (this.encoded == null) {\n            this.encoded = (0, rlp_1.encodeRange)(this.raw, 0, 4);\n        }\n        if (all) {\n            // the database format includes gasUsed and the contractAddress:\n            const extras = [\n                this.gasUsed,\n                this.contractAddress\n            ];\n            const epilogue = (0, rlp_1.encodeRange)(extras, 0, 2);\n            return (0, rlp_1.digest)([this.encoded.output, epilogue.output], this.encoded.length + epilogue.length);\n        }\n        else {\n            // receipt trie format:\n            const serialized = (0, rlp_1.digest)([this.encoded.output], this.encoded.length);\n            return this.txType\n                ? Buffer.concat([this.txType.toBuffer(), serialized])\n                : serialized;\n        }\n    }\n    toJSON(transaction, common) {\n        const raw = this.raw;\n        const contractAddress = this.contractAddress.length === 0\n            ? null\n            : utils_1.Data.from(this.contractAddress);\n        const { blockHash, blockNumber } = transaction;\n        const blockLog = ethereum_utils_1.BlockLogs.create(blockHash);\n        const transactionHash = transaction.hash;\n        const transactionIndex = transaction.index;\n        blockLog.blockNumber = blockNumber;\n        raw[3].forEach(l => blockLog.append(transactionIndex, transactionHash, l));\n        const logs = [...blockLog.toJSON()];\n        const json = {\n            transactionHash,\n            transactionIndex,\n            blockNumber,\n            blockHash,\n            from: transaction.from,\n            to: contractAddress ? null : transaction.to,\n            cumulativeGasUsed: utils_1.Quantity.from(raw[1]),\n            gasUsed: utils_1.Quantity.from(this.gasUsed),\n            contractAddress,\n            logs,\n            logsBloom: utils_1.Data.from(raw[2], 256),\n            status: STATUSES[raw[0][0]],\n            effectiveGasPrice: transaction.effectiveGasPrice\n        };\n        if (transaction.type && common.isActivatedEIP(2718)) {\n            json.type = transaction.type;\n        }\n        return json;\n    }\n}\nexports.InternalTransactionReceipt = InternalTransactionReceipt;\n_InternalTransactionReceipt_init = new WeakMap();\n//# sourceMappingURL=transaction-receipt.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rawFromRpc = exports.serializeForDb = exports.serializeRpcForDb = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst rpc_transaction_1 = require(\"./rpc-transaction\");\nconst access_lists_1 = require(\"./access-lists\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nfunction serializeRpcForDb(tx, blockHash, blockNumber, transactionIndex) {\n    let type;\n    if (!(\"type\" in tx) || tx.type === undefined) {\n        type = rpc_transaction_1.TransactionType.Legacy;\n    }\n    else {\n        type = parseInt(tx.type, 16);\n    }\n    const txData = {\n        raw: rawFromRpc(tx, type),\n        from: ethereum_address_1.Address.from(tx.from),\n        hash: utils_1.Data.from(tx.hash, 32),\n        // this assumes that gasPrice has been set - even for EIP-1559 Fee Market transactions\n        effectiveGasPrice: utils_1.Quantity.from(tx.gasPrice),\n        type: utils_1.Quantity.from(type)\n    };\n    return serializeForDb(txData, blockHash, blockNumber, transactionIndex);\n}\nexports.serializeRpcForDb = serializeRpcForDb;\nfunction serializeForDb(tx, blockHash, blockNumber, transactionIndex) {\n    const legacy = tx.raw.length === 9;\n    // todo(perf):make this work with encodeRange and digest\n    const txAndExtraData = [\n        // todo: this is encoded differently in the tx table than it is in the\n        // block table. we should migrate the tx table to use the same format as\n        // the block (`Buffer.concat([type, encode(raw)])`) so that we can avoid\n        // block it twice for each block save step.\n        legacy ? tx.raw : [tx.type.toBuffer(), ...tx.raw],\n        [\n            tx.from.buf,\n            tx.hash.toBuffer(),\n            blockHash.toBuffer(),\n            blockNumber.toBuffer(),\n            transactionIndex.toBuffer(),\n            tx.effectiveGasPrice.toBuffer()\n        ]\n    ];\n    return (0, rlp_1.encode)(txAndExtraData);\n}\nexports.serializeForDb = serializeForDb;\nfunction rawFromRpc(txData, txType) {\n    const chainId = utils_1.Quantity.toBuffer(txData.chainId);\n    const nonce = utils_1.Quantity.toBuffer(txData.nonce);\n    const gasPrice = utils_1.Quantity.toBuffer(txData.gasPrice);\n    const gasLimit = utils_1.Quantity.toBuffer(txData.gas || txData.gasLimit);\n    // todo: use Address type\n    const to = utils_1.Data.toBuffer(txData.to, 20);\n    const value = utils_1.Quantity.toBuffer(txData.value);\n    const data = utils_1.Data.toBuffer(txData.data || txData.input);\n    const v = utils_1.Data.toBuffer(txData.v);\n    const r = utils_1.Data.toBuffer(txData.r);\n    const s = utils_1.Data.toBuffer(txData.s);\n    // if no access list is provided, we convert to legacy\n    const targetType = txType === rpc_transaction_1.TransactionType.EIP2930AccessList &&\n        txData.accessList === undefined\n        ? rpc_transaction_1.TransactionType.Legacy\n        : txType;\n    switch (targetType) {\n        case rpc_transaction_1.TransactionType.Legacy:\n            return [nonce, gasPrice, gasLimit, to, value, data, v, r, s];\n        case rpc_transaction_1.TransactionType.EIP2930AccessList:\n            return [\n                chainId,\n                nonce,\n                gasPrice,\n                gasLimit,\n                to,\n                value,\n                data,\n                // accesslists is _always_ set, otherwise it's legacy\n                txData.accessList\n                    ? access_lists_1.AccessLists.getAccessListData(txData.accessList).accessList\n                    : [],\n                v,\n                r,\n                s\n            ];\n        // todo: should this be TransactionType.EIP1559FeeMarket?\n        case rpc_transaction_1.TransactionType.EIP1559AccessList:\n            return [\n                chainId,\n                nonce,\n                utils_1.Quantity.toBuffer(txData.maxPriorityFeePerGas),\n                utils_1.Quantity.toBuffer(txData.maxFeePerGas),\n                gasLimit,\n                to,\n                value,\n                data,\n                txData.accessList\n                    ? access_lists_1.AccessLists.getAccessListData(txData.accessList).accessList\n                    : [],\n                v,\n                r,\n                s\n            ];\n        default:\n            throw new ethereum_utils_1.CodedError(\"Tx instantiation with supplied type not supported\", utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n    }\n}\nexports.rawFromRpc = rawFromRpc;\n//# sourceMappingURL=transaction-serialization.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=vm-transaction.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-utils\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbortError = void 0;\nclass AbortError extends Error {\n    constructor() {\n        super(\"The user aborted a request.\");\n    }\n}\nexports.AbortError = AbortError;\n//# sourceMappingURL=abort-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallError = void 0;\nconst errors_1 = require(\"./errors\");\nconst coded_error_1 = require(\"./coded-error\");\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nclass CallError extends coded_error_1.CodedError {\n    constructor(result) {\n        const execResult = result.execResult;\n        const error = execResult.exceptionError.error;\n        let message = errors_1.VM_EXCEPTION + error;\n        super(message, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n        coded_error_1.CodedError.captureStackTraceExtended.bind(this, message);\n        this.name = this.constructor.name;\n        const { returnValue } = execResult;\n        const reason = coded_error_1.CodedError.createRevertReason(returnValue);\n        this.message = reason ? message + \" \" + reason : message;\n        this.data = utils_2.Data.toString(returnValue);\n    }\n}\nexports.CallError = CallError;\n//# sourceMappingURL=call-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodedError = void 0;\nconst ethereumjs_abi_1 = require(\"ethereumjs-abi\");\nconst REVERT_REASON = Buffer.from(\"08c379a0\", \"hex\"); // keccak(\"Error(string)\").slice(0, 4)\nclass CodedError extends Error {\n    constructor(message, code) {\n        super(message);\n        CodedError.captureStackTraceExtended.bind(this, message);\n        this.code = code;\n    }\n    static from(error, code) {\n        const codedError = new CodedError(error.message, code);\n        codedError.stack = error.stack;\n        return codedError;\n    }\n    static nonEnumerableProperty(value) {\n        // The field `enumerable` is `false` by default.\n        return {\n            value: value,\n            writable: true,\n            configurable: true\n        };\n    }\n    static captureStackTraceExtended(message) {\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        else {\n            // Generic way to set the error stack trace.\n            Object.defineProperty(this, \"stack\", CodedError.nonEnumerableProperty(Error(message).stack));\n            // Use the `+` operator with an empty string to implicitly type cast the\n            // `message` argument into a string.\n            Object.defineProperty(this, \"message\", CodedError.nonEnumerableProperty(message !== void 0 ? \"\" + message : \"\"));\n        }\n    }\n    static createRevertReason(returnValue) {\n        let reason;\n        if (returnValue.length > 4 &&\n            REVERT_REASON.compare(returnValue, 0, 4) === 0) {\n            try {\n                // it is possible for the `returnValue` to be gibberish that can't be\n                // decoded. See: https://github.com/trufflesuite/ganache/pull/452\n                reason = (0, ethereumjs_abi_1.rawDecode)([\"bytes\"], returnValue.slice(4))[0].toString();\n            }\n            catch {\n                // ignore error since reason string recover is impossible\n                reason = null;\n            }\n        }\n        else {\n            reason = null;\n        }\n        return reason;\n    }\n}\nexports.CodedError = CodedError;\n//# sourceMappingURL=coded-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.INSUFFICIENT_FUNDS = exports.TRANSACTION_LOCKED = exports.VM_EXCEPTIONS = exports.VM_EXCEPTION = exports.GAS_LIMIT = exports.INITCODE_TOO_LARGE = exports.INTRINSIC_GAS_TOO_LOW = exports.REPLACED = exports.UNDERPRICED = exports.NONCE_TOO_LOW = exports.INVALID_SENDER = void 0;\n/**\n * Returned if the transaction contains an invalid signature.\n */\nexports.INVALID_SENDER = \"invalid sender\";\n/**\n * Returned if the nonce of a transaction is lower than the one present in the local chain.\n */\nexports.NONCE_TOO_LOW = \"nonce too low\";\n/**\n * Returned if a transaction's gas price is below the minimum configured for the transaction pool.\n */\nexports.UNDERPRICED = \"transaction underpriced\";\n/**\n * Returned if a transaction's gas price is below the minimum configured for the transaction pool.\n */\nexports.REPLACED = \"transaction replaced by better transaction\";\n/**\n * Returned if the transaction is specified to use less gas than required to start the invocation.\n */\nexports.INTRINSIC_GAS_TOO_LOW = \"intrinsic gas too low\";\n/**\n * Returned if the transaction's `to` address is empty and its `data`/`input` field is greater than the EIP-3860 limit of\n * 49152 bytes. Can be bypassed by setting the `--chain.allowUnlimitedInitCodeSize` flag to `true`.\n */\nexports.INITCODE_TOO_LARGE = \"Transaction's `data`/`input` field is greater than 49152 bytes, which isn't allowed as of EIP-3860. To bypass this restriction set the `--chain.allowUnlimitedInitCodeSize` flag to `true`.\";\n/**\n * Returned if a transaction's requested gas limit exceeds the maximum allowance of the current block.\n */\nexports.GAS_LIMIT = \"exceeds block gas limit\";\n/**\n * Prefix for a single VM Exception occurring when running a transaction or block\n */\nexports.VM_EXCEPTION = \"VM Exception while processing transaction: \";\n/**\n * Prefix for multiple VM Exceptions occurring when running transactions or a block\n */\nexports.VM_EXCEPTIONS = \"Multiple VM Exceptions while processing transactions: : \\n\\n\";\n/**\n * Returned if a replacement transaction is sent while the potentially replaced transaction is being mined.\n */\nexports.TRANSACTION_LOCKED = \"transaction can't be replaced, mining has already started. (please open an issue with reproduction steps: https://github.com/trufflesuite/ganache/issues/new)\";\n/**\n * Returned if a transaction may require more funds than than account currently has available.\n */\nexports.INSUFFICIENT_FUNDS = \"insufficient funds for gas * price + value\";\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeError = exports.RETURN_TYPES = void 0;\nconst errors_1 = require(\"./errors\");\nconst utils_1 = require(\"@ganache/utils\");\nconst coded_error_1 = require(\"./coded-error\");\nconst utils_2 = require(\"@ganache/utils\");\nvar RETURN_TYPES;\n(function (RETURN_TYPES) {\n    RETURN_TYPES[RETURN_TYPES[\"TRANSACTION_HASH\"] = 0] = \"TRANSACTION_HASH\";\n    RETURN_TYPES[RETURN_TYPES[\"RETURN_VALUE\"] = 1] = \"RETURN_VALUE\";\n})(RETURN_TYPES || (exports.RETURN_TYPES = RETURN_TYPES = {}));\nclass RuntimeError extends coded_error_1.CodedError {\n    constructor(transactionHash, result, returnType) {\n        const execResult = result.execResult;\n        const error = execResult.exceptionError.error;\n        let message = errors_1.VM_EXCEPTION + error;\n        super(message, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n        coded_error_1.CodedError.captureStackTraceExtended.bind(this, message);\n        this.name = this.constructor.name;\n        const hash = transactionHash.toString();\n        const { returnValue } = execResult;\n        const reason = coded_error_1.CodedError.createRevertReason(returnValue);\n        this.message = reason ? message + \" \" + reason : message;\n        this.data = {\n            hash: hash,\n            // in some failure scenarios, like when the initcode is too large,\n            // `runState` is undefined. In that case, we'll use `undefined` for the\n            // programCounter.\n            programCounter: execResult.runState?.programCounter,\n            result: returnType === RETURN_TYPES.TRANSACTION_HASH\n                ? hash\n                : utils_1.Data.toString(returnValue || \"0x\"),\n            reason: reason,\n            message: error\n        };\n    }\n}\nexports.RuntimeError = RuntimeError;\n//# sourceMappingURL=runtime-error.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./errors/coded-error\"), exports);\n__exportStar(require(\"./errors/errors\"), exports);\n__exportStar(require(\"./errors/runtime-error\"), exports);\n__exportStar(require(\"./errors/call-error\"), exports);\n__exportStar(require(\"./errors/abort-error\"), exports);\n__exportStar(require(\"./things/account\"), exports);\n__exportStar(require(\"./things/blocklogs\"), exports);\n__exportStar(require(\"./things/tags\"), exports);\n__exportStar(require(\"./things/trace-data\"), exports);\n__exportStar(require(\"./things/trace-storage-map\"), exports);\n__exportStar(require(\"./types/debug-storage\"), exports);\n__exportStar(require(\"./types/extract-values-from-types\"), exports);\n__exportStar(require(\"./types/filters\"), exports);\n__exportStar(require(\"./types/hex-datatypes\"), exports);\n__exportStar(require(\"./types/shh\"), exports);\n__exportStar(require(\"./types/subscriptions\"), exports);\n__exportStar(require(\"./types/trace-transaction\"), exports);\n__exportStar(require(\"./types/tuple-from-union\"), exports);\n__exportStar(require(\"./types/account-proof\"), exports);\n__exportStar(require(\"./types/fee-history\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst rlp_1 = require(\"@ganache/rlp\");\nclass Account {\n    constructor(address) {\n        this.storageRoot = util_1.KECCAK256_RLP;\n        this.codeHash = util_1.KECCAK256_NULL;\n        this.address = address;\n        this.balance = utils_1.Quantity.Empty;\n        this.nonce = utils_1.Quantity.Empty;\n    }\n    static fromBuffer(buffer) {\n        const account = Object.create(Account.prototype);\n        const raw = (0, rlp_1.decode)(buffer);\n        account.nonce = utils_1.Quantity.from(raw[0]);\n        account.balance = utils_1.Quantity.from(raw[1]);\n        account.storageRoot = raw[2];\n        account.codeHash = raw[3];\n        return account;\n    }\n    serialize() {\n        return (0, rlp_1.encode)([\n            this.nonce.toBuffer(),\n            this.balance.toBuffer(),\n            this.storageRoot,\n            this.codeHash\n        ]);\n    }\n}\nexports.Account = Account;\n//# sourceMappingURL=account.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockLogs = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst _raw = Symbol(\"raw\");\nconst _logs = Symbol(\"logs\");\nconst filterByTopic = (expectedTopics, logTopics) => {\n    // Exclude log if its number of topics is less than the number expected\n    if (expectedTopics.length > logTopics.length)\n        return false;\n    // for every expectedTopic, we must much the log topic in the same position\n    return expectedTopics.every((expectedTopic, logPosition) => {\n        // a `null` topic means \"anything\"\n        if (expectedTopic === null)\n            return true;\n        let expectedTopicSet;\n        if (!Array.isArray(expectedTopic)) {\n            return logTopics[logPosition].equals(utils_1.Data.toBuffer(expectedTopic));\n        }\n        // an empty rule set means \"anything\"\n        if (expectedTopic.length === 0)\n            return true;\n        expectedTopicSet = expectedTopic;\n        const logTopic = logTopics[logPosition];\n        // \"OR\" logic, e.g., [[A, B]] means log topic in the first position matching either \"A\" OR \"B\":\n        return expectedTopicSet.some(expectedTopic => logTopic.equals(utils_1.Data.toBuffer(expectedTopic)));\n    });\n};\nclass BlockLogs {\n    constructor(data) {\n        if (data) {\n            const decoded = (0, rlp_1.decode)(data);\n            this[_raw] = decoded;\n        }\n    }\n    /**\n     *\n     * @param blockHash - Creates an BlogLogs entity with an empty internal logs\n     * array.\n     */\n    static create(blockHash) {\n        const blockLog = Object.create(BlockLogs.prototype);\n        blockLog[_raw] = [blockHash.toBuffer(), []];\n        return blockLog;\n    }\n    /**\n     * rlpEncode's the blockHash and logs array for db storage\n     */\n    serialize() {\n        return (0, rlp_1.encode)(this[_raw]);\n    }\n    /**\n     * Appends the data to the internal logs array\n     * @param transactionIndex -\n     * @param transactionHash -\n     * @param log -\n     */\n    append(\n    /*removed: boolean, */ transactionIndex, transactionHash, log) {\n        this[_raw][1].push([\n            utils_2.BUFFER_ZERO,\n            transactionIndex.toBuffer(),\n            transactionHash.toBuffer(),\n            log[0],\n            log[1],\n            log[2] // `data`\n        ]);\n    }\n    /**\n     * Returns the number of logs in the internal logs array.\n     */\n    get length() {\n        return this[_raw][1].length;\n    }\n    static fromJSON(json) {\n        if (!json || json.length === 0) {\n            return null;\n        }\n        const blockHash = json[0].blockHash;\n        const blockNumber = json[0].blockNumber;\n        const blockLogs = BlockLogs.create(utils_1.Data.from(blockHash, 32));\n        blockLogs.blockNumber = utils_1.Quantity.from(blockNumber);\n        json.forEach(log => {\n            const address = ethereum_address_1.Address.from(log.address);\n            const blockNumber = log.blockNumber;\n            const data = Array.isArray(log.data)\n                ? log.data.map(d => utils_1.Data.toBuffer(d))\n                : utils_1.Data.toBuffer(log.data);\n            const logIndex = log.logIndex;\n            const removed = log.removed === false ? utils_2.BUFFER_ZERO : utils_1.Quantity.One.toBuffer();\n            const topics = Array.isArray(log.topics)\n                ? log.topics.map(t => utils_1.Data.toBuffer(t, 32))\n                : utils_1.Data.toBuffer(log.topics, 32);\n            const transactionHash = utils_1.Data.from(log.transactionHash, 32);\n            const transactionIndex = utils_1.Quantity.from(log.transactionIndex);\n            blockLogs.append(transactionIndex, transactionHash, [\n                address.toBuffer(),\n                topics,\n                data\n            ]);\n        });\n        return blockLogs;\n    }\n    toJSON() {\n        return this[_logs]().toJSON();\n    }\n    [_logs]() {\n        const blockNumber = this.blockNumber;\n        const raw = this[_raw];\n        const logs = raw[1];\n        const l = this.length;\n        const blockHash = utils_1.Data.from(raw[0]);\n        return {\n            toJSON() {\n                return {\n                    *[Symbol.iterator]() {\n                        for (let i = 0; i < l; i++) {\n                            yield BlockLogs.logToJSON(logs[i], utils_1.Quantity.from(i), blockHash, blockNumber);\n                        }\n                    }\n                };\n            },\n            *[Symbol.iterator]() {\n                for (let i = 0; i < l; i++) {\n                    const log = logs[i];\n                    const address = log[3];\n                    const topics = log[4];\n                    yield {\n                        address,\n                        topics,\n                        toJSON: () => BlockLogs.logToJSON(log, utils_1.Quantity.from(i), blockHash, blockNumber)\n                    };\n                }\n            }\n        };\n    }\n    /**\n     *\n     * @param log -\n     * @param logIndex - The index this log appears in the block\n     * @param blockHash - The hash of the block\n     * @param blockNumber - The block number\n     */\n    static logToJSON(log, logIndex, blockHash, blockNumber) {\n        const topics = log[4];\n        const data = log[5];\n        return {\n            address: ethereum_address_1.Address.from(log[3]),\n            blockHash,\n            blockNumber,\n            data: Array.isArray(data)\n                ? data.map(d => utils_1.Data.from(d, d.length))\n                : utils_1.Data.from(data, data.length),\n            logIndex,\n            removed: log[0].equals(utils_2.BUFFER_ZERO) ? false : true,\n            topics: Array.isArray(topics)\n                ? topics.map(t => utils_1.Data.from(t, 32))\n                : utils_1.Data.from(topics, 32),\n            transactionHash: utils_1.Data.from(log[2], 32),\n            transactionIndex: utils_1.Quantity.from(log[1])\n        };\n    }\n    /**\n     * Note: you must set `this.blockNumber: Quantity` first!\n     *\n     * Topics are order-dependent. A transaction with a log with topics [A, B] will be matched by the following topic\n     * filters:\n     *  ▸ [] \"anything\"\n     *  ▸ [A] \"A in first position (and anything after)\"\n     *  ▸ [null, B] \"anything in first position AND B in second position (and anything after)\"\n     *  ▸ [A, B] \"A\" in first position AND B in second position (and anything after)\"\n     *  ▸ [[A, B], [A, B]] \"(A OR B) in first position AND (A OR B) in second position (and anything after)\"\n     * @param expectedAddresses -\n     * @param expectedTopics -\n     * @returns JSON representation of the filtered logs\n     */\n    *filter(expectedAddresses, expectedTopics) {\n        const logs = this[_logs]();\n        if (expectedAddresses.length !== 0) {\n            if (expectedTopics.length === 0) {\n                for (const log of logs) {\n                    if (expectedAddresses.some(address => address.equals(log.address)))\n                        yield log.toJSON();\n                }\n            }\n            else {\n                for (const log of logs) {\n                    if (!expectedAddresses.some(address => address.equals(log.address)))\n                        continue;\n                    if (filterByTopic(expectedTopics, log.topics))\n                        yield log.toJSON();\n                }\n            }\n        }\n        else if (expectedTopics.length !== 0) {\n            for (const log of logs) {\n                if (filterByTopic(expectedTopics, log.topics))\n                    yield log.toJSON();\n            }\n        }\n        else {\n            yield* logs.toJSON();\n        }\n    }\n}\nexports.BlockLogs = BlockLogs;\n//# sourceMappingURL=blocklogs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tag = exports.InternalTag = void 0;\nvar InternalTag;\n(function (InternalTag) {\n    InternalTag[\"earliest\"] = \"earliest\";\n    InternalTag[\"finalized\"] = \"finalized\";\n    InternalTag[\"latest\"] = \"latest\";\n    InternalTag[\"safe\"] = \"safe\";\n    InternalTag[\"pending\"] = \"pending\";\n})(InternalTag || (exports.InternalTag = InternalTag = {}));\nvar Tag;\n(function (Tag) {\n    Tag.earliest = \"earliest\";\n    Tag.finalized = \"finalized\";\n    Tag.latest = \"latest\";\n    Tag.safe = \"safe\";\n    Tag.pending = \"pending\";\n})(Tag || (exports.Tag = Tag = {}));\n//# sourceMappingURL=tags.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceDataFactory = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst BYTE_LENGTH = 32;\n/**\n * Precomputed 32-byte prefixes to make stringification a faster\n */\nconst PREFIXES = [\n    \"\",\n    \"00\",\n    \"0000\",\n    \"000000\",\n    \"00000000\",\n    \"0000000000\",\n    \"000000000000\",\n    \"00000000000000\",\n    \"0000000000000000\",\n    \"000000000000000000\",\n    \"00000000000000000000\",\n    \"0000000000000000000000\",\n    \"000000000000000000000000\",\n    \"00000000000000000000000000\",\n    \"0000000000000000000000000000\",\n    \"000000000000000000000000000000\",\n    \"00000000000000000000000000000000\",\n    \"0000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000000000000000\"\n];\nconst TraceDataFactory = () => {\n    const traceDataLookup = new Map();\n    const TraceData = {\n        from: (value) => {\n            // Remove all leading zeroes from keys.\n            const key = (0, utils_1.bufferToMinHexKey)(value);\n            const existing = traceDataLookup.get(key);\n            if (existing) {\n                return existing;\n            }\n            let buffer;\n            let str;\n            const data = {\n                /**\n                 * Returns a 32-byte 0-padded Buffer\n                 */\n                toBuffer: () => {\n                    if (buffer) {\n                        return buffer;\n                    }\n                    const length = value.byteLength;\n                    if (length === BYTE_LENGTH) {\n                        buffer = value;\n                    }\n                    else {\n                        // convert the buffer into the appropriately sized buffer.\n                        const lengthDiff = BYTE_LENGTH - length;\n                        buffer = Buffer.allocUnsafe(BYTE_LENGTH).fill(0, 0, lengthDiff);\n                        value.copy(buffer, lengthDiff, 0, length);\n                    }\n                    return buffer;\n                },\n                /**\n                 * Returns a 32-byte hex-string representation\n                 */\n                toJSON: () => {\n                    if (str) {\n                        return str;\n                    }\n                    // convert a hex key like \"ab01\" into \"00...00ab01\"\n                    return (str = `${PREFIXES[BYTE_LENGTH - key.length / 2]}${key}`);\n                }\n            };\n            traceDataLookup.set(key, data);\n            return data;\n        }\n    };\n    return TraceData;\n};\nexports.TraceDataFactory = TraceDataFactory;\n//# sourceMappingURL=trace-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceStorageMap = void 0;\nclass TraceStorageMap extends Map {\n    toJSON() {\n        const obj = {};\n        for (const [key, value] of this) {\n            obj[key.toJSON()] = value;\n        }\n        return obj;\n    }\n}\nexports.TraceStorageMap = TraceStorageMap;\n//# sourceMappingURL=trace-storage-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=account-proof.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=debug-storage.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=extract-values-from-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=fee-history.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilterTypes = void 0;\nvar FilterTypes;\n(function (FilterTypes) {\n    FilterTypes[FilterTypes[\"log\"] = 0] = \"log\";\n    FilterTypes[FilterTypes[\"block\"] = 1] = \"block\";\n    FilterTypes[FilterTypes[\"pendingTransaction\"] = 2] = \"pendingTransaction\";\n})(FilterTypes || (exports.FilterTypes = FilterTypes = {}));\n//# sourceMappingURL=filters.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=hex-datatypes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=shh.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subscriptions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=trace-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=tuple-from-union.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.load = exports.OptionsConfig = exports.cliDefaults = exports.CliOptions = exports.CliOptionsConfig = exports.serverDefaults = exports.ServerOptions = exports.ServerOptionsConfig = void 0;\nvar server_options_config_1 = require(\"./src/options/server/server-options-config\");\nObject.defineProperty(exports, \"ServerOptionsConfig\", { enumerable: true, get: function () { return server_options_config_1.ServerOptionsConfig; } });\nvar server_options_1 = require(\"./src/options/server/server-options\");\nObject.defineProperty(exports, \"ServerOptions\", { enumerable: true, get: function () { return server_options_1.ServerOptions; } });\nvar server_defaults_1 = require(\"./src/options/server/server-defaults\");\nObject.defineProperty(exports, \"serverDefaults\", { enumerable: true, get: function () { return server_defaults_1.serverDefaults; } });\nvar cli_options_config_1 = require(\"./src/options/cli/cli-options-config\");\nObject.defineProperty(exports, \"CliOptionsConfig\", { enumerable: true, get: function () { return cli_options_config_1.CliOptionsConfig; } });\nvar cli_options_1 = require(\"./src/options/cli/cli-options\");\nObject.defineProperty(exports, \"CliOptions\", { enumerable: true, get: function () { return cli_options_1.CliOptions; } });\nvar cli_defaults_1 = require(\"./src/options/cli/cli-defaults\");\nObject.defineProperty(exports, \"cliDefaults\", { enumerable: true, get: function () { return cli_defaults_1.cliDefaults; } });\nvar options_1 = require(\"@ganache/options\");\nObject.defineProperty(exports, \"OptionsConfig\", { enumerable: true, get: function () { return options_1.OptionsConfig; } });\nvar load_1 = require(\"./src/load\");\nObject.defineProperty(exports, \"load\", { enumerable: true, get: function () { return load_1.load; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.load = void 0;\nconst chalk_1 = __importDefault(require(\"chalk\"));\nconst colors_1 = require(\"@ganache/colors\");\nconst utils_1 = require(\"@ganache/utils\");\n/**\n * Load the given package using node's `require` function. This is used to load\n * flavors plugins.\n * @param flavor\n * @returns\n */\nfunction load(flavor) {\n    // `@ganache/filecoin` used to be named just `filecoin`, we we need to\n    // preserve this alias for backwards compatibility\n    if (flavor === \"filecoin\")\n        flavor = \"@ganache/filecoin\";\n    try {\n        // we use `eval` to prevent webpack from resolving the `require` statement.\n        const flavorImport = eval(\"require\")(flavor);\n        // @ganache/filecoin used to not have a `default` export and that version is\n        // missing many properties we need now, so we fail for those old versions.\n        if (flavor === \"@ganache/filecoin\" && !flavorImport.default) {\n            // avoid printing stack trace as it's webpacked and is not helpful\n            console.error(\"Your version of @ganache/filecoin is outdated. Please install the latest version by running `npm install @ganache/filecoin --global`.\");\n            process.exit(1);\n        }\n        return flavorImport.default;\n    }\n    catch (e) {\n        if ((0, utils_1.hasOwn)(e, \"message\") &&\n            typeof e.message === \"string\" &&\n            e.message.includes(`Cannot find module '${flavor}'`)) {\n            const NEED_HELP = \"Need help? Reach out to the Truffle community at\";\n            const COMMUNITY_LINK = \"https://trfl.io/support\";\n            // we print and exit rather than throw to prevent webpack output from being\n            // spat out for the line number\n            console.warn((0, chalk_1.default) `\\n\\n{red.bold ERROR:} Could not find Ganache flavor \"{bold ${flavor}}\"; ` +\n                `it probably\\nneeds to be installed.\\n` +\n                ` ▸ if you're using Ganache as a library run: \\n` +\n                (0, chalk_1.default) `   {blue.bold $ npm install ${flavor}}\\n` +\n                ` ▸ if you're using Ganache as a CLI run: \\n` +\n                (0, chalk_1.default) `   {blue.bold $ npm install --global ${flavor}}\\n\\n` +\n                (0, chalk_1.default) `{hex(\"${colors_1.TruffleColors.porsche}\").bold ${NEED_HELP}}\\n` +\n                (0, chalk_1.default) `{hex(\"${colors_1.TruffleColors.turquoise}\") ${COMMUNITY_LINK}}\\n\\n`);\n            process.exit(1);\n        }\n        else {\n            throw e;\n        }\n    }\n}\nexports.load = load;\n//# sourceMappingURL=load.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cliDefaults = void 0;\nconst cli_options_1 = require(\"./cli-options\");\nexports.cliDefaults = {\n    server: cli_options_1.CliOptions\n};\n//# sourceMappingURL=cli-defaults.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CliOptionsConfig = void 0;\nconst options_1 = require(\"@ganache/options\");\nconst cli_defaults_1 = require(\"./cli-defaults\");\nexports.CliOptionsConfig = new options_1.OptionsConfig(cli_defaults_1.cliDefaults);\n//# sourceMappingURL=cli-options-config.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CliOptions = void 0;\nconst isDocker = \"DOCKER\" in process.env && process.env.DOCKER.toLowerCase() === \"true\";\nexports.CliOptions = {\n    port: {\n        normalize: port => {\n            if (port < 1 || port > 65535) {\n                throw new Error(`Invalid port number '${port}'`);\n            }\n            return port;\n        },\n        cliDescription: \"The port to listen on.\",\n        default: () => 8545,\n        legacyName: \"port\",\n        cliType: \"number\",\n        cliAliases: [\"p\", \"port\"]\n    },\n    host: {\n        normalize: host => {\n            host = host.trim();\n            if (host === \"\") {\n                throw new Error(\"Cannot leave host blank; please provide a host\");\n            }\n            return host;\n        },\n        cliDescription: \"Hostname to listen on.\",\n        default: () => {\n            return isDocker ? \"0.0.0.0\" : \"127.0.0.1\";\n        },\n        legacyName: \"host\",\n        cliType: \"string\",\n        cliAliases: [\"h\", \"host\"]\n    }\n};\n//# sourceMappingURL=cli-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serverDefaults = void 0;\nconst server_options_1 = require(\"./server-options\");\nexports.serverDefaults = {\n    server: server_options_1.ServerOptions\n};\n//# sourceMappingURL=server-defaults.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerOptionsConfig = void 0;\nconst options_1 = require(\"@ganache/options\");\nconst server_defaults_1 = require(\"./server-defaults\");\nexports.ServerOptionsConfig = new options_1.OptionsConfig(server_defaults_1.serverDefaults);\n//# sourceMappingURL=server-options-config.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerOptions = void 0;\nconst buffer_1 = require(\"buffer\");\nconst normalize = (rawInput) => rawInput;\nexports.ServerOptions = {\n    ws: {\n        normalize,\n        cliDescription: \"Enable a websocket server.\",\n        default: () => true,\n        legacyName: \"ws\",\n        cliType: \"boolean\"\n    },\n    wsBinary: {\n        normalize,\n        cliDescription: \"Whether or not websockets should response with binary data (ArrayBuffers) or strings.\",\n        default: () => \"auto\",\n        cliChoices: [\"true\", \"false\", \"auto\"]\n    },\n    rpcEndpoint: {\n        normalize,\n        cliDescription: \"Defines the endpoint route the HTTP and WebSocket servers will listen on.\",\n        default: () => \"/\"\n    },\n    chunkSize: {\n        normalize: number => {\n            if (number < 0 || number > buffer_1.kMaxLength) {\n                throw new Error(`--server.chunkSize must be >= 0 and <= ${buffer_1.kMaxLength}`);\n            }\n            return number;\n        },\n        cliDescription: \"For memory and performance reasons ganache may respond with chunked transfer-encoding over HTTP and fragmented send over WebSockets. This option allows you to control the approximate size of each chunk.\",\n        default: () => 1024 * 1024,\n        cliType: \"number\"\n    }\n};\n//# sourceMappingURL=server-options.js.map","export const debug = () => () => {};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/base\"), exports);\n__exportStar(require(\"./src/exclusive\"), exports);\n__exportStar(require(\"./src/definition\"), exports);\n__exportStar(require(\"./src/create\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=base.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptionsConfig = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst checkForConflicts = (name, namespace, suppliedOptions, conflicts) => {\n    if (!conflicts)\n        return;\n    for (const conflict of conflicts) {\n        if (suppliedOptions.has(conflict)) {\n            throw new Error(`Values for both \"${namespace}.${name}\" and ` +\n                `\"${namespace}.${conflict}\" cannot ` +\n                `be specified; they are mutually exclusive.`);\n        }\n    }\n};\nfunction fill(options, target, def, namespace) {\n    const config = (target[namespace] = target[namespace] || {});\n    const suppliedOptions = new Set();\n    const entries = Object.entries(def);\n    if ((0, utils_1.hasOwn)(options, namespace)) {\n        const namespaceOptions = options[namespace];\n        for (const [key, propDefinition] of entries) {\n            let value = namespaceOptions[key];\n            if (value !== undefined) {\n                const normalized = propDefinition.normalize(value, config);\n                if (normalized !== undefined) {\n                    checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                    config[key] = normalized;\n                    suppliedOptions.add(key);\n                }\n            }\n            else {\n                const legacyName = propDefinition.legacyName || key;\n                value = options[legacyName];\n                if (value !== undefined) {\n                    const normalized = propDefinition.normalize(value, config);\n                    if (normalized !== undefined) {\n                        checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                        config[key] = normalized;\n                        suppliedOptions.add(key);\n                    }\n                }\n                else if ((0, utils_1.hasOwn)(propDefinition, \"default\")) {\n                    config[key] = propDefinition.default(config);\n                }\n            }\n        }\n    }\n    else {\n        for (const [key, propDefinition] of entries) {\n            const legacyName = propDefinition.legacyName || key;\n            const value = options[legacyName];\n            if (value !== undefined) {\n                const normalized = propDefinition.normalize(value, config);\n                if (normalized !== undefined) {\n                    checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                    config[key] = normalized;\n                    suppliedOptions.add(key);\n                }\n            }\n            else if ((0, utils_1.hasOwn)(propDefinition, \"default\")) {\n                config[key] = propDefinition.default(config);\n            }\n        }\n    }\n}\nclass OptionsConfig {\n    constructor(defaults) {\n        this.defaults = defaults;\n    }\n    normalize(options) {\n        const out = {};\n        Object.entries(this.defaults).forEach(([namespace, definition]) => {\n            fill(options, out, definition, namespace);\n        });\n        return out;\n    }\n}\nexports.OptionsConfig = OptionsConfig;\n//# sourceMappingURL=create.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#endregion Definition helpers\n//# sourceMappingURL=definition.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#endregion\n//# sourceMappingURL=exclusive.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _PromiseQueue_queue, _PromiseQueue_tryResolve, _PromiseQueue_tryResolveChain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst entry_1 = __importDefault(require(\"./src/entry\"));\nconst emitteryMethods = [\"emit\", \"once\"];\n/**\n * Creates a FIFO queue that ensures promises are _resolved_ in the order\n * they were added.\n *\n * This is different than a FIFO queue that _executes_ functions that\n * return promises; this queue is for the promises themselves.\n *\n * @example\n * ```javascript\n * const queue = new PromiseQueue();\n *\n * const slow = new Promise(resolve => setTimeout(resolve, 1000, \"slow\"));\n * const fast = Promise.resolve(\"fast\");\n *\n * await Promise.race([\n *   queue.add(slow),\n *   queue.add(fast)\n * ]); // returns \"slow\"\n *\n * // Additionally, the queued promise chain can be cleared via `queue.clear(value)`.\n * // This will cause the chain of promises to all resolve immediately with the\n * // given value. *\n * //\n * // * note: whatever the promise starting doing when it was created will still\n * // happen, no promises are aborted; rather, the return value is ignored.\n * ```\n */\nlet PromiseQueue = class PromiseQueue {\n    constructor() {\n        // TODO(perf): a singly linked list is probably a better option here\n        _PromiseQueue_queue.set(this, []);\n        _PromiseQueue_tryResolve.set(this, (queue, entry) => {\n            // if this is now the highest priority entry, resolve the outer\n            // Promise\n            if (entry === queue[0]) {\n                queue.shift();\n                entry.resolve(entry.value);\n                // then try resolving the rest\n                __classPrivateFieldGet(this, _PromiseQueue_tryResolveChain, \"f\").call(this, queue);\n            }\n            else {\n                entry.resolved = true;\n            }\n        });\n        /**\n         * Removes all _resolved_ promises from the front of the chain of promises.\n         */\n        _PromiseQueue_tryResolveChain.set(this, (queue) => {\n            let first = queue[0];\n            while (first && first.resolved) {\n                queue.shift();\n                first.resolve(first.value);\n                first = queue[0];\n            }\n            // if there is nothing left to do emit `\"idle\"`\n            if (queue.length === 0) {\n                this.emit(\"idle\");\n            }\n        });\n    }\n    /**\n     * Returns true if there are promises pending in the queue\n     */\n    isBusy() {\n        return __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\").length !== 0;\n    }\n    /**\n     * Adds the promise to the end of the queue.\n     * @param promise -\n     * @returns a promise that resolves with the given promise's result. If the\n     * queue was `clear`ed before the promise could be shifted off the return\n     * value will be the `value` passed to `clear`.\n     */\n    add(promise) {\n        const queue = __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\");\n        const entry = new entry_1.default(promise, queue, __classPrivateFieldGet(this, _PromiseQueue_tryResolve, \"f\"));\n        queue.push(entry);\n        return entry.promise;\n    }\n    /**\n     * Clears all promises from the queue and sets their resolved values to the\n     * given value.\n     */\n    clear(value) {\n        // remove all entries from the queue and mark them.\n        const cancelledQueue = __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\").splice(0);\n        cancelledQueue.forEach(entry => {\n            entry.queue = cancelledQueue;\n            entry.value = value;\n        });\n    }\n};\n_PromiseQueue_queue = new WeakMap();\n_PromiseQueue_tryResolve = new WeakMap();\n_PromiseQueue_tryResolveChain = new WeakMap();\nPromiseQueue = __decorate([\n    emittery_1.default.mixin(Symbol.for(\"emittery\"), emitteryMethods)\n], PromiseQueue);\nexports.default = PromiseQueue;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Entry {\n    constructor(promise, queue, onSetteled) {\n        this.resolved = false;\n        this.value = promise;\n        this.queue = queue;\n        this.onSetteled = onSetteled;\n        const _onSetteled = () => this.onSetteled(this.queue, this);\n        promise.then(_onSetteled, _onSetteled);\n        this.promise = new Promise(resolve => {\n            this.resolve = resolve;\n        });\n    }\n}\nexports.default = Entry;\n//# sourceMappingURL=entry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encodeLength = exports.encode = exports.digest = exports.encodeRange = void 0;\nconst utils_1 = require(\"@ganache/utils\");\n/**\n * Begin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\n * finish encoding.\n *\n **/\nfunction encodeRange(items, start, length) {\n    let count = 0;\n    const end = start + length;\n    const output = [];\n    for (var i = start; i < end; i++) {\n        const item = items[i];\n        const encoded = encode(item);\n        count += encoded.length;\n        output.push(encoded);\n    }\n    return { length: count, output };\n}\nexports.encodeRange = encodeRange;\n/**\n * Finishes encoding started by `encodeRange`.\n *\n * @param ranges -\n * @returns returns a Buffer of encoded data\n */\nfunction digest(ranges, length, offset = 0, alloc = Buffer.allocUnsafe) {\n    const encodedLength = encodeLength(length, 192);\n    const lengthEncodedLength = encodedLength.length;\n    const buf = alloc(lengthEncodedLength + length);\n    encodedLength.copy(buf, offset, 0, lengthEncodedLength);\n    offset += lengthEncodedLength;\n    for (let i = 0, l = ranges.length; i < l; i++) {\n        const range = ranges[i];\n        for (let j = 0, m = range.length; j < m; j++) {\n            const entry = range[j];\n            const size = entry.length;\n            entry.copy(buf, offset, 0, size);\n            offset += size;\n        }\n    }\n    return buf;\n}\nexports.digest = digest;\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * @param input -\n * @returns returns a Buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        let length = 0;\n        const output = [];\n        for (let i = 0, l = input.length; i < l; i++) {\n            const enc = encode(input[i]);\n            length += enc.length;\n            output.push(enc);\n        }\n        const buf = Buffer.concat(output, length);\n        const encodedLength = encodeLength(length, 192);\n        return Buffer.concat([encodedLength, buf], encodedLength.length + length);\n    }\n    else {\n        if (input == null) {\n            const buf = Buffer.allocUnsafe(1);\n            buf[0] = 128;\n            return buf;\n        }\n        else {\n            const length = input.length;\n            if (length === 1 && input[0] < 128) {\n                return input;\n            }\n            else {\n                const encLength = encodeLength(length, 128);\n                return Buffer.concat([encLength, input], encLength.length + length);\n            }\n        }\n    }\n}\nexports.encode = encode;\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        const buf = Buffer.allocUnsafe(1);\n        buf[0] = len + offset;\n        return buf;\n    }\n    else {\n        const hexLength = (0, utils_1.uintToBuffer)(len);\n        const lLength = hexLength.length;\n        const firstByte = (0, utils_1.uintToBuffer)(offset + 55 + lLength);\n        return Buffer.concat([firstByte, hexLength], firstByte.length + lLength);\n    }\n}\nexports.encodeLength = encodeLength;\n/**\n * Slices a Buffer, throws if the slice goes out-of-bounds of the Buffer.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input, start, end) {\n    if (end > input.length) {\n        throw new Error(\"invalid RLP (safeSlice): end slice of Buffer out-of-bounds\");\n    }\n    return input.slice(start, end);\n}\n/**\n * RLP Decoding based on https://eth.wiki/en/fundamentals/rlp\n * @param input Will be converted to Buffer\n * @returns decoded Array of Buffers containing the original message\n **/\nfunction decode(input) {\n    if (!input || input.length === 0) {\n        return utils_1.BUFFER_EMPTY;\n    }\n    const decoded = _decode(input);\n    if (decoded.remainder.length !== 0) {\n        throw new Error(\"invalid RLP: remainder must be zero\");\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v) {\n    if (v[0] === 0) {\n        throw new Error(\"invalid RLP: extra zeros\");\n    }\n    return parseHexByte(bytesToHex(v));\n}\n/** Decode an input with RLP */\nfunction _decode(input) {\n    let length, llength, data, innerRemainder, d;\n    const decoded = [];\n    const firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1)\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Buffer.from([]);\n        }\n        else {\n            data = safeSlice(input, 1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error(\"invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed\");\n        }\n        return {\n            data,\n            remainder: input.slice(length)\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error(\"invalid RLP: not enough bytes for string length\");\n        }\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length <= 55) {\n            throw new Error(\"invalid RLP: expected string length to be greater than 55\");\n        }\n        data = safeSlice(input, llength, length + llength);\n        return {\n            data,\n            remainder: input.slice(length + llength)\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between 0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = safeSlice(input, 1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length)\n        };\n    }\n    else {\n        // a list over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length < 56) {\n            throw new Error(\"invalid RLP: encoded list too short\");\n        }\n        const totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error(\"invalid RLP: total length is larger than the data\");\n        }\n        innerRemainder = safeSlice(input, llength, totalLength);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength)\n        };\n    }\n}\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, \"0\"));\nfunction bytesToHex(uint8a) {\n    // Pre-caching chars with `cachedHexes` speeds this up 6x\n    let hex = \"\";\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += cachedHexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction parseHexByte(hexByte) {\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte))\n        throw new Error(\"Invalid byte sequence\");\n    return byte;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*!\n * @ganache/secp256k1\n *\n * @author David Murdoch\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SECP256K1_MAX_PRIVATE_KEY_DIV_2 = exports.SECP256K1_N = void 0;\nconst path_1 = require(\"path\");\nexports.SECP256K1_N = 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n;\nexports.SECP256K1_MAX_PRIVATE_KEY_DIV_2 = 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0n; // (SECP256K1_N - 1n) / 2n\nlet secp256k1;\ntry {\n    // TODO: find a better way :-)\n    // use `eval` to make `ganache`'s webpack ignore this\n    const nodeRequire = eval(\"require\");\n    const path = nodeRequire.resolve(\"secp256k1/package.json\");\n    const dir = (0, path_1.dirname)(path);\n    const nodeGypBuild = require(\"node-gyp-build\");\n    // load native secp256k1\n    const { Secp256k1 } = nodeGypBuild(dir);\n    secp256k1 = new Secp256k1();\n}\ncatch {\n    // on error use the JS fallback\n    secp256k1 = require(\"secp256k1/lib/elliptic\");\n}\nexports.default = secp256k1;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PromiEvent = exports.JsonRpcErrorCode = exports.makeResponse = exports.makeRequest = exports.makeError = exports.JsonRpcType = void 0;\n__exportStar(require(\"./src/types\"), exports);\n__exportStar(require(\"./src/utils\"), exports);\nvar json_rpc_1 = require(\"./src/things/json-rpc\");\nObject.defineProperty(exports, \"JsonRpcType\", { enumerable: true, get: function () { return json_rpc_1.JsonRpcType; } });\n__exportStar(require(\"./src/things/subscription\"), exports);\n__exportStar(require(\"./src/things/json-rpc/json-rpc-quantity\"), exports);\n__exportStar(require(\"./src/things/json-rpc/json-rpc-data\"), exports);\nvar jsonrpc_1 = require(\"./src/things/jsonrpc\");\nObject.defineProperty(exports, \"makeError\", { enumerable: true, get: function () { return jsonrpc_1.makeError; } });\nObject.defineProperty(exports, \"makeRequest\", { enumerable: true, get: function () { return jsonrpc_1.makeRequest; } });\nObject.defineProperty(exports, \"makeResponse\", { enumerable: true, get: function () { return jsonrpc_1.makeResponse; } });\nObject.defineProperty(exports, \"JsonRpcErrorCode\", { enumerable: true, get: function () { return jsonrpc_1.JsonRpcErrorCode; } });\nvar promievent_1 = require(\"./src/things/promievent\");\nObject.defineProperty(exports, \"PromiEvent\", { enumerable: true, get: function () { return __importDefault(promievent_1).default; } });\n__exportStar(require(\"./src/things/logger\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBigIntBE = exports.toBufferBE = void 0;\nvar bigint_buffer_1 = require(\"@trufflesuite/bigint-buffer\");\nObject.defineProperty(exports, \"toBufferBE\", { enumerable: true, get: function () { return bigint_buffer_1.toBufferBE; } });\nObject.defineProperty(exports, \"toBigIntBE\", { enumerable: true, get: function () { return bigint_buffer_1.toBigIntBE; } });\n//# sourceMappingURL=common.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcType = void 0;\nvar json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nObject.defineProperty(exports, \"JsonRpcType\", { enumerable: true, get: function () { return json_rpc_base_types_1.BaseJsonRpcType; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseAndValidateStringInput = exports.parseAndValidateBigIntInput = exports.parseAndValidateNumberInput = void 0;\nconst bigint_to_buffer_1 = require(\"../../utils/bigint-to-buffer\");\nconst uint_to_buffer_1 = require(\"../../utils/uint-to-buffer\");\nconst BUFFER_EMPTY = Buffer.allocUnsafe(0);\n/**\n * Parse and validate a {@link number} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param {number} input - must be a positive, finite integer, or null.\n * @returns {Buffer}\n */\nfunction parseAndValidateNumberInput(input) {\n    if (input === 0) {\n        return BUFFER_EMPTY;\n    }\n    if (input < 0) {\n        throw new Error(\"Cannot wrap a negative value as a json-rpc type\");\n    }\n    if (input % 1) {\n        throw new Error(\"Cannot wrap a decimal as a json-rpc type\");\n    }\n    if (!isFinite(input)) {\n        throw new Error(`Cannot wrap a ${input} as a json-rpc type`);\n    }\n    return (0, uint_to_buffer_1.uintToBuffer)(input);\n}\nexports.parseAndValidateNumberInput = parseAndValidateNumberInput;\n/**\n * Parse and validate a {@link bigint} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param  {bigint} input - must be a positive integer, or null.\n * @returns {Buffer}\n */\nfunction parseAndValidateBigIntInput(input) {\n    if (input < 0n) {\n        throw new Error(\"Cannot wrap a negative value as a json-rpc type\");\n    }\n    return (0, bigint_to_buffer_1.bigIntToBuffer)(input);\n}\nexports.parseAndValidateBigIntInput = parseAndValidateBigIntInput;\n/**\n * Parse and validate a {@link string} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param  {string} input - must be a hex encoded integer prefixed with \"0x\".\n * @returns Buffer\n */\nfunction parseAndValidateStringInput(input) {\n    if (input.slice(0, 2).toLowerCase() !== \"0x\") {\n        throw new Error(`Cannot wrap string value \"${input}\" as a json-rpc type; strings must be prefixed with \"0x\".`);\n    }\n    let hexValue = input.slice(2);\n    // hexValue must be an even number of hexadecimal characters in order to correctly decode in Buffer.from\n    // see: https://nodejs.org/api/buffer.html#buffers-and-character-encodings\n    if (hexValue.length & 1) {\n        hexValue = `0${hexValue}`;\n    }\n    const byteLength = Math.ceil(input.length / 2 - 1);\n    const _buffer = Buffer.from(hexValue, \"hex\");\n    if (_buffer.length !== byteLength) {\n        // Buffer.from will return the result after encountering an input that does not conform to hexadecimal encoding.\n        // this means that an invalid input can never return a value with the expected bytelength.\n        throw new Error(`Cannot wrap string value \"${input}\" as a json-rpc type; the input value contains an invalid hex character.`);\n    }\n    return _buffer;\n}\nexports.parseAndValidateStringInput = parseAndValidateStringInput;\n//# sourceMappingURL=input-parsers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseJsonRpcType = void 0;\nconst input_parsers_1 = require(\"./input-parsers\");\nconst inspect = Symbol.for(\"nodejs.util.inspect.custom\");\nclass BaseJsonRpcType {\n    // used to make console.log debugging a little easier\n    [inspect](_depth, _options) {\n        return `[${this.constructor.name}] ${this.toString()}`;\n    }\n    constructor(value) {\n        if (value == null) {\n            this.bufferValue = null;\n        }\n        else if (Buffer.isBuffer(value)) {\n            // empty buffer should be treated as null\n            this.bufferValue = value.length === 0 ? null : value;\n        }\n        else {\n            switch (typeof value) {\n                case \"string\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateStringInput)(value);\n                    break;\n                case \"number\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateNumberInput)(value);\n                    break;\n                case \"bigint\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateBigIntInput)(value);\n                    break;\n                default:\n                    throw new Error(`Cannot wrap a \"${typeof value}\" as a json-rpc type`);\n            }\n        }\n    }\n    toString() {\n        if (this.bufferValue == null) {\n            return null;\n        }\n        return `0x${this.bufferValue.toString(\"hex\")}`;\n    }\n    toBuffer() {\n        return this.bufferValue;\n    }\n    valueOf() {\n        return this.bufferValue;\n    }\n    toJSON() {\n        return this.toString();\n    }\n    isNull() {\n        return this.bufferValue == null;\n    }\n}\nexports.BaseJsonRpcType = BaseJsonRpcType;\n//# sourceMappingURL=json-rpc-base-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Data = void 0;\nconst json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nconst constants_1 = require(\"../../utils/constants\");\nclass Data extends json_rpc_base_types_1.BaseJsonRpcType {\n    constructor(value, _byteLength) {\n        super(value);\n        this._byteLength = _byteLength;\n        if (typeof value === \"bigint\") {\n            throw new Error(`Cannot create a ${typeof value} as a Data`);\n        }\n    }\n    toString(byteLength) {\n        const length = byteLength || this._byteLength;\n        if (this.bufferValue == null) {\n            return \"0x\";\n        }\n        if (length === undefined) {\n            return super.toString();\n        }\n        const strValue = this.bufferValue.toString(\"hex\");\n        return `0x${Data.stringToFixedByteLength(strValue, length)}`;\n    }\n    toBuffer(byteLength) {\n        if (this.bufferValue == null) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        const length = byteLength || this._byteLength;\n        if (length == undefined || length === this.bufferValue.length) {\n            return this.bufferValue;\n        }\n        return Data.bufferToFixedByteLength(this.bufferValue, length);\n    }\n    static from(value, byteLength) {\n        return new Data(value, byteLength);\n    }\n    static stringToFixedByteLength(value, byteLength) {\n        const desiredCharLength = byteLength * 2;\n        if (desiredCharLength === value.length) {\n            return value;\n        }\n        const padCharCount = desiredCharLength - value.length;\n        let fixedLengthValue;\n        if (padCharCount > 0) {\n            fixedLengthValue = \"0\".repeat(padCharCount) + value;\n        }\n        else {\n            fixedLengthValue = value.slice(0, desiredCharLength);\n        }\n        return fixedLengthValue;\n    }\n    static bufferToFixedByteLength(value, byteLength) {\n        if (byteLength === value.length) {\n            return value;\n        }\n        const fixedLengthValue = Buffer.allocUnsafe(byteLength);\n        const sourceStart = 0;\n        const targetStart = value.length > byteLength ? 0 : byteLength - value.length;\n        if (targetStart > 0) {\n            fixedLengthValue.fill(0, 0, targetStart);\n        }\n        value.copy(fixedLengthValue, targetStart, sourceStart, byteLength);\n        return fixedLengthValue;\n    }\n    static toBuffer(value, byteLength) {\n        return Data.from(value, byteLength).toBuffer();\n    }\n    static toString(value, byteLength) {\n        return Data.from(value, byteLength).toString();\n    }\n}\nexports.Data = Data;\nData.Empty = Data.from(constants_1.BUFFER_EMPTY);\n//# sourceMappingURL=json-rpc-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quantity = void 0;\nconst buffer_to_bigint_1 = require(\"../../utils/buffer-to-bigint\");\nconst json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nconst constants_1 = require(\"../../utils/constants\");\nclass Quantity extends json_rpc_base_types_1.BaseJsonRpcType {\n    static from(value, nullable = false) {\n        if (value instanceof Quantity)\n            return value;\n        return new Quantity(value, nullable);\n    }\n    constructor(value, nullable) {\n        super(value);\n        this._nullable = false;\n        if (value === \"0x\") {\n            throw new Error('Cannot wrap \"0x\" as a json-rpc Quantity type; strings must contain at least one hexadecimal character.');\n        }\n        this._nullable = nullable;\n    }\n    toString() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : Quantity.ZERO_VALUE_STRING;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        // bufferValue is empty, or contains only 0 bytes\n        if (firstNonZeroByte === this.bufferValue.length) {\n            return Quantity.ZERO_VALUE_STRING;\n        }\n        let value = this.bufferValue.toString(\"hex\", firstNonZeroByte);\n        // only need to check the first char, as we have already skipped 0 bytes in call to this.bufferValue.toString().\n        if (value[0] === \"0\") {\n            value = value.slice(1);\n        }\n        return `0x${value}`;\n    }\n    toBuffer() {\n        if (this.bufferValue == null) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        if (firstNonZeroByte > 0) {\n            return this.bufferValue.subarray(firstNonZeroByte);\n        }\n        else {\n            return this.bufferValue;\n        }\n    }\n    toBigInt() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : 0n;\n        }\n        if (this.bufferValue.length === 0) {\n            return 0n;\n        }\n        return (0, buffer_to_bigint_1.bufferToBigInt)(this.bufferValue);\n    }\n    toNumber() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : 0;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        const length = this.bufferValue.length - firstNonZeroByte;\n        if (length === 0) {\n            return 0;\n        }\n        let result;\n        // buffer.readUIntBE only supports up to 48 bits, so if larger then we need to convert to bigint first\n        if (length > 6) {\n            const trimmedBuffer = firstNonZeroByte === 0\n                ? this.bufferValue\n                : this.bufferValue.subarray(firstNonZeroByte);\n            result = Number((0, buffer_to_bigint_1.bufferToBigInt)(trimmedBuffer));\n            if (!Number.isSafeInteger(result)) {\n                console.warn(`0x${this.bufferValue.toString(\"hex\")} is too large - the maximum safe integer value is 0${Number.MAX_SAFE_INTEGER.toString(16)}`);\n            }\n        }\n        else {\n            result = this.bufferValue.readUIntBE(firstNonZeroByte, length);\n        }\n        return result;\n    }\n    valueOf() {\n        if (this.bufferValue == null) {\n            return null;\n        }\n        else {\n            return this.toBigInt();\n        }\n    }\n    findFirstNonZeroByteIndex() {\n        let firstNonZeroByte = 0;\n        for (firstNonZeroByte = 0; firstNonZeroByte < this.bufferValue.length; firstNonZeroByte++) {\n            if (this.bufferValue[firstNonZeroByte] !== 0)\n                break;\n        }\n        return firstNonZeroByte;\n    }\n    static toBuffer(value, nullable) {\n        return Quantity.from(value, nullable).toBuffer();\n    }\n    static toString(value, nullable) {\n        return Quantity.from(value, nullable).toString();\n    }\n    static toNumber(value, nullable) {\n        return Quantity.from(value, nullable).toNumber();\n    }\n    static toBigInt(value, nullable) {\n        return Quantity.from(value, nullable).toBigInt();\n    }\n}\nexports.Quantity = Quantity;\nQuantity.Empty = Quantity.from(constants_1.BUFFER_EMPTY, true);\nQuantity.Zero = Quantity.from(constants_1.BUFFER_ZERO);\nQuantity.One = Quantity.from(1);\nQuantity.Gwei = Quantity.from(1000000000);\nQuantity.ZERO_VALUE_STRING = \"0x0\";\nexports.default = Quantity;\n//# sourceMappingURL=json-rpc-quantity.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcErrorCode = exports.makeError = exports.makeResponse = exports.makeRequest = void 0;\nconst jsonrpc = \"2.0\";\nconst makeRequest = (json) => {\n    return {\n        id: json.id,\n        jsonrpc,\n        method: json.method,\n        params: json.params\n    };\n};\nexports.makeRequest = makeRequest;\nconst makeResponse = (id, result) => {\n    return {\n        id,\n        jsonrpc,\n        result\n    };\n};\nexports.makeResponse = makeResponse;\nconst makeError = (id, error, result) => {\n    // Error objects are weird, `message` isn't included in the property names,\n    // so it is pulled out separately.\n    const details = { message: error.message };\n    Object.getOwnPropertyNames(error).forEach(name => {\n        if (typeof name === \"string\") {\n            details[name] = error[name];\n        }\n    });\n    if (typeof details.code !== \"number\") {\n        details.code = -32700; // JSON-RPC Parse error\n    }\n    if (result !== undefined) {\n        return {\n            id,\n            jsonrpc,\n            error: details,\n            result\n        };\n    }\n    else {\n        return {\n            id,\n            jsonrpc,\n            error: details\n        };\n    }\n};\nexports.makeError = makeError;\nvar JsonRpcErrorCode;\n(function (JsonRpcErrorCode) {\n    /**\n     * Invalid JSON was received by the server.\n     * An error occurred on the server while parsing the JSON text.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"PARSE_ERROR\"] = -32700] = \"PARSE_ERROR\";\n    /**\n     * The JSON sent is not a valid Request object.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_REQUEST\"] = -32600] = \"INVALID_REQUEST\";\n    /**\n     * The method does not exist / is not available.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"METHOD_NOT_FOUND\"] = -32601] = \"METHOD_NOT_FOUND\";\n    /**\n     * Invalid method parameter(s).\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_PARAMS\"] = -32602] = \"INVALID_PARAMS\";\n    /**\n     * Internal JSON-RPC error.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INTERNAL_ERROR\"] = -32603] = \"INTERNAL_ERROR\";\n    /**\n     * Missing or invalid parameters\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_INPUT\"] = -32000] = \"INVALID_INPUT\";\n    /**\n     * Transaction creation failed\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"TRANSACTION_REJECTED\"] = -32003] = \"TRANSACTION_REJECTED\";\n    /**\n     * \tMethod is not implemented\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"METHOD_NOT_SUPPORTED\"] = -32004] = \"METHOD_NOT_SUPPORTED\";\n    /**\n     * \tRequest exceeds defined limit\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"LIMIT_EXCEEDED\"] = -32005] = \"LIMIT_EXCEEDED\";\n    /**\n     * Version of JSON-RPC protocol is not supported\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"JSON_RPC_VERSION_NOT_SUPPORTED\"] = -32006] = \"JSON_RPC_VERSION_NOT_SUPPORTED\";\n})(JsonRpcErrorCode || (exports.JsonRpcErrorCode = JsonRpcErrorCode = {}));\n//# sourceMappingURL=jsonrpc.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createLogger = void 0;\nconst fs_1 = require(\"fs\");\nconst util_1 = require(\"util\");\nconst os_1 = require(\"os\");\n// this needs to match start of line with both CRLF and LF encoding (^ matches after _both_ CR and LF)\nconst START_OF_LINE = /^|(?<=\\r?\\n)/g;\nfunction createLogger(config) {\n    const baseLog = (...params) => config.baseLogger.log(...params);\n    if (\"file\" in config && config.file !== undefined) {\n        const fd = config.file;\n        const diskLogFormatter = (message) => {\n            // trailing space after date is delimiter between date and message\n            const linePrefix = `${new Date().toISOString()} `;\n            return message.replace(START_OF_LINE, linePrefix);\n        };\n        const writeStream = (0, fs_1.createWriteStream)(null, { fd });\n        const onError = err => console.error(`Error writing to log file: ${err.message}`);\n        writeStream.on(\"error\", onError);\n        const log = (message, ...optionalParams) => {\n            // we are logging to a file, but we still need to write to console\n            baseLog(message, ...optionalParams);\n            const formattedMessage = (0, util_1.format)(message, ...optionalParams);\n            writeStream.write(diskLogFormatter(formattedMessage) + os_1.EOL);\n        };\n        return {\n            log,\n            close: () => new Promise((resolve, reject) => {\n                writeStream.close(err => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve();\n                    }\n                });\n            })\n        };\n    }\n    else {\n        return {\n            log: baseLog,\n            close: async () => { }\n        };\n    }\n}\nexports.createLogger = createLogger;\n//# sourceMappingURL=logger.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar PromiEvent_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst emitteryMethods = [\n    \"clearListeners\",\n    \"once\",\n    \"on\",\n    \"emit\",\n    \"onAny\"\n];\n// A hack to fix Emittery's `mixin` type.\n// issue: https://github.com/sindresorhus/emittery/issues/79\nconst mixin = emittery_1.default.mixin.bind(emittery_1.default);\nlet PromiEvent = PromiEvent_1 = class PromiEvent extends Promise {\n    constructor(executor) {\n        super(executor);\n        /**\n         * Used to immediately clear all event listeners on the instance and prevent\n         * any additional binding or emission from the Emitter.\n         *\n         * Once disposed no listeners can be bound to this emitter.\n         *\n         * Note: `dispose` is pre-bound to the `this`, making it possible to pass the\n         * method around detached from it's context.\n         */\n        this.dispose = () => {\n            if (!this.clearListeners)\n                throw new Error(\"PromiEvent already disposed\");\n            this.clearListeners();\n            // Ensure that once disposed no listeners can be bound to this emitter.\n            const fn = () => {\n                throw new Error(\"PromiEvent bound after dispose\");\n            };\n            emitteryMethods\n                .filter(m => m !== \"emit\")\n                .forEach(methodName => {\n                Object.defineProperty(this, methodName, {\n                    enumerable: false,\n                    value: fn\n                });\n            });\n        };\n    }\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected - The callback to execute when the Promise is rejected.\n     * @returns A PromiEvent for the completion of the callback.\n     */\n    catch(onrejected) {\n        const prom = new PromiEvent_1((resolve, reject) => {\n            this.onAny((eventName, eventData) => {\n                return prom.emit(eventName, eventData);\n            });\n            const p = super.catch(onrejected);\n            p.then(resolve, reject);\n        });\n        return prom;\n    }\n    static resolve(value) {\n        return new PromiEvent_1(resolve => {\n            resolve(value);\n        });\n    }\n};\nPromiEvent = PromiEvent_1 = __decorate([\n    mixin(Symbol.for(\"emittery\"), emitteryMethods)\n], PromiEvent);\nexports.default = PromiEvent;\n//# sourceMappingURL=promievent.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Base implementation for an API.\n * All properties must be `async` callable or return a `Promise`\n */\nclass ApiBase {\n}\n//# sourceMappingURL=api.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./api\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bigIntToBuffer = void 0;\nconst common_1 = require(\"../common\");\nconst constants_1 = require(\"./constants\");\nconst uint_to_buffer_1 = require(\"./uint-to-buffer\");\nconst allocUnsafe = Buffer.allocUnsafe;\nlet _bigIntToBuffer;\n/**\n * Returns the number of bytes contained in this given `value`.\n * @param value -\n */\nfunction bigIntByteLength(value) {\n    let length = 1;\n    while ((value >>= 8n))\n        length++;\n    return length;\n}\nconst MAX_SAFE_INTEGER = BigInt(Number.MAX_SAFE_INTEGER);\ntry {\n    // force fallback if only `toBufferBE` is missing (this can happen if toBufferBE isn't polyfilled for the browser,\n    // which, at the time of this writing... it isn't)\n    if (!common_1.toBufferBE)\n        throw new Error(\"Missing function `toBufferBE`!\");\n    _bigIntToBuffer = (value) => {\n        if (value === 0n) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        else if (value <= MAX_SAFE_INTEGER) {\n            return (0, uint_to_buffer_1.uintToBuffer)(Number(value));\n        }\n        else {\n            const size = bigIntByteLength(value);\n            return (0, common_1.toBufferBE)(value, size);\n        }\n    };\n}\ncatch {\n    _bigIntToBuffer = (value) => {\n        if (value === 0n) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        else if (value <= MAX_SAFE_INTEGER) {\n            // if this value can be handled as a JS number safely, convert it that way\n            return (0, uint_to_buffer_1.uintToBuffer)(Number(value));\n        }\n        else {\n            let length = bigIntByteLength(value);\n            const buf = allocUnsafe(length);\n            // process 1 byte at a time\n            do {\n                // truncate to right-most 32 bits and assign to buffer position `length`\n                buf[--length] = Number(value & 0xffffffffn);\n                // shift right-most byte off since we've used it\n                value >>= 8n;\n            } while (length);\n            return buf;\n        }\n    };\n}\n/**\n * Converts a bigint to a Buffer (Big Endian)\n */\nexports.bigIntToBuffer = _bigIntToBuffer;\n//# sourceMappingURL=bigint-to-buffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferToBigInt = void 0;\nconst bigint_buffer_1 = require(\"@trufflesuite/bigint-buffer\");\n/**\n * note: this doesn't handle negative values\n * @param value - Buffer representation of a bigint, most-significant bit first (Big-endian)\n */\nfunction bufferToBigInt(value) {\n    // Parsed as BE.\n    // This doesn't handle negative values. We may need to add logic to handle\n    // it because it is possible values returned from the VM could be negative\n    // and stored in a buffer.\n    const length = value.byteLength;\n    if (length === 0) {\n        return null;\n    }\n    // Buffers that are 6 bytes or less can be converted with built-in methods\n    if (length <= 6) {\n        return BigInt(value.readUIntBE(0, length));\n    }\n    let view;\n    // Buffers that are 7 bytes need to be padded to 8 bytes\n    if (length === 7) {\n        const padded = new Uint8Array(8);\n        // set byte 0 to 0, and bytes 1-8 to the value's 7 bytes:\n        padded.set(value, 1);\n        view = new DataView(padded.buffer);\n    }\n    else if (length === 8) {\n        view = new DataView(value.buffer, value.byteOffset, length);\n    }\n    else {\n        // TODO: toBigIntBE is a native lib with no pure JS fallback yet.\n        return (0, bigint_buffer_1.toBigIntBE)(value);\n    }\n    return view.getBigUint64(0);\n}\nexports.bufferToBigInt = bufferToBigInt;\n//# sourceMappingURL=buffer-to-bigint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferToMinHexKey = void 0;\nlet stringify;\nif (typeof Buffer.prototype.latin1Slice === \"function\") {\n    stringify = (buffer, start, end) => {\n        // this is just `buffer.toString(\"hex\")`, but it skips a bunch of checks\n        // that don't apply because our `start` and `end` just can't be out of\n        // bounds.\n        return buffer.hexSlice(start, end);\n    };\n}\nelse {\n    stringify = (buffer, start, end) => {\n        return buffer.slice(start, end).toString(\"hex\");\n    };\n}\n/**\n * Trims leading 0s from a buffer and returns a key representing the buffer's\n * trimmed value (`Buffer.from([0, 0, 12, 0])` => `1200`).\n *\n * @param buffer -\n */\nfunction bufferToMinHexKey(buffer) {\n    for (let i = 0, length = buffer.byteLength; i < length; i++) {\n        const value = buffer[i];\n        // once we find a non-zero value take the rest of the buffer as the key\n        if (value !== 0) {\n            if (i + 1 === length) {\n                // use a lookup table for single character lookups\n                return HEX_MAP[value];\n            }\n            else {\n                return stringify(buffer, i, length);\n            }\n        }\n    }\n    return \"\";\n}\nexports.bufferToMinHexKey = bufferToMinHexKey;\nconst HEX_MAP = [\n    \"00\",\n    \"01\",\n    \"02\",\n    \"03\",\n    \"04\",\n    \"05\",\n    \"06\",\n    \"07\",\n    \"08\",\n    \"09\",\n    \"0a\",\n    \"0b\",\n    \"0c\",\n    \"0d\",\n    \"0e\",\n    \"0f\",\n    \"10\",\n    \"11\",\n    \"12\",\n    \"13\",\n    \"14\",\n    \"15\",\n    \"16\",\n    \"17\",\n    \"18\",\n    \"19\",\n    \"1a\",\n    \"1b\",\n    \"1c\",\n    \"1d\",\n    \"1e\",\n    \"1f\",\n    \"20\",\n    \"21\",\n    \"22\",\n    \"23\",\n    \"24\",\n    \"25\",\n    \"26\",\n    \"27\",\n    \"28\",\n    \"29\",\n    \"2a\",\n    \"2b\",\n    \"2c\",\n    \"2d\",\n    \"2e\",\n    \"2f\",\n    \"30\",\n    \"31\",\n    \"32\",\n    \"33\",\n    \"34\",\n    \"35\",\n    \"36\",\n    \"37\",\n    \"38\",\n    \"39\",\n    \"3a\",\n    \"3b\",\n    \"3c\",\n    \"3d\",\n    \"3e\",\n    \"3f\",\n    \"40\",\n    \"41\",\n    \"42\",\n    \"43\",\n    \"44\",\n    \"45\",\n    \"46\",\n    \"47\",\n    \"48\",\n    \"49\",\n    \"4a\",\n    \"4b\",\n    \"4c\",\n    \"4d\",\n    \"4e\",\n    \"4f\",\n    \"50\",\n    \"51\",\n    \"52\",\n    \"53\",\n    \"54\",\n    \"55\",\n    \"56\",\n    \"57\",\n    \"58\",\n    \"59\",\n    \"5a\",\n    \"5b\",\n    \"5c\",\n    \"5d\",\n    \"5e\",\n    \"5f\",\n    \"60\",\n    \"61\",\n    \"62\",\n    \"63\",\n    \"64\",\n    \"65\",\n    \"66\",\n    \"67\",\n    \"68\",\n    \"69\",\n    \"6a\",\n    \"6b\",\n    \"6c\",\n    \"6d\",\n    \"6e\",\n    \"6f\",\n    \"70\",\n    \"71\",\n    \"72\",\n    \"73\",\n    \"74\",\n    \"75\",\n    \"76\",\n    \"77\",\n    \"78\",\n    \"79\",\n    \"7a\",\n    \"7b\",\n    \"7c\",\n    \"7d\",\n    \"7e\",\n    \"7f\",\n    \"80\",\n    \"81\",\n    \"82\",\n    \"83\",\n    \"84\",\n    \"85\",\n    \"86\",\n    \"87\",\n    \"88\",\n    \"89\",\n    \"8a\",\n    \"8b\",\n    \"8c\",\n    \"8d\",\n    \"8e\",\n    \"8f\",\n    \"90\",\n    \"91\",\n    \"92\",\n    \"93\",\n    \"94\",\n    \"95\",\n    \"96\",\n    \"97\",\n    \"98\",\n    \"99\",\n    \"9a\",\n    \"9b\",\n    \"9c\",\n    \"9d\",\n    \"9e\",\n    \"9f\",\n    \"a0\",\n    \"a1\",\n    \"a2\",\n    \"a3\",\n    \"a4\",\n    \"a5\",\n    \"a6\",\n    \"a7\",\n    \"a8\",\n    \"a9\",\n    \"aa\",\n    \"ab\",\n    \"ac\",\n    \"ad\",\n    \"ae\",\n    \"af\",\n    \"b0\",\n    \"b1\",\n    \"b2\",\n    \"b3\",\n    \"b4\",\n    \"b5\",\n    \"b6\",\n    \"b7\",\n    \"b8\",\n    \"b9\",\n    \"ba\",\n    \"bb\",\n    \"bc\",\n    \"bd\",\n    \"be\",\n    \"bf\",\n    \"c0\",\n    \"c1\",\n    \"c2\",\n    \"c3\",\n    \"c4\",\n    \"c5\",\n    \"c6\",\n    \"c7\",\n    \"c8\",\n    \"c9\",\n    \"ca\",\n    \"cb\",\n    \"cc\",\n    \"cd\",\n    \"ce\",\n    \"cf\",\n    \"d0\",\n    \"d1\",\n    \"d2\",\n    \"d3\",\n    \"d4\",\n    \"d5\",\n    \"d6\",\n    \"d7\",\n    \"d8\",\n    \"d9\",\n    \"da\",\n    \"db\",\n    \"dc\",\n    \"dd\",\n    \"de\",\n    \"df\",\n    \"e0\",\n    \"e1\",\n    \"e2\",\n    \"e3\",\n    \"e4\",\n    \"e5\",\n    \"e6\",\n    \"e7\",\n    \"e8\",\n    \"e9\",\n    \"ea\",\n    \"eb\",\n    \"ec\",\n    \"ed\",\n    \"ee\",\n    \"ef\",\n    \"f0\",\n    \"f1\",\n    \"f2\",\n    \"f3\",\n    \"f4\",\n    \"f5\",\n    \"f6\",\n    \"f7\",\n    \"f8\",\n    \"f9\",\n    \"fa\",\n    \"fb\",\n    \"fc\",\n    \"fd\",\n    \"fe\",\n    \"ff\"\n];\n//# sourceMappingURL=buffer-to-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION_KEY = exports.KNOWN_CHAINIDS = exports.WEI = exports.BUFFER_8_ZERO = exports.BUFFER_32_ZERO = exports.BUFFER_ZERO = exports.BUFFER_EMPTY = exports.ACCOUNT_ZERO = exports.BUFFER_256_ZERO = void 0;\nexports.BUFFER_256_ZERO = Buffer.allocUnsafe(256).fill(0);\nexports.ACCOUNT_ZERO = exports.BUFFER_256_ZERO.slice(0, 20);\nexports.BUFFER_EMPTY = Buffer.allocUnsafe(0);\nexports.BUFFER_ZERO = exports.BUFFER_256_ZERO.slice(0, 1);\nexports.BUFFER_32_ZERO = exports.BUFFER_256_ZERO.slice(0, 32);\nexports.BUFFER_8_ZERO = exports.BUFFER_256_ZERO.slice(0, 8);\nexports.WEI = 1000000000000000000n;\nexports.KNOWN_CHAINIDS = new Set([1, 3, 4, 5, 42, 11155111]);\n/**\n * Buffer representation of the string \"version\":\n */\nexports.VERSION_KEY = Buffer.from([118, 101, 114, 115, 105, 111, 110]);\n//# sourceMappingURL=constants.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Executor_requestCoordinator;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Executor = void 0;\nconst has_own_1 = require(\"./has-own\");\nclass Executor {\n    /**\n     * The Executor handles execution of methods on the given API\n     */\n    constructor(requestCoordinator) {\n        _Executor_requestCoordinator.set(this, void 0);\n        __classPrivateFieldSet(this, _Executor_requestCoordinator, requestCoordinator, \"f\");\n    }\n    /**\n     * Stop processing requests. We pass this call through to the requestCoordinator, which means that api\n     * validation will continue to work after calling stop() in execute().\n     */\n    stop() {\n        __classPrivateFieldGet(this, _Executor_requestCoordinator, \"f\").stop();\n    }\n    /**\n     * Finalise shutdown of the underlying RequestCoordinator.\n     */\n    end() {\n        __classPrivateFieldGet(this, _Executor_requestCoordinator, \"f\").end();\n    }\n    /**\n     * Executes the method with the given methodName on the API\n     * @param methodName - The name of the JSON-RPC method to execute.\n     * @param params - The params to pass to the JSON-RPC method.\n     */\n    execute(api, methodName, params) {\n        // The methodName is user-entered data and can be all sorts of weird hackery\n        // Make sure we only accept what we expect to avoid headache and heartache\n        if (typeof methodName === \"string\") {\n            // Only allow executing our *own* methods. We allow:\n            //  * functions added to the Instance by the class, e.g.,\n            //      class SomeClass {\n            //        method = () => {} // api.hasOwnProperty(\"method\") === true\n            //      }\n            //  * Or by the class' prototype:\n            //      class SomeClass {\n            //        method(){} // api.__proto__.hasOwnProperty(\"method\") === true\n            //      }\n            if (((0, has_own_1.hasOwn)(api.__proto__, methodName) && methodName !== \"constructor\") ||\n                (0, has_own_1.hasOwn)(api, methodName)) {\n                // cast methodName from `KnownKeys<T> & string` back to KnownKeys<T> so our return type isn't weird.\n                const fn = api[methodName];\n                // just double check, in case a API breaks the rules and adds non-fns\n                // to their API interface.\n                if (typeof fn === \"function\") {\n                    // The function referenced by requestcoordinator.queue will be changed\n                    // when requestCoordinator.stop() is called. Ensure that no references\n                    // to the function are held, otherwise internal errors may be\n                    // surfaced.\n                    // queue up this method for actual execution:\n                    return __classPrivateFieldGet(this, _Executor_requestCoordinator, \"f\").queue(fn, api, params);\n                }\n            }\n        }\n        throw new Error(`The method ${String(methodName)} does not exist/is not available`);\n    }\n}\nexports.Executor = Executor;\n_Executor_requestCoordinator = new WeakMap();\n//# sourceMappingURL=executor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findInsertPosition = void 0;\n/**\n * AKA `upper_bound`\n *\n * The elements are compared using `comp`. The elements in the range must\n * already be sorted according to this same criterion (`comp`), or at least\n * partitioned with respect to val.\n *\n * The function optimizes the number of comparisons performed by comparing\n * non-consecutive elements of the sorted range.\n *\n * The index into the `array` returned by this function will always be greater than\n * the index of the last-occurrence of `val`.\n *\n * On average, logarithmic in the distance of the length of the array: Performs\n * approximately `log2(N)+1` element comparisons (where `N` is this length).\n *\n * @param array -\n * @param val - Value of the upper bound to search for in the range.\n * @param comp - A function that accepts two arguments (the first is always\n * `val`, and the second from the given `array`) and returns bool. The value\n * returned indicates whether the first argument is considered to go before the\n * second.\n *\n * @returns The index to the upper bound position for `val` in the range. If no\n * element in the range compares greater than `val`, the function returns\n * `array.length`.\n */\nfunction findInsertPosition(array, val, comp) {\n    // `count` tracks the number of elements that remain to be searched\n    let count = array.length;\n    // `insertPosition` tracks the best insert position for the element we know\n    // about _so far_\n    let insertPosition = 0;\n    // `offset` tracks the start position of the elements that remain to be\n    // searched\n    let offset = 0;\n    while (count > 0) {\n        // find the middle element between `offset` and `count`\n        const step = (count / 2) | 0; // ()`| 0` rounds towards 0)\n        offset += step;\n        // compare our val to the \"middle element\" (`array[offset]`)\n        if (!comp(val, array[offset])) {\n            // `val` should come _after_ the element at `array[offset]`.\n            //  * update our `insertPosition` to the index immediately after\n            //    `array[offset]`\n            //  * shrink our search range\n            // This narrows our search the elements to the right of `array[offset]`.\n            insertPosition = ++offset;\n            count -= step + 1;\n        }\n        else {\n            // `val` should come before the element at `array[offset]`:\n            // This narrows the search the elements to the left of `array[offset]`.\n            count = step;\n            offset = insertPosition;\n        }\n    }\n    return insertPosition;\n}\nexports.findInsertPosition = findInsertPosition;\n//# sourceMappingURL=find-insert-position.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasOwn = void 0;\nconst _hasOwn = {}.hasOwnProperty.call.bind({}.hasOwnProperty);\n/**\n * /**\n * Determines whether an object has a property with the specified name.\n *\n * Safe for use on user-supplied data.\n *\n * @param obj - The object that will be checked.\n * @param prop - A property name.\n * @returns `true` if the object has a property with the specified name,\n * otherwise `false`.\n */\nconst hasOwn = (obj, prop) => {\n    return obj != null && _hasOwn(obj, prop);\n};\nexports.hasOwn = hasOwn;\n//# sourceMappingURL=has-own.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Heap = void 0;\nclass Heap {\n    /**\n     * Creates a priority-queue heap where the highest priority element,\n     * as determined by the `less` function, is at the tip/root of the heap.\n     * To read the highest priority element without removing it call peek(). To\n     * read and remove the element call `shift()`\n     * @param less - the comparator function\n     * @param refresher - the refresher function\n     */\n    constructor(less, refresher) {\n        this.length = 0;\n        this.array = [];\n        this.less = less;\n        this.refresher = refresher;\n    }\n    init(array) {\n        this.array = array;\n        const length = (this.length = array.length);\n        for (let i = ((length / 2) | 0) - 1; i >= 0;) {\n            this.down(i--, length);\n        }\n    }\n    /**\n     * Updates all entries by calling the Heap's `refresher` function for each\n     * item in the heap and then re-sorting.\n     * @param context -\n     */\n    /**\n     * Updates all entries by calling the Heap's `refresher` function for each\n     * item in the heap and then re-sorting.\n     * @param context -\n     */\n    refresh(context) {\n        const length = this.length;\n        const mid = (length / 2) | 0;\n        for (let i = mid; i < length; i++) {\n            this.refresher(this.array[i], context);\n        }\n        for (let i = mid - 1; i >= 0;) {\n            this.refresher(this.array[i], context);\n            this.down(i--, length);\n        }\n    }\n    /**\n     * Pushes a new element onto the heap\n     * @param value -\n     */\n    push(value) {\n        const i = this.length++;\n        this.array[i] = value;\n        this.up(i);\n    }\n    size() {\n        return this.length;\n    }\n    /**\n     * Return the current best element. Does not remove it\n     */\n    peek() {\n        return this.array[0];\n    }\n    clear() {\n        this.length = this.array.length = 0;\n    }\n    /**\n     * Removes and returns the element with the highest priority from the heap.\n     * The complexity is O(log n) where n = this.size().\n     * @returns the element with the highest priority. returns `undefined` if\n     * there are no more elements in the heap.\n     */\n    shift() {\n        const length = this.length;\n        // if we are empty or about to be empty...\n        if (length <= 1) {\n            if (length === 0)\n                return;\n            const element = this.array[0];\n            // finally, clear the array\n            this.clear();\n            return element;\n        }\n        // otherwise...\n        // remember the best element\n        const array = this.array;\n        const best = array[0];\n        const newLength = (this.length = length - 1);\n        // put our last element at the start of the heap\n        array[0] = array[newLength];\n        // then sort from the new first element to the second to last element\n        this.down(0, newLength);\n        return best;\n    }\n    /**\n     * Removes the highest priority element from the queue, replacing it with\n     * the new element. This is equivalent to, but faster than, calling\n     * `replace(0, newValue);`.\n     * If you call this on an empty heap (`this.size() === 0`) you may find\n     * unexpected behavior.\n     * @param newValue -\n     */\n    replaceBest(newValue) {\n        this.array[0] = newValue;\n        this.down(0, this.length);\n    }\n    /**\n     * Replaces the element at position `i` with the `newValue`. If the element at\n     * position `i` doesn't exist, or if `i < 0` or `i > this.size()` you may\n     * find unexpected behavior.\n     * @param i -\n     * @param newValue -\n     */\n    replace(i, newValue) {\n        this.array[i] = newValue;\n        this.fix(i);\n    }\n    /**\n     * Removes the element at position `i`.\n     * The complexity is O(log n) where n = this.size().\n     * @param i - the element to remove\n     */\n    remove(i) {\n        const newLength = --this.length;\n        if (newLength !== i) {\n            this.swap(i, newLength);\n            if (!this.down(i, newLength)) {\n                this.up(i);\n            }\n        }\n    }\n    /**\n     * Removes the element with the highest priority from the heap\n     * The complexity is O(log n) where n = this.size().\n     * @returns `true` when there are more elements in the queue, `false` when the\n     * last element was just removed. Calling `removeBest` when there are no more\n     * elements in the queue will return `true`. So don't do that.\n     */\n    removeBest() {\n        const array = this.array;\n        const length = this.length;\n        if (length === 1) {\n            // finally, clear the array\n            this.length = array.length = 0;\n            return false;\n        }\n        const newLength = --this.length;\n        // put our last element at the start of the heap\n        array[0] = array[newLength];\n        // then sort from the new first element to the second to last element\n        this.down(0, newLength);\n        return true;\n    }\n    /**\n     * Re-establishes the heap ordering after the element at index `i` changes\n     * its value. Changing the value of the element at index `i` and then\n     * calling fix is equivalent to, but faster than, calling\n     * `remove(i); push(newValue);`.\n     * The complexity is O(log n) where n = this.size().\n     * @param i -\n     */\n    fix(i) {\n        if (!this.down(i, this.length)) {\n            this.up(i);\n        }\n    }\n    up(j) {\n        const less = this.less.bind(null, this.array);\n        for (let i; (i = ((j - 1) / 2) | 0), i !== j && less(j, i); j = i) {\n            this.swap(i, j);\n        }\n    }\n    down(i0, l) {\n        const less = this.less.bind(null, this.array);\n        let i = i0;\n        for (let j1; (j1 = 2 * i + 1) < l;) {\n            let j = j1; // left child\n            let j2 = j1 + 1;\n            if (j2 < l && less(j2, j1)) {\n                j = j2; // = 2 * i + 2  // right child\n            }\n            if (!less(j, i)) {\n                break;\n            }\n            this.swap(i, j);\n            i = j;\n        }\n        return i > i0;\n    }\n    /**\n     * Swaps the elements in the heap\n     * @param i - The first element\n     * @param j - The second element\n     */\n    swap(i, j) {\n        const array = this.array;\n        const first = array[i];\n        array[i] = array[j];\n        array[j] = first;\n    }\n    /**\n     * Heap initialization helper for when you only know of a single item for the\n     * heap.\n     * @param item -\n     * @param less -\n     * @param refresher -\n     */\n    static from(item, less, refresher) {\n        const heap = new Heap(less, refresher);\n        heap.array = [item];\n        heap.length = 1;\n        return heap;\n    }\n}\nexports.Heap = Heap;\n//# sourceMappingURL=heap.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./bigint-to-buffer\"), exports);\n__exportStar(require(\"./buffer-to-bigint\"), exports);\n__exportStar(require(\"./executor\"), exports);\n__exportStar(require(\"./heap\"), exports);\n__exportStar(require(\"./request-coordinator\"), exports);\n__exportStar(require(\"./unref\"), exports);\n__exportStar(require(\"./has-own\"), exports);\n__exportStar(require(\"./uint-to-buffer\"), exports);\n__exportStar(require(\"./constants\"), exports);\n__exportStar(require(\"./buffer-to-key\"), exports);\n__exportStar(require(\"./keccak\"), exports);\n__exportStar(require(\"./find-insert-position\"), exports);\n__exportStar(require(\"./random-number-generator\"), exports);\n__exportStar(require(\"./min-max\"), exports);\n__exportStar(require(\"./signature\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak = void 0;\nconst keccak_1 = __importDefault(require(\"keccak\"));\nconst RATE = 1088;\nconst CAPACITY = 512;\nconst instance = (0, keccak_1.default)(\"keccak256\");\n/**\n * keccak256, but faster if you use it a lot.\n * @param buffer -\n */\nfunction keccak(buffer) {\n    instance._state.absorb(buffer);\n    const digest = instance._state.squeeze(32);\n    // reset and remove result from memory\n    instance._state.initialize(RATE, CAPACITY);\n    // make this re-usable\n    instance._finalized = false;\n    return digest;\n}\nexports.keccak = keccak;\n//# sourceMappingURL=keccak.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.min = exports.max = void 0;\n/**\n * Returns the largest of the numbers/bigints given as input parameters. Throws if no values are given.\n * @param numbers One or more numbers and/or bigints among which the largest value will be selected and returned.\n */\nconst max = (...numbers) => numbers.reduce((acc, next) => (next > acc ? next : acc));\nexports.max = max;\n/**\n * Returns the smallest of the numbers/bigints given as input parameters. Throws if no values are given.\n * @param numbers One or more numbers and/or bigints among which the smallest value will be selected and returned.\n */\nconst min = (...numbers) => numbers.reduce((acc, next) => (next < acc ? next : acc));\nexports.min = min;\n//# sourceMappingURL=min-max.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RandomNumberGenerator = void 0;\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nclass RandomNumberGenerator {\n    // I was planning on using `state` here to restore the RNG\n    // from a saved state (via the db on run or upon a revert),\n    // but this functionality was postponed. I'm keeping the arg\n    // here as it still applies and is valid code.\n    // https://github.com/trufflesuite/ganache/issues/756\n    constructor(seed, state) {\n        if (typeof seed === \"string\" && typeof state === \"undefined\") {\n            this.rng = seedrandom_1.default.alea(seed, { state: true });\n        }\n        else if (typeof state === \"object\") {\n            // We can ignore seed even if it was provided.\n            // The user is reseeding the rng from a prior state,\n            // so let's initialize accordingly\n            this.rng = seedrandom_1.default.alea(\"\", { state });\n        }\n        else {\n            const entropy = Math.random() * Date.now();\n            this.rng = seedrandom_1.default.alea(`${entropy}`, { state: true });\n        }\n    }\n    getNumber(upperExclusiveBound = 1) {\n        // I believe this check may be a tiny bit faster than\n        // always multiplying by 1\n        if (upperExclusiveBound !== 1) {\n            return this.rng() * upperExclusiveBound;\n        }\n        else {\n            return this.rng();\n        }\n    }\n    getNumbers(length, upperExclusiveBound = 1) {\n        const numbers = [];\n        for (let i = 0; i < length; i++) {\n            numbers.push(this.getNumber(upperExclusiveBound));\n        }\n        return numbers;\n    }\n    getBuffer(length) {\n        return Buffer.from(this.getNumbers(length, 256));\n    }\n    state() {\n        return this.rng.state();\n    }\n}\nexports.RandomNumberGenerator = RandomNumberGenerator;\n//# sourceMappingURL=random-number-generator.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _RequestCoordinator_paused, _RequestCoordinator_process;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestCoordinator = void 0;\nconst noop = () => { };\n/**\n * Responsible for managing global concurrent requests.\n */\nclass RequestCoordinator {\n    get paused() {\n        return __classPrivateFieldGet(this, _RequestCoordinator_paused, \"f\");\n    }\n    /**\n     * Promise-based FIFO queue.\n     * @param limit - The number of requests that can be processed at a time.\n     * Default value is is no limit (`0`).\n     */\n    constructor(limit) {\n        /**\n         * The pending requests. You can't do anything with this array.\n         */\n        this.pending = [];\n        /**\n         * The number of tasks currently being processed.\n         */\n        this.runningTasks = 0;\n        _RequestCoordinator_paused.set(this, true);\n        /**\n         * Pause processing. This will *not* cancel any promises that are currently\n         * running.\n         */\n        this.pause = () => {\n            __classPrivateFieldSet(this, _RequestCoordinator_paused, true, \"f\");\n        };\n        /**\n         * Resume processing.\n         */\n        this.resume = () => {\n            __classPrivateFieldSet(this, _RequestCoordinator_paused, false, \"f\");\n            __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n        };\n        _RequestCoordinator_process.set(this, () => {\n            // if we aren't paused and the number of things we're processing is under\n            // our limit and we have things to process: do it!\n            while (!this.paused &&\n                this.pending.length > 0 &&\n                (!this.limit || this.runningTasks < this.limit)) {\n                const current = this.pending.shift();\n                this.runningTasks++;\n                current\n                    .execute()\n                    // By now, we've resolved the fn's `value` by sending it to the parent scope.\n                    // But over here, we're also waiting for this fn's _value_ to settle _itself_ (it might be a promise) before\n                    // continuing through the `pending` queue. Because we wait for it again here, it could potentially throw here,\n                    // in which case we just need to catch it and throw the result away. We could probably use\n                    // `Promise.allSettled([current()]).finally` to do this instead of the `current().catch(noop).finally`. /shrug\n                    .catch(noop)\n                    .finally(() => {\n                    this.runningTasks--;\n                    __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n                });\n            }\n        });\n        /**\n         * Insert a new function into the queue.\n         */\n        this.queue = (fn, thisArgument, argumentsList) => {\n            return new Promise((resolve, reject) => {\n                // const execute is `async` to force the return value into a Promise.\n                const execute = async () => {\n                    try {\n                        const value = Reflect.apply(fn, thisArgument, argumentsList || []);\n                        resolve({ value });\n                        return value;\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                };\n                this.pending.push({ execute, reject });\n                __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n            });\n        };\n        this.limit = limit;\n    }\n    /**\n     * Stop processing tasks - calls to queue(), and resume() will reject with an\n     * error indicating that Ganache is disconnected. This is an irreversible\n     * action. If you wish to be able to resume processing, use pause() instead.\n     *\n     * Note: this changes the references of this.resume and this.queue. Any code\n     * that maintains references to the values referenced by this.resume or\n     * this.queue, could have unintended consequences after calling this.stop().\n     */\n    stop() {\n        this.pause();\n        this.resume = () => {\n            throw new Error(\"Cannot resume processing requests, Ganache is disconnected.\");\n        };\n        this.queue = async () => {\n            throw new Error(\"Cannot process request, Ganache is disconnected.\");\n        };\n    }\n    /**\n     * Finalise shutdown of the RequestCoordinator. Rejects all pending tasks in order. Should be\n     * called after all in-flight tasks have resolved in order to maintain overall FIFO order.\n     */\n    end() {\n        while (this.pending.length > 0) {\n            this.pending\n                .shift()\n                .reject(new Error(\"Cannot process request, Ganache is disconnected.\"));\n        }\n    }\n}\nexports.RequestCoordinator = RequestCoordinator;\n_RequestCoordinator_paused = new WeakMap(), _RequestCoordinator_process = new WeakMap();\n//# sourceMappingURL=request-coordinator.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ecsignLegacy = exports.ecsign = void 0;\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\nfunction ecsign(msgHash, privateKey) {\n    const output = {\n        signature: new Uint8Array(64),\n        recid: null\n    };\n    const status = secp256k1_1.default.ecdsaSign(output, msgHash, privateKey);\n    if (status !== 0) {\n        throw new Error(\"The nonce generation function failed, or the private key was invalid\");\n    }\n    const { signature, recid } = output;\n    const buffer = signature.buffer;\n    const r = Buffer.from(buffer, 0, 32);\n    const s = Buffer.from(buffer, 32, 32);\n    const v = BigInt(recid);\n    return { r, s, v };\n}\nexports.ecsign = ecsign;\nfunction ecsignLegacy(msgHash, privateKey, chainId) {\n    const { v, r, s } = ecsign(msgHash, privateKey);\n    const legacyV = chainId === undefined ? v + 27n : v + 35n + BigInt(chainId) * 2n;\n    return { r, s, v: legacyV };\n}\nexports.ecsignLegacy = ecsignLegacy;\n//# sourceMappingURL=signature.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uintToBuffer = void 0;\nconst MAX_UINT32 = 0xffffffff;\n/**\n * This is just Node's `Buffer.allocUnsafe`. I'm documenting it extra here to\n * draw attention to it. It is much faster the `Buffer.alloc(size)` because it\n * doesn't initialize its memory first. It's safe for us to use below because we\n * guarantee that we will fill every octet ourselves.\n *\n * Allocates a new buffer of {size} octets, leaving memory not initialized, so\n * the contents of the newly created Buffer are unknown and may contain\n * sensitive data.\n *\n * @param {number} - size count of octets to allocate\n */\nconst allocUnsafe = Buffer.allocUnsafe;\n/**\n * Converts positive whole numbers that are 32 bits of fewer to a Buffer. Any\n * more bits and who knows what will happen!?!1?!\n *\n * @param num - A positive whole number less than 33 bits wide, i.e. a uint32.\n * @returns an optimally sized buffer holding `num` in big-endian order (LSB is\n * the _last_ value in the Buffer)\n */\nfunction uint32ToBuf(num) {\n    let buf;\n    /** `lsb` holds the Least Significant *byte* of `num`. It *technically* holds\n     * all of `num`'s bytes but because of how UInt8Arrays (and thus Buffers)\n     * work, only the least significant byte of each value gets used. */\n    const lsb = num;\n    // shift the first 8 least significant bits off current num, if it's non-zero\n    // our value contains at least 2 bytes!\n    if ((num >>>= 8)) {\n        /** `second` now holds the second most least significant byte in its\n         * \"first\" (right most) 8 bits */\n        const second = num;\n        // shift the next 8 least significant bits off current num, if it's non-zero\n        // our value contains at least 3 bytes!\n        if ((num >>>= 8)) {\n            /** `third` now holds the third most least significant byte in its\n             * \"first\" (right most) 8 bits */\n            const third = num;\n            if ((num >>>= 8)) {\n                // since we have all 4 bytes, create a 4 byte Buffer and fill it with\n                // our values!\n                buf = allocUnsafe(4);\n                // `num` here is just what is left after shifting off the 3 other bytes\n                // like we did above\n                buf[0] = num;\n                buf[1] = third;\n                buf[2] = second;\n                buf[3] = lsb;\n            }\n            else {\n                // since we only have 3 bytes, create a 3 byte Buffer and fill it with\n                // our values!\n                buf = allocUnsafe(3);\n                buf[0] = third;\n                buf[1] = second;\n                buf[2] = lsb;\n            }\n        }\n        else {\n            // since we only have 2 bytes, create a 2 byte Buffer and fill it with\n            // our values!\n            buf = allocUnsafe(2);\n            buf[0] = second;\n            buf[1] = lsb;\n        }\n    }\n    else {\n        // We only have 1 byte, create a 1 byte Buffer and fill it with our only\n        // value, lsb!\n        buf = allocUnsafe(1);\n        buf[0] = lsb;\n    }\n    // finally, return our optimally-sized Buffer!\n    return buf;\n}\n/**\n * Converts positive whole numbers less than or equal to\n * `Number.MAX_SAFE_INTEGER` to a Buffer. If your value is less than 2**32 you\n * should use `uint32ToBuf` instead.\n *\n * @param num - A positive whole number <= `Number.MAX_SAFE_INTEGER`\n * @returns an optimally sized buffer holding `num` in big-endian order (LSB is\n * the _last_ value in the Buffer)\n */\nfunction uintWideToBuf(num) {\n    // This function is similar to `uint32ToBuf`, but splits the number into its\n    // 32 lowest bits and its 32 highest bits. We have to do this because numeric\n    // Bitwise operations can only operate on 32 bit-wide values.\n    // There are some differences, but if you first grasp `uint32ToBuf`, you can\n    // handle this just fine.\n    let buf;\n    /** If we are in this function we are probably > 32 bits wide, so we need to\n     * first convert this value to BigInt in order to shift off those high bits.\n     * Now that I'm documenting this, we could probably just subtract `2**32` from\n     * `num` to avoid the conversion overhead (BigInts are slower than numbers) */\n    let hi = Number(BigInt(num) >> 32n);\n    const hiLsb = hi;\n    let offset = 0;\n    // the high bits determine the size of the Buffer, so we compute the high bits\n    // first\n    if ((hi >>>= 8)) {\n        const six = hi;\n        if ((hi >>>= 8)) {\n            const five = hi;\n            if ((hi >>>= 8)) {\n                buf = allocUnsafe(8);\n                buf[0] = hi; // msb\n                buf[1] = five;\n                buf[2] = six;\n                buf[3] = hiLsb;\n                offset = 7;\n            }\n            else {\n                buf = allocUnsafe(7);\n                buf[0] = five; // msb\n                buf[1] = six;\n                buf[2] = hiLsb;\n                offset = 6;\n            }\n        }\n        else {\n            buf = allocUnsafe(6);\n            buf[0] = six; // msb\n            buf[1] = hiLsb;\n            offset = 5;\n        }\n    }\n    else {\n        buf = allocUnsafe(5);\n        buf[0] = hiLsb; // msb\n        offset = 4;\n    }\n    // set the low bytes:\n    let lo = num & MAX_UINT32;\n    const lsb = lo;\n    if ((lo >>>= 8)) {\n        const two = lo;\n        if ((lo >>>= 8)) {\n            const one = lo;\n            buf[offset - 3] = lo >>>= 8;\n            buf[offset - 2] = one;\n            buf[offset - 1] = two;\n            buf[offset] = lsb;\n        }\n        else {\n            buf[offset - 3] = 0;\n            buf[offset - 2] = 0;\n            buf[offset - 1] = two;\n            buf[offset] = lsb;\n        }\n    }\n    else {\n        buf[offset - 3] = 0;\n        buf[offset - 2] = 0;\n        buf[offset - 1] = 0;\n        buf[offset] = lsb;\n    }\n    return buf;\n}\n/**\n * Converts a JavaScript number, treated as a Whole Number (0, 1, 2, 3, 4, ...)\n * less than 64 bits wide, to a Buffer.\n *\n * Numbers that are negative, fractional, or greater than 64 bits wide will\n * return very unexpected results. Numbers that are greater than\n * `Number.MAX_SAFE_INTEGER` will return unexpected results.\n *\n * @param num - A positive whole number <= `Number.MAX_SAFE_INTEGER`\n */\nfunction uintToBuffer(num) {\n    return num > MAX_UINT32 ? uintWideToBuf(num) : uint32ToBuf(num);\n}\nexports.uintToBuffer = uintToBuffer;\n//# sourceMappingURL=uint-to-buffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unref = void 0;\n/**\n * In node, calling `unref(timer)` on a running timer ensures that the timer\n * does not require that the Node.js event remain active. If there is no other\n * activity keeping the event loop running, the process may exit before the\n * timer's callback is invoked.\n * @param timer -\n * @returns `true` if the timer could be `unref`ed, otherwise returns `false`\n */\nfunction unref(timer) {\n    if (typeof timer === \"object\" && typeof timer.unref === \"function\") {\n        timer.unref();\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexports.unref = unref;\n//# sourceMappingURL=unref.js.map"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__exportStar","exports","p","prototype","hasOwnProperty","call","value","TruffleColors","porsche","turquoise","infura","__importDefault","mod","__experimental_info","provider","server","ServerStatus","Server","utils_1","connector_loader_1","server_1","server_2","Ganache","options","default","initializeFlavor","connector","version","fork","knownChainIds","Array","from","KNOWN_CHAINIDS","flavor_1","flavor","flavorName","asyncRequestProcessing","chain","requestCoordinator","RequestCoordinator","executor","Executor","loadFlavorByName","load","getConnector","providerOptions","connect","connectPromise","promise","then","resume","_Server_options","_Server_status","_Server_app","_Server_httpServer","_Server_listenSocket","_Server_host","_Server_connector","_Server_websocketServer","_Server_initializer","__classPrivateFieldGet","receiver","state","kind","f","TypeError","has","__classPrivateFieldSet","set","aggregate_error_1","uws_js_unofficial_1","_cfg","Uint8Array","ws_server_1","http_server_1","emittery_1","v4Seg","IPv4Reg","RegExp","DEFAULT_HOST","status","constructor","super","unknown","ready","serverOptions","ServerOptionsConfig","normalize","_app","App","ws","listen","port","host","callback","callbackIsFunction","trim","length","err","Error","process","nextTick","Promise","reject","portNumber","closing","openingOrOpen","opening","initializer","allSettled","resolve","listenSocket","closed","code","open","async","promiseResults","errors","push","reason","close","e","emit","catch","address","family","s","test","us_socket_local_port","closingOrClosed","_listenSocket","us_listen_socket_close","WeakMap","_HttpServer_connector","_HttpServer_options","_HttpServer_isClosing","_HttpServer_handlePost","_HttpServer_handleOptions","content_types_1","http_response_codes_1","util_1","fragment_generator_1","noop","prepareCORSResponseHeaders","method","request","origin","getHeader","acrh","response","writeHeader","sendResponse","closeConnection","statusCode","contentType","data","writeHeaders","cork","writeStatus","end","HttpServer","app","buffer","aborted","onAborted","onData","message","isLast","chunk","Buffer","payload","concat","parse","BAD_REQUEST","PLAIN","handle","result","format","types","isGeneratorObject","sendChunkedResponse","chunkSize","fragments","getFragmentGenerator","firstFragment","next","nextFragment","done","write","OK","JSON","error","formatError","NO_CONTENT","post","rpcEndpoint","IM_A_TEAPOT","any","connectionHeader","toLowerCase","NOT_FOUND","ContentTypes","bufferSize","buf","allocUnsafe","offset","byteLength","subarray","copy","HttpResponseCodes","WebSocketCloseCodes","_WebsocketServer_connections","MAX_PAYLOAD_SIZE","sendFragmented","websocket_close_codes_1","useBinary","maybeLastFragment","send","sendFirstFragment","fragment","sendFragment","sendLastFragment","WebsocketServer","Map","connections","wsBinary","autoBinary","maxPayloadLength","idleTimeout","Set","isBinary","resultEmitter","resultEmitterPromiEvent","on","stringify","jsonrpc","type","params","add","dispose","drain","forEach","delete","_","CLOSE_NORMAL","Address","static","Data","toBuffer","ByteLength","toString","toJSON","BlockParams","INITIAL_BASE_FEE_PER_GAS","ELASTICITY","BASE_FEE_MAX_CHANGE_DENOMINATOR","Block","ethereum_transaction_1","rlp_1","helpers_1","utils_2","serialize_1","block_params_1","serialized","common","_common","deserialized","decode","totalDifficulty","_raw","_rawTransactions","_rawWithdrawals","_rawTransactionMetaData","_size","Quantity","toNumber","header","makeHeader","start","slice","map","oldRawTx","raw","encodeWithPrefix","serialize","hash","_hash","keccak","encode","getTransactions","blockHash","number","index","extra","blockTransactionFromRaw","includeFullTransactions","txFn","getTxFn","hashBuffer","transactions","tx","updateEffectiveGasPrice","baseFeePerGas","toBigInt","size","uncles","withdrawals","convertRawWithdrawals","include","parentHeader","nextBaseFee","parentGasTarget","gasLimit","parentGasUsed","gasUsed","adjustedFeeDelta","blocks","maxPossibleBaseFee","calcNextBaseFeeBigInt","parentBlock","parentHash","sha3Uncles","miner","stateRoot","transactionsRoot","receiptsRoot","logsBloom","difficulty","timestamp","extraData","mixHash","nonce","withdrawalsRoot","RuntimeBlock","getBlockSize","block_1","coinbase","previousBlockTotalDifficulty","prevRandao","cliqueSigner","finalize","transactionsTrie","receiptTrie","bloom","storageKeys","rawHeader","KECCAK256_RLP_ARRAY","BUFFER_EMPTY","BUFFER_8_ZERO","isEip4895","isActivatedEIP","txs","extraTxs","i","rawBlock","block","ethereum_address_1","serializedStart","encodeRange","serializedLength","encodeLength","middle","ending","uintToBuffer","digest","output","txData","isLegacyRawTransaction","TransactionFactory","fromSafeTypeAndTxData","validatorIndex","amount","maybeGetLogs","maybe_get_logs_1","Handlers","bytes","bool","string","uint256","int256","fixedBytes","WORD_SIZE","OR_WITH_TWOS_COMPLEMENT","getDynamicDataMarkers","memory","startUint32MemoryPosition","readUInt32BE","handleBytes","twosComplementBuffer","twosComplementBigInt","bufferToBigInt","handlers_1","signatures_1","CONSOLE_ADDRESS","event","opcode","name","stack","memoryLength","memoryOffset","toAddress","memoryStart","Number","memoryEnd","handlers","signatureMap","values","handler","chalk_1","colors_1","ethereum_options_1","connector_1","color","str","EthereumFlavor","Connector","EthereumOptionsConfig","cli","CliOptionsConfig","liveOptions","getOptions","accounts","getInitialAccounts","addresses","keys","logs","balance","strBalance","WEI","about","line","toChecksumAddress","unlocked","secretKey","wallet","accountKeysPath","mnemonic","hdPath","join","defaultGasPrice","blockGasLimit","callGasLimit","network","url","location","capitalizeFirstLetter","toUpperCase","replace","blockNumber","networkId","time","requestsPerSecond","hardfork","chainId","console","log","_EthereumApi_getId","_EthereumApi_filters","_EthereumApi_subscriptions","_EthereumApi_options","_EthereumApi_blockchain","_EthereumApi_wallet","__decorate","decorators","target","key","d","c","arguments","r","Reflect","decorate","ethereum_utils_1","ethereum_block_1","eth_sig_util_1","wallet_1","gas_estimator_1","assert_arg_length_1","filter_parsing_1","miner_1","autofillDefaultTransactionValues","eth_estimateGas","eth_maxPriorityFeePerGas","transaction","blockchain","gas","isNull","defaultLimit","defaultTransactionGasLimit","Empty","Tag","latest","gasPrice","maxFeePerGas","calcNBlocksMaxBaseFee","maxPriorityFeePerGas","CLIENT_VERSION","PROTOCOL_VERSION","RPC_MODULES","eth","net","rpc","web3","evm","personal","assertExceptionalTransactions","baseError","execException","VM_EXCEPTIONS","VM_EXCEPTION","EthereumApi","id","dbName","arg","vmErrorsOnRPCResponse","mine","Capacity","FillBlock","vmAddress","eei","vm","account","getAccount","checkpoint","putAccount","commit","codeBuffer","putContractCode","codeHash","KECCAK256_NULL","slot","slotBuffer","valueBuffer","putContractStorage","seconds","milliseconds","Math","floor","increaseTime","getTime","offsetMilliseconds","setTimeDiff","snapshotId","revert","snapshot","passphrase","addy","addUnknownAccount","removeKnownAccount","threads","instamine","resumption","pause","Zero","generateVM","createVmFromStateTrie","trie","allowUnlimitedContractSize","fromRpc","getMixHash","KECCAK256_RLP","runArgs","toVmTransaction","skipBalance","skipNonce","gasEstimate","fallback","targetBlock","slotBuffers","slotHex","stateManagerCopy","stateManager","setStateRoot","proof","getProof","storageHash","accountProof","storageProof","getByHash","blockNum","getEffectiveNumber","getRawByBlockNumber","rawTransactions","uncleIndex","powHash","hashRate","clientID","isStarted","Gwei","getBalance","getCode","position","blockStateRoot","setContext","posBuff","paddedPosBuff","fill","addressBuf","addressData","addressStateRoot","transactionHash","transactionPool","find","transactionReceipts","dataHash","txHash","transactionPromise","receiptPromise","receipt","all","blockTime","logging","logger","fromString","isKnownAccount","knownAccounts","privateKey","unlockedAccounts","bind","queueTransaction","signAndHash","messageHash","hashPersonalMessage","v","ecsign","toRpcSig","typedData","eth_signTypedData_v4","EIP712Domain","domain","primaryType","signTypedData_v4","eth_subscribe","subscriptionName","subscriptions","subscription","promiEvent","PromiEvent","unsubscribe","topics","parseFilterDetails","blockLogs","filter","CodedError","JsonRpcErrorCode","METHOD_NOT_FOUND","subscriptionId","updates","FilterTypes","filterId","pendingTransaction","fromBlock","toBlock","parseFilterRange","eth_getLogs","getLogs","getNonce","overrides","input","baseFeePerGasBigInt","hasGasPrice","hasMaxFeePerGas","hasMaxPriorityFeePerGas","BigInt","a","tip","simulatedTransaction","to","simulateTransaction","blockCount","newestBlock","rewardPercentiles","PRECISION_BIG_INT","newestBlockNumber","totalBlocks","min","max","gasUsedRatio","reward","ERR_INVALID_PERCENTILE","oldestBlockNumber","currentBlock","currentPosition","padStart","baseFee","receipts","effectiveRewardAndGasUsed","idx","effectiveGasReward","sort","b","percentile","totalGasUsed","targetGas","calcNextBaseFee","oldestBlock","traceTransaction","transactionIndex","contractAddress","startKey","maxResult","storageRangeAt","newAccount","createRandomAccount","strAddress","addToKeyFile","rawKey","createAccountFromPrivateKey","lockAccount","duration","unlockAccount","getFromKeyFile","postData","executables","origins","processMap","res","array","pending","queued","assertArgLength","_Blockchain_state","_Blockchain_miner","_Blockchain_blockBeingSavedPromise","_Blockchain_timer","_Blockchain_emitStepEvent","_Blockchain_database","_Blockchain_options","_Blockchain_instamine","_Blockchain_saveNewBlock","_Blockchain_emitNewBlock","_Blockchain_getTransactionLogOutput","_Blockchain_handleNewBlockData","_Blockchain_readyNextBlock","_Blockchain_isPaused","_Blockchain_commitAccounts","_Blockchain_initializeGenesisBlock","_Blockchain_timeAdjustment","_Blockchain_adjustedTime","_Blockchain_deleteBlockData","_Blockchain_snapshots","_Blockchain_createFastForwardVm","_Blockchain_traceTransaction","_Blockchain_prepareNextBlock","__setModuleDefault","__importStar","Status","os_1","database_1","common_1","vm_1","evm_1","account_manager_1","block_manager_1","blocklog_manager_1","transaction_manager_1","run_call_1","state_manager_1","trie_1","trie_2","precompiles_1","transaction_receipt_manager_1","provider_events_1","mcl_wasm_1","console_log_1","storage_range_at_1","state_manager_2","common_helpers_1","mclInitPromise","init","BLS12_381","setMapToMode","IRTF","verifyOrderG1","verifyOrderG2","makeTrie","trieDB","root","ForkTrie","GanacheTrie","Blockchain","starting","batch","blockHeader","blockNumberQ","BlockLogs","timestampStr","Date","logOutput","serializeForDb","getReceipt","encodedReceipt","append","put","hashedKey","putBlock","updateLatestIndex","EOL","blockInfo","setImmediate","blockData","saveBlockProm","previousBlock","previousHeader","previousNumber","minerOptions","isPostMerge","started","maxTransactions","onlyOneBlock","nextBlock","timestampIncrement","paused","stateTrie","activatePrecompile","getBlock","ForkStateManager","prefixCodeHashes","GanacheStateManager","EEI","EVM","VM","activatePrecompiles","initialAccounts","fallbackBlock","genesis","BUFFER_256_ZERO","rawBlockNumber","BUFFER_32_ZERO","precedingTimestamp","timeAdjustment","now","blocksToDelete","newLatestBlockNumber","revertMetaData","del","snaps","unsubscribeFromBlocks","getCommonForBlock","_cache","flush","transactionEventContext","context","runTx","skipHardForkValidation","skipBlockGasLimitValidation","newBlock","currentDepth","storageStack","structLogs","TraceData","TraceDataFactory","stepListener","makeStepEvent","gasLeft","gasUsedPreviousStep","disableMemory","limit","memoryWordCount","disableStack","stackItem","structLog","depth","gasCost","op","pc","storage","disableStorage","eventDepth","pop","TraceStorageMap","getContractStorage","events","removeListener","returnValue","uncleHeaders","database","initialize","createCommon","Common","custom","comment","defaultHardfork","baseChain","allowUnlimitedInitCodeSize","removeEIP3860InitCodeSizeLimitCheck","gteHardfork","blockIndexes","startTime","firstBlockTime","earliest","txPool","minerOpts","nullResolved","mineAll","Single","wait","setTimeout","once","clearListeners","stopping","stop","_threads","newTime","currentTime","snapshots","current","rawValue","snapshotIndex","clear","currentHash","snapshotBlock","snapshotHeader","snapshotHash","splice","equals","blockPromises","blockList","setStateRootSync","_trie","_storageTries","isExecutable","hasToAddress","calculateIntrinsicGas","transactionContext","ganacheStepEvent","caller","callerAddress","warmPrecompiles","addWarmedAddress","applySimulationOverrides","fromAccount","txCost","startBalance","runCall","execResult","runState","programCounter","exceptionError","EvmError","EvmErrorMessage","OUT_OF_GAS","CallError","transactionHashBuffer","txIndex","trieDb","storageKeysDb","contractAddressBuffer","rawAccount","storageTrie","getStorageTrie","dumpTrieStorageDetails","toggleStepEvent","enable","clearTimeout","removeAllListeners","stopped","_Connector_provider","_Connector_handle","provider_1","bufferify_1","BUFFERIFY_THRESHOLD","connection","isHttp","METHOD_NOT_SUPPORTED","_requestRaw","EthereumProvider","PARSE_ERROR","isArray","promises","results","makeError","makeResponse","json","bufferify","disconnect","_AccountManager_blockchain","AccountManager","getRaw","Account","fromBuffer","trieCopy","_BlockManager_blockchain","_BlockManager_common","_BlockManager_blockIndexes","manager_1","LATEST_INDEX_KEY","BUFFER_ZERO","EMPTY_BUFFER","BlockManager","base","bm","updateTaggedBlocks","fromFallback","tagOrBlockNumber","isValidForkBlockNumber","rawFromJSON","hasWithdrawals","txJson","blockExtra","txExtra","extraWithdrawals","withdrawal","getBlockByTag","tag","getNumberFromHash","numBuf","secondaryKey","disableCache","createValueStream","latestBlockNumber","getEarliest","_BlockLogManager_blockchain","BlockLogManager","fromJSON","toBlockNumber","parseFilter","pendingLogsPromises","fromBlockNumber","l","blockLogsRange","filteredBlockLogs","_Manager_Type","_Manager_options","Manager","_TransactionManager_queue","_TransactionManager_paused","_TransactionManager_resumer","_TransactionManager_resolver","_TransactionManager_blockchain","transaction_pool_1","promise_queue_1","TransactionManager","serializeRpcForDb","factory","insertion","prepareTransaction","isBusy","_TransactionReceiptManager_blockchain","TransactionReceiptManager","InternalTransactionReceipt","One","cumulativeGasUsed","topic","fromValues","_Database_options","_Database_cleanupDirectory","_Database_closed","_Database_rootStore","_Database_cleanup","tmp_promise_1","subleveldown_1","encoding_down_1","leveldown_1","trie_db_1","levelup","setGracefulCleanup","tmpOptions","prefix","unsafeCleanup","Database","directory","db","levelupOptions","keyEncoding","valueEncoding","databaseOptions","store","shouldTryMigrate","dbPath","dirInfo","dir","path","cleanup","leveldownOpts","sublevelTrie","TrieDB","runMigrations","VERSION_KEY","ops","stream","createReadStream","migrate","fn","rootDb","originalPut","originalDel","prom","ret","wasClosed","ForkCache","cache_1","Cache","getCb","rlp","fromRlpSerializedAccount","putCb","deleteCb","Deferred","deferred","_Fork_abortController","_Fork_handler","_Fork_options","_Fork_accounts","_Fork_hardfork","_Fork_setCommonFromChain","_Fork_setBlockDataFromChainAndOptions","_Fork_syncAccounts","Fork","http_handler_1","ws_handler_1","provider_handler_1","persistent_cache_1","url_1","fetchNetworkId","networkIdStr","parseInt","fetchBlock","AbortController","chainIdPromise","latestBlock","effectiveBlockNumber","preLatestConfirmations","qBlockNumber","latestBlockNumberHex","latestBlockNumberInt","fetchNonce","forkingOptions","protocol","WsHandler","signal","HttpHandler","ProviderHandler","normalizedNetwork","infuraKey","URL","cacheProm","forkOptions","chainOptions","deleteCache","PersistentCache","deleteDb","_e","fetchChainId","chainIdHex","cache","initCache","setCache","abort","selectValidForkBlockNumber","forkCommon","hf","hardforks","hfTimestamp","BaseHandler","rate_limiter_1","lru_cache_1","abortSignal","requestCache","fireForget","userAgent","limiter","WINDOW_SECONDS","valueCache","headers","password","username","isInfura","endsWith","setAuthHeaders","setUserHeaders","persistentCache","jwt","authorization","permitMultiAuth","userHeaders","currentScheme","split","incomingScheme","authParams","getFromMemCache","cachedRequest","cachedValue","notFound","memCached","diskCached","getFromSlowCache","AbortError","hasOwn","finally","JSONRPC_PREFIX","http_1","https_1","base_handler_1","deferred_1","versions","node","match","accept","_request","agent","Agent","keepAlive","scheduling","messageLength","chunks","totalLength","hostname","pathname","search","requestOptions","queueRequest","req","handleChunkedResponse","isNaN","handleLengthedResponse","resStr","shortStr","msg","startsWith","strParams","ws_1","inFlightRequests","binaryType","onclose","addEventListener","onmessage","onMessage","messageId","onopen","onerror","parts","pieces","part","lengthBuffer","encoded","lengthLength","Ancestry","tree_1","parent","cacheLock","knownAncestors","closestKnownAncestor","resolver","Tree","deserialize","strKey","loadNextAncestor","getBlockByNumber","findClosestDescendants","findClosestAncestor","findRelated","resolveTargetAndClosestAncestor","setDbVersion","getBlockNumberFromParams","readStream","pair","height","candidateHeight","decodeKey","upTo","generator","gte","lt","encodeKey","reverse","first","return","recordedVersion","targetHeight","targetHash","closestAncestor","previousClosestAncestor","earliestBlock","earliestHash","earliestNumber","fs_1","env_paths_1","lexico","ancestry_1","maxValueByteBuffer","_reBalancePromise","dbSuffix","getDbDirectory","destroy","rs","ancestorDb","tree","collection","keyHex","parentKeyHex","descendants","closestKnownDescendants","suffix","mkdir","recursive","cacheDb","ancestry","atomicBatch","findIndex","allKnownDescendants","ancestorsDescendants","descendantKey","descendantHeight","descendantValue","descendantNode","descendantRawBlock","reBalanceDescendantTree","startSize","maybeDescendant","some","parentTree","isOpen","bufKey","gt","_height","_key","dbKey","children","timeSince","LimitCounter","windowLength","counters","evict","lastEvict","updatedAt","increment","currentWindow","previousWindow","curr","prev","semaphore_1","limit_counter_1","sleep","ms","timer","removeEventListener","RateLimiter","requestLimit","windowSizeMs","sem","take","mustBackoff","counter","limitCounter","currWindow","prevWindow","currCount","prevCount","rate","nextLimit","schedule","leave","LIMIT_EXCEEDED","backoffSeconds","backoff_seconds","allowed_rps","opts","storageRoot","checkpoints","_getStorageTrie","DELETED_VALUE","MetadataSingletons","LEVELDOWN_OPTIONS","isEqualKey","encodedKey","decodedKey","keyAddress","deletedKey","isPreForkBlock","accountFromFallback","codeProm","codeHex","storageFromFallback","compressed","forkBlockNumber","metadataDB","sublevel","checkpointedMetadata","CheckpointDB","_root","val","startBlockNumber","endBlockNumber","createKeyStream","createDelKey","selfAddress","encodedKeyStr","keyValueMap","entries","lte","_lock","acquire","findPath","_deleteNode","persistRoot","delKey","metaDataPutPromise","release","keyWasDeleted","includeCheckpoints","secureTrie","hasCheckpoints","_db","deriveFromIndex","deriveFromPath","createAccountFromSeed","createAccountGeneratorFromSeedAndPath","crypto_1","secp256k1_1","HARDENED_OFFSET","MASTER_SECRET","seedBuffer","I","createHmac","update","chainCode","publicKey","makePublicKey","fullPath","child","hardened","childIndex","deriveChild","publicKeyCreate","SHARED_BUFFER_4","isHardened","indexBuffer","writeUInt32BE","privateKeyLength","dataLength","IL","newPrivK","privateKeyTweakAdd","propertyKey","descriptor","original","String","apply","PARTS","SQUARE_BRACKET_PAIR","SQUARE_BRACKET_OPEN","SQUARE_BRACKET_CLOSE","CURLY_BRACKET_PAIR","CURLY_BRACKET_OPEN","CURLY_BRACKET_CLOSE","COMMA","QUOTE_PAIR","COLON","NULL","_EMPTY","toStr","stringToQuotedBuffer","utf8Write","nameOrIndex","numberToBuffer","isBuffer","bufferToQuotedBuffer","arrayToBuffer","chunkified","objectToBuffer","obj","yieldedOpen","yieldPrefix","quotedKey","changeCommonParamValue","eip","paramByEIP","paramTopic","paramName","paramEip","MAX_SAFE_INTEGER","bn_js_1","bn","STIPEND","bigIntToBN","check","opname","isCall","isCallOrCallcode","isCreate","isTerminator","binSearch","MAX","gasRefund","startingGas","range","lo","hi","isEnoughGas","toArrayLike","vmerr","muln","addn","mid","divn","exactimate","steps","sysOps","allOps","preCompile","preCompileCheck","precompileCallDepth","collect","info","isPrecompile","systemOps","stepTracker","Context","fee","cost","sixtyFloorths","intermediateCost","callingFee","compositeContext","addGas","gtn","isub","iadd","setStart","setStop","getCost","transfer","ctx","addSixtyFloorth","sixtyFloorth","addRange","finalizeRange","innerCost","sub","RuntimeError","RETURN_TYPES","RETURN_VALUE","estimate","totalGasSpent","gasLeftStart","gasLeftEnd","actualUsed","sysops","opIndex","cursor","currentIndex","feeBn","getTotal","SERIALIZED_PRECOMPILE","PRECOMPILED_ACCOUNT","accountCache","makeAccount","validateStorageOverride","fieldName","indexOf","stateDiff","vmAddr","clearedState","clearContractStorage","slotBuf","valueBuf","getStorage","compare","hashedKeys","count","maxKeys","nextKey","getHashedKeysWithValues","findInsertPosition","onEnd","keyHashingFunction","byteOffset","Trie","useRootPersistence","useKeyHashing","useKeyHashingFunction","_Miner_currentlyExecutingPrice","_Miner_origins","_Miner_pending","_Miner_isBusy","_Miner_paused","_Miner_resumer","_Miner_currentBlockBaseFeePerGas","_Miner_resolver","_Miner_emitStepEvent","_Miner_executables","_Miner_options","_Miner_vm","_Miner_createBlock","_Miner_priced","_Miner_mine","_Miner_mineTxs","_Miner_runTx","_Miner_removeBestAndOrigin","_Miner_reset","_Miner_setPricedHeap","_Miner_updatePricedHeap","replace_from_heap_1","updateBloom","blockBloom","sortByPrice","effectiveGasPrice","refresher","item","Miner","createBlock","Heap","lastBlock","runtimeBlock","inProgress","keepMining","priced","blockTransactions","finalizedBlockData","numTransactions","blockGasLeft","blockGasUsed","best","peek","locked","txKey","fillFromResult","bitvector","pendingOrigin","removeBest","Params","TRANSACTION_GAS","refresh","errorMessage","TRANSACTION_HASH","pricedArray","mapping","price","replaceFromHeap","source","replaceBest","normalizeEvent","originalMemory","sharedBuffer","codeAddress","returnStack","_EthereumProvider_options","_EthereumProvider_api","_EthereumProvider_wallet","_EthereumProvider_executor","_EthereumProvider_blockchain","_EthereumProvider_send","_EthereumProvider_logRequest","_EthereumProvider_legacySendPayloads","_EthereumProvider_legacySendPayload","api_1","lodash_clonedeep_1","blockchain_1","fork_1","off","arg1","arg2","verbose","payloads","mainError","responses","parseCoinbase","hookEventSystem","onChange","listenerCount","listenerAdded","eventName","listenerRemoved","sendAsync","args","rawResult","execute","normalizedData","statemanager_1","DefaultStateManager","_TransactionPool_options","_TransactionPool_priceBump","_TransactionPool_blockchain","_TransactionPool_accountPromises","_TransactionPool_validateTransaction","TriageOption","shouldReplace","replacee","replacerNonce","replacer","priceBump","TRANSACTION_LOCKED","TRANSACTION_REJECTED","replacerTip","replacerMaxFee","replaceeTip","replaceeMaxFee","UNDERPRICED","byNonce","TransactionPool","GAS_LIMIT","INVALID_INPUT","INTRINSIC_GAS_TOO_LOW","valueOf","INITCODE_TOO_LARGE","txNonce","transactorPromise","highestNonce","getNonceAndBalance","transactor","maxGasPrice","INSUFFICIENT_FUNDS","queuedOriginTransactions","transactionPlacement","FutureQueue","executableOriginTransactions","pendingArray","pendingTx","ReplacesPendingExecutable","REPLACED","pendingTxNonce","Executable","transactorNonce","queuedArray","queuedTx","ReplacesFutureTransaction","nextExpectedNonce","nextTx","arr","ENCODING_OPTS","opStack","_Wallet_randomRng","_Wallet_randomBytes","_Wallet_initializeAccounts","_Wallet_intializeAccountFromKey","_Wallet_initializeAccountWithoutKey","_Wallet_initializeAccount","_Wallet_lockAccount","hdkey_1","bip39_1","seedrandom_1","TWELVE_255s","SCRYPT_PARAMS","dklen","n","CIPHER","MAX_ACCOUNTS","scrypt","derivedKey","SHARED_BUFFER","uncompressedPublicKeyToAddress","uncompressedPublicKey","publicKeyConvert","asUUID","uuid","Wallet","keyFiles","lockTimers","rand","makeAccountAtIndex","mnemonicToSeedSync","balanceParts","defaultBalance","significand","fractionalStr","fractional","magnitude","defaultBalanceInWei","etherInWei","givenAccounts","accountsLength","givenAccount","acct","numberOfAccounts","totalAccounts","createAccount","lock","lockAccounts","addToKeyFileSync","lowerAddress","alea","givenUnlockedAccounts","ul","addressOrIndex","createFakePrivateKey","isSafeInteger","fileData","private_keys","writeFileSync","random","salt","iv","N","finishEncryption","encryptSync","scryptSync","cipher","createCipheriv","ciphertext","final","mac","crypto","cipherparams","kdf","kdfParams","keyfile","crypt","localMac","createDecipheriv","encrypted","encrypt","keyFile","decrypt","privateToAddress","seed","existingTimer","durationMs","timeout","unref","fakePrivateKey","ACCOUNT_ZERO","first12","SECP256K1_N","ChainOptions","cliDescription","legacyName","cliType","defaultDescription","cliAliases","rawInput","cliCoerce","asNum","cliChoices","DatabaseOptions","disableInCLI","conflicts","ForkOptions","KNOWN_NETWORKS","MAX_BLOCK_NUMBER","reColonSplit","coerceHeaders","ALLOWED_PROTOCOLS","includes","lastIndex","lastIndexOf","substr","warn","_blockNumber","conjunction","last","arrayToOxfordList","implies","reduce","EthereumDefaults","chain_options_1","database_options_1","logging_options_1","miner_options_1","wallet_options_1","fork_options_1","options_1","LoggingOptions","MinerOptions","WalletOptions","OptionsConfig","debug","quiet","file","openSync","details","config","createLogger","baseLogger","toBigIntOrString","normalizeQuantity","rawType","unseededRng","randomAlphaNumericString","alphabet","alphabetLength","rng","text","accountString","deterministic","entropyToMnemonic","notVeryRandomBytes","AccessLists","isAccessList","tx_1","tx_2","params_1","accessList","AccessListJSON","bufferAccessList","slots","accessListStorageKeyCost","ACCESS_LIST_STORAGE_KEY_GAS","accessListAddressCost","ACCESS_LIST_ADDRESS_GAS","newAccessList","addressBuffer","storageItems","storageKeysLength","jsonItem","dataFeeEIP2930","BaseTransaction","MAX_UINT64","TRANSACTION_CREATION_GAS","TRANSACTION_DATA_NON_ZERO_GAS","TRANSACTION_DATA_ZERO_GAS","nonZeroBytes","bigDataLength","zeroBytes","INITCODE_WORD_GAS","setExtra","EIP1559FeeMarketTransaction","runtime_transaction_1","access_lists_1","signing_1","CAPABILITIES","RuntimeTransaction","yParity","accessListData","getAccessListData","accessListJSON","accessListDataFee","computeIntrinsics","validateAndSetSignature","getSenderAddress","getBaseFee","getUpfrontCost","maxPriorityFeePerGasBI","maxFeePerGasBI","gasLimitBI","valueBI","bigIntMin","supports","capability","toEthRawTransaction","msgHash","digestWithPrefix","sig","encodedSignature","ranges","computeIntrinsicsFeeMarketTx","EIP2930AccessListTransaction","computeIntrinsicsAccessListTx","LegacyTransaction","ecsignLegacy","computeIntrinsicsLegacyTx","TransactionType","hasPartialSignature","toValidLengthAddress","base_transaction_1","transaction_receipt_1","ONE_BUFFER","finalizer","userFrom","finalized","dataVal","vmResult","createdAddress","_event","computeFromAddress","ecdsaRecover","isValidSigRecovery","copyOrFill","targetStart","numZeroes","endZeroes","sourceOffset","recovery","_ecdsaRecover","rBuf","sBuf","recid","signature","partialRlp","eip155V","extras","bigIntToBuffer","epilogue","senderPubKey","encodedData","allocUnsafePrefix","legacy_transaction_1","eip2930_access_list_transaction_1","rpc_transaction_1","eip1559_fee_market_transaction_1","assertValidTransactionSValue","SECP256K1_MAX_PRIVATE_KEY_DIV_2","fromDatabaseTx","txType","fromTxData","Legacy","EIP2930AccessList","EIP1559AccessList","toEIP1559","INVALID_PARAMS","typeOfRPC","_fromUnsafeUserData","typeOfRaw","typeOf","_InternalTransactionReceipt_init","STATUSES","decoded","blockLog","rawFromRpc","txAndExtraData","errors_1","coded_error_1","captureStackTraceExtended","createRevertReason","ethereumjs_abi_1","REVERT_REASON","codedError","captureStackTrace","nonEnumerableProperty","rawDecode","NONCE_TOO_LOW","INVALID_SENDER","returnType","Symbol","_logs","filterByTopic","expectedTopics","logTopics","every","expectedTopic","logPosition","expectedTopicSet","logTopic","logIndex","removed","t","iterator","logToJSON","expectedAddresses","InternalTag","safe","PREFIXES","traceDataLookup","bufferToMinHexKey","existing","lengthDiff","cliDefaults","CliOptions","serverDefaults","ServerOptions","server_options_config_1","server_options_1","server_defaults_1","cli_options_config_1","cli_options_1","cli_defaults_1","load_1","flavorImport","eval","exit","NEED_HELP","COMMUNITY_LINK","isDocker","env","DOCKER","buffer_1","kMaxLength","checkForConflicts","namespace","suppliedOptions","conflict","defaults","out","definition","def","namespaceOptions","propDefinition","normalized","_PromiseQueue_queue","_PromiseQueue_tryResolve","_PromiseQueue_tryResolveChain","entry_1","PromiseQueue","queue","entry","shift","resolved","cancelledQueue","mixin","for","Entry","onSetteled","_onSetteled","enc","encodedLength","encLength","len","hexLength","lLength","firstByte","safeSlice","decodeLength","parseHexByte","hexByte","byte","bytesToHex","uint8a","hex","cachedHexes","_decode","llength","innerRemainder","remainder","items","alloc","lengthEncodedLength","j","_v","path_1","secp256k1","nodeRequire","dirname","nodeGypBuild","Secp256k1","makeRequest","JsonRpcType","json_rpc_1","jsonrpc_1","promievent_1","toBigIntBE","toBufferBE","bigint_buffer_1","json_rpc_base_types_1","BaseJsonRpcType","parseAndValidateStringInput","parseAndValidateBigIntInput","parseAndValidateNumberInput","bigint_to_buffer_1","uint_to_buffer_1","isFinite","hexValue","ceil","_buffer","input_parsers_1","inspect","_depth","_options","bufferValue","constants_1","_byteLength","strValue","stringToFixedByteLength","bufferToFixedByteLength","desiredCharLength","padCharCount","fixedLengthValue","repeat","buffer_to_bigint_1","nullable","_nullable","ZERO_VALUE_STRING","firstNonZeroByte","findFirstNonZeroByteIndex","trimmedBuffer","readUIntBE","getOwnPropertyNames","START_OF_LINE","baseLog","fd","diskLogFormatter","linePrefix","toISOString","writeStream","createWriteStream","onError","optionalParams","formattedMessage","PromiEvent_1","emitteryMethods","methodName","onrejected","onAny","eventData","_bigIntToBuffer","bigIntByteLength","view","padded","DataView","getBigUint64","latin1Slice","hexSlice","HEX_MAP","_Executor_requestCoordinator","has_own_1","api","__proto__","comp","insertPosition","step","_hasOwn","prop","less","down","up","element","newLength","newValue","fix","remove","swap","i0","j1","j2","heap","keccak_1","instance","_state","absorb","squeeze","_finalized","numbers","acc","RandomNumberGenerator","entropy","getNumber","upperExclusiveBound","getNumbers","getBuffer","_RequestCoordinator_paused","_RequestCoordinator_process","runningTasks","thisArgument","argumentsList","ecdsaSign","MAX_UINT32","num","uintWideToBuf","hiLsb","six","five","lsb","two","one","uint32ToBuf","second","third"],"sourceRoot":""}